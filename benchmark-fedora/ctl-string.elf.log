
Temporary breakpoint 1, start_trigger () at ../config/riscv64/boards/generic/boardsupport.c:37
37	}
=> 0x102d4 <start_trigger+16>:	sd	ra,8(sp)
0x00000000000102d8	37	}
=> 0x102d8 <start_trigger+20>:	sd	s0,0(sp)
0x00000000000102dc	37	}
=> 0x102dc <start_trigger+24>:	addi	s0,sp,16
0x00000000000102e0	37	}
=> 0x102e0 <start_trigger+28>:	ld	s0,0(sp)
0x00000000000102e4 in start_trigger () at ../config/riscv64/boards/generic/boardsupport.c:37
37	}
=> 0x102e4 <start_trigger+32>:	ld	ra,8(sp)
0x00000000000102e8	37	}
=> 0x102e8 <start_trigger+36>:	addi	sp,sp,16
0x00000000000102ec	37	}
=> 0x102ec <start_trigger+40>:	ld	ra,0(t6)
0x00000000000102f0	37	}
=> 0x102f0 <start_trigger+44>:	addi	t6,t6,16
0x00000000000102f4	37	}
=> 0x102f4 <start_trigger+48>:	ret
main (argc=1, argv=0x3ffffffb68) at main.c:54
54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10220 <main+144>:	ld	a0,-88(s0)
0x0000000000010224	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10224 <main+148>:	sw	a0,-36(s0)
0x0000000000010228	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10228 <main+152>:	j	0x1022c <main+156>
0x000000000001022c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1022c <main+156>:	lw	a0,-36(s0)
0x0000000000010230	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10230 <main+160>:	li	a1,0
0x0000000000010234	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10234 <main+164>:	blt	a1,a0,0x10260 <main+208>
0x0000000000010238	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10238 <main+168>:	j	0x1023c <main+172>
56	      initialise_benchmark ();
=> 0x1023c <main+172>:	jal	ra,0x116d4 <initialise_benchmark>
initialise_benchmark () at string.c:476
476	void initialise_benchmark() {
=> 0x116d4 <initialise_benchmark>:	addi	t6,t6,-16
0x00000000000116d8	476	void initialise_benchmark() {
=> 0x116d8 <initialise_benchmark+4>:	sd	ra,0(t6)
0x00000000000116dc	476	void initialise_benchmark() {
=> 0x116dc <initialise_benchmark+8>:	st	zero,0(t6)
0x00000000000116e0	476	void initialise_benchmark() {
=> 0x116e0 <initialise_benchmark+12>:	addi	sp,sp,-16
482	  in1 = a;
=> 0x116e4 <initialise_benchmark+16>:	sd	ra,8(sp)
0x00000000000116e8	482	  in1 = a;
=> 0x116e8 <initialise_benchmark+20>:	sd	s0,0(sp)
0x00000000000116ec	482	  in1 = a;
=> 0x116ec <initialise_benchmark+24>:	addi	s0,sp,16
0x00000000000116f0	482	  in1 = a;
=> 0x116f0 <initialise_benchmark+28>:	lui	a0,0x1e
0x00000000000116f4	482	  in1 = a;
=> 0x116f4 <initialise_benchmark+32>:	addi	a0,a0,500
0x00000000000116f8	482	  in1 = a;
=> 0x116f8 <initialise_benchmark+36>:	sd	a0,-1920(gp)
483	  in2 = b;
=> 0x116fc <initialise_benchmark+40>:	lui	a0,0x1e
0x0000000000011700	483	  in2 = b;
=> 0x11700 <initialise_benchmark+44>:	addi	a0,a0,517
0x0000000000011704	483	  in2 = b;
=> 0x11704 <initialise_benchmark+48>:	sd	a0,-1912(gp)
484	  in3 = c;
=> 0x11708 <initialise_benchmark+52>:	lui	a0,0x1e
0x000000000001170c	484	  in3 = c;
=> 0x1170c <initialise_benchmark+56>:	addi	a0,a0,532
0x0000000000011710	484	  in3 = c;
=> 0x11710 <initialise_benchmark+60>:	sd	a0,-1904(gp)
485	  in4 = d;
=> 0x11714 <initialise_benchmark+64>:	lui	a0,0x1e
0x0000000000011718	485	  in4 = d;
=> 0x11718 <initialise_benchmark+68>:	addi	a0,a0,536
0x000000000001171c	485	  in4 = d;
=> 0x1171c <initialise_benchmark+72>:	sd	a0,-1896(gp)
486	  in5 = e;
=> 0x11720 <initialise_benchmark+76>:	lui	a0,0x1e
0x0000000000011724	486	  in5 = e;
=> 0x11724 <initialise_benchmark+80>:	addi	a0,a0,560
0x0000000000011728	486	  in5 = e;
=> 0x11728 <initialise_benchmark+84>:	sd	a0,-1888(gp)
487	  init_heap ();
=> 0x1172c <initialise_benchmark+88>:	jal	ra,0x117b8 <init_heap>
init_heap () at string.c:74
74	{
=> 0x117b8 <init_heap>:	addi	t6,t6,-16
0x00000000000117bc	74	{
=> 0x117bc <init_heap+4>:	sd	ra,0(t6)
0x00000000000117c0	74	{
=> 0x117c0 <init_heap+8>:	st	zero,0(t6)
0x00000000000117c4	74	{
=> 0x117c4 <init_heap+12>:	addi	sp,sp,-16
75	    heap_ptr = (void *) heap;
=> 0x117c8 <init_heap+16>:	sd	ra,8(sp)
0x00000000000117cc	75	    heap_ptr = (void *) heap;
=> 0x117cc <init_heap+20>:	sd	s0,0(sp)
0x00000000000117d0	75	    heap_ptr = (void *) heap;
=> 0x117d0 <init_heap+24>:	addi	s0,sp,16
0x00000000000117d4	75	    heap_ptr = (void *) heap;
=> 0x117d4 <init_heap+28>:	lui	a0,0x21
0x00000000000117d8	75	    heap_ptr = (void *) heap;
=> 0x117d8 <init_heap+32>:	addi	a0,a0,672
0x00000000000117dc	75	    heap_ptr = (void *) heap;
=> 0x117dc <init_heap+36>:	sd	a0,-1872(gp)
76	    heap_end = heap_ptr + HEAP_SIZE;
=> 0x117e0 <init_heap+40>:	ld	a0,-1872(gp)
0x00000000000117e4	76	    heap_end = heap_ptr + HEAP_SIZE;
=> 0x117e4 <init_heap+44>:	lui	a1,0x2
0x00000000000117e8	76	    heap_end = heap_ptr + HEAP_SIZE;
=> 0x117e8 <init_heap+48>:	add	a0,a0,a1
0x00000000000117ec	76	    heap_end = heap_ptr + HEAP_SIZE;
=> 0x117ec <init_heap+52>:	sd	a0,-1864(gp)
77	}
=> 0x117f0 <init_heap+56>:	ld	s0,0(sp)
0x00000000000117f4 in init_heap () at string.c:77
77	}
=> 0x117f4 <init_heap+60>:	ld	ra,8(sp)
0x00000000000117f8	77	}
=> 0x117f8 <init_heap+64>:	addi	sp,sp,16
0x00000000000117fc	77	}
=> 0x117fc <init_heap+68>:	ld	ra,0(t6)
0x0000000000011800	77	}
=> 0x11800 <init_heap+72>:	addi	t6,t6,16
0x0000000000011804	77	}
=> 0x11804 <init_heap+76>:	ret
initialise_benchmark () at string.c:488
488	}
=> 0x11730 <initialise_benchmark+92>:	ld	s0,0(sp)
0x0000000000011734 in initialise_benchmark () at string.c:488
488	}
=> 0x11734 <initialise_benchmark+96>:	ld	ra,8(sp)
0x0000000000011738	488	}
=> 0x11738 <initialise_benchmark+100>:	addi	sp,sp,16
0x000000000001173c	488	}
=> 0x1173c <initialise_benchmark+104>:	ld	ra,0(t6)
0x0000000000011740	488	}
=> 0x11740 <initialise_benchmark+108>:	addi	t6,t6,16
0x0000000000011744	488	}
=> 0x11744 <initialise_benchmark+112>:	ret
main (argc=1, argv=0x3ffffffb68) at main.c:57
57	      result = benchmark ();
=> 0x10240 <main+176>:	sd	a0,-120(s0)
0x0000000000010244	57	      result = benchmark ();
=> 0x10244 <main+180>:	jal	ra,0x115e8 <benchmark>
benchmark () at string.c:451
451	{
=> 0x115e8 <benchmark>:	addi	t6,t6,-16
0x00000000000115ec	451	{
=> 0x115ec <benchmark+4>:	sd	ra,0(t6)
0x00000000000115f0	451	{
=> 0x115f0 <benchmark+8>:	st	zero,0(t6)
0x00000000000115f4	451	{
=> 0x115f4 <benchmark+12>:	addi	sp,sp,-64
0x00000000000115f8	451	{
=> 0x115f8 <benchmark+16>:	sd	ra,56(sp)
0x00000000000115fc	451	{
=> 0x115fc <benchmark+20>:	sd	s0,48(sp)
0x0000000000011600	451	{
=> 0x11600 <benchmark+24>:	addi	s0,sp,64
0x0000000000011604	451	{
=> 0x11604 <benchmark+28>:	li	a0,0
454	  int cnt = 0;
=> 0x11608 <benchmark+32>:	sw	a0,-36(s0)
456	  s = ctl_StringInit();
=> 0x1160c <benchmark+36>:	jal	ra,0x10534 <ctl_StringInit>
ctl_StringInit () at string.c:155
155	{
=> 0x10534 <ctl_StringInit>:	addi	t6,t6,-16
0x0000000000010538	155	{
=> 0x10538 <ctl_StringInit+4>:	sd	ra,0(t6)
0x000000000001053c	155	{
=> 0x1053c <ctl_StringInit+8>:	st	zero,0(t6)
0x0000000000010540	155	{
=> 0x10540 <ctl_StringInit+12>:	addi	sp,sp,-16
0x0000000000010544	155	{
=> 0x10544 <ctl_StringInit+16>:	sd	ra,8(sp)
0x0000000000010548	155	{
=> 0x10548 <ctl_StringInit+20>:	sd	s0,0(sp)
0x000000000001054c	155	{
=> 0x1054c <ctl_StringInit+24>:	addi	s0,sp,16
0x0000000000010550	155	{
=> 0x10550 <ctl_StringInit+28>:	li	a0,100
156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10554 <ctl_StringInit+32>:	jal	ra,0x103a8 <ctl_StringInitSize>
ctl_StringInitSize (BlockSize=0) at string.c:133
133	{
=> 0x103a8 <ctl_StringInitSize>:	addi	t6,t6,-16
0x00000000000103ac	133	{
=> 0x103ac <ctl_StringInitSize+4>:	sd	ra,0(t6)
0x00000000000103b0	133	{
=> 0x103b0 <ctl_StringInitSize+8>:	st	zero,0(t6)
0x00000000000103b4	133	{
=> 0x103b4 <ctl_StringInitSize+12>:	addi	sp,sp,-48
0x00000000000103b8	133	{
=> 0x103b8 <ctl_StringInitSize+16>:	sd	ra,40(sp)
0x00000000000103bc	133	{
=> 0x103bc <ctl_StringInitSize+20>:	sd	s0,32(sp)
0x00000000000103c0	133	{
=> 0x103c0 <ctl_StringInitSize+24>:	addi	s0,sp,48
0x00000000000103c4	133	{
=> 0x103c4 <ctl_StringInitSize+28>:	mv	a1,a0
0x00000000000103c8	133	{
=> 0x103c8 <ctl_StringInitSize+32>:	sw	a0,-28(s0)
0x00000000000103cc	133	{
=> 0x103cc <ctl_StringInitSize+36>:	li	a0,32
134	  ctl_string* s=malloc_beebs(sizeof(ctl_string));
=> 0x103d0 <ctl_StringInitSize+40>:	sd	a1,-48(s0)
0x00000000000103d4	134	  ctl_string* s=malloc_beebs(sizeof(ctl_string));
=> 0x103d4 <ctl_StringInitSize+44>:	jal	ra,0x104a0 <malloc_beebs>
malloc_beebs (size=433791695712) at string.c:88
88	{
=> 0x104a0 <malloc_beebs>:	addi	t6,t6,-16
0x00000000000104a4	88	{
=> 0x104a4 <malloc_beebs+4>:	sd	ra,0(t6)
0x00000000000104a8	88	{
=> 0x104a8 <malloc_beebs+8>:	st	zero,0(t6)
0x00000000000104ac	88	{
=> 0x104ac <malloc_beebs+12>:	addi	sp,sp,-48
0x00000000000104b0	88	{
=> 0x104b0 <malloc_beebs+16>:	sd	ra,40(sp)
0x00000000000104b4	88	{
=> 0x104b4 <malloc_beebs+20>:	sd	s0,32(sp)
0x00000000000104b8	88	{
=> 0x104b8 <malloc_beebs+24>:	addi	s0,sp,48
0x00000000000104bc	88	{
=> 0x104bc <malloc_beebs+28>:	sd	a0,-32(s0)
89	    void *new_ptr = heap_ptr;
=> 0x104c0 <malloc_beebs+32>:	ld	a1,-1872(gp)
0x00000000000104c4	89	    void *new_ptr = heap_ptr;
=> 0x104c4 <malloc_beebs+36>:	sd	a1,-40(s0)
91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c8 <malloc_beebs+40>:	ld	a0,-1872(gp)
0x00000000000104cc	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104cc <malloc_beebs+44>:	ld	a1,-32(s0)
0x00000000000104d0	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d0 <malloc_beebs+48>:	add	a0,a0,a1
0x00000000000104d4	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d4 <malloc_beebs+52>:	ld	a1,-1864(gp)
0x00000000000104d8	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d8 <malloc_beebs+56>:	bltu	a1,a0,0x104f0 <malloc_beebs+80>
0x00000000000104dc	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104dc <malloc_beebs+60>:	j	0x104e0 <malloc_beebs+64>
0x00000000000104e0	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e0 <malloc_beebs+64>:	ld	a0,-32(s0)
0x00000000000104e4	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e4 <malloc_beebs+68>:	li	a1,0
0x00000000000104e8	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e8 <malloc_beebs+72>:	bne	a0,a1,0x104fc <malloc_beebs+92>
95		    heap_ptr += size;
=> 0x104fc <malloc_beebs+92>:	ld	a0,-32(s0)
0x0000000000010500	95		    heap_ptr += size;
=> 0x10500 <malloc_beebs+96>:	ld	a2,-1872(gp)
0x0000000000010504	95		    heap_ptr += size;
=> 0x10504 <malloc_beebs+100>:	add	a0,a2,a0
0x0000000000010508	95		    heap_ptr += size;
=> 0x10508 <malloc_beebs+104>:	sd	a0,-1872(gp)
96		    return new_ptr;
=> 0x1050c <malloc_beebs+108>:	ld	a0,-40(s0)
0x0000000000010510	96		    return new_ptr;
=> 0x10510 <malloc_beebs+112>:	sd	a0,-24(s0)
0x0000000000010514	96		    return new_ptr;
=> 0x10514 <malloc_beebs+116>:	j	0x10518 <malloc_beebs+120>
98	}
=> 0x10518 <malloc_beebs+120>:	ld	a0,-24(s0)
0x000000000001051c	98	}
=> 0x1051c <malloc_beebs+124>:	ld	s0,32(sp)
0x0000000000010520 in malloc_beebs (size=433791695712) at string.c:98
98	}
=> 0x10520 <malloc_beebs+128>:	ld	ra,40(sp)
0x0000000000010524	98	}
=> 0x10524 <malloc_beebs+132>:	addi	sp,sp,48
0x0000000000010528	98	}
=> 0x10528 <malloc_beebs+136>:	ld	ra,0(t6)
0x000000000001052c	98	}
=> 0x1052c <malloc_beebs+140>:	addi	t6,t6,16
0x0000000000010530	98	}
=> 0x10530 <malloc_beebs+144>:	ret
0x00000000000103d8 in ctl_StringInitSize (BlockSize=100) at string.c:134
134	  ctl_string* s=malloc_beebs(sizeof(ctl_string));
=> 0x103d8 <ctl_StringInitSize+48>:	sd	a0,-40(s0)
135	  if(!s)
=> 0x103dc <ctl_StringInitSize+52>:	ld	a0,-40(s0)
0x00000000000103e0	135	  if(!s)
=> 0x103e0 <ctl_StringInitSize+56>:	li	a1,0
0x00000000000103e4	135	  if(!s)
=> 0x103e4 <ctl_StringInitSize+60>:	bne	a0,a1,0x103f8 <ctl_StringInitSize+80>
139	  s->BlockSize  = BlockSize;
=> 0x103f8 <ctl_StringInitSize+80>:	lw	a0,-28(s0)
0x00000000000103fc	139	  s->BlockSize  = BlockSize;
=> 0x103fc <ctl_StringInitSize+84>:	ld	a1,-40(s0)
0x0000000000010400	139	  s->BlockSize  = BlockSize;
=> 0x10400 <ctl_StringInitSize+88>:	sd	a0,0(a1)
140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x10404 <ctl_StringInitSize+92>:	ld	a0,-40(s0)
0x0000000000010408	140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x10408 <ctl_StringInitSize+96>:	ld	a0,0(a0)
0x000000000001040c	140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x1040c <ctl_StringInitSize+100>:	jal	ra,0x104a0 <malloc_beebs>
malloc_beebs (size=433791695712) at string.c:88
88	{
=> 0x104a0 <malloc_beebs>:	addi	t6,t6,-16
0x00000000000104a4	88	{
=> 0x104a4 <malloc_beebs+4>:	sd	ra,0(t6)
0x00000000000104a8	88	{
=> 0x104a8 <malloc_beebs+8>:	st	zero,0(t6)
0x00000000000104ac	88	{
=> 0x104ac <malloc_beebs+12>:	addi	sp,sp,-48
0x00000000000104b0	88	{
=> 0x104b0 <malloc_beebs+16>:	sd	ra,40(sp)
0x00000000000104b4	88	{
=> 0x104b4 <malloc_beebs+20>:	sd	s0,32(sp)
0x00000000000104b8	88	{
=> 0x104b8 <malloc_beebs+24>:	addi	s0,sp,48
0x00000000000104bc	88	{
=> 0x104bc <malloc_beebs+28>:	sd	a0,-32(s0)
89	    void *new_ptr = heap_ptr;
=> 0x104c0 <malloc_beebs+32>:	ld	a1,-1872(gp)
0x00000000000104c4	89	    void *new_ptr = heap_ptr;
=> 0x104c4 <malloc_beebs+36>:	sd	a1,-40(s0)
91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c8 <malloc_beebs+40>:	ld	a0,-1872(gp)
0x00000000000104cc	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104cc <malloc_beebs+44>:	ld	a1,-32(s0)
0x00000000000104d0	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d0 <malloc_beebs+48>:	add	a0,a0,a1
0x00000000000104d4	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d4 <malloc_beebs+52>:	ld	a1,-1864(gp)
0x00000000000104d8	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d8 <malloc_beebs+56>:	bltu	a1,a0,0x104f0 <malloc_beebs+80>
0x00000000000104dc	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104dc <malloc_beebs+60>:	j	0x104e0 <malloc_beebs+64>
0x00000000000104e0	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e0 <malloc_beebs+64>:	ld	a0,-32(s0)
0x00000000000104e4	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e4 <malloc_beebs+68>:	li	a1,0
0x00000000000104e8	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e8 <malloc_beebs+72>:	bne	a0,a1,0x104fc <malloc_beebs+92>
95		    heap_ptr += size;
=> 0x104fc <malloc_beebs+92>:	ld	a0,-32(s0)
0x0000000000010500	95		    heap_ptr += size;
=> 0x10500 <malloc_beebs+96>:	ld	a2,-1872(gp)
0x0000000000010504	95		    heap_ptr += size;
=> 0x10504 <malloc_beebs+100>:	add	a0,a2,a0
0x0000000000010508	95		    heap_ptr += size;
=> 0x10508 <malloc_beebs+104>:	sd	a0,-1872(gp)
96		    return new_ptr;
=> 0x1050c <malloc_beebs+108>:	ld	a0,-40(s0)
0x0000000000010510	96		    return new_ptr;
=> 0x10510 <malloc_beebs+112>:	sd	a0,-24(s0)
0x0000000000010514	96		    return new_ptr;
=> 0x10514 <malloc_beebs+116>:	j	0x10518 <malloc_beebs+120>
98	}
=> 0x10518 <malloc_beebs+120>:	ld	a0,-24(s0)
0x000000000001051c	98	}
=> 0x1051c <malloc_beebs+124>:	ld	s0,32(sp)
0x0000000000010520 in malloc_beebs (size=433791695712) at string.c:98
98	}
=> 0x10520 <malloc_beebs+128>:	ld	ra,40(sp)
0x0000000000010524	98	}
=> 0x10524 <malloc_beebs+132>:	addi	sp,sp,48
0x0000000000010528	98	}
=> 0x10528 <malloc_beebs+136>:	ld	ra,0(t6)
0x000000000001052c	98	}
=> 0x1052c <malloc_beebs+140>:	addi	t6,t6,16
0x0000000000010530	98	}
=> 0x10530 <malloc_beebs+144>:	ret
0x0000000000010410 in ctl_StringInitSize (BlockSize=100) at string.c:140
140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x10410 <ctl_StringInitSize+104>:	ld	a1,-40(s0)
0x0000000000010414	140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x10414 <ctl_StringInitSize+108>:	sd	a0,8(a1)
141	  if(!s->string)
=> 0x10418 <ctl_StringInitSize+112>:	ld	a0,-40(s0)
0x000000000001041c	141	  if(!s->string)
=> 0x1041c <ctl_StringInitSize+116>:	ld	a0,8(a0)
0x0000000000010420	141	  if(!s->string)
=> 0x10420 <ctl_StringInitSize+120>:	li	a1,0
0x0000000000010424	141	  if(!s->string)
=> 0x10424 <ctl_StringInitSize+124>:	bne	a0,a1,0x10454 <ctl_StringInitSize+172>
148	  s->alloc    = s->BlockSize;
=> 0x10454 <ctl_StringInitSize+172>:	ld	a0,-40(s0)
0x0000000000010458	148	  s->alloc    = s->BlockSize;
=> 0x10458 <ctl_StringInitSize+176>:	ld	a1,0(a0)
0x000000000001045c	148	  s->alloc    = s->BlockSize;
=> 0x1045c <ctl_StringInitSize+180>:	sd	a1,24(a0)
149	  s->size     = 0;
=> 0x10460 <ctl_StringInitSize+184>:	ld	a0,-40(s0)
0x0000000000010464	149	  s->size     = 0;
=> 0x10464 <ctl_StringInitSize+188>:	li	a1,0
0x0000000000010468	149	  s->size     = 0;
=> 0x10468 <ctl_StringInitSize+192>:	sd	a1,16(a0)
150	  s->string[0]  = '\0';
=> 0x1046c <ctl_StringInitSize+196>:	ld	a0,-40(s0)
0x0000000000010470	150	  s->string[0]  = '\0';
=> 0x10470 <ctl_StringInitSize+200>:	ld	a0,8(a0)
0x0000000000010474	150	  s->string[0]  = '\0';
=> 0x10474 <ctl_StringInitSize+204>:	sb	a1,0(a0)
151	  return s;
=> 0x10478 <ctl_StringInitSize+208>:	ld	a0,-40(s0)
0x000000000001047c	151	  return s;
=> 0x1047c <ctl_StringInitSize+212>:	sd	a0,-24(s0)
0x0000000000010480	151	  return s;
=> 0x10480 <ctl_StringInitSize+216>:	j	0x10484 <ctl_StringInitSize+220>
152	}
=> 0x10484 <ctl_StringInitSize+220>:	ld	a0,-24(s0)
0x0000000000010488	152	}
=> 0x10488 <ctl_StringInitSize+224>:	ld	s0,32(sp)
0x000000000001048c in ctl_StringInitSize (BlockSize=63) at string.c:152
152	}
=> 0x1048c <ctl_StringInitSize+228>:	ld	ra,40(sp)
0x0000000000010490	152	}
=> 0x10490 <ctl_StringInitSize+232>:	addi	sp,sp,48
0x0000000000010494	152	}
=> 0x10494 <ctl_StringInitSize+236>:	ld	ra,0(t6)
0x0000000000010498	152	}
=> 0x10498 <ctl_StringInitSize+240>:	addi	t6,t6,16
0x000000000001049c	152	}
=> 0x1049c <ctl_StringInitSize+244>:	ret
0x0000000000010558 in ctl_StringInit () at string.c:156
156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10558 <ctl_StringInit+36>:	ld	s0,0(sp)
0x000000000001055c in ctl_StringInit () at string.c:156
156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x1055c <ctl_StringInit+40>:	ld	ra,8(sp)
0x0000000000010560	156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10560 <ctl_StringInit+44>:	addi	sp,sp,16
0x0000000000010564	156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10564 <ctl_StringInit+48>:	ld	ra,0(t6)
0x0000000000010568	156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10568 <ctl_StringInit+52>:	addi	t6,t6,16
0x000000000001056c	156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x1056c <ctl_StringInit+56>:	ret
0x0000000000011610 in benchmark () at string.c:456
456	  s = ctl_StringInit();
=> 0x11610 <benchmark+40>:	sd	a0,-24(s0)
457	  s2 = ctl_StringInit();
=> 0x11614 <benchmark+44>:	jal	ra,0x10534 <ctl_StringInit>
ctl_StringInit () at string.c:155
155	{
=> 0x10534 <ctl_StringInit>:	addi	t6,t6,-16
0x0000000000010538	155	{
=> 0x10538 <ctl_StringInit+4>:	sd	ra,0(t6)
0x000000000001053c	155	{
=> 0x1053c <ctl_StringInit+8>:	st	zero,0(t6)
0x0000000000010540	155	{
=> 0x10540 <ctl_StringInit+12>:	addi	sp,sp,-16
0x0000000000010544	155	{
=> 0x10544 <ctl_StringInit+16>:	sd	ra,8(sp)
0x0000000000010548	155	{
=> 0x10548 <ctl_StringInit+20>:	sd	s0,0(sp)
0x000000000001054c	155	{
=> 0x1054c <ctl_StringInit+24>:	addi	s0,sp,16
0x0000000000010550	155	{
=> 0x10550 <ctl_StringInit+28>:	li	a0,100
156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10554 <ctl_StringInit+32>:	jal	ra,0x103a8 <ctl_StringInitSize>
ctl_StringInitSize (BlockSize=63) at string.c:133
133	{
=> 0x103a8 <ctl_StringInitSize>:	addi	t6,t6,-16
0x00000000000103ac	133	{
=> 0x103ac <ctl_StringInitSize+4>:	sd	ra,0(t6)
0x00000000000103b0	133	{
=> 0x103b0 <ctl_StringInitSize+8>:	st	zero,0(t6)
0x00000000000103b4	133	{
=> 0x103b4 <ctl_StringInitSize+12>:	addi	sp,sp,-48
0x00000000000103b8	133	{
=> 0x103b8 <ctl_StringInitSize+16>:	sd	ra,40(sp)
0x00000000000103bc	133	{
=> 0x103bc <ctl_StringInitSize+20>:	sd	s0,32(sp)
0x00000000000103c0	133	{
=> 0x103c0 <ctl_StringInitSize+24>:	addi	s0,sp,48
0x00000000000103c4	133	{
=> 0x103c4 <ctl_StringInitSize+28>:	mv	a1,a0
0x00000000000103c8	133	{
=> 0x103c8 <ctl_StringInitSize+32>:	sw	a0,-28(s0)
0x00000000000103cc	133	{
=> 0x103cc <ctl_StringInitSize+36>:	li	a0,32
134	  ctl_string* s=malloc_beebs(sizeof(ctl_string));
=> 0x103d0 <ctl_StringInitSize+40>:	sd	a1,-48(s0)
0x00000000000103d4	134	  ctl_string* s=malloc_beebs(sizeof(ctl_string));
=> 0x103d4 <ctl_StringInitSize+44>:	jal	ra,0x104a0 <malloc_beebs>
malloc_beebs (size=433791695712) at string.c:88
88	{
=> 0x104a0 <malloc_beebs>:	addi	t6,t6,-16
0x00000000000104a4	88	{
=> 0x104a4 <malloc_beebs+4>:	sd	ra,0(t6)
0x00000000000104a8	88	{
=> 0x104a8 <malloc_beebs+8>:	st	zero,0(t6)
0x00000000000104ac	88	{
=> 0x104ac <malloc_beebs+12>:	addi	sp,sp,-48
0x00000000000104b0	88	{
=> 0x104b0 <malloc_beebs+16>:	sd	ra,40(sp)
0x00000000000104b4	88	{
=> 0x104b4 <malloc_beebs+20>:	sd	s0,32(sp)
0x00000000000104b8	88	{
=> 0x104b8 <malloc_beebs+24>:	addi	s0,sp,48
0x00000000000104bc	88	{
=> 0x104bc <malloc_beebs+28>:	sd	a0,-32(s0)
89	    void *new_ptr = heap_ptr;
=> 0x104c0 <malloc_beebs+32>:	ld	a1,-1872(gp)
0x00000000000104c4	89	    void *new_ptr = heap_ptr;
=> 0x104c4 <malloc_beebs+36>:	sd	a1,-40(s0)
91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c8 <malloc_beebs+40>:	ld	a0,-1872(gp)
0x00000000000104cc	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104cc <malloc_beebs+44>:	ld	a1,-32(s0)
0x00000000000104d0	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d0 <malloc_beebs+48>:	add	a0,a0,a1
0x00000000000104d4	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d4 <malloc_beebs+52>:	ld	a1,-1864(gp)
0x00000000000104d8	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d8 <malloc_beebs+56>:	bltu	a1,a0,0x104f0 <malloc_beebs+80>
0x00000000000104dc	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104dc <malloc_beebs+60>:	j	0x104e0 <malloc_beebs+64>
0x00000000000104e0	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e0 <malloc_beebs+64>:	ld	a0,-32(s0)
0x00000000000104e4	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e4 <malloc_beebs+68>:	li	a1,0
0x00000000000104e8	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e8 <malloc_beebs+72>:	bne	a0,a1,0x104fc <malloc_beebs+92>
95		    heap_ptr += size;
=> 0x104fc <malloc_beebs+92>:	ld	a0,-32(s0)
0x0000000000010500	95		    heap_ptr += size;
=> 0x10500 <malloc_beebs+96>:	ld	a2,-1872(gp)
0x0000000000010504	95		    heap_ptr += size;
=> 0x10504 <malloc_beebs+100>:	add	a0,a2,a0
0x0000000000010508	95		    heap_ptr += size;
=> 0x10508 <malloc_beebs+104>:	sd	a0,-1872(gp)
96		    return new_ptr;
=> 0x1050c <malloc_beebs+108>:	ld	a0,-40(s0)
0x0000000000010510	96		    return new_ptr;
=> 0x10510 <malloc_beebs+112>:	sd	a0,-24(s0)
0x0000000000010514	96		    return new_ptr;
=> 0x10514 <malloc_beebs+116>:	j	0x10518 <malloc_beebs+120>
98	}
=> 0x10518 <malloc_beebs+120>:	ld	a0,-24(s0)
0x000000000001051c	98	}
=> 0x1051c <malloc_beebs+124>:	ld	s0,32(sp)
0x0000000000010520 in malloc_beebs (size=433791695712) at string.c:98
98	}
=> 0x10520 <malloc_beebs+128>:	ld	ra,40(sp)
0x0000000000010524	98	}
=> 0x10524 <malloc_beebs+132>:	addi	sp,sp,48
0x0000000000010528	98	}
=> 0x10528 <malloc_beebs+136>:	ld	ra,0(t6)
0x000000000001052c	98	}
=> 0x1052c <malloc_beebs+140>:	addi	t6,t6,16
0x0000000000010530	98	}
=> 0x10530 <malloc_beebs+144>:	ret
0x00000000000103d8 in ctl_StringInitSize (BlockSize=100) at string.c:134
134	  ctl_string* s=malloc_beebs(sizeof(ctl_string));
=> 0x103d8 <ctl_StringInitSize+48>:	sd	a0,-40(s0)
135	  if(!s)
=> 0x103dc <ctl_StringInitSize+52>:	ld	a0,-40(s0)
0x00000000000103e0	135	  if(!s)
=> 0x103e0 <ctl_StringInitSize+56>:	li	a1,0
0x00000000000103e4	135	  if(!s)
=> 0x103e4 <ctl_StringInitSize+60>:	bne	a0,a1,0x103f8 <ctl_StringInitSize+80>
139	  s->BlockSize  = BlockSize;
=> 0x103f8 <ctl_StringInitSize+80>:	lw	a0,-28(s0)
0x00000000000103fc	139	  s->BlockSize  = BlockSize;
=> 0x103fc <ctl_StringInitSize+84>:	ld	a1,-40(s0)
0x0000000000010400	139	  s->BlockSize  = BlockSize;
=> 0x10400 <ctl_StringInitSize+88>:	sd	a0,0(a1)
140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x10404 <ctl_StringInitSize+92>:	ld	a0,-40(s0)
0x0000000000010408	140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x10408 <ctl_StringInitSize+96>:	ld	a0,0(a0)
0x000000000001040c	140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x1040c <ctl_StringInitSize+100>:	jal	ra,0x104a0 <malloc_beebs>
malloc_beebs (size=433791695712) at string.c:88
88	{
=> 0x104a0 <malloc_beebs>:	addi	t6,t6,-16
0x00000000000104a4	88	{
=> 0x104a4 <malloc_beebs+4>:	sd	ra,0(t6)
0x00000000000104a8	88	{
=> 0x104a8 <malloc_beebs+8>:	st	zero,0(t6)
0x00000000000104ac	88	{
=> 0x104ac <malloc_beebs+12>:	addi	sp,sp,-48
0x00000000000104b0	88	{
=> 0x104b0 <malloc_beebs+16>:	sd	ra,40(sp)
0x00000000000104b4	88	{
=> 0x104b4 <malloc_beebs+20>:	sd	s0,32(sp)
0x00000000000104b8	88	{
=> 0x104b8 <malloc_beebs+24>:	addi	s0,sp,48
0x00000000000104bc	88	{
=> 0x104bc <malloc_beebs+28>:	sd	a0,-32(s0)
89	    void *new_ptr = heap_ptr;
=> 0x104c0 <malloc_beebs+32>:	ld	a1,-1872(gp)
0x00000000000104c4	89	    void *new_ptr = heap_ptr;
=> 0x104c4 <malloc_beebs+36>:	sd	a1,-40(s0)
91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c8 <malloc_beebs+40>:	ld	a0,-1872(gp)
0x00000000000104cc	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104cc <malloc_beebs+44>:	ld	a1,-32(s0)
0x00000000000104d0	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d0 <malloc_beebs+48>:	add	a0,a0,a1
0x00000000000104d4	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d4 <malloc_beebs+52>:	ld	a1,-1864(gp)
0x00000000000104d8	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d8 <malloc_beebs+56>:	bltu	a1,a0,0x104f0 <malloc_beebs+80>
0x00000000000104dc	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104dc <malloc_beebs+60>:	j	0x104e0 <malloc_beebs+64>
0x00000000000104e0	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e0 <malloc_beebs+64>:	ld	a0,-32(s0)
0x00000000000104e4	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e4 <malloc_beebs+68>:	li	a1,0
0x00000000000104e8	91	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104e8 <malloc_beebs+72>:	bne	a0,a1,0x104fc <malloc_beebs+92>
95		    heap_ptr += size;
=> 0x104fc <malloc_beebs+92>:	ld	a0,-32(s0)
0x0000000000010500	95		    heap_ptr += size;
=> 0x10500 <malloc_beebs+96>:	ld	a2,-1872(gp)
0x0000000000010504	95		    heap_ptr += size;
=> 0x10504 <malloc_beebs+100>:	add	a0,a2,a0
0x0000000000010508	95		    heap_ptr += size;
=> 0x10508 <malloc_beebs+104>:	sd	a0,-1872(gp)
96		    return new_ptr;
=> 0x1050c <malloc_beebs+108>:	ld	a0,-40(s0)
0x0000000000010510	96		    return new_ptr;
=> 0x10510 <malloc_beebs+112>:	sd	a0,-24(s0)
0x0000000000010514	96		    return new_ptr;
=> 0x10514 <malloc_beebs+116>:	j	0x10518 <malloc_beebs+120>
98	}
=> 0x10518 <malloc_beebs+120>:	ld	a0,-24(s0)
0x000000000001051c	98	}
=> 0x1051c <malloc_beebs+124>:	ld	s0,32(sp)
0x0000000000010520 in malloc_beebs (size=433791695712) at string.c:98
98	}
=> 0x10520 <malloc_beebs+128>:	ld	ra,40(sp)
0x0000000000010524	98	}
=> 0x10524 <malloc_beebs+132>:	addi	sp,sp,48
0x0000000000010528	98	}
=> 0x10528 <malloc_beebs+136>:	ld	ra,0(t6)
0x000000000001052c	98	}
=> 0x1052c <malloc_beebs+140>:	addi	t6,t6,16
0x0000000000010530	98	}
=> 0x10530 <malloc_beebs+144>:	ret
0x0000000000010410 in ctl_StringInitSize (BlockSize=100) at string.c:140
140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x10410 <ctl_StringInitSize+104>:	ld	a1,-40(s0)
0x0000000000010414	140	  s->string   = malloc_beebs(s->BlockSize);
=> 0x10414 <ctl_StringInitSize+108>:	sd	a0,8(a1)
141	  if(!s->string)
=> 0x10418 <ctl_StringInitSize+112>:	ld	a0,-40(s0)
0x000000000001041c	141	  if(!s->string)
=> 0x1041c <ctl_StringInitSize+116>:	ld	a0,8(a0)
0x0000000000010420	141	  if(!s->string)
=> 0x10420 <ctl_StringInitSize+120>:	li	a1,0
0x0000000000010424	141	  if(!s->string)
=> 0x10424 <ctl_StringInitSize+124>:	bne	a0,a1,0x10454 <ctl_StringInitSize+172>
148	  s->alloc    = s->BlockSize;
=> 0x10454 <ctl_StringInitSize+172>:	ld	a0,-40(s0)
0x0000000000010458	148	  s->alloc    = s->BlockSize;
=> 0x10458 <ctl_StringInitSize+176>:	ld	a1,0(a0)
0x000000000001045c	148	  s->alloc    = s->BlockSize;
=> 0x1045c <ctl_StringInitSize+180>:	sd	a1,24(a0)
149	  s->size     = 0;
=> 0x10460 <ctl_StringInitSize+184>:	ld	a0,-40(s0)
0x0000000000010464	149	  s->size     = 0;
=> 0x10464 <ctl_StringInitSize+188>:	li	a1,0
0x0000000000010468	149	  s->size     = 0;
=> 0x10468 <ctl_StringInitSize+192>:	sd	a1,16(a0)
150	  s->string[0]  = '\0';
=> 0x1046c <ctl_StringInitSize+196>:	ld	a0,-40(s0)
0x0000000000010470	150	  s->string[0]  = '\0';
=> 0x10470 <ctl_StringInitSize+200>:	ld	a0,8(a0)
0x0000000000010474	150	  s->string[0]  = '\0';
=> 0x10474 <ctl_StringInitSize+204>:	sb	a1,0(a0)
151	  return s;
=> 0x10478 <ctl_StringInitSize+208>:	ld	a0,-40(s0)
0x000000000001047c	151	  return s;
=> 0x1047c <ctl_StringInitSize+212>:	sd	a0,-24(s0)
0x0000000000010480	151	  return s;
=> 0x10480 <ctl_StringInitSize+216>:	j	0x10484 <ctl_StringInitSize+220>
152	}
=> 0x10484 <ctl_StringInitSize+220>:	ld	a0,-24(s0)
0x0000000000010488	152	}
=> 0x10488 <ctl_StringInitSize+224>:	ld	s0,32(sp)
0x000000000001048c in ctl_StringInitSize (BlockSize=63) at string.c:152
152	}
=> 0x1048c <ctl_StringInitSize+228>:	ld	ra,40(sp)
0x0000000000010490	152	}
=> 0x10490 <ctl_StringInitSize+232>:	addi	sp,sp,48
0x0000000000010494	152	}
=> 0x10494 <ctl_StringInitSize+236>:	ld	ra,0(t6)
0x0000000000010498	152	}
=> 0x10498 <ctl_StringInitSize+240>:	addi	t6,t6,16
0x000000000001049c	152	}
=> 0x1049c <ctl_StringInitSize+244>:	ret
0x0000000000010558 in ctl_StringInit () at string.c:156
156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10558 <ctl_StringInit+36>:	ld	s0,0(sp)
0x000000000001055c in ctl_StringInit () at string.c:156
156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x1055c <ctl_StringInit+40>:	ld	ra,8(sp)
0x0000000000010560	156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10560 <ctl_StringInit+44>:	addi	sp,sp,16
0x0000000000010564	156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10564 <ctl_StringInit+48>:	ld	ra,0(t6)
0x0000000000010568	156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x10568 <ctl_StringInit+52>:	addi	t6,t6,16
0x000000000001056c	156	  return ctl_StringInitSize(CTL_SIZE);
=> 0x1056c <ctl_StringInit+56>:	ret
0x0000000000011618 in benchmark () at string.c:457
457	  s2 = ctl_StringInit();
=> 0x11618 <benchmark+48>:	sd	a0,-32(s0)
459	  ctl_StringSet(s, in1);
=> 0x1161c <benchmark+52>:	ld	a0,-24(s0)
0x0000000000011620	459	  ctl_StringSet(s, in1);
=> 0x11620 <benchmark+56>:	ld	a1,-1920(gp)
0x0000000000011624	459	  ctl_StringSet(s, in1);
=> 0x11624 <benchmark+60>:	jal	ra,0x106f4 <ctl_StringSet>
ctl_StringSet (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:188
188	{
=> 0x106f4 <ctl_StringSet>:	addi	t6,t6,-16
0x00000000000106f8	188	{
=> 0x106f8 <ctl_StringSet+4>:	sd	ra,0(t6)
0x00000000000106fc	188	{
=> 0x106fc <ctl_StringSet+8>:	st	zero,0(t6)
0x0000000000010700	188	{
=> 0x10700 <ctl_StringSet+12>:	addi	sp,sp,-80
0x0000000000010704	188	{
=> 0x10704 <ctl_StringSet+16>:	sd	ra,72(sp)
0x0000000000010708	188	{
=> 0x10708 <ctl_StringSet+20>:	sd	s0,64(sp)
0x000000000001070c	188	{
=> 0x1070c <ctl_StringSet+24>:	addi	s0,sp,80
0x0000000000010710	188	{
=> 0x10710 <ctl_StringSet+28>:	sd	a0,-32(s0)
0x0000000000010714	188	{
=> 0x10714 <ctl_StringSet+32>:	sd	a1,-40(s0)
191	  len=strlen(string);
=> 0x10718 <ctl_StringSet+36>:	ld	a0,-40(s0)
0x000000000001071c	191	  len=strlen(string);
=> 0x1071c <ctl_StringSet+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x0000000000012462 in strlen ()
=> 0x12462 <strlen+48>:	lbu	a3,-6(a4)
0x0000000000012466 in strlen ()
=> 0x12466 <strlen+52>:	beqz	a3,0x124b0 <strlen+126>
0x0000000000012468 in strlen ()
=> 0x12468 <strlen+54>:	lbu	a3,-5(a4)
0x000000000001246c in strlen ()
=> 0x1246c <strlen+58>:	beqz	a3,0x124aa <strlen+120>
0x000000000001246e in strlen ()
=> 0x1246e <strlen+60>:	lbu	a3,-4(a4)
0x0000000000012472 in strlen ()
=> 0x12472 <strlen+64>:	lbu	a2,-3(a4)
0x0000000000012476 in strlen ()
=> 0x12476 <strlen+68>:	lbu	a0,-2(a4)
0x000000000001247a in strlen ()
=> 0x1247a <strlen+72>:	beqz	a3,0x124b6 <strlen+132>
0x00000000000124b6 in strlen ()
=> 0x124b6 <strlen+132>:	addi	a0,a5,-4
0x00000000000124ba in strlen ()
=> 0x124ba <strlen+136>:	ret
0x0000000000010720 in ctl_StringSet (s=0x212a0 <heap>, string=0x1e1f4 <initialise_benchmark.a> "This is a string") at string.c:191
191	  len=strlen(string);
=> 0x10720 <ctl_StringSet+44>:	sd	a0,-48(s0)
192	  if(s->alloc<len)
=> 0x10724 <ctl_StringSet+48>:	ld	a0,-32(s0)
0x0000000000010728	192	  if(s->alloc<len)
=> 0x10728 <ctl_StringSet+52>:	ld	a0,24(a0)
0x000000000001072c	192	  if(s->alloc<len)
=> 0x1072c <ctl_StringSet+56>:	ld	a1,-48(s0)
0x0000000000010730	192	  if(s->alloc<len)
=> 0x10730 <ctl_StringSet+60>:	bgeu	a0,a1,0x107c0 <ctl_StringSet+204>
206	  strcpy(s->string,string);
=> 0x107c0 <ctl_StringSet+204>:	ld	a0,-32(s0)
0x00000000000107c4	206	  strcpy(s->string,string);
=> 0x107c4 <ctl_StringSet+208>:	ld	a0,8(a0)
0x00000000000107c8	206	  strcpy(s->string,string);
=> 0x107c8 <ctl_StringSet+212>:	ld	a1,-40(s0)
0x00000000000107cc	206	  strcpy(s->string,string);
=> 0x107cc <ctl_StringSet+216>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringSet (s=0x212a0 <heap>, string=0x1e1f4 <initialise_benchmark.a> "This is a string") at string.c:207
207	  s->size=len;
=> 0x107d0 <ctl_StringSet+220>:	ld	a1,-48(s0)
0x00000000000107d4	207	  s->size=len;
=> 0x107d4 <ctl_StringSet+224>:	ld	a2,-32(s0)
0x00000000000107d8	207	  s->size=len;
=> 0x107d8 <ctl_StringSet+228>:	sd	a1,16(a2)
0x00000000000107dc	207	  s->size=len;
=> 0x107dc <ctl_StringSet+232>:	li	a1,0
208	  return 0;
=> 0x107e0 <ctl_StringSet+236>:	sw	a1,-20(s0)
0x00000000000107e4	208	  return 0;
=> 0x107e4 <ctl_StringSet+240>:	j	0x107e8 <ctl_StringSet+244>
209	}
=> 0x107e8 <ctl_StringSet+244>:	lw	a0,-20(s0)
0x00000000000107ec	209	}
=> 0x107ec <ctl_StringSet+248>:	ld	s0,64(sp)
0x00000000000107f0 in ctl_StringSet (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:209
209	}
=> 0x107f0 <ctl_StringSet+252>:	ld	ra,72(sp)
0x00000000000107f4	209	}
=> 0x107f4 <ctl_StringSet+256>:	addi	sp,sp,80
0x00000000000107f8	209	}
=> 0x107f8 <ctl_StringSet+260>:	ld	ra,0(t6)
0x00000000000107fc	209	}
=> 0x107fc <ctl_StringSet+264>:	addi	t6,t6,16
0x0000000000010800	209	}
=> 0x10800 <ctl_StringSet+268>:	ret
benchmark () at string.c:460
460	  ctl_StringAppend(s, in2);
=> 0x11628 <benchmark+64>:	ld	a1,-24(s0)
0x000000000001162c	460	  ctl_StringAppend(s, in2);
=> 0x1162c <benchmark+68>:	ld	a2,-1912(gp)
0x0000000000011630	460	  ctl_StringAppend(s, in2);
=> 0x11630 <benchmark+72>:	sd	a0,-48(s0)
0x0000000000011634	460	  ctl_StringAppend(s, in2);
=> 0x11634 <benchmark+76>:	mv	a0,a1
0x0000000000011638	460	  ctl_StringAppend(s, in2);
=> 0x11638 <benchmark+80>:	mv	a1,a2
0x000000000001163c	460	  ctl_StringAppend(s, in2);
=> 0x1163c <benchmark+84>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x0000000000012462 in strlen ()
=> 0x12462 <strlen+48>:	lbu	a3,-6(a4)
0x0000000000012466 in strlen ()
=> 0x12466 <strlen+52>:	beqz	a3,0x124b0 <strlen+126>
0x0000000000012468 in strlen ()
=> 0x12468 <strlen+54>:	lbu	a3,-5(a4)
0x000000000001246c in strlen ()
=> 0x1246c <strlen+58>:	beqz	a3,0x124aa <strlen+120>
0x00000000000124aa in strlen ()
=> 0x124aa <strlen+120>:	addi	a0,a5,-5
0x00000000000124ae in strlen ()
=> 0x124ae <strlen+124>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e205 <initialise_benchmark.b> "This is a str2") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e205 <initialise_benchmark.b> "This is a str2") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:461
461	  ctl_StringSet(s2, in3);
=> 0x11640 <benchmark+88>:	ld	a1,-32(s0)
0x0000000000011644	461	  ctl_StringSet(s2, in3);
=> 0x11644 <benchmark+92>:	ld	a2,-1904(gp)
0x0000000000011648	461	  ctl_StringSet(s2, in3);
=> 0x11648 <benchmark+96>:	sd	a0,-56(s0)
0x000000000001164c	461	  ctl_StringSet(s2, in3);
=> 0x1164c <benchmark+100>:	mv	a0,a1
0x0000000000011650	461	  ctl_StringSet(s2, in3);
=> 0x11650 <benchmark+104>:	mv	a1,a2
0x0000000000011654	461	  ctl_StringSet(s2, in3);
=> 0x11654 <benchmark+108>:	jal	ra,0x106f4 <ctl_StringSet>
ctl_StringSet (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:188
188	{
=> 0x106f4 <ctl_StringSet>:	addi	t6,t6,-16
0x00000000000106f8	188	{
=> 0x106f8 <ctl_StringSet+4>:	sd	ra,0(t6)
0x00000000000106fc	188	{
=> 0x106fc <ctl_StringSet+8>:	st	zero,0(t6)
0x0000000000010700	188	{
=> 0x10700 <ctl_StringSet+12>:	addi	sp,sp,-80
0x0000000000010704	188	{
=> 0x10704 <ctl_StringSet+16>:	sd	ra,72(sp)
0x0000000000010708	188	{
=> 0x10708 <ctl_StringSet+20>:	sd	s0,64(sp)
0x000000000001070c	188	{
=> 0x1070c <ctl_StringSet+24>:	addi	s0,sp,80
0x0000000000010710	188	{
=> 0x10710 <ctl_StringSet+28>:	sd	a0,-32(s0)
0x0000000000010714	188	{
=> 0x10714 <ctl_StringSet+32>:	sd	a1,-40(s0)
191	  len=strlen(string);
=> 0x10718 <ctl_StringSet+36>:	ld	a0,-40(s0)
0x000000000001071c	191	  len=strlen(string);
=> 0x1071c <ctl_StringSet+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012488 in strlen ()
=> 0x12488 <strlen+86>:	beqz	a3,0x1243a <strlen+8>
0x000000000001248a in strlen ()
=> 0x1248a <strlen+88>:	lbu	a5,0(a4)
0x000000000001248e in strlen ()
=> 0x1248e <strlen+92>:	addi	a4,a4,1
0x0000000000012490 in strlen ()
=> 0x12490 <strlen+94>:	andi	a3,a4,7
0x0000000000012494 in strlen ()
=> 0x12494 <strlen+98>:	bnez	a5,0x12488 <strlen+86>
0x0000000000012496 in strlen ()
=> 0x12496 <strlen+100>:	sub	a4,a4,a0
0x0000000000012498 in strlen ()
=> 0x12498 <strlen+102>:	addi	a0,a4,-1
0x000000000001249c in strlen ()
=> 0x1249c <strlen+106>:	ret
0x0000000000010720 in ctl_StringSet (s=0x21324 <heap+132>, string=0x1e214 <initialise_benchmark.c> "aaa") at string.c:191
191	  len=strlen(string);
=> 0x10720 <ctl_StringSet+44>:	sd	a0,-48(s0)
192	  if(s->alloc<len)
=> 0x10724 <ctl_StringSet+48>:	ld	a0,-32(s0)
0x0000000000010728	192	  if(s->alloc<len)
=> 0x10728 <ctl_StringSet+52>:	ld	a0,24(a0)
0x000000000001072c	192	  if(s->alloc<len)
=> 0x1072c <ctl_StringSet+56>:	ld	a1,-48(s0)
0x0000000000010730	192	  if(s->alloc<len)
=> 0x10730 <ctl_StringSet+60>:	bgeu	a0,a1,0x107c0 <ctl_StringSet+204>
206	  strcpy(s->string,string);
=> 0x107c0 <ctl_StringSet+204>:	ld	a0,-32(s0)
0x00000000000107c4	206	  strcpy(s->string,string);
=> 0x107c4 <ctl_StringSet+208>:	ld	a0,8(a0)
0x00000000000107c8	206	  strcpy(s->string,string);
=> 0x107c8 <ctl_StringSet+212>:	ld	a1,-40(s0)
0x00000000000107cc	206	  strcpy(s->string,string);
=> 0x107cc <ctl_StringSet+216>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringSet (s=0x21324 <heap+132>, string=0x1e214 <initialise_benchmark.c> "aaa") at string.c:207
207	  s->size=len;
=> 0x107d0 <ctl_StringSet+220>:	ld	a1,-48(s0)
0x00000000000107d4	207	  s->size=len;
=> 0x107d4 <ctl_StringSet+224>:	ld	a2,-32(s0)
0x00000000000107d8	207	  s->size=len;
=> 0x107d8 <ctl_StringSet+228>:	sd	a1,16(a2)
0x00000000000107dc	207	  s->size=len;
=> 0x107dc <ctl_StringSet+232>:	li	a1,0
208	  return 0;
=> 0x107e0 <ctl_StringSet+236>:	sw	a1,-20(s0)
0x00000000000107e4	208	  return 0;
=> 0x107e4 <ctl_StringSet+240>:	j	0x107e8 <ctl_StringSet+244>
209	}
=> 0x107e8 <ctl_StringSet+244>:	lw	a0,-20(s0)
0x00000000000107ec	209	}
=> 0x107ec <ctl_StringSet+248>:	ld	s0,64(sp)
0x00000000000107f0 in ctl_StringSet (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:209
209	}
=> 0x107f0 <ctl_StringSet+252>:	ld	ra,72(sp)
0x00000000000107f4	209	}
=> 0x107f4 <ctl_StringSet+256>:	addi	sp,sp,80
0x00000000000107f8	209	}
=> 0x107f8 <ctl_StringSet+260>:	ld	ra,0(t6)
0x00000000000107fc	209	}
=> 0x107fc <ctl_StringSet+264>:	addi	t6,t6,16
0x0000000000010800	209	}
=> 0x10800 <ctl_StringSet+268>:	ret
benchmark () at string.c:462
462	  ctl_StringSetString(s, s2);
=> 0x11658 <benchmark+112>:	ld	a1,-24(s0)
0x000000000001165c	462	  ctl_StringSetString(s, s2);
=> 0x1165c <benchmark+116>:	ld	a2,-32(s0)
0x0000000000011660	462	  ctl_StringSetString(s, s2);
=> 0x11660 <benchmark+120>:	sd	a0,-64(s0)
0x0000000000011664	462	  ctl_StringSetString(s, s2);
=> 0x11664 <benchmark+124>:	mv	a0,a1
0x0000000000011668	462	  ctl_StringSetString(s, s2);
=> 0x11668 <benchmark+128>:	mv	a1,a2
0x000000000001166c	462	  ctl_StringSetString(s, s2);
=> 0x1166c <benchmark+132>:	jal	ra,0x10804 <ctl_StringSetString>
ctl_StringSetString (s=0x21324 <heap+132>, string=0x1e1e0) at string.c:212
212	{
=> 0x10804 <ctl_StringSetString>:	addi	t6,t6,-16
0x0000000000010808	212	{
=> 0x10808 <ctl_StringSetString+4>:	sd	ra,0(t6)
0x000000000001080c	212	{
=> 0x1080c <ctl_StringSetString+8>:	st	zero,0(t6)
0x0000000000010810	212	{
=> 0x10810 <ctl_StringSetString+12>:	addi	sp,sp,-64
0x0000000000010814	212	{
=> 0x10814 <ctl_StringSetString+16>:	sd	ra,56(sp)
0x0000000000010818	212	{
=> 0x10818 <ctl_StringSetString+20>:	sd	s0,48(sp)
0x000000000001081c	212	{
=> 0x1081c <ctl_StringSetString+24>:	addi	s0,sp,64
0x0000000000010820	212	{
=> 0x10820 <ctl_StringSetString+28>:	sd	a0,-32(s0)
0x0000000000010824	212	{
=> 0x10824 <ctl_StringSetString+32>:	sd	a1,-40(s0)
215	  if(s->alloc<string->size)
=> 0x10828 <ctl_StringSetString+36>:	ld	a0,-32(s0)
0x000000000001082c	215	  if(s->alloc<string->size)
=> 0x1082c <ctl_StringSetString+40>:	ld	a0,24(a0)
0x0000000000010830	215	  if(s->alloc<string->size)
=> 0x10830 <ctl_StringSetString+44>:	ld	a1,-40(s0)
0x0000000000010834	215	  if(s->alloc<string->size)
=> 0x10834 <ctl_StringSetString+48>:	ld	a1,16(a1)
0x0000000000010838	215	  if(s->alloc<string->size)
=> 0x10838 <ctl_StringSetString+52>:	bgeu	a0,a1,0x108cc <ctl_StringSetString+200>
229	  strcpy(s->string,string->string);
=> 0x108cc <ctl_StringSetString+200>:	ld	a0,-32(s0)
0x00000000000108d0	229	  strcpy(s->string,string->string);
=> 0x108d0 <ctl_StringSetString+204>:	ld	a0,8(a0)
0x00000000000108d4	229	  strcpy(s->string,string->string);
=> 0x108d4 <ctl_StringSetString+208>:	ld	a1,-40(s0)
0x00000000000108d8	229	  strcpy(s->string,string->string);
=> 0x108d8 <ctl_StringSetString+212>:	ld	a1,8(a1)
0x00000000000108dc	229	  strcpy(s->string,string->string);
=> 0x108dc <ctl_StringSetString+216>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringSetString (s=0x212a0 <heap>, string=0x21324 <heap+132>) at string.c:230
230	  s->size=string->size;
=> 0x108e0 <ctl_StringSetString+220>:	ld	a1,-40(s0)
0x00000000000108e4	230	  s->size=string->size;
=> 0x108e4 <ctl_StringSetString+224>:	ld	a1,16(a1)
0x00000000000108e8	230	  s->size=string->size;
=> 0x108e8 <ctl_StringSetString+228>:	ld	a2,-32(s0)
0x00000000000108ec	230	  s->size=string->size;
=> 0x108ec <ctl_StringSetString+232>:	sd	a1,16(a2)
0x00000000000108f0	230	  s->size=string->size;
=> 0x108f0 <ctl_StringSetString+236>:	li	a1,0
231	  return 0;
=> 0x108f4 <ctl_StringSetString+240>:	sw	a1,-20(s0)
0x00000000000108f8	231	  return 0;
=> 0x108f8 <ctl_StringSetString+244>:	j	0x108fc <ctl_StringSetString+248>
232	}
=> 0x108fc <ctl_StringSetString+248>:	lw	a0,-20(s0)
0x0000000000010900	232	}
=> 0x10900 <ctl_StringSetString+252>:	ld	s0,48(sp)
0x0000000000010904 in ctl_StringSetString (s=0x21324 <heap+132>, string=0x1e1e0) at string.c:232
232	}
=> 0x10904 <ctl_StringSetString+256>:	ld	ra,56(sp)
0x0000000000010908	232	}
=> 0x10908 <ctl_StringSetString+260>:	addi	sp,sp,64
0x000000000001090c	232	}
=> 0x1090c <ctl_StringSetString+264>:	ld	ra,0(t6)
0x0000000000010910	232	}
=> 0x10910 <ctl_StringSetString+268>:	addi	t6,t6,16
0x0000000000010914	232	}
=> 0x10914 <ctl_StringSetString+272>:	ret
benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11670 <benchmark+136>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x1e1e0 "REAL STACK AT : %X\n") at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x10001e1e0 <error: Cannot access memory at address 0x10001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x10001e1e0 <error: Cannot access memory at address 0x10001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x10001e1e0 <error: Cannot access memory at address 0x10001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x10001e1e0 <error: Cannot access memory at address 0x10001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x20001e1e0 <error: Cannot access memory at address 0x20001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x20001e1e0 <error: Cannot access memory at address 0x20001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x20001e1e0 <error: Cannot access memory at address 0x20001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x20001e1e0 <error: Cannot access memory at address 0x20001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x30001e1e0 <error: Cannot access memory at address 0x30001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x30001e1e0 <error: Cannot access memory at address 0x30001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x30001e1e0 <error: Cannot access memory at address 0x30001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x30001e1e0 <error: Cannot access memory at address 0x30001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x40001e1e0 <error: Cannot access memory at address 0x40001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x40001e1e0 <error: Cannot access memory at address 0x40001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x40001e1e0 <error: Cannot access memory at address 0x40001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x40001e1e0 <error: Cannot access memory at address 0x40001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x50001e1e0 <error: Cannot access memory at address 0x50001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x50001e1e0 <error: Cannot access memory at address 0x50001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x50001e1e0 <error: Cannot access memory at address 0x50001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x50001e1e0 <error: Cannot access memory at address 0x50001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x60001e1e0 <error: Cannot access memory at address 0x60001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x60001e1e0 <error: Cannot access memory at address 0x60001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x60001e1e0 <error: Cannot access memory at address 0x60001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x000000000001239e in strcpy ()
=> 0x1239e <strcpy+8>:	ld	a3,-2032(gp)
0x00000000000123a2 in strcpy ()
=> 0x123a2 <strcpy+12>:	ld	a4,0(a1)
0x00000000000123a4 in strcpy ()
=> 0x123a4 <strcpy+14>:	li	a2,-1
0x00000000000123a6 in strcpy ()
=> 0x123a6 <strcpy+16>:	and	a5,a4,a3
0x00000000000123aa in strcpy ()
=> 0x123aa <strcpy+20>:	add	a5,a5,a3
0x00000000000123ac in strcpy ()
=> 0x123ac <strcpy+22>:	or	a5,a5,a4
0x00000000000123ae in strcpy ()
=> 0x123ae <strcpy+24>:	or	a5,a5,a3
0x00000000000123b0 in strcpy ()
=> 0x123b0 <strcpy+26>:	bne	a5,a2,0x12428 <strcpy+146>
0x0000000000012428 in strcpy ()
=> 0x12428 <strcpy+146>:	mv	a2,a0
0x000000000001242a in strcpy ()
=> 0x1242a <strcpy+148>:	j	0x123ce <strcpy+56>
0x00000000000123ce in strcpy ()
=> 0x123ce <strcpy+56>:	lbu	a5,0(a1)
0x00000000000123d2 in strcpy ()
=> 0x123d2 <strcpy+60>:	lbu	a4,1(a1)
0x00000000000123d6 in strcpy ()
=> 0x123d6 <strcpy+64>:	lbu	a3,2(a1)
0x00000000000123da in strcpy ()
=> 0x123da <strcpy+68>:	sb	a5,0(a2)
0x00000000000123de in strcpy ()
=> 0x123de <strcpy+72>:	beqz	a5,0x12414 <strcpy+126>
0x00000000000123e0 in strcpy ()
=> 0x123e0 <strcpy+74>:	sb	a4,1(a2)
0x00000000000123e4 in strcpy ()
=> 0x123e4 <strcpy+78>:	beqz	a4,0x12414 <strcpy+126>
0x0000000000012414 in strcpy ()
=> 0x12414 <strcpy+126>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x60001e1e0 <error: Cannot access memory at address 0x60001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x70001e1e0 <error: Cannot access memory at address 0x70001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x70001e1e0 <error: Cannot access memory at address 0x70001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x70001e1e0 <error: Cannot access memory at address 0x70001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x70001e1e0 <error: Cannot access memory at address 0x70001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x80001e1e0 <error: Cannot access memory at address 0x80001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x80001e1e0 <error: Cannot access memory at address 0x80001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x80001e1e0 <error: Cannot access memory at address 0x80001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x80001e1e0 <error: Cannot access memory at address 0x80001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x90001e1e0 <error: Cannot access memory at address 0x90001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x90001e1e0 <error: Cannot access memory at address 0x90001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x90001e1e0 <error: Cannot access memory at address 0x90001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x90001e1e0 <error: Cannot access memory at address 0x90001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xa0001e1e0 <error: Cannot access memory at address 0xa0001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xa0001e1e0 <error: Cannot access memory at address 0xa0001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0xa0001e1e0 <error: Cannot access memory at address 0xa0001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0xa0001e1e0 <error: Cannot access memory at address 0xa0001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xb0001e1e0 <error: Cannot access memory at address 0xb0001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xb0001e1e0 <error: Cannot access memory at address 0xb0001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0xb0001e1e0 <error: Cannot access memory at address 0xb0001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0xb0001e1e0 <error: Cannot access memory at address 0xb0001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xc0001e1e0 <error: Cannot access memory at address 0xc0001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xc0001e1e0 <error: Cannot access memory at address 0xc0001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0xc0001e1e0 <error: Cannot access memory at address 0xc0001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0xc0001e1e0 <error: Cannot access memory at address 0xc0001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xd0001e1e0 <error: Cannot access memory at address 0xd0001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xd0001e1e0 <error: Cannot access memory at address 0xd0001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0xd0001e1e0 <error: Cannot access memory at address 0xd0001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0xd0001e1e0 <error: Cannot access memory at address 0xd0001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xe0001e1e0 <error: Cannot access memory at address 0xe0001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xe0001e1e0 <error: Cannot access memory at address 0xe0001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0xe0001e1e0 <error: Cannot access memory at address 0xe0001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x000000000001239e in strcpy ()
=> 0x1239e <strcpy+8>:	ld	a3,-2032(gp)
0x00000000000123a2 in strcpy ()
=> 0x123a2 <strcpy+12>:	ld	a4,0(a1)
0x00000000000123a4 in strcpy ()
=> 0x123a4 <strcpy+14>:	li	a2,-1
0x00000000000123a6 in strcpy ()
=> 0x123a6 <strcpy+16>:	and	a5,a4,a3
0x00000000000123aa in strcpy ()
=> 0x123aa <strcpy+20>:	add	a5,a5,a3
0x00000000000123ac in strcpy ()
=> 0x123ac <strcpy+22>:	or	a5,a5,a4
0x00000000000123ae in strcpy ()
=> 0x123ae <strcpy+24>:	or	a5,a5,a3
0x00000000000123b0 in strcpy ()
=> 0x123b0 <strcpy+26>:	bne	a5,a2,0x12428 <strcpy+146>
0x0000000000012428 in strcpy ()
=> 0x12428 <strcpy+146>:	mv	a2,a0
0x000000000001242a in strcpy ()
=> 0x1242a <strcpy+148>:	j	0x123ce <strcpy+56>
0x00000000000123ce in strcpy ()
=> 0x123ce <strcpy+56>:	lbu	a5,0(a1)
0x00000000000123d2 in strcpy ()
=> 0x123d2 <strcpy+60>:	lbu	a4,1(a1)
0x00000000000123d6 in strcpy ()
=> 0x123d6 <strcpy+64>:	lbu	a3,2(a1)
0x00000000000123da in strcpy ()
=> 0x123da <strcpy+68>:	sb	a5,0(a2)
0x00000000000123de in strcpy ()
=> 0x123de <strcpy+72>:	beqz	a5,0x12414 <strcpy+126>
0x00000000000123e0 in strcpy ()
=> 0x123e0 <strcpy+74>:	sb	a4,1(a2)
0x00000000000123e4 in strcpy ()
=> 0x123e4 <strcpy+78>:	beqz	a4,0x12414 <strcpy+126>
0x0000000000012414 in strcpy ()
=> 0x12414 <strcpy+126>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0xe0001e1e0 <error: Cannot access memory at address 0xe0001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xf0001e1e0 <error: Cannot access memory at address 0xf0001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0xf0001e1e0 <error: Cannot access memory at address 0xf0001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0xf0001e1e0 <error: Cannot access memory at address 0xf0001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0xf0001e1e0 <error: Cannot access memory at address 0xf0001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x100001e1e0 <error: Cannot access memory at address 0x100001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x100001e1e0 <error: Cannot access memory at address 0x100001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x100001e1e0 <error: Cannot access memory at address 0x100001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x100001e1e0 <error: Cannot access memory at address 0x100001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x110001e1e0 <error: Cannot access memory at address 0x110001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x110001e1e0 <error: Cannot access memory at address 0x110001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x110001e1e0 <error: Cannot access memory at address 0x110001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x110001e1e0 <error: Cannot access memory at address 0x110001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x120001e1e0 <error: Cannot access memory at address 0x120001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x120001e1e0 <error: Cannot access memory at address 0x120001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x120001e1e0 <error: Cannot access memory at address 0x120001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x120001e1e0 <error: Cannot access memory at address 0x120001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x130001e1e0 <error: Cannot access memory at address 0x130001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x130001e1e0 <error: Cannot access memory at address 0x130001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x130001e1e0 <error: Cannot access memory at address 0x130001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x130001e1e0 <error: Cannot access memory at address 0x130001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x140001e1e0 <error: Cannot access memory at address 0x140001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x140001e1e0 <error: Cannot access memory at address 0x140001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
0x0000000000011688	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11688 <benchmark+160>:	j	0x1168c <benchmark+164>
466	    ctl_StringAppend(s, in5);
=> 0x1168c <benchmark+164>:	ld	a0,-24(s0)
0x0000000000011690	466	    ctl_StringAppend(s, in5);
=> 0x11690 <benchmark+168>:	ld	a1,-1888(gp)
0x0000000000011694	466	    ctl_StringAppend(s, in5);
=> 0x11694 <benchmark+172>:	jal	ra,0x10918 <ctl_StringAppend>
ctl_StringAppend (s=0x21324 <heap+132>, string=0x140001e1e0 <error: Cannot access memory at address 0x140001e1e0>) at string.c:235
235	{
=> 0x10918 <ctl_StringAppend>:	addi	t6,t6,-16
0x000000000001091c	235	{
=> 0x1091c <ctl_StringAppend+4>:	sd	ra,0(t6)
0x0000000000010920	235	{
=> 0x10920 <ctl_StringAppend+8>:	st	zero,0(t6)
0x0000000000010924	235	{
=> 0x10924 <ctl_StringAppend+12>:	addi	sp,sp,-80
0x0000000000010928	235	{
=> 0x10928 <ctl_StringAppend+16>:	sd	ra,72(sp)
0x000000000001092c	235	{
=> 0x1092c <ctl_StringAppend+20>:	sd	s0,64(sp)
0x0000000000010930	235	{
=> 0x10930 <ctl_StringAppend+24>:	addi	s0,sp,80
0x0000000000010934	235	{
=> 0x10934 <ctl_StringAppend+28>:	sd	a0,-32(s0)
0x0000000000010938	235	{
=> 0x10938 <ctl_StringAppend+32>:	sd	a1,-40(s0)
236	  size_t len=strlen(string);
=> 0x1093c <ctl_StringAppend+36>:	ld	a0,-40(s0)
0x0000000000010940	236	  size_t len=strlen(string);
=> 0x10940 <ctl_StringAppend+40>:	jal	ra,0x12432 <strlen>
0x0000000000012432 in strlen ()
=> 0x12432 <strlen>:	andi	a5,a0,7
0x0000000000012436 in strlen ()
=> 0x12436 <strlen+4>:	mv	a4,a0
0x0000000000012438 in strlen ()
=> 0x12438 <strlen+6>:	bnez	a5,0x1248a <strlen+88>
0x000000000001243a in strlen ()
=> 0x1243a <strlen+8>:	ld	a3,-2032(gp)
0x000000000001243e in strlen ()
=> 0x1243e <strlen+12>:	li	a1,-1
0x0000000000012440 in strlen ()
=> 0x12440 <strlen+14>:	ld	a2,0(a4)
0x0000000000012442 in strlen ()
=> 0x12442 <strlen+16>:	addi	a4,a4,8
0x0000000000012444 in strlen ()
=> 0x12444 <strlen+18>:	and	a5,a2,a3
0x0000000000012448 in strlen ()
=> 0x12448 <strlen+22>:	add	a5,a5,a3
0x000000000001244a in strlen ()
=> 0x1244a <strlen+24>:	or	a5,a5,a2
0x000000000001244c in strlen ()
=> 0x1244c <strlen+26>:	or	a5,a5,a3
0x000000000001244e in strlen ()
=> 0x1244e <strlen+28>:	beq	a5,a1,0x12440 <strlen+14>
0x0000000000012452 in strlen ()
=> 0x12452 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000012456 in strlen ()
=> 0x12456 <strlen+36>:	sub	a5,a4,a0
0x000000000001245a in strlen ()
=> 0x1245a <strlen+40>:	beqz	a3,0x124a4 <strlen+114>
0x000000000001245c in strlen ()
=> 0x1245c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000012460 in strlen ()
=> 0x12460 <strlen+46>:	beqz	a3,0x1249e <strlen+108>
0x000000000001249e in strlen ()
=> 0x1249e <strlen+108>:	addi	a0,a5,-7
0x00000000000124a2 in strlen ()
=> 0x124a2 <strlen+112>:	ret
0x0000000000010944 in ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:236
236	  size_t len=strlen(string);
=> 0x10944 <ctl_StringAppend+44>:	sd	a0,-48(s0)
237	  size_t size=s->size+len;
=> 0x10948 <ctl_StringAppend+48>:	ld	a0,-32(s0)
0x000000000001094c	237	  size_t size=s->size+len;
=> 0x1094c <ctl_StringAppend+52>:	ld	a0,16(a0)
0x0000000000010950	237	  size_t size=s->size+len;
=> 0x10950 <ctl_StringAppend+56>:	ld	a1,-48(s0)
0x0000000000010954	237	  size_t size=s->size+len;
=> 0x10954 <ctl_StringAppend+60>:	add	a0,a0,a1
0x0000000000010958	237	  size_t size=s->size+len;
=> 0x10958 <ctl_StringAppend+64>:	sd	a0,-56(s0)
238	  if(size>=s->alloc)
=> 0x1095c <ctl_StringAppend+68>:	ld	a0,-56(s0)
0x0000000000010960	238	  if(size>=s->alloc)
=> 0x10960 <ctl_StringAppend+72>:	ld	a1,-32(s0)
0x0000000000010964	238	  if(size>=s->alloc)
=> 0x10964 <ctl_StringAppend+76>:	ld	a1,24(a1)
0x0000000000010968	238	  if(size>=s->alloc)
=> 0x10968 <ctl_StringAppend+80>:	bltu	a0,a1,0x10a2c <ctl_StringAppend+276>
256	  strcpy(s->string+s->size-1,string);
=> 0x10a2c <ctl_StringAppend+276>:	ld	a0,-32(s0)
0x0000000000010a30	256	  strcpy(s->string+s->size-1,string);
=> 0x10a30 <ctl_StringAppend+280>:	ld	a1,8(a0)
0x0000000000010a34	256	  strcpy(s->string+s->size-1,string);
=> 0x10a34 <ctl_StringAppend+284>:	ld	a0,16(a0)
0x0000000000010a38	256	  strcpy(s->string+s->size-1,string);
=> 0x10a38 <ctl_StringAppend+288>:	add	a0,a1,a0
0x0000000000010a3c	256	  strcpy(s->string+s->size-1,string);
=> 0x10a3c <ctl_StringAppend+292>:	addi	a0,a0,-1
0x0000000000010a40	256	  strcpy(s->string+s->size-1,string);
=> 0x10a40 <ctl_StringAppend+296>:	ld	a1,-40(s0)
0x0000000000010a44	256	  strcpy(s->string+s->size-1,string);
=> 0x10a44 <ctl_StringAppend+300>:	jal	ra,0x12396 <strcpy>
0x0000000000012396 in strcpy ()
=> 0x12396 <strcpy>:	or	a5,a0,a1
0x000000000001239a in strcpy ()
=> 0x1239a <strcpy+4>:	andi	a5,a5,7
0x000000000001239c in strcpy ()
=> 0x1239c <strcpy+6>:	bnez	a5,0x12416 <strcpy+128>
0x0000000000012416 in strcpy ()
=> 0x12416 <strcpy+128>:	mv	a5,a0
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012418 in strcpy ()
=> 0x12418 <strcpy+130>:	lbu	a4,0(a1)
0x000000000001241c in strcpy ()
=> 0x1241c <strcpy+134>:	addi	a5,a5,1
0x000000000001241e in strcpy ()
=> 0x1241e <strcpy+136>:	addi	a1,a1,1
0x0000000000012420 in strcpy ()
=> 0x12420 <strcpy+138>:	sb	a4,-1(a5)
0x0000000000012424 in strcpy ()
=> 0x12424 <strcpy+142>:	bnez	a4,0x12418 <strcpy+130>
0x0000000000012426 in strcpy ()
=> 0x12426 <strcpy+144>:	ret
ctl_StringAppend (s=0x212a0 <heap>, string=0x1e230 <initialise_benchmark.e> "a") at string.c:257
257	  s->size=size;
=> 0x10a48 <ctl_StringAppend+304>:	ld	a1,-56(s0)
0x0000000000010a4c	257	  s->size=size;
=> 0x10a4c <ctl_StringAppend+308>:	ld	a2,-32(s0)
0x0000000000010a50	257	  s->size=size;
=> 0x10a50 <ctl_StringAppend+312>:	sd	a1,16(a2)
0x0000000000010a54	257	  s->size=size;
=> 0x10a54 <ctl_StringAppend+316>:	li	a1,0
258	  return 0;
=> 0x10a58 <ctl_StringAppend+320>:	sw	a1,-20(s0)
0x0000000000010a5c	258	  return 0;
=> 0x10a5c <ctl_StringAppend+324>:	j	0x10a60 <ctl_StringAppend+328>
259	}
=> 0x10a60 <ctl_StringAppend+328>:	lw	a0,-20(s0)
0x0000000000010a64	259	}
=> 0x10a64 <ctl_StringAppend+332>:	ld	s0,64(sp)
0x0000000000010a68 in ctl_StringAppend (s=0x21324 <heap+132>, string=0x140001e1e0 <error: Cannot access memory at address 0x140001e1e0>) at string.c:259
259	}
=> 0x10a68 <ctl_StringAppend+336>:	ld	ra,72(sp)
0x0000000000010a6c	259	}
=> 0x10a6c <ctl_StringAppend+340>:	addi	sp,sp,80
0x0000000000010a70	259	}
=> 0x10a70 <ctl_StringAppend+344>:	ld	ra,0(t6)
0x0000000000010a74	259	}
=> 0x10a74 <ctl_StringAppend+348>:	addi	t6,t6,16
0x0000000000010a78	259	}
=> 0x10a78 <ctl_StringAppend+352>:	ret
benchmark () at string.c:467
467	    cnt++;
=> 0x11698 <benchmark+176>:	lw	a1,-36(s0)
0x000000000001169c	467	    cnt++;
=> 0x1169c <benchmark+180>:	addi	a1,a1,1
0x00000000000116a0	467	    cnt++;
=> 0x116a0 <benchmark+184>:	sw	a1,-36(s0)
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x116a4 <benchmark+188>:	j	0x11674 <benchmark+140>
0x0000000000011674	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11674 <benchmark+140>:	ld	a0,-24(s0)
0x0000000000011678	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11678 <benchmark+144>:	ld	a1,-1896(gp)
0x000000000001167c	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x1167c <benchmark+148>:	jal	ra,0x110a4 <ctl_StringCmpNoCase>
ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x150001e1e0 <error: Cannot access memory at address 0x150001e1e0>) at string.c:372
372	{
=> 0x110a4 <ctl_StringCmpNoCase>:	addi	t6,t6,-16
0x00000000000110a8	372	{
=> 0x110a8 <ctl_StringCmpNoCase+4>:	sd	ra,0(t6)
0x00000000000110ac	372	{
=> 0x110ac <ctl_StringCmpNoCase+8>:	st	zero,0(t6)
0x00000000000110b0	372	{
=> 0x110b0 <ctl_StringCmpNoCase+12>:	addi	sp,sp,-144
0x00000000000110b4	372	{
=> 0x110b4 <ctl_StringCmpNoCase+16>:	sd	ra,136(sp)
0x00000000000110b8	372	{
=> 0x110b8 <ctl_StringCmpNoCase+20>:	sd	s0,128(sp)
0x00000000000110bc	372	{
=> 0x110bc <ctl_StringCmpNoCase+24>:	addi	s0,sp,144
0x00000000000110c0	372	{
=> 0x110c0 <ctl_StringCmpNoCase+28>:	sd	a0,-32(s0)
0x00000000000110c4	372	{
=> 0x110c4 <ctl_StringCmpNoCase+32>:	sd	a1,-40(s0)
0x00000000000110c8	372	{
=> 0x110c8 <ctl_StringCmpNoCase+36>:	li	a0,0
373	  size_t i=0;
=> 0x110cc <ctl_StringCmpNoCase+40>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x110d0 <ctl_StringCmpNoCase+44>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111dc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111dc <ctl_StringCmpNoCase+312>:	lbu	a0,-57(s0)
0x00000000000111e0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e0 <ctl_StringCmpNoCase+316>:	sd	a0,-112(s0)
0x00000000000111e4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e4 <ctl_StringCmpNoCase+320>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x00000000000110f8	374	  while(s->string[i]&&string[i])
=> 0x110f8 <ctl_StringCmpNoCase+84>:	j	0x110fc <ctl_StringCmpNoCase+88>
0x00000000000110fc	374	  while(s->string[i]&&string[i])
=> 0x110fc <ctl_StringCmpNoCase+88>:	ld	a0,-40(s0)
0x0000000000011100	374	  while(s->string[i]&&string[i])
=> 0x11100 <ctl_StringCmpNoCase+92>:	ld	a1,-48(s0)
0x0000000000011104	374	  while(s->string[i]&&string[i])
=> 0x11104 <ctl_StringCmpNoCase+96>:	add	a0,a0,a1
0x0000000000011108	374	  while(s->string[i]&&string[i])
=> 0x11108 <ctl_StringCmpNoCase+100>:	lbu	a0,0(a0)
0x000000000001110c	374	  while(s->string[i]&&string[i])
=> 0x1110c <ctl_StringCmpNoCase+104>:	snez	a0,a0
0x0000000000011110	374	  while(s->string[i]&&string[i])
=> 0x11110 <ctl_StringCmpNoCase+108>:	sd	a0,-88(s0)
0x0000000000011114	374	  while(s->string[i]&&string[i])
=> 0x11114 <ctl_StringCmpNoCase+112>:	j	0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
0x0000000000011128	374	  while(s->string[i]&&string[i])
=> 0x11128 <ctl_StringCmpNoCase+132>:	j	0x1112c <ctl_StringCmpNoCase+136>
376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1112c <ctl_StringCmpNoCase+136>:	ld	a0,-32(s0)
0x0000000000011130	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11130 <ctl_StringCmpNoCase+140>:	ld	a0,8(a0)
0x0000000000011134	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11134 <ctl_StringCmpNoCase+144>:	ld	a1,-48(s0)
0x0000000000011138	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11138 <ctl_StringCmpNoCase+148>:	add	a0,a0,a1
0x000000000001113c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1113c <ctl_StringCmpNoCase+152>:	lb	a0,0(a0)
0x0000000000011140	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11140 <ctl_StringCmpNoCase+156>:	sb	a0,-49(s0)
0x0000000000011144	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11144 <ctl_StringCmpNoCase+160>:	lbu	a0,-49(s0)
0x0000000000011148	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11148 <ctl_StringCmpNoCase+164>:	lui	a1,0x1e
0x000000000001114c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1114c <ctl_StringCmpNoCase+168>:	addi	a1,a1,568
0x0000000000011150	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11150 <ctl_StringCmpNoCase+172>:	add	a0,a1,a0
0x0000000000011154	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11154 <ctl_StringCmpNoCase+176>:	lbu	a0,1(a0)
0x0000000000011158	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11158 <ctl_StringCmpNoCase+180>:	andi	a0,a0,3
0x000000000001115c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1115c <ctl_StringCmpNoCase+184>:	li	a1,1
0x0000000000011160	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11160 <ctl_StringCmpNoCase+188>:	bne	a0,a1,0x11178 <ctl_StringCmpNoCase+212>
0x0000000000011178	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11178 <ctl_StringCmpNoCase+212>:	lbu	a0,-49(s0)
0x000000000001117c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1117c <ctl_StringCmpNoCase+216>:	sd	a0,-96(s0)
0x0000000000011180	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11180 <ctl_StringCmpNoCase+220>:	j	0x11184 <ctl_StringCmpNoCase+224>
0x0000000000011184	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11184 <ctl_StringCmpNoCase+224>:	ld	a0,-96(s0)
0x0000000000011188	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11188 <ctl_StringCmpNoCase+228>:	sw	a0,-56(s0)
0x000000000001118c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1118c <ctl_StringCmpNoCase+232>:	lwu	a0,-56(s0)
0x0000000000011190	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11190 <ctl_StringCmpNoCase+236>:	ld	a1,-40(s0)
0x0000000000011194	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11194 <ctl_StringCmpNoCase+240>:	ld	a2,-48(s0)
0x0000000000011198	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x11198 <ctl_StringCmpNoCase+244>:	add	a1,a1,a2
0x000000000001119c	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x1119c <ctl_StringCmpNoCase+248>:	lb	a1,0(a1)
0x00000000000111a0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a0 <ctl_StringCmpNoCase+252>:	sb	a1,-57(s0)
0x00000000000111a4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a4 <ctl_StringCmpNoCase+256>:	lbu	a1,-57(s0)
0x00000000000111a8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111a8 <ctl_StringCmpNoCase+260>:	lui	a2,0x1e
0x00000000000111ac	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ac <ctl_StringCmpNoCase+264>:	addi	a2,a2,568
0x00000000000111b0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b0 <ctl_StringCmpNoCase+268>:	add	a1,a2,a1
0x00000000000111b4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b4 <ctl_StringCmpNoCase+272>:	lbu	a1,1(a1)
0x00000000000111b8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111b8 <ctl_StringCmpNoCase+276>:	andi	a1,a1,3
0x00000000000111bc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111bc <ctl_StringCmpNoCase+280>:	li	a2,1
0x00000000000111c0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c0 <ctl_StringCmpNoCase+284>:	sd	a0,-104(s0)
0x00000000000111c4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c4 <ctl_StringCmpNoCase+288>:	bne	a1,a2,0x111dc <ctl_StringCmpNoCase+312>
0x00000000000111c8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111c8 <ctl_StringCmpNoCase+292>:	j	0x111cc <ctl_StringCmpNoCase+296>
0x00000000000111cc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111cc <ctl_StringCmpNoCase+296>:	lbu	a0,-57(s0)
0x00000000000111d0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d0 <ctl_StringCmpNoCase+300>:	addi	a0,a0,32
0x00000000000111d4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d4 <ctl_StringCmpNoCase+304>:	sd	a0,-112(s0)
0x00000000000111d8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111d8 <ctl_StringCmpNoCase+308>:	j	0x111e8 <ctl_StringCmpNoCase+324>
0x00000000000111e8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111e8 <ctl_StringCmpNoCase+324>:	ld	a0,-112(s0)
0x00000000000111ec	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111ec <ctl_StringCmpNoCase+328>:	sw	a0,-64(s0)
0x00000000000111f0	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f0 <ctl_StringCmpNoCase+332>:	lw	a0,-64(s0)
0x00000000000111f4	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f4 <ctl_StringCmpNoCase+336>:	ld	a1,-104(s0)
0x00000000000111f8	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111f8 <ctl_StringCmpNoCase+340>:	sext.w	a2,a1
0x00000000000111fc	376	    if(tolower((unsigned char)s->string[i])!=tolower((unsigned char)string[i]))
=> 0x111fc <ctl_StringCmpNoCase+344>:	beq	a2,a0,0x112dc <ctl_StringCmpNoCase+568>
380	    ++i;
=> 0x112dc <ctl_StringCmpNoCase+568>:	ld	a0,-48(s0)
0x00000000000112e0	380	    ++i;
=> 0x112e0 <ctl_StringCmpNoCase+572>:	addi	a0,a0,1
0x00000000000112e4	380	    ++i;
=> 0x112e4 <ctl_StringCmpNoCase+576>:	sd	a0,-48(s0)
374	  while(s->string[i]&&string[i])
=> 0x112e8 <ctl_StringCmpNoCase+580>:	j	0x110d4 <ctl_StringCmpNoCase+48>
0x00000000000110d4	374	  while(s->string[i]&&string[i])
=> 0x110d4 <ctl_StringCmpNoCase+48>:	ld	a0,-32(s0)
0x00000000000110d8	374	  while(s->string[i]&&string[i])
=> 0x110d8 <ctl_StringCmpNoCase+52>:	ld	a0,8(a0)
0x00000000000110dc	374	  while(s->string[i]&&string[i])
=> 0x110dc <ctl_StringCmpNoCase+56>:	ld	a1,-48(s0)
0x00000000000110e0	374	  while(s->string[i]&&string[i])
=> 0x110e0 <ctl_StringCmpNoCase+60>:	add	a0,a0,a1
0x00000000000110e4	374	  while(s->string[i]&&string[i])
=> 0x110e4 <ctl_StringCmpNoCase+64>:	lbu	a0,0(a0)
0x00000000000110e8	374	  while(s->string[i]&&string[i])
=> 0x110e8 <ctl_StringCmpNoCase+68>:	li	a1,0
0x00000000000110ec	374	  while(s->string[i]&&string[i])
=> 0x110ec <ctl_StringCmpNoCase+72>:	mv	a2,a1
0x00000000000110f0	374	  while(s->string[i]&&string[i])
=> 0x110f0 <ctl_StringCmpNoCase+76>:	sd	a2,-88(s0)
0x00000000000110f4	374	  while(s->string[i]&&string[i])
=> 0x110f4 <ctl_StringCmpNoCase+80>:	beq	a0,a1,0x11118 <ctl_StringCmpNoCase+116>
0x0000000000011118	374	  while(s->string[i]&&string[i])
=> 0x11118 <ctl_StringCmpNoCase+116>:	ld	a0,-88(s0)
0x000000000001111c	374	  while(s->string[i]&&string[i])
=> 0x1111c <ctl_StringCmpNoCase+120>:	andi	a0,a0,1
0x0000000000011120	374	  while(s->string[i]&&string[i])
=> 0x11120 <ctl_StringCmpNoCase+124>:	li	a1,0
0x0000000000011124	374	  while(s->string[i]&&string[i])
=> 0x11124 <ctl_StringCmpNoCase+128>:	beq	a0,a1,0x112ec <ctl_StringCmpNoCase+584>
382	  return s->string[i]-string[i];
=> 0x112ec <ctl_StringCmpNoCase+584>:	ld	a0,-32(s0)
0x00000000000112f0	382	  return s->string[i]-string[i];
=> 0x112f0 <ctl_StringCmpNoCase+588>:	ld	a0,8(a0)
0x00000000000112f4	382	  return s->string[i]-string[i];
=> 0x112f4 <ctl_StringCmpNoCase+592>:	ld	a1,-48(s0)
0x00000000000112f8	382	  return s->string[i]-string[i];
=> 0x112f8 <ctl_StringCmpNoCase+596>:	add	a0,a0,a1
0x00000000000112fc	382	  return s->string[i]-string[i];
=> 0x112fc <ctl_StringCmpNoCase+600>:	lbu	a0,0(a0)
0x0000000000011300	382	  return s->string[i]-string[i];
=> 0x11300 <ctl_StringCmpNoCase+604>:	ld	a2,-40(s0)
0x0000000000011304	382	  return s->string[i]-string[i];
=> 0x11304 <ctl_StringCmpNoCase+608>:	add	a1,a2,a1
0x0000000000011308	382	  return s->string[i]-string[i];
=> 0x11308 <ctl_StringCmpNoCase+612>:	lbu	a1,0(a1)
0x000000000001130c	382	  return s->string[i]-string[i];
=> 0x1130c <ctl_StringCmpNoCase+616>:	sub	a0,a0,a1
0x0000000000011310	382	  return s->string[i]-string[i];
=> 0x11310 <ctl_StringCmpNoCase+620>:	sw	a0,-20(s0)
0x0000000000011314	382	  return s->string[i]-string[i];
=> 0x11314 <ctl_StringCmpNoCase+624>:	j	0x11318 <ctl_StringCmpNoCase+628>
383	}
=> 0x11318 <ctl_StringCmpNoCase+628>:	lw	a0,-20(s0)
0x000000000001131c	383	}
=> 0x1131c <ctl_StringCmpNoCase+632>:	ld	s0,128(sp)
0x0000000000011320 in ctl_StringCmpNoCase (s=0x21324 <heap+132>, string=0x150001e1e0 <error: Cannot access memory at address 0x150001e1e0>) at string.c:383
383	}
=> 0x11320 <ctl_StringCmpNoCase+636>:	ld	ra,136(sp)
0x0000000000011324	383	}
=> 0x11324 <ctl_StringCmpNoCase+640>:	addi	sp,sp,144
0x0000000000011328	383	}
=> 0x11328 <ctl_StringCmpNoCase+644>:	ld	ra,0(t6)
0x000000000001132c	383	}
=> 0x1132c <ctl_StringCmpNoCase+648>:	addi	t6,t6,16
0x0000000000011330	383	}
=> 0x11330 <ctl_StringCmpNoCase+652>:	ret
0x0000000000011680 in benchmark () at string.c:464
464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11680 <benchmark+152>:	li	a1,0
0x0000000000011684	464	  while(ctl_StringCmpNoCase(s, in4))
=> 0x11684 <benchmark+156>:	beq	a0,a1,0x116a8 <benchmark+192>
470	  ctl_StringFree(s);
=> 0x116a8 <benchmark+192>:	ld	a0,-24(s0)
0x00000000000116ac	470	  ctl_StringFree(s);
=> 0x116ac <benchmark+196>:	jal	ra,0x10670 <ctl_StringFree>
ctl_StringFree (s=0x212a0 <heap>) at string.c:182
182	{
=> 0x10670 <ctl_StringFree>:	addi	t6,t6,-16
0x0000000000010674	182	{
=> 0x10674 <ctl_StringFree+4>:	sd	ra,0(t6)
0x0000000000010678	182	{
=> 0x10678 <ctl_StringFree+8>:	st	zero,0(t6)
0x000000000001067c	182	{
=> 0x1067c <ctl_StringFree+12>:	addi	sp,sp,-32
0x0000000000010680	182	{
=> 0x10680 <ctl_StringFree+16>:	sd	ra,24(sp)
0x0000000000010684	182	{
=> 0x10684 <ctl_StringFree+20>:	sd	s0,16(sp)
0x0000000000010688	182	{
=> 0x10688 <ctl_StringFree+24>:	addi	s0,sp,32
0x000000000001068c	182	{
=> 0x1068c <ctl_StringFree+28>:	sd	a0,-24(s0)
183	  free_beebs(s->string);
=> 0x10690 <ctl_StringFree+32>:	ld	a0,-24(s0)
0x0000000000010694	183	  free_beebs(s->string);
=> 0x10694 <ctl_StringFree+36>:	ld	a0,8(a0)
0x0000000000010698	183	  free_beebs(s->string);
=> 0x10698 <ctl_StringFree+40>:	jal	ra,0x106bc <free_beebs>
free_beebs (ptr=0x212a0 <heap>) at string.c:106
106	{
=> 0x106bc <free_beebs>:	addi	t6,t6,-16
0x00000000000106c0	106	{
=> 0x106c0 <free_beebs+4>:	sd	ra,0(t6)
0x00000000000106c4	106	{
=> 0x106c4 <free_beebs+8>:	st	zero,0(t6)
0x00000000000106c8	106	{
=> 0x106c8 <free_beebs+12>:	addi	sp,sp,-32
0x00000000000106cc	106	{
=> 0x106cc <free_beebs+16>:	sd	ra,24(sp)
0x00000000000106d0	106	{
=> 0x106d0 <free_beebs+20>:	sd	s0,16(sp)
0x00000000000106d4	106	{
=> 0x106d4 <free_beebs+24>:	addi	s0,sp,32
0x00000000000106d8	106	{
=> 0x106d8 <free_beebs+28>:	sd	a0,-24(s0)
107	}
=> 0x106dc <free_beebs+32>:	ld	s0,16(sp)
0x00000000000106e0 in free_beebs (ptr=0x212a0 <heap>) at string.c:107
107	}
=> 0x106e0 <free_beebs+36>:	ld	ra,24(sp)
0x00000000000106e4	107	}
=> 0x106e4 <free_beebs+40>:	addi	sp,sp,32
0x00000000000106e8	107	}
=> 0x106e8 <free_beebs+44>:	ld	ra,0(t6)
0x00000000000106ec	107	}
=> 0x106ec <free_beebs+48>:	addi	t6,t6,16
0x00000000000106f0	107	}
=> 0x106f0 <free_beebs+52>:	ret
ctl_StringFree (s=0x212a0 <heap>) at string.c:184
184	  free_beebs(s);
=> 0x1069c <ctl_StringFree+44>:	ld	a0,-24(s0)
0x00000000000106a0	184	  free_beebs(s);
=> 0x106a0 <ctl_StringFree+48>:	jal	ra,0x106bc <free_beebs>
free_beebs (ptr=0x212a0 <heap>) at string.c:106
106	{
=> 0x106bc <free_beebs>:	addi	t6,t6,-16
0x00000000000106c0	106	{
=> 0x106c0 <free_beebs+4>:	sd	ra,0(t6)
0x00000000000106c4	106	{
=> 0x106c4 <free_beebs+8>:	st	zero,0(t6)
0x00000000000106c8	106	{
=> 0x106c8 <free_beebs+12>:	addi	sp,sp,-32
0x00000000000106cc	106	{
=> 0x106cc <free_beebs+16>:	sd	ra,24(sp)
0x00000000000106d0	106	{
=> 0x106d0 <free_beebs+20>:	sd	s0,16(sp)
0x00000000000106d4	106	{
=> 0x106d4 <free_beebs+24>:	addi	s0,sp,32
0x00000000000106d8	106	{
=> 0x106d8 <free_beebs+28>:	sd	a0,-24(s0)
107	}
=> 0x106dc <free_beebs+32>:	ld	s0,16(sp)
0x00000000000106e0 in free_beebs (ptr=0x212a0 <heap>) at string.c:107
107	}
=> 0x106e0 <free_beebs+36>:	ld	ra,24(sp)
0x00000000000106e4	107	}
=> 0x106e4 <free_beebs+40>:	addi	sp,sp,32
0x00000000000106e8	107	}
=> 0x106e8 <free_beebs+44>:	ld	ra,0(t6)
0x00000000000106ec	107	}
=> 0x106ec <free_beebs+48>:	addi	t6,t6,16
0x00000000000106f0	107	}
=> 0x106f0 <free_beebs+52>:	ret
ctl_StringFree (s=0x212a0 <heap>) at string.c:185
185	}
=> 0x106a4 <ctl_StringFree+52>:	ld	s0,16(sp)
0x00000000000106a8 in ctl_StringFree (s=0x212a0 <heap>) at string.c:185
185	}
=> 0x106a8 <ctl_StringFree+56>:	ld	ra,24(sp)
0x00000000000106ac	185	}
=> 0x106ac <ctl_StringFree+60>:	addi	sp,sp,32
0x00000000000106b0	185	}
=> 0x106b0 <ctl_StringFree+64>:	ld	ra,0(t6)
0x00000000000106b4	185	}
=> 0x106b4 <ctl_StringFree+68>:	addi	t6,t6,16
0x00000000000106b8	185	}
=> 0x106b8 <ctl_StringFree+72>:	ret
benchmark () at string.c:471
471	  ctl_StringFree(s2);
=> 0x116b0 <benchmark+200>:	ld	a0,-32(s0)
0x00000000000116b4	471	  ctl_StringFree(s2);
=> 0x116b4 <benchmark+204>:	jal	ra,0x10670 <ctl_StringFree>
ctl_StringFree (s=0x212a0 <heap>) at string.c:182
182	{
=> 0x10670 <ctl_StringFree>:	addi	t6,t6,-16
0x0000000000010674	182	{
=> 0x10674 <ctl_StringFree+4>:	sd	ra,0(t6)
0x0000000000010678	182	{
=> 0x10678 <ctl_StringFree+8>:	st	zero,0(t6)
0x000000000001067c	182	{
=> 0x1067c <ctl_StringFree+12>:	addi	sp,sp,-32
0x0000000000010680	182	{
=> 0x10680 <ctl_StringFree+16>:	sd	ra,24(sp)
0x0000000000010684	182	{
=> 0x10684 <ctl_StringFree+20>:	sd	s0,16(sp)
0x0000000000010688	182	{
=> 0x10688 <ctl_StringFree+24>:	addi	s0,sp,32
0x000000000001068c	182	{
=> 0x1068c <ctl_StringFree+28>:	sd	a0,-24(s0)
183	  free_beebs(s->string);
=> 0x10690 <ctl_StringFree+32>:	ld	a0,-24(s0)
0x0000000000010694	183	  free_beebs(s->string);
=> 0x10694 <ctl_StringFree+36>:	ld	a0,8(a0)
0x0000000000010698	183	  free_beebs(s->string);
=> 0x10698 <ctl_StringFree+40>:	jal	ra,0x106bc <free_beebs>
free_beebs (ptr=0x21324 <heap+132>) at string.c:106
106	{
=> 0x106bc <free_beebs>:	addi	t6,t6,-16
0x00000000000106c0	106	{
=> 0x106c0 <free_beebs+4>:	sd	ra,0(t6)
0x00000000000106c4	106	{
=> 0x106c4 <free_beebs+8>:	st	zero,0(t6)
0x00000000000106c8	106	{
=> 0x106c8 <free_beebs+12>:	addi	sp,sp,-32
0x00000000000106cc	106	{
=> 0x106cc <free_beebs+16>:	sd	ra,24(sp)
0x00000000000106d0	106	{
=> 0x106d0 <free_beebs+20>:	sd	s0,16(sp)
0x00000000000106d4	106	{
=> 0x106d4 <free_beebs+24>:	addi	s0,sp,32
0x00000000000106d8	106	{
=> 0x106d8 <free_beebs+28>:	sd	a0,-24(s0)
107	}
=> 0x106dc <free_beebs+32>:	ld	s0,16(sp)
0x00000000000106e0 in free_beebs (ptr=0x21324 <heap+132>) at string.c:107
107	}
=> 0x106e0 <free_beebs+36>:	ld	ra,24(sp)
0x00000000000106e4	107	}
=> 0x106e4 <free_beebs+40>:	addi	sp,sp,32
0x00000000000106e8	107	}
=> 0x106e8 <free_beebs+44>:	ld	ra,0(t6)
0x00000000000106ec	107	}
=> 0x106ec <free_beebs+48>:	addi	t6,t6,16
0x00000000000106f0	107	}
=> 0x106f0 <free_beebs+52>:	ret
ctl_StringFree (s=0x21324 <heap+132>) at string.c:184
184	  free_beebs(s);
=> 0x1069c <ctl_StringFree+44>:	ld	a0,-24(s0)
0x00000000000106a0	184	  free_beebs(s);
=> 0x106a0 <ctl_StringFree+48>:	jal	ra,0x106bc <free_beebs>
free_beebs (ptr=0x21324 <heap+132>) at string.c:106
106	{
=> 0x106bc <free_beebs>:	addi	t6,t6,-16
0x00000000000106c0	106	{
=> 0x106c0 <free_beebs+4>:	sd	ra,0(t6)
0x00000000000106c4	106	{
=> 0x106c4 <free_beebs+8>:	st	zero,0(t6)
0x00000000000106c8	106	{
=> 0x106c8 <free_beebs+12>:	addi	sp,sp,-32
0x00000000000106cc	106	{
=> 0x106cc <free_beebs+16>:	sd	ra,24(sp)
0x00000000000106d0	106	{
=> 0x106d0 <free_beebs+20>:	sd	s0,16(sp)
0x00000000000106d4	106	{
=> 0x106d4 <free_beebs+24>:	addi	s0,sp,32
0x00000000000106d8	106	{
=> 0x106d8 <free_beebs+28>:	sd	a0,-24(s0)
107	}
=> 0x106dc <free_beebs+32>:	ld	s0,16(sp)
0x00000000000106e0 in free_beebs (ptr=0x21324 <heap+132>) at string.c:107
107	}
=> 0x106e0 <free_beebs+36>:	ld	ra,24(sp)
0x00000000000106e4	107	}
=> 0x106e4 <free_beebs+40>:	addi	sp,sp,32
0x00000000000106e8	107	}
=> 0x106e8 <free_beebs+44>:	ld	ra,0(t6)
0x00000000000106ec	107	}
=> 0x106ec <free_beebs+48>:	addi	t6,t6,16
0x00000000000106f0	107	}
=> 0x106f0 <free_beebs+52>:	ret
ctl_StringFree (s=0x21324 <heap+132>) at string.c:185
185	}
=> 0x106a4 <ctl_StringFree+52>:	ld	s0,16(sp)
0x00000000000106a8 in ctl_StringFree (s=0x212a0 <heap>) at string.c:185
185	}
=> 0x106a8 <ctl_StringFree+56>:	ld	ra,24(sp)
0x00000000000106ac	185	}
=> 0x106ac <ctl_StringFree+60>:	addi	sp,sp,32
0x00000000000106b0	185	}
=> 0x106b0 <ctl_StringFree+64>:	ld	ra,0(t6)
0x00000000000106b4	185	}
=> 0x106b4 <ctl_StringFree+68>:	addi	t6,t6,16
0x00000000000106b8	185	}
=> 0x106b8 <ctl_StringFree+72>:	ret
benchmark () at string.c:473
473	  return cnt;
=> 0x116b8 <benchmark+208>:	lw	a0,-36(s0)
0x00000000000116bc	473	  return cnt;
=> 0x116bc <benchmark+212>:	ld	s0,48(sp)
0x00000000000116c0 in benchmark () at string.c:473
473	  return cnt;
=> 0x116c0 <benchmark+216>:	ld	ra,56(sp)
0x00000000000116c4	473	  return cnt;
=> 0x116c4 <benchmark+220>:	addi	sp,sp,64
0x00000000000116c8	473	  return cnt;
=> 0x116c8 <benchmark+224>:	ld	ra,0(t6)
0x00000000000116cc	473	  return cnt;
=> 0x116cc <benchmark+228>:	addi	t6,t6,16
0x00000000000116d0	473	  return cnt;
=> 0x116d0 <benchmark+232>:	ret
0x0000000000010248 in main (argc=1, argv=0x3ffffffb68) at main.c:57
57	      result = benchmark ();
=> 0x10248 <main+184>:	sw	a0,-40(s0)
58	    }
=> 0x1024c <main+188>:	j	0x10250 <main+192>
54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10250 <main+192>:	lw	a0,-36(s0)
0x0000000000010254	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10254 <main+196>:	addi	a0,a0,1
0x0000000000010258	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10258 <main+200>:	sw	a0,-36(s0)
0x000000000001025c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1025c <main+204>:	j	0x1022c <main+156>
0x000000000001022c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1022c <main+156>:	lw	a0,-36(s0)
0x0000000000010230	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10230 <main+160>:	li	a1,0
0x0000000000010234	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10234 <main+164>:	blt	a1,a0,0x10260 <main+208>
60	  stop_trigger ();
=> 0x10260 <main+208>:	jal	ra,0x102f8 <stop_trigger>
stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:40
40	{
=> 0x102f8 <stop_trigger>:	addi	t6,t6,-16
0x00000000000102fc	40	{
=> 0x102fc <stop_trigger+4>:	sd	ra,0(t6)
0x0000000000010300	40	{
=> 0x10300 <stop_trigger+8>:	st	zero,0(t6)
0x0000000000010304	40	{
=> 0x10304 <stop_trigger+12>:	addi	sp,sp,-16
47	}
=> 0x10308 <stop_trigger+16>:	sd	ra,8(sp)
0x000000000001030c	47	}
=> 0x1030c <stop_trigger+20>:	sd	s0,0(sp)
0x0000000000010310	47	}
=> 0x10310 <stop_trigger+24>:	addi	s0,sp,16
0x0000000000010314	47	}
=> 0x10314 <stop_trigger+28>:	ld	s0,0(sp)
0x0000000000010318 in stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:47
47	}
=> 0x10318 <stop_trigger+32>:	ld	ra,8(sp)
0x000000000001031c	47	}
=> 0x1031c <stop_trigger+36>:	addi	sp,sp,16
0x0000000000010320	47	}
=> 0x10320 <stop_trigger+40>:	ld	ra,0(t6)
0x0000000000010324	47	}
=> 0x10324 <stop_trigger+44>:	addi	t6,t6,16
0x0000000000010328	47	}
=> 0x10328 <stop_trigger+48>:	ret
main (argc=1, argv=0x3ffffffb68) at main.c:64
64	  correct = verify_benchmark (result);
=> 0x10264 <main+212>:	lw	a0,-40(s0)
0x0000000000010268	64	  correct = verify_benchmark (result);
=> 0x10268 <main+216>:	jal	ra,0x11748 <verify_benchmark>
verify_benchmark (r=1) at string.c:491
491	{
=> 0x11748 <verify_benchmark>:	addi	t6,t6,-16
0x000000000001174c	491	{
=> 0x1174c <verify_benchmark+4>:	sd	ra,0(t6)
0x0000000000011750	491	{
=> 0x11750 <verify_benchmark+8>:	st	zero,0(t6)
0x0000000000011754	491	{
=> 0x11754 <verify_benchmark+12>:	addi	sp,sp,-32
0x0000000000011758	491	{
=> 0x11758 <verify_benchmark+16>:	sd	ra,24(sp)
0x000000000001175c	491	{
=> 0x1175c <verify_benchmark+20>:	sd	s0,16(sp)
0x0000000000011760	491	{
=> 0x11760 <verify_benchmark+24>:	addi	s0,sp,32
0x0000000000011764	491	{
=> 0x11764 <verify_benchmark+28>:	mv	a1,a0
0x0000000000011768	491	{
=> 0x11768 <verify_benchmark+32>:	sw	a0,-24(s0)
0x000000000001176c	491	{
=> 0x1176c <verify_benchmark+36>:	li	a0,21
492	  int expected = 21;
=> 0x11770 <verify_benchmark+40>:	sw	a0,-28(s0)
493	  if (r != expected)
=> 0x11774 <verify_benchmark+44>:	lw	a0,-24(s0)
0x0000000000011778	493	  if (r != expected)
=> 0x11778 <verify_benchmark+48>:	lw	a2,-28(s0)
0x000000000001177c	493	  if (r != expected)
=> 0x1177c <verify_benchmark+52>:	beq	a0,a2,0x11790 <verify_benchmark+72>
0x0000000000011790	494	    return 0;
=> 0x11790 <verify_benchmark+72>:	li	a0,1
495	  return 1;
=> 0x11794 <verify_benchmark+76>:	sw	a0,-20(s0)
0x0000000000011798	495	  return 1;
=> 0x11798 <verify_benchmark+80>:	j	0x1179c <verify_benchmark+84>
496	}
=> 0x1179c <verify_benchmark+84>:	lw	a0,-20(s0)
0x00000000000117a0	496	}
=> 0x117a0 <verify_benchmark+88>:	ld	s0,16(sp)
0x00000000000117a4 in verify_benchmark (r=1) at string.c:496
496	}
=> 0x117a4 <verify_benchmark+92>:	ld	ra,24(sp)
0x00000000000117a8	496	}
=> 0x117a8 <verify_benchmark+96>:	addi	sp,sp,32
0x00000000000117ac	496	}
=> 0x117ac <verify_benchmark+100>:	ld	ra,0(t6)
0x00000000000117b0	496	}
=> 0x117b0 <verify_benchmark+104>:	addi	t6,t6,16
0x00000000000117b4	496	}
=> 0x117b4 <verify_benchmark+108>:	ret
0x000000000001026c in main (argc=1, argv=0x3ffffffb68) at main.c:64
64	  correct = verify_benchmark (result);
=> 0x1026c <main+220>:	sw	a0,-44(s0)
66	  free(a);
=> 0x10270 <main+224>:	ld	a0,-56(s0)
0x0000000000010274	66	  free(a);
=> 0x10274 <main+228>:	jal	ra,0x118a0 <free>
0x00000000000118a0 in free ()
=> 0x118a0 <free>:	mv	a1,a0
0x00000000000118a2 in free ()
=> 0x118a2 <free+2>:	ld	a0,-1960(gp)
0x00000000000118a6 in free ()
=> 0x118a6 <free+6>:	j	0x14d8e <_free_r>
0x0000000000014d8e in _free_r ()
=> 0x14d8e <_free_r>:	beqz	a1,0x14e7e <_free_r+240>
0x0000000000014d90 in _free_r ()
=> 0x14d90 <_free_r+2>:	addi	sp,sp,-32
0x0000000000014d92 in _free_r ()
=> 0x14d92 <_free_r+4>:	sd	s0,16(sp)
0x0000000000014d94 in _free_r ()
=> 0x14d94 <_free_r+6>:	sd	s1,8(sp)
0x0000000000014d96 in _free_r ()
=> 0x14d96 <_free_r+8>:	mv	s0,a1
0x0000000000014d98 in _free_r ()
=> 0x14d98 <_free_r+10>:	mv	s1,a0
0x0000000000014d9a in _free_r ()
=> 0x14d9a <_free_r+12>:	sd	ra,24(sp)
0x0000000000014d9c in _free_r ()
=> 0x14d9c <_free_r+14>:	jal	ra,0x1213c <__malloc_lock>
0x000000000001213c in __malloc_lock ()
=> 0x1213c <__malloc_lock>:	ret
0x0000000000014da0 in _free_r ()
=> 0x14da0 <_free_r+18>:	ld	a0,-8(s0)
0x0000000000014da4 in _free_r ()
=> 0x14da4 <_free_r+22>:	addi	a4,s0,-16
0x0000000000014da8 in _free_r ()
=> 0x14da8 <_free_r+26>:	lui	a1,0x20
0x0000000000014dac in _free_r ()
=> 0x14dac <_free_r+30>:	andi	a5,a0,-2
0x0000000000014db0 in _free_r ()
=> 0x14db0 <_free_r+34>:	add	a2,a4,a5
0x0000000000014db4 in _free_r ()
=> 0x14db4 <_free_r+38>:	addi	a1,a1,1984
0x0000000000014db8 in _free_r ()
=> 0x14db8 <_free_r+42>:	ld	a3,8(a2)
0x0000000000014dba in _free_r ()
=> 0x14dba <_free_r+44>:	ld	a6,16(a1)
0x0000000000014dbe in _free_r ()
=> 0x14dbe <_free_r+48>:	andi	a3,a3,-4
0x0000000000014dc0 in _free_r ()
=> 0x14dc0 <_free_r+50>:	beq	a6,a2,0x14f04 <_free_r+374>
0x0000000000014dc4 in _free_r ()
=> 0x14dc4 <_free_r+54>:	sd	a3,8(a2)
0x0000000000014dc6 in _free_r ()
=> 0x14dc6 <_free_r+56>:	andi	a0,a0,1
0x0000000000014dc8 in _free_r ()
=> 0x14dc8 <_free_r+58>:	add	a6,a2,a3
0x0000000000014dcc in _free_r ()
=> 0x14dcc <_free_r+62>:	bnez	a0,0x14e4e <_free_r+192>
0x0000000000014e4e in _free_r ()
=> 0x14e4e <_free_r+192>:	ld	a0,8(a6)
0x0000000000014e52 in _free_r ()
=> 0x14e52 <_free_r+196>:	andi	a0,a0,1
0x0000000000014e54 in _free_r ()
=> 0x14e54 <_free_r+198>:	bnez	a0,0x14e80 <_free_r+242>
0x0000000000014e80 in _free_r ()
=> 0x14e80 <_free_r+242>:	ori	a3,a5,1
0x0000000000014e84 in _free_r ()
=> 0x14e84 <_free_r+246>:	sd	a3,-8(s0)
0x0000000000014e88 in _free_r ()
=> 0x14e88 <_free_r+250>:	sd	a5,0(a2)
0x0000000000014e8a in _free_r ()
=> 0x14e8a <_free_r+252>:	li	a3,511
0x0000000000014e8e in _free_r ()
=> 0x14e8e <_free_r+256>:	bgeu	a3,a5,0x14e10 <_free_r+130>
0x0000000000014e92 in _free_r ()
=> 0x14e92 <_free_r+260>:	srli	a3,a5,0x9
0x0000000000014e96 in _free_r ()
=> 0x14e96 <_free_r+264>:	li	a2,4
0x0000000000014e98 in _free_r ()
=> 0x14e98 <_free_r+266>:	bltu	a2,a3,0x14f36 <_free_r+424>
0x0000000000014f36 in _free_r ()
=> 0x14f36 <_free_r+424>:	li	a2,20
0x0000000000014f38 in _free_r ()
=> 0x14f38 <_free_r+426>:	bgeu	a2,a3,0x14f5c <_free_r+462>
0x0000000000014f3c in _free_r ()
=> 0x14f3c <_free_r+430>:	li	a2,84
0x0000000000014f40 in _free_r ()
=> 0x14f40 <_free_r+434>:	bltu	a2,a3,0x14f94 <_free_r+518>
0x0000000000014f94 in _free_r ()
=> 0x14f94 <_free_r+518>:	li	a2,340
0x0000000000014f98 in _free_r ()
=> 0x14f98 <_free_r+522>:	bltu	a2,a3,0x14fb0 <_free_r+546>
0x0000000000014fb0 in _free_r ()
=> 0x14fb0 <_free_r+546>:	li	a2,1364
0x0000000000014fb4 in _free_r ()
=> 0x14fb4 <_free_r+550>:	bltu	a2,a3,0x14fcc <_free_r+574>
0x0000000000014fcc in _free_r ()
=> 0x14fcc <_free_r+574>:	li	a0,2032
0x0000000000014fd0 in _free_r ()
=> 0x14fd0 <_free_r+578>:	li	a2,126
0x0000000000014fd4 in _free_r ()
=> 0x14fd4 <_free_r+582>:	j	0x14eae <_free_r+288>
0x0000000000014eae in _free_r ()
=> 0x14eae <_free_r+288>:	add	a0,a0,a1
0x0000000000014eb0 in _free_r ()
=> 0x14eb0 <_free_r+290>:	ld	a3,0(a0)
0x0000000000014eb2 in _free_r ()
=> 0x14eb2 <_free_r+292>:	addi	a0,a0,-16
0x0000000000014eb4 in _free_r ()
=> 0x14eb4 <_free_r+294>:	beq	a0,a3,0x14f7e <_free_r+496>
0x0000000000014f7e in _free_r ()
=> 0x14f7e <_free_r+496>:	ld	a6,8(a1)
0x0000000000014f82 in _free_r ()
=> 0x14f82 <_free_r+500>:	sraiw	a2,a2,0x2
0x0000000000014f86 in _free_r ()
=> 0x14f86 <_free_r+504>:	li	a5,1
0x0000000000014f88 in _free_r ()
=> 0x14f88 <_free_r+506>:	sll	a2,a5,a2
0x0000000000014f8c in _free_r ()
=> 0x14f8c <_free_r+510>:	or	a2,a2,a6
0x0000000000014f90 in _free_r ()
=> 0x14f90 <_free_r+514>:	sd	a2,8(a1)
0x0000000000014f92 in _free_r ()
=> 0x14f92 <_free_r+516>:	j	0x14ec8 <_free_r+314>
0x0000000000014ec8 in _free_r ()
=> 0x14ec8 <_free_r+314>:	sd	a0,24(a4)
0x0000000000014eca in _free_r ()
=> 0x14eca <_free_r+316>:	sd	a3,16(a4)
0x0000000000014ecc in _free_r ()
=> 0x14ecc <_free_r+318>:	ld	s0,16(sp)
0x0000000000014ece in _free_r ()
=> 0x14ece <_free_r+320>:	sd	a4,16(a0)
0x0000000000014ed0 in _free_r ()
=> 0x14ed0 <_free_r+322>:	ld	ra,24(sp)
0x0000000000014ed2 in _free_r ()
=> 0x14ed2 <_free_r+324>:	mv	a0,s1
0x0000000000014ed4 in _free_r ()
=> 0x14ed4 <_free_r+326>:	ld	s1,8(sp)
0x0000000000014ed6 in _free_r ()
=> 0x14ed6 <_free_r+328>:	sd	a4,24(a3)
0x0000000000014ed8 in _free_r ()
=> 0x14ed8 <_free_r+330>:	addi	sp,sp,32
0x0000000000014eda in _free_r ()
=> 0x14eda <_free_r+332>:	j	0x1213e <__malloc_unlock>
0x000000000001213e in __malloc_unlock ()
=> 0x1213e <__malloc_unlock>:	ret
main (argc=1, argv=0x3ffffffb68) at main.c:68
68	  return (!correct);
=> 0x10278 <main+232>:	lw	a0,-44(s0)
0x000000000001027c	68	  return (!correct);
=> 0x1027c <main+236>:	seqz	a0,a0
0x0000000000010280	68	  return (!correct);
=> 0x10280 <main+240>:	ld	s0,112(sp)
0x0000000000010284 in main (argc=<error reading variable: Cannot access memory at address 0x2aaabbdd08>, argv=<error reading variable: Cannot access memory at address 0x2aaabbdd00>) at main.c:68
68	  return (!correct);
=> 0x10284 <main+244>:	ld	ra,120(sp)
0x0000000000010288	68	  return (!correct);
=> 0x10288 <main+248>:	addi	sp,sp,128
0x000000000001028c	68	  return (!correct);
=> 0x1028c <main+252>:	ret
0x000000000001013a in _start ()
=> 0x1013a <_start+64>:	j	0x11808 <exit>
0x0000000000011808 in exit ()
=> 0x11808 <exit>:	addi	sp,sp,-16
0x000000000001180a in exit ()
=> 0x1180a <exit+2>:	li	a1,0
0x000000000001180c in exit ()
=> 0x1180c <exit+4>:	sd	s0,0(sp)
0x000000000001180e in exit ()
=> 0x1180e <exit+6>:	sd	ra,8(sp)
0x0000000000011810 in exit ()
=> 0x11810 <exit+8>:	mv	s0,a0
0x0000000000011812 in exit ()
=> 0x11812 <exit+10>:	jal	ra,0x14728 <__call_exitprocs>
0x0000000000014728 in __call_exitprocs ()
=> 0x14728 <__call_exitprocs>:	addi	sp,sp,-80
0x000000000001472a in __call_exitprocs ()
=> 0x1472a <__call_exitprocs+2>:	sd	s4,32(sp)
0x000000000001472c in __call_exitprocs ()
=> 0x1472c <__call_exitprocs+4>:	ld	s4,-2000(gp)
0x0000000000014730 in __call_exitprocs ()
=> 0x14730 <__call_exitprocs+8>:	sd	s2,48(sp)
0x0000000000014732 in __call_exitprocs ()
=> 0x14732 <__call_exitprocs+10>:	sd	ra,72(sp)
0x0000000000014734 in __call_exitprocs ()
=> 0x14734 <__call_exitprocs+12>:	ld	s2,504(s4)
0x0000000000014738 in __call_exitprocs ()
=> 0x14738 <__call_exitprocs+16>:	sd	s0,64(sp)
0x000000000001473a in __call_exitprocs ()
=> 0x1473a <__call_exitprocs+18>:	sd	s1,56(sp)
0x000000000001473c in __call_exitprocs ()
=> 0x1473c <__call_exitprocs+20>:	sd	s3,40(sp)
0x000000000001473e in __call_exitprocs ()
=> 0x1473e <__call_exitprocs+22>:	sd	s5,24(sp)
0x0000000000014740 in __call_exitprocs ()
=> 0x14740 <__call_exitprocs+24>:	sd	s6,16(sp)
0x0000000000014742 in __call_exitprocs ()
=> 0x14742 <__call_exitprocs+26>:	sd	s7,8(sp)
0x0000000000014744 in __call_exitprocs ()
=> 0x14744 <__call_exitprocs+28>:	sd	s8,0(sp)
0x0000000000014746 in __call_exitprocs ()
=> 0x14746 <__call_exitprocs+30>:	beqz	s2,0x14776 <__call_exitprocs+78>
0x000000000001474a in __call_exitprocs ()
=> 0x1474a <__call_exitprocs+34>:	mv	s6,a0
0x000000000001474c in __call_exitprocs ()
=> 0x1474c <__call_exitprocs+36>:	mv	s7,a1
0x000000000001474e in __call_exitprocs ()
=> 0x1474e <__call_exitprocs+38>:	li	s5,1
0x0000000000014750 in __call_exitprocs ()
=> 0x14750 <__call_exitprocs+40>:	li	s3,-1
0x0000000000014752 in __call_exitprocs ()
=> 0x14752 <__call_exitprocs+42>:	lw	s1,8(s2)
0x0000000000014756 in __call_exitprocs ()
=> 0x14756 <__call_exitprocs+46>:	addiw	s0,s1,-1
0x000000000001475a in __call_exitprocs ()
=> 0x1475a <__call_exitprocs+50>:	bltz	s0,0x14776 <__call_exitprocs+78>
0x000000000001475e in __call_exitprocs ()
=> 0x1475e <__call_exitprocs+54>:	slli	s1,s1,0x3
0x0000000000014760 in __call_exitprocs ()
=> 0x14760 <__call_exitprocs+56>:	add	s1,s1,s2
0x0000000000014762 in __call_exitprocs ()
=> 0x14762 <__call_exitprocs+58>:	beqz	s7,0x1478e <__call_exitprocs+102>
0x000000000001478e in __call_exitprocs ()
=> 0x1478e <__call_exitprocs+102>:	lw	a5,8(s2)
0x0000000000014792 in __call_exitprocs ()
=> 0x14792 <__call_exitprocs+106>:	ld	a4,8(s1)
0x0000000000014794 in __call_exitprocs ()
=> 0x14794 <__call_exitprocs+108>:	addiw	a5,a5,-1
0x0000000000014796 in __call_exitprocs ()
=> 0x14796 <__call_exitprocs+110>:	beq	a5,s0,0x147de <__call_exitprocs+182>
0x00000000000147de in __call_exitprocs ()
=> 0x147de <__call_exitprocs+182>:	sw	s0,8(s2)
0x00000000000147e2 in __call_exitprocs ()
=> 0x147e2 <__call_exitprocs+186>:	j	0x1479e <__call_exitprocs+118>
0x000000000001479e in __call_exitprocs ()
=> 0x1479e <__call_exitprocs+118>:	beqz	a4,0x1476e <__call_exitprocs+70>
0x00000000000147a0 in __call_exitprocs ()
=> 0x147a0 <__call_exitprocs+120>:	lw	a5,784(s2)
0x00000000000147a4 in __call_exitprocs ()
=> 0x147a4 <__call_exitprocs+124>:	sllw	a3,s5,s0
0x00000000000147a8 in __call_exitprocs ()
=> 0x147a8 <__call_exitprocs+128>:	lw	s8,8(s2)
0x00000000000147ac in __call_exitprocs ()
=> 0x147ac <__call_exitprocs+132>:	and	a5,a5,a3
0x00000000000147ae in __call_exitprocs ()
=> 0x147ae <__call_exitprocs+134>:	sext.w	a5,a5
0x00000000000147b0 in __call_exitprocs ()
=> 0x147b0 <__call_exitprocs+136>:	bnez	a5,0x147ca <__call_exitprocs+162>
0x00000000000147b2 in __call_exitprocs ()
=> 0x147b2 <__call_exitprocs+138>:	jalr	a4
0x0000000000014c80 in __libc_fini_array ()
=> 0x14c80 <__libc_fini_array>:	addi	sp,sp,-32
0x0000000000014c82 in __libc_fini_array ()
=> 0x14c82 <__libc_fini_array+2>:	sd	s0,16(sp)
0x0000000000014c84 in __libc_fini_array ()
=> 0x14c84 <__libc_fini_array+4>:	lui	a5,0x20
0x0000000000014c88 in __libc_fini_array ()
=> 0x14c88 <__libc_fini_array+8>:	lui	s0,0x20
0x0000000000014c8c in __libc_fini_array ()
=> 0x14c8c <__libc_fini_array+12>:	addi	s0,s0,112
0x0000000000014c90 in __libc_fini_array ()
=> 0x14c90 <__libc_fini_array+16>:	addi	a5,a5,120
0x0000000000014c94 in __libc_fini_array ()
=> 0x14c94 <__libc_fini_array+20>:	sub	a5,a5,s0
0x0000000000014c96 in __libc_fini_array ()
=> 0x14c96 <__libc_fini_array+22>:	sd	s1,8(sp)
0x0000000000014c98 in __libc_fini_array ()
=> 0x14c98 <__libc_fini_array+24>:	sd	ra,24(sp)
0x0000000000014c9a in __libc_fini_array ()
=> 0x14c9a <__libc_fini_array+26>:	srai	s1,a5,0x3
0x0000000000014c9e in __libc_fini_array ()
=> 0x14c9e <__libc_fini_array+30>:	beqz	s1,0x14cae <__libc_fini_array+46>
0x0000000000014ca0 in __libc_fini_array ()
=> 0x14ca0 <__libc_fini_array+32>:	addi	a5,a5,-8
0x0000000000014ca2 in __libc_fini_array ()
=> 0x14ca2 <__libc_fini_array+34>:	add	s0,s0,a5
0x0000000000014ca4 in __libc_fini_array ()
=> 0x14ca4 <__libc_fini_array+36>:	ld	a5,0(s0)
0x0000000000014ca6 in __libc_fini_array ()
=> 0x14ca6 <__libc_fini_array+38>:	addi	s1,s1,-1
0x0000000000014ca8 in __libc_fini_array ()
=> 0x14ca8 <__libc_fini_array+40>:	addi	s0,s0,-8
0x0000000000014caa in __libc_fini_array ()
=> 0x14caa <__libc_fini_array+42>:	jalr	a5
0x000000000001013e in __do_global_dtors_aux ()
=> 0x1013e <__do_global_dtors_aux>:	lbu	a4,-1808(gp)
0x0000000000010142 in __do_global_dtors_aux ()
=> 0x10142 <__do_global_dtors_aux+4>:	bnez	a4,0x10170 <__do_global_dtors_aux+50>
0x0000000000010144 in __do_global_dtors_aux ()
=> 0x10144 <__do_global_dtors_aux+6>:	addi	sp,sp,-16
0x0000000000010146 in __do_global_dtors_aux ()
=> 0x10146 <__do_global_dtors_aux+8>:	sd	s0,0(sp)
0x0000000000010148 in __do_global_dtors_aux ()
=> 0x10148 <__do_global_dtors_aux+10>:	mv	s0,a5
0x000000000001014a in __do_global_dtors_aux ()
=> 0x1014a <__do_global_dtors_aux+12>:	sd	ra,8(sp)
0x000000000001014c in __do_global_dtors_aux ()
=> 0x1014c <__do_global_dtors_aux+14>:	li	a5,0
0x0000000000010150 in __do_global_dtors_aux ()
=> 0x10150 <__do_global_dtors_aux+18>:	beqz	a5,0x10162 <__do_global_dtors_aux+36>
0x0000000000010162 in __do_global_dtors_aux ()
=> 0x10162 <__do_global_dtors_aux+36>:	li	a5,1
0x0000000000010164 in __do_global_dtors_aux ()
=> 0x10164 <__do_global_dtors_aux+38>:	ld	ra,8(sp)
0x0000000000010166 in __do_global_dtors_aux ()
=> 0x10166 <__do_global_dtors_aux+40>:	sb	a5,-1808(gp)
0x000000000001016a in __do_global_dtors_aux ()
=> 0x1016a <__do_global_dtors_aux+44>:	ld	s0,0(sp)
0x000000000001016c in __do_global_dtors_aux ()
=> 0x1016c <__do_global_dtors_aux+46>:	addi	sp,sp,16
0x000000000001016e in __do_global_dtors_aux ()
=> 0x1016e <__do_global_dtors_aux+48>:	ret
0x0000000000014cac in __libc_fini_array ()
=> 0x14cac <__libc_fini_array+44>:	bnez	s1,0x14ca4 <__libc_fini_array+36>
0x0000000000014cae in __libc_fini_array ()
=> 0x14cae <__libc_fini_array+46>:	ld	ra,24(sp)
0x0000000000014cb0 in __libc_fini_array ()
=> 0x14cb0 <__libc_fini_array+48>:	ld	s0,16(sp)
0x0000000000014cb2 in __libc_fini_array ()
=> 0x14cb2 <__libc_fini_array+50>:	ld	s1,8(sp)
0x0000000000014cb4 in __libc_fini_array ()
=> 0x14cb4 <__libc_fini_array+52>:	addi	sp,sp,32
0x0000000000014cb6 in __libc_fini_array ()
=> 0x14cb6 <__libc_fini_array+54>:	ret
0x00000000000147b4 in __call_exitprocs ()
=> 0x147b4 <__call_exitprocs+140>:	lw	a4,8(s2)
0x00000000000147b8 in __call_exitprocs ()
=> 0x147b8 <__call_exitprocs+144>:	ld	a5,504(s4)
0x00000000000147bc in __call_exitprocs ()
=> 0x147bc <__call_exitprocs+148>:	bne	a4,s8,0x147c4 <__call_exitprocs+156>
0x00000000000147c0 in __call_exitprocs ()
=> 0x147c0 <__call_exitprocs+152>:	beq	a5,s2,0x1476e <__call_exitprocs+70>
0x000000000001476e in __call_exitprocs ()
=> 0x1476e <__call_exitprocs+70>:	addiw	s0,s0,-1
0x0000000000014770 in __call_exitprocs ()
=> 0x14770 <__call_exitprocs+72>:	addi	s1,s1,-8
0x0000000000014772 in __call_exitprocs ()
=> 0x14772 <__call_exitprocs+74>:	bne	s0,s3,0x14762 <__call_exitprocs+58>
0x0000000000014776 in __call_exitprocs ()
=> 0x14776 <__call_exitprocs+78>:	ld	ra,72(sp)
0x0000000000014778 in __call_exitprocs ()
=> 0x14778 <__call_exitprocs+80>:	ld	s0,64(sp)
0x000000000001477a in __call_exitprocs ()
=> 0x1477a <__call_exitprocs+82>:	ld	s1,56(sp)
0x000000000001477c in __call_exitprocs ()
=> 0x1477c <__call_exitprocs+84>:	ld	s2,48(sp)
0x000000000001477e in __call_exitprocs ()
=> 0x1477e <__call_exitprocs+86>:	ld	s3,40(sp)
0x0000000000014780 in __call_exitprocs ()
=> 0x14780 <__call_exitprocs+88>:	ld	s4,32(sp)
0x0000000000014782 in __call_exitprocs ()
=> 0x14782 <__call_exitprocs+90>:	ld	s5,24(sp)
0x0000000000014784 in __call_exitprocs ()
=> 0x14784 <__call_exitprocs+92>:	ld	s6,16(sp)
0x0000000000014786 in __call_exitprocs ()
=> 0x14786 <__call_exitprocs+94>:	ld	s7,8(sp)
0x0000000000014788 in __call_exitprocs ()
=> 0x14788 <__call_exitprocs+96>:	ld	s8,0(sp)
0x000000000001478a in __call_exitprocs ()
=> 0x1478a <__call_exitprocs+98>:	addi	sp,sp,80
0x000000000001478c in __call_exitprocs ()
=> 0x1478c <__call_exitprocs+100>:	ret
0x0000000000011816 in exit ()
=> 0x11816 <exit+14>:	ld	a0,-2000(gp)
0x000000000001181a in exit ()
=> 0x1181a <exit+18>:	ld	a5,88(a0)
0x000000000001181c in exit ()
=> 0x1181c <exit+20>:	beqz	a5,0x11820 <exit+24>
0x000000000001181e in exit ()
=> 0x1181e <exit+22>:	jalr	a5
0x0000000000014a00 in _cleanup_r ()
=> 0x14a00 <_cleanup_r>:	lui	a1,0x1b
0x0000000000014a02 in _cleanup_r ()
=> 0x14a02 <_cleanup_r+2>:	addi	a1,a1,-68
0x0000000000014a06 in _cleanup_r ()
=> 0x14a06 <_cleanup_r+6>:	j	0x15062 <_fwalk_reent>
0x0000000000015062 in _fwalk_reent ()
=> 0x15062 <_fwalk_reent>:	addi	sp,sp,-80
0x0000000000015064 in _fwalk_reent ()
=> 0x15064 <_fwalk_reent+2>:	sd	s2,48(sp)
0x0000000000015066 in _fwalk_reent ()
=> 0x15066 <_fwalk_reent+4>:	sd	s3,40(sp)
0x0000000000015068 in _fwalk_reent ()
=> 0x15068 <_fwalk_reent+6>:	sd	s4,32(sp)
0x000000000001506a in _fwalk_reent ()
=> 0x1506a <_fwalk_reent+8>:	sd	s5,24(sp)
0x000000000001506c in _fwalk_reent ()
=> 0x1506c <_fwalk_reent+10>:	sd	s6,16(sp)
0x000000000001506e in _fwalk_reent ()
=> 0x1506e <_fwalk_reent+12>:	sd	s7,8(sp)
0x0000000000015070 in _fwalk_reent ()
=> 0x15070 <_fwalk_reent+14>:	sd	s8,0(sp)
0x0000000000015072 in _fwalk_reent ()
=> 0x15072 <_fwalk_reent+16>:	sd	ra,72(sp)
0x0000000000015074 in _fwalk_reent ()
=> 0x15074 <_fwalk_reent+18>:	sd	s0,64(sp)
0x0000000000015076 in _fwalk_reent ()
=> 0x15076 <_fwalk_reent+20>:	sd	s1,56(sp)
0x0000000000015078 in _fwalk_reent ()
=> 0x15078 <_fwalk_reent+22>:	mv	s8,a0
0x000000000001507a in _fwalk_reent ()
=> 0x1507a <_fwalk_reent+24>:	mv	s4,a1
0x000000000001507c in _fwalk_reent ()
=> 0x1507c <_fwalk_reent+26>:	addi	s2,a0,1312
0x0000000000015080 in _fwalk_reent ()
=> 0x15080 <_fwalk_reent+30>:	li	s6,0
0x0000000000015082 in _fwalk_reent ()
=> 0x15082 <_fwalk_reent+32>:	li	s5,176
0x0000000000015086 in _fwalk_reent ()
=> 0x15086 <_fwalk_reent+36>:	li	s7,1
0x0000000000015088 in _fwalk_reent ()
=> 0x15088 <_fwalk_reent+38>:	li	s3,-1
0x000000000001508a in _fwalk_reent ()
=> 0x1508a <_fwalk_reent+40>:	lw	a5,8(s2)
0x000000000001508e in _fwalk_reent ()
=> 0x1508e <_fwalk_reent+44>:	ld	s0,16(s2)
0x0000000000015092 in _fwalk_reent ()
=> 0x15092 <_fwalk_reent+48>:	blez	a5,0x150ca <_fwalk_reent+104>
0x0000000000015096 in _fwalk_reent ()
=> 0x15096 <_fwalk_reent+52>:	addiw	s1,a5,-1
0x000000000001509a in _fwalk_reent ()
=> 0x1509a <_fwalk_reent+56>:	slli	s1,s1,0x20
0x000000000001509c in _fwalk_reent ()
=> 0x1509c <_fwalk_reent+58>:	srli	s1,s1,0x20
0x000000000001509e in _fwalk_reent ()
=> 0x1509e <_fwalk_reent+60>:	addi	s1,s1,1
0x00000000000150a0 in _fwalk_reent ()
=> 0x150a0 <_fwalk_reent+62>:	mul	s1,s1,s5
0x00000000000150a4 in _fwalk_reent ()
=> 0x150a4 <_fwalk_reent+66>:	add	s1,s1,s0
0x00000000000150a6 in _fwalk_reent ()
=> 0x150a6 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x00000000000150aa in _fwalk_reent ()
=> 0x150aa <_fwalk_reent+72>:	bgeu	s7,a5,0x150c2 <_fwalk_reent+96>
0x00000000000150ae in _fwalk_reent ()
=> 0x150ae <_fwalk_reent+76>:	lh	a5,18(s0)
0x00000000000150b2 in _fwalk_reent ()
=> 0x150b2 <_fwalk_reent+80>:	mv	a1,s0
0x00000000000150b4 in _fwalk_reent ()
=> 0x150b4 <_fwalk_reent+82>:	mv	a0,s8
0x00000000000150b6 in _fwalk_reent ()
=> 0x150b6 <_fwalk_reent+84>:	beq	a5,s3,0x150c2 <_fwalk_reent+96>
0x00000000000150ba in _fwalk_reent ()
=> 0x150ba <_fwalk_reent+88>:	jalr	s4
0x000000000001afbc in _fclose_r ()
=> 0x1afbc <_fclose_r>:	beqz	a1,0x1aff6 <_fclose_r+58>
0x000000000001afbe in _fclose_r ()
=> 0x1afbe <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001afc0 in _fclose_r ()
=> 0x1afc0 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001afc2 in _fclose_r ()
=> 0x1afc2 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001afc4 in _fclose_r ()
=> 0x1afc4 <_fclose_r+8>:	mv	s0,a0
0x000000000001afc6 in _fclose_r ()
=> 0x1afc6 <_fclose_r+10>:	beqz	a0,0x1afcc <_fclose_r+16>
0x000000000001afc8 in _fclose_r ()
=> 0x1afc8 <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001afca in _fclose_r ()
=> 0x1afca <_fclose_r+14>:	beqz	a5,0x1afe6 <_fclose_r+42>
0x000000000001afcc in _fclose_r ()
=> 0x1afcc <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001afd0 in _fclose_r ()
=> 0x1afd0 <_fclose_r+20>:	bnez	a5,0x1afdc <_fclose_r+32>
0x000000000001afdc in _fclose_r ()
=> 0x1afdc <_fclose_r+32>:	mv	a0,s0
0x000000000001afde in _fclose_r ()
=> 0x1afde <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001afe0 in _fclose_r ()
=> 0x1afe0 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001afe2 in _fclose_r ()
=> 0x1afe2 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001afe4 in _fclose_r ()
=> 0x1afe4 <_fclose_r+40>:	j	0x1af3c <_fclose_r.part.0>
0x000000000001af3c in _fclose_r.part.0 ()
=> 0x1af3c <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001af3e in _fclose_r.part.0 ()
=> 0x1af3e <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001af40 in _fclose_r.part.0 ()
=> 0x1af40 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001af42 in _fclose_r.part.0 ()
=> 0x1af42 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001af44 in _fclose_r.part.0 ()
=> 0x1af44 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001af46 in _fclose_r.part.0 ()
=> 0x1af46 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001af48 in _fclose_r.part.0 ()
=> 0x1af48 <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001af4a in _fclose_r.part.0 ()
=> 0x1af4a <_fclose_r.part.0+14>:	jal	ra,0x147ea <__sflush_r>
0x00000000000147ea in __sflush_r ()
=> 0x147ea <__sflush_r>:	lh	a5,16(a1)
0x00000000000147ee in __sflush_r ()
=> 0x147ee <__sflush_r+4>:	addi	sp,sp,-48
0x00000000000147f0 in __sflush_r ()
=> 0x147f0 <__sflush_r+6>:	sd	s0,32(sp)
0x00000000000147f2 in __sflush_r ()
=> 0x147f2 <__sflush_r+8>:	sd	s3,8(sp)
0x00000000000147f4 in __sflush_r ()
=> 0x147f4 <__sflush_r+10>:	sd	ra,40(sp)
0x00000000000147f6 in __sflush_r ()
=> 0x147f6 <__sflush_r+12>:	sd	s1,24(sp)
0x00000000000147f8 in __sflush_r ()
=> 0x147f8 <__sflush_r+14>:	sd	s2,16(sp)
0x00000000000147fa in __sflush_r ()
=> 0x147fa <__sflush_r+16>:	andi	a3,a5,8
0x00000000000147fe in __sflush_r ()
=> 0x147fe <__sflush_r+20>:	mv	s0,a1
0x0000000000014800 in __sflush_r ()
=> 0x14800 <__sflush_r+22>:	mv	s3,a0
0x0000000000014802 in __sflush_r ()
=> 0x14802 <__sflush_r+24>:	bnez	a3,0x148b6 <__sflush_r+204>
0x0000000000014804 in __sflush_r ()
=> 0x14804 <__sflush_r+26>:	lui	a4,0x1
0x0000000000014806 in __sflush_r ()
=> 0x14806 <__sflush_r+28>:	addi	a4,a4,-2048
0x000000000001480a in __sflush_r ()
=> 0x1480a <__sflush_r+32>:	lw	a3,8(a1)
0x000000000001480c in __sflush_r ()
=> 0x1480c <__sflush_r+34>:	or	a5,a5,a4
0x000000000001480e in __sflush_r ()
=> 0x1480e <__sflush_r+36>:	sh	a5,16(a1)
0x0000000000014812 in __sflush_r ()
=> 0x14812 <__sflush_r+40>:	blez	a3,0x14912 <__sflush_r+296>
0x0000000000014912 in __sflush_r ()
=> 0x14912 <__sflush_r+296>:	lw	a4,112(a1)
0x0000000000014914 in __sflush_r ()
=> 0x14914 <__sflush_r+298>:	bgtz	a4,0x14816 <__sflush_r+44>
0x0000000000014918 in __sflush_r ()
=> 0x14918 <__sflush_r+302>:	j	0x148a6 <__sflush_r+188>
0x00000000000148a6 in __sflush_r ()
=> 0x148a6 <__sflush_r+188>:	li	a0,0
0x00000000000148a8 in __sflush_r ()
=> 0x148a8 <__sflush_r+190>:	ld	ra,40(sp)
0x00000000000148aa in __sflush_r ()
=> 0x148aa <__sflush_r+192>:	ld	s0,32(sp)
0x00000000000148ac in __sflush_r ()
=> 0x148ac <__sflush_r+194>:	ld	s1,24(sp)
0x00000000000148ae in __sflush_r ()
=> 0x148ae <__sflush_r+196>:	ld	s2,16(sp)
0x00000000000148b0 in __sflush_r ()
=> 0x148b0 <__sflush_r+198>:	ld	s3,8(sp)
0x00000000000148b2 in __sflush_r ()
=> 0x148b2 <__sflush_r+200>:	addi	sp,sp,48
0x00000000000148b4 in __sflush_r ()
=> 0x148b4 <__sflush_r+202>:	ret
0x000000000001af4e in _fclose_r.part.0 ()
=> 0x1af4e <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001af50 in _fclose_r.part.0 ()
=> 0x1af50 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001af52 in _fclose_r.part.0 ()
=> 0x1af52 <_fclose_r.part.0+22>:	beqz	a5,0x1af5e <_fclose_r.part.0+34>
0x000000000001af54 in _fclose_r.part.0 ()
=> 0x1af54 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001af56 in _fclose_r.part.0 ()
=> 0x1af56 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001af58 in _fclose_r.part.0 ()
=> 0x1af58 <_fclose_r.part.0+28>:	jalr	a5
0x000000000001848a in __sclose ()
=> 0x1848a <__sclose>:	lh	a1,18(a1)
0x000000000001848e in __sclose ()
=> 0x1848e <__sclose+4>:	j	0x1af00 <_close_r>
0x000000000001af00 in _close_r ()
=> 0x1af00 <_close_r>:	addi	sp,sp,-32
0x000000000001af02 in _close_r ()
=> 0x1af02 <_close_r+2>:	sd	s0,16(sp)
0x000000000001af04 in _close_r ()
=> 0x1af04 <_close_r+4>:	sd	s1,8(sp)
0x000000000001af06 in _close_r ()
=> 0x1af06 <_close_r+6>:	mv	s0,a0
0x000000000001af08 in _close_r ()
=> 0x1af08 <_close_r+8>:	mv	a0,a1
0x000000000001af0a in _close_r ()
=> 0x1af0a <_close_r+10>:	sd	ra,24(sp)
0x000000000001af0c in _close_r ()
=> 0x1af0c <_close_r+12>:	sw	zero,-1824(gp)
0x000000000001af10 in _close_r ()
=> 0x1af10 <_close_r+16>:	jal	ra,0x1cbb0 <_close>
0x000000000001cbb0 in _close ()
=> 0x1cbb0 <_close>:	addi	sp,sp,-16
0x000000000001cbb2 in _close ()
=> 0x1cbb2 <_close+2>:	sd	ra,8(sp)
0x000000000001cbb4 in _close ()
=> 0x1cbb4 <_close+4>:	sd	s0,0(sp)
0x000000000001cbb6 in _close ()
=> 0x1cbb6 <_close+6>:	li	a7,57
0x000000000001cbba in _close ()
=> 0x1cbba <_close+10>:	ecall
0x000000000001cbbe in _close ()
=> 0x1cbbe <_close+14>:	mv	s0,a0
0x000000000001cbc0 in _close ()
=> 0x1cbc0 <_close+16>:	bltz	a0,0x1cbce <_close+30>
0x000000000001cbc4 in _close ()
=> 0x1cbc4 <_close+20>:	sext.w	a0,a0
0x000000000001cbc6 in _close ()
=> 0x1cbc6 <_close+22>:	ld	ra,8(sp)
0x000000000001cbc8 in _close ()
=> 0x1cbc8 <_close+24>:	ld	s0,0(sp)
0x000000000001cbca in _close ()
=> 0x1cbca <_close+26>:	addi	sp,sp,16
0x000000000001cbcc in _close ()
=> 0x1cbcc <_close+28>:	ret
0x000000000001af14 in _close_r ()
=> 0x1af14 <_close_r+20>:	li	a5,-1
0x000000000001af16 in _close_r ()
=> 0x1af16 <_close_r+22>:	beq	a0,a5,0x1af24 <_close_r+36>
0x000000000001af1a in _close_r ()
=> 0x1af1a <_close_r+26>:	ld	ra,24(sp)
0x000000000001af1c in _close_r ()
=> 0x1af1c <_close_r+28>:	ld	s0,16(sp)
0x000000000001af1e in _close_r ()
=> 0x1af1e <_close_r+30>:	ld	s1,8(sp)
0x000000000001af20 in _close_r ()
=> 0x1af20 <_close_r+32>:	addi	sp,sp,32
0x000000000001af22 in _close_r ()
=> 0x1af22 <_close_r+34>:	ret
0x000000000001af5a in _fclose_r.part.0 ()
=> 0x1af5a <_fclose_r.part.0+30>:	bltz	a0,0x1afa6 <_fclose_r.part.0+106>
0x000000000001af5e in _fclose_r.part.0 ()
=> 0x1af5e <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001af62 in _fclose_r.part.0 ()
=> 0x1af62 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001af66 in _fclose_r.part.0 ()
=> 0x1af66 <_fclose_r.part.0+42>:	bnez	a5,0x1afb2 <_fclose_r.part.0+118>
0x000000000001af68 in _fclose_r.part.0 ()
=> 0x1af68 <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001af6a in _fclose_r.part.0 ()
=> 0x1af6a <_fclose_r.part.0+46>:	beqz	a1,0x1af7e <_fclose_r.part.0+66>
0x000000000001af7e in _fclose_r.part.0 ()
=> 0x1af7e <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001af80 in _fclose_r.part.0 ()
=> 0x1af80 <_fclose_r.part.0+68>:	beqz	a1,0x1af8c <_fclose_r.part.0+80>
0x000000000001af8c in _fclose_r.part.0 ()
=> 0x1af8c <_fclose_r.part.0+80>:	jal	ra,0x14c60 <__sfp_lock_acquire>
0x0000000000014c60 in __sfp_lock_acquire ()
=> 0x14c60 <__sfp_lock_acquire>:	ret
0x000000000001af90 in _fclose_r.part.0 ()
=> 0x1af90 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001af94 in _fclose_r.part.0 ()
=> 0x1af94 <_fclose_r.part.0+88>:	jal	ra,0x14c62 <__sfp_lock_release>
0x0000000000014c62 in __sfp_lock_release ()
=> 0x14c62 <__sfp_lock_release>:	ret
0x000000000001af98 in _fclose_r.part.0 ()
=> 0x1af98 <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001af9a in _fclose_r.part.0 ()
=> 0x1af9a <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001af9c in _fclose_r.part.0 ()
=> 0x1af9c <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001af9e in _fclose_r.part.0 ()
=> 0x1af9e <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001afa0 in _fclose_r.part.0 ()
=> 0x1afa0 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001afa2 in _fclose_r.part.0 ()
=> 0x1afa2 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001afa4 in _fclose_r.part.0 ()
=> 0x1afa4 <_fclose_r.part.0+104>:	ret
0x00000000000150bc in _fwalk_reent ()
=> 0x150bc <_fwalk_reent+90>:	or	s6,a0,s6
0x00000000000150c0 in _fwalk_reent ()
=> 0x150c0 <_fwalk_reent+94>:	sext.w	s6,s6
0x00000000000150c2 in _fwalk_reent ()
=> 0x150c2 <_fwalk_reent+96>:	addi	s0,s0,176
0x00000000000150c6 in _fwalk_reent ()
=> 0x150c6 <_fwalk_reent+100>:	bne	s1,s0,0x150a6 <_fwalk_reent+68>
0x00000000000150a6 in _fwalk_reent ()
=> 0x150a6 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x00000000000150aa in _fwalk_reent ()
=> 0x150aa <_fwalk_reent+72>:	bgeu	s7,a5,0x150c2 <_fwalk_reent+96>
0x00000000000150ae in _fwalk_reent ()
=> 0x150ae <_fwalk_reent+76>:	lh	a5,18(s0)
0x00000000000150b2 in _fwalk_reent ()
=> 0x150b2 <_fwalk_reent+80>:	mv	a1,s0
0x00000000000150b4 in _fwalk_reent ()
=> 0x150b4 <_fwalk_reent+82>:	mv	a0,s8
0x00000000000150b6 in _fwalk_reent ()
=> 0x150b6 <_fwalk_reent+84>:	beq	a5,s3,0x150c2 <_fwalk_reent+96>
0x00000000000150ba in _fwalk_reent ()
=> 0x150ba <_fwalk_reent+88>:	jalr	s4
0x000000000001afbc in _fclose_r ()
=> 0x1afbc <_fclose_r>:	beqz	a1,0x1aff6 <_fclose_r+58>
0x000000000001afbe in _fclose_r ()
=> 0x1afbe <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001afc0 in _fclose_r ()
=> 0x1afc0 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001afc2 in _fclose_r ()
=> 0x1afc2 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001afc4 in _fclose_r ()
=> 0x1afc4 <_fclose_r+8>:	mv	s0,a0
0x000000000001afc6 in _fclose_r ()
=> 0x1afc6 <_fclose_r+10>:	beqz	a0,0x1afcc <_fclose_r+16>
0x000000000001afc8 in _fclose_r ()
=> 0x1afc8 <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001afca in _fclose_r ()
=> 0x1afca <_fclose_r+14>:	beqz	a5,0x1afe6 <_fclose_r+42>
0x000000000001afcc in _fclose_r ()
=> 0x1afcc <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001afd0 in _fclose_r ()
=> 0x1afd0 <_fclose_r+20>:	bnez	a5,0x1afdc <_fclose_r+32>
0x000000000001afdc in _fclose_r ()
=> 0x1afdc <_fclose_r+32>:	mv	a0,s0
0x000000000001afde in _fclose_r ()
=> 0x1afde <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001afe0 in _fclose_r ()
=> 0x1afe0 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001afe2 in _fclose_r ()
=> 0x1afe2 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001afe4 in _fclose_r ()
=> 0x1afe4 <_fclose_r+40>:	j	0x1af3c <_fclose_r.part.0>
0x000000000001af3c in _fclose_r.part.0 ()
=> 0x1af3c <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001af3e in _fclose_r.part.0 ()
=> 0x1af3e <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001af40 in _fclose_r.part.0 ()
=> 0x1af40 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001af42 in _fclose_r.part.0 ()
=> 0x1af42 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001af44 in _fclose_r.part.0 ()
=> 0x1af44 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001af46 in _fclose_r.part.0 ()
=> 0x1af46 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001af48 in _fclose_r.part.0 ()
=> 0x1af48 <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001af4a in _fclose_r.part.0 ()
=> 0x1af4a <_fclose_r.part.0+14>:	jal	ra,0x147ea <__sflush_r>
0x00000000000147ea in __sflush_r ()
=> 0x147ea <__sflush_r>:	lh	a5,16(a1)
0x00000000000147ee in __sflush_r ()
=> 0x147ee <__sflush_r+4>:	addi	sp,sp,-48
0x00000000000147f0 in __sflush_r ()
=> 0x147f0 <__sflush_r+6>:	sd	s0,32(sp)
0x00000000000147f2 in __sflush_r ()
=> 0x147f2 <__sflush_r+8>:	sd	s3,8(sp)
0x00000000000147f4 in __sflush_r ()
=> 0x147f4 <__sflush_r+10>:	sd	ra,40(sp)
0x00000000000147f6 in __sflush_r ()
=> 0x147f6 <__sflush_r+12>:	sd	s1,24(sp)
0x00000000000147f8 in __sflush_r ()
=> 0x147f8 <__sflush_r+14>:	sd	s2,16(sp)
0x00000000000147fa in __sflush_r ()
=> 0x147fa <__sflush_r+16>:	andi	a3,a5,8
0x00000000000147fe in __sflush_r ()
=> 0x147fe <__sflush_r+20>:	mv	s0,a1
0x0000000000014800 in __sflush_r ()
=> 0x14800 <__sflush_r+22>:	mv	s3,a0
0x0000000000014802 in __sflush_r ()
=> 0x14802 <__sflush_r+24>:	bnez	a3,0x148b6 <__sflush_r+204>
0x00000000000148b6 in __sflush_r ()
=> 0x148b6 <__sflush_r+204>:	ld	s2,24(a1)
0x00000000000148ba in __sflush_r ()
=> 0x148ba <__sflush_r+208>:	beqz	s2,0x148a6 <__sflush_r+188>
0x00000000000148be in __sflush_r ()
=> 0x148be <__sflush_r+212>:	ld	s1,0(a1)
0x00000000000148c0 in __sflush_r ()
=> 0x148c0 <__sflush_r+214>:	slli	a4,a5,0x30
0x00000000000148c4 in __sflush_r ()
=> 0x148c4 <__sflush_r+218>:	srli	a4,a4,0x30
0x00000000000148c6 in __sflush_r ()
=> 0x148c6 <__sflush_r+220>:	andi	a4,a4,3
0x00000000000148c8 in __sflush_r ()
=> 0x148c8 <__sflush_r+222>:	sd	s2,0(a1)
0x00000000000148cc in __sflush_r ()
=> 0x148cc <__sflush_r+226>:	subw	s1,s1,s2
0x00000000000148d0 in __sflush_r ()
=> 0x148d0 <__sflush_r+230>:	li	a5,0
0x00000000000148d2 in __sflush_r ()
=> 0x148d2 <__sflush_r+232>:	bnez	a4,0x148d6 <__sflush_r+236>
0x00000000000148d6 in __sflush_r ()
=> 0x148d6 <__sflush_r+236>:	sw	a5,12(s0)
0x00000000000148d8 in __sflush_r ()
=> 0x148d8 <__sflush_r+238>:	bgtz	s1,0x148e4 <__sflush_r+250>
0x00000000000148dc in __sflush_r ()
=> 0x148dc <__sflush_r+242>:	j	0x148a6 <__sflush_r+188>
0x00000000000148a6 in __sflush_r ()
=> 0x148a6 <__sflush_r+188>:	li	a0,0
0x00000000000148a8 in __sflush_r ()
=> 0x148a8 <__sflush_r+190>:	ld	ra,40(sp)
0x00000000000148aa in __sflush_r ()
=> 0x148aa <__sflush_r+192>:	ld	s0,32(sp)
0x00000000000148ac in __sflush_r ()
=> 0x148ac <__sflush_r+194>:	ld	s1,24(sp)
0x00000000000148ae in __sflush_r ()
=> 0x148ae <__sflush_r+196>:	ld	s2,16(sp)
0x00000000000148b0 in __sflush_r ()
=> 0x148b0 <__sflush_r+198>:	ld	s3,8(sp)
0x00000000000148b2 in __sflush_r ()
=> 0x148b2 <__sflush_r+200>:	addi	sp,sp,48
0x00000000000148b4 in __sflush_r ()
=> 0x148b4 <__sflush_r+202>:	ret
0x000000000001af4e in _fclose_r.part.0 ()
=> 0x1af4e <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001af50 in _fclose_r.part.0 ()
=> 0x1af50 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001af52 in _fclose_r.part.0 ()
=> 0x1af52 <_fclose_r.part.0+22>:	beqz	a5,0x1af5e <_fclose_r.part.0+34>
0x000000000001af54 in _fclose_r.part.0 ()
=> 0x1af54 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001af56 in _fclose_r.part.0 ()
=> 0x1af56 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001af58 in _fclose_r.part.0 ()
=> 0x1af58 <_fclose_r.part.0+28>:	jalr	a5
0x000000000001848a in __sclose ()
=> 0x1848a <__sclose>:	lh	a1,18(a1)
0x000000000001848e in __sclose ()
=> 0x1848e <__sclose+4>:	j	0x1af00 <_close_r>
0x000000000001af00 in _close_r ()
=> 0x1af00 <_close_r>:	addi	sp,sp,-32
0x000000000001af02 in _close_r ()
=> 0x1af02 <_close_r+2>:	sd	s0,16(sp)
0x000000000001af04 in _close_r ()
=> 0x1af04 <_close_r+4>:	sd	s1,8(sp)
0x000000000001af06 in _close_r ()
=> 0x1af06 <_close_r+6>:	mv	s0,a0
0x000000000001af08 in _close_r ()
=> 0x1af08 <_close_r+8>:	mv	a0,a1
0x000000000001af0a in _close_r ()
=> 0x1af0a <_close_r+10>:	sd	ra,24(sp)
0x000000000001af0c in _close_r ()
=> 0x1af0c <_close_r+12>:	sw	zero,-1824(gp)
0x000000000001af10 in _close_r ()
=> 0x1af10 <_close_r+16>:	jal	ra,0x1cbb0 <_close>
0x000000000001cbb0 in _close ()
=> 0x1cbb0 <_close>:	addi	sp,sp,-16
0x000000000001cbb2 in _close ()
=> 0x1cbb2 <_close+2>:	sd	ra,8(sp)
0x000000000001cbb4 in _close ()
=> 0x1cbb4 <_close+4>:	sd	s0,0(sp)
0x000000000001cbb6 in _close ()
=> 0x1cbb6 <_close+6>:	li	a7,57
0x000000000001cbba in _close ()
=> 0x1cbba <_close+10>:	ecall
0x000000000001cbbe in _close ()
=> 0x1cbbe <_close+14>:	mv	s0,a0
0x000000000001cbc0 in _close ()
=> 0x1cbc0 <_close+16>:	bltz	a0,0x1cbce <_close+30>
0x000000000001cbc4 in _close ()
=> 0x1cbc4 <_close+20>:	sext.w	a0,a0
0x000000000001cbc6 in _close ()
=> 0x1cbc6 <_close+22>:	ld	ra,8(sp)
0x000000000001cbc8 in _close ()
=> 0x1cbc8 <_close+24>:	ld	s0,0(sp)
0x000000000001cbca in _close ()
=> 0x1cbca <_close+26>:	addi	sp,sp,16
0x000000000001cbcc in _close ()
=> 0x1cbcc <_close+28>:	ret
0x000000000001af14 in _close_r ()
=> 0x1af14 <_close_r+20>:	li	a5,-1
0x000000000001af16 in _close_r ()
=> 0x1af16 <_close_r+22>:	beq	a0,a5,0x1af24 <_close_r+36>
0x000000000001af1a in _close_r ()
=> 0x1af1a <_close_r+26>:	ld	ra,24(sp)
0x000000000001af1c in _close_r ()
=> 0x1af1c <_close_r+28>:	ld	s0,16(sp)
0x000000000001af1e in _close_r ()
=> 0x1af1e <_close_r+30>:	ld	s1,8(sp)
0x000000000001af20 in _close_r ()
=> 0x1af20 <_close_r+32>:	addi	sp,sp,32
0x000000000001af22 in _close_r ()
=> 0x1af22 <_close_r+34>:	ret
0x000000000001af5a in _fclose_r.part.0 ()
=> 0x1af5a <_fclose_r.part.0+30>:	bltz	a0,0x1afa6 <_fclose_r.part.0+106>
0x000000000001af5e in _fclose_r.part.0 ()
=> 0x1af5e <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001af62 in _fclose_r.part.0 ()
=> 0x1af62 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001af66 in _fclose_r.part.0 ()
=> 0x1af66 <_fclose_r.part.0+42>:	bnez	a5,0x1afb2 <_fclose_r.part.0+118>
0x000000000001afb2 in _fclose_r.part.0 ()
=> 0x1afb2 <_fclose_r.part.0+118>:	ld	a1,24(s0)
0x000000000001afb4 in _fclose_r.part.0 ()
=> 0x1afb4 <_fclose_r.part.0+120>:	mv	a0,s1
0x000000000001afb6 in _fclose_r.part.0 ()
=> 0x1afb6 <_fclose_r.part.0+122>:	jal	ra,0x14d8e <_free_r>
0x0000000000014d8e in _free_r ()
=> 0x14d8e <_free_r>:	beqz	a1,0x14e7e <_free_r+240>
0x0000000000014d90 in _free_r ()
=> 0x14d90 <_free_r+2>:	addi	sp,sp,-32
0x0000000000014d92 in _free_r ()
=> 0x14d92 <_free_r+4>:	sd	s0,16(sp)
0x0000000000014d94 in _free_r ()
=> 0x14d94 <_free_r+6>:	sd	s1,8(sp)
0x0000000000014d96 in _free_r ()
=> 0x14d96 <_free_r+8>:	mv	s0,a1
0x0000000000014d98 in _free_r ()
=> 0x14d98 <_free_r+10>:	mv	s1,a0
0x0000000000014d9a in _free_r ()
=> 0x14d9a <_free_r+12>:	sd	ra,24(sp)
0x0000000000014d9c in _free_r ()
=> 0x14d9c <_free_r+14>:	jal	ra,0x1213c <__malloc_lock>
0x000000000001213c in __malloc_lock ()
=> 0x1213c <__malloc_lock>:	ret
0x0000000000014da0 in _free_r ()
=> 0x14da0 <_free_r+18>:	ld	a0,-8(s0)
0x0000000000014da4 in _free_r ()
=> 0x14da4 <_free_r+22>:	addi	a4,s0,-16
0x0000000000014da8 in _free_r ()
=> 0x14da8 <_free_r+26>:	lui	a1,0x20
0x0000000000014dac in _free_r ()
=> 0x14dac <_free_r+30>:	andi	a5,a0,-2
0x0000000000014db0 in _free_r ()
=> 0x14db0 <_free_r+34>:	add	a2,a4,a5
0x0000000000014db4 in _free_r ()
=> 0x14db4 <_free_r+38>:	addi	a1,a1,1984
0x0000000000014db8 in _free_r ()
=> 0x14db8 <_free_r+42>:	ld	a3,8(a2)
0x0000000000014dba in _free_r ()
=> 0x14dba <_free_r+44>:	ld	a6,16(a1)
0x0000000000014dbe in _free_r ()
=> 0x14dbe <_free_r+48>:	andi	a3,a3,-4
0x0000000000014dc0 in _free_r ()
=> 0x14dc0 <_free_r+50>:	beq	a6,a2,0x14f04 <_free_r+374>
0x0000000000014f04 in _free_r ()
=> 0x14f04 <_free_r+374>:	andi	a0,a0,1
0x0000000000014f06 in _free_r ()
=> 0x14f06 <_free_r+376>:	add	a5,a5,a3
0x0000000000014f08 in _free_r ()
=> 0x14f08 <_free_r+378>:	bnez	a0,0x14f1a <_free_r+396>
0x0000000000014f0a in _free_r ()
=> 0x14f0a <_free_r+380>:	ld	a0,-16(s0)
0x0000000000014f0e in _free_r ()
=> 0x14f0e <_free_r+384>:	sub	a4,a4,a0
0x0000000000014f10 in _free_r ()
=> 0x14f10 <_free_r+386>:	ld	a3,24(a4)
0x0000000000014f12 in _free_r ()
=> 0x14f12 <_free_r+388>:	ld	a2,16(a4)
0x0000000000014f14 in _free_r ()
=> 0x14f14 <_free_r+390>:	add	a5,a5,a0
0x0000000000014f16 in _free_r ()
=> 0x14f16 <_free_r+392>:	sd	a3,24(a2)
0x0000000000014f18 in _free_r ()
=> 0x14f18 <_free_r+394>:	sd	a2,16(a3)
0x0000000000014f1a in _free_r ()
=> 0x14f1a <_free_r+396>:	ori	a2,a5,1
0x0000000000014f1e in _free_r ()
=> 0x14f1e <_free_r+400>:	ld	a3,-1944(gp)
0x0000000000014f22 in _free_r ()
=> 0x14f22 <_free_r+404>:	sd	a2,8(a4)
0x0000000000014f24 in _free_r ()
=> 0x14f24 <_free_r+406>:	sd	a4,16(a1)
0x0000000000014f26 in _free_r ()
=> 0x14f26 <_free_r+408>:	bltu	a5,a3,0x14e40 <_free_r+178>
0x0000000000014f2a in _free_r ()
=> 0x14f2a <_free_r+412>:	ld	a1,-1840(gp)
0x0000000000014f2e in _free_r ()
=> 0x14f2e <_free_r+416>:	mv	a0,s1
0x0000000000014f30 in _free_r ()
=> 0x14f30 <_free_r+418>:	jal	ra,0x14cb8 <_malloc_trim_r>
0x0000000000014cb8 in _malloc_trim_r ()
=> 0x14cb8 <_malloc_trim_r>:	addi	sp,sp,-48
0x0000000000014cba in _malloc_trim_r ()
=> 0x14cba <_malloc_trim_r+2>:	sd	s3,8(sp)
0x0000000000014cbc in _malloc_trim_r ()
=> 0x14cbc <_malloc_trim_r+4>:	lui	s3,0x20
0x0000000000014cc0 in _malloc_trim_r ()
=> 0x14cc0 <_malloc_trim_r+8>:	sd	s0,32(sp)
0x0000000000014cc2 in _malloc_trim_r ()
=> 0x14cc2 <_malloc_trim_r+10>:	sd	s1,24(sp)
0x0000000000014cc4 in _malloc_trim_r ()
=> 0x14cc4 <_malloc_trim_r+12>:	sd	s2,16(sp)
0x0000000000014cc6 in _malloc_trim_r ()
=> 0x14cc6 <_malloc_trim_r+14>:	sd	s4,0(sp)
0x0000000000014cc8 in _malloc_trim_r ()
=> 0x14cc8 <_malloc_trim_r+16>:	sd	ra,40(sp)
0x0000000000014cca in _malloc_trim_r ()
=> 0x14cca <_malloc_trim_r+18>:	mv	s4,a1
0x0000000000014ccc in _malloc_trim_r ()
=> 0x14ccc <_malloc_trim_r+20>:	mv	s2,a0
0x0000000000014cce in _malloc_trim_r ()
=> 0x14cce <_malloc_trim_r+22>:	addi	s3,s3,1984
0x0000000000014cd2 in _malloc_trim_r ()
=> 0x14cd2 <_malloc_trim_r+26>:	jal	ra,0x1213c <__malloc_lock>
0x000000000001213c in __malloc_lock ()
=> 0x1213c <__malloc_lock>:	ret
0x0000000000014cd6 in _malloc_trim_r ()
=> 0x14cd6 <_malloc_trim_r+30>:	ld	a4,16(s3)
0x0000000000014cda in _malloc_trim_r ()
=> 0x14cda <_malloc_trim_r+34>:	lui	a5,0x1
0x0000000000014cdc in _malloc_trim_r ()
=> 0x14cdc <_malloc_trim_r+36>:	addi	s0,a5,-33
0x0000000000014ce0 in _malloc_trim_r ()
=> 0x14ce0 <_malloc_trim_r+40>:	ld	s1,8(a4)
0x0000000000014ce2 in _malloc_trim_r ()
=> 0x14ce2 <_malloc_trim_r+42>:	sub	s0,s0,s4
0x0000000000014ce6 in _malloc_trim_r ()
=> 0x14ce6 <_malloc_trim_r+46>:	andi	s1,s1,-4
0x0000000000014ce8 in _malloc_trim_r ()
=> 0x14ce8 <_malloc_trim_r+48>:	add	s0,s0,s1
0x0000000000014cea in _malloc_trim_r ()
=> 0x14cea <_malloc_trim_r+50>:	srli	s0,s0,0xc
0x0000000000014cec in _malloc_trim_r ()
=> 0x14cec <_malloc_trim_r+52>:	addi	s0,s0,-1
0x0000000000014cee in _malloc_trim_r ()
=> 0x14cee <_malloc_trim_r+54>:	slli	s0,s0,0xc
0x0000000000014cf0 in _malloc_trim_r ()
=> 0x14cf0 <_malloc_trim_r+56>:	blt	s0,a5,0x14d06 <_malloc_trim_r+78>
0x0000000000014cf4 in _malloc_trim_r ()
=> 0x14cf4 <_malloc_trim_r+60>:	li	a1,0
0x0000000000014cf6 in _malloc_trim_r ()
=> 0x14cf6 <_malloc_trim_r+62>:	mv	a0,s2
0x0000000000014cf8 in _malloc_trim_r ()
=> 0x14cf8 <_malloc_trim_r+64>:	jal	ra,0x1218e <_sbrk_r>
0x000000000001218e in _sbrk_r ()
=> 0x1218e <_sbrk_r>:	addi	sp,sp,-32
0x0000000000012190 in _sbrk_r ()
=> 0x12190 <_sbrk_r+2>:	sd	s0,16(sp)
0x0000000000012192 in _sbrk_r ()
=> 0x12192 <_sbrk_r+4>:	sd	s1,8(sp)
0x0000000000012194 in _sbrk_r ()
=> 0x12194 <_sbrk_r+6>:	mv	s0,a0
0x0000000000012196 in _sbrk_r ()
=> 0x12196 <_sbrk_r+8>:	mv	a0,a1
0x0000000000012198 in _sbrk_r ()
=> 0x12198 <_sbrk_r+10>:	sd	ra,24(sp)
0x000000000001219a in _sbrk_r ()
=> 0x1219a <_sbrk_r+12>:	sw	zero,-1824(gp)
0x000000000001219e in _sbrk_r ()
=> 0x1219e <_sbrk_r+16>:	jal	ra,0x1ccd4 <_sbrk>
0x000000000001ccd4 in _sbrk ()
=> 0x1ccd4 <_sbrk>:	ld	a4,-1816(gp)
0x000000000001ccd8 in _sbrk ()
=> 0x1ccd8 <_sbrk+4>:	addi	sp,sp,-16
0x000000000001ccda in _sbrk ()
=> 0x1ccda <_sbrk+6>:	sd	ra,8(sp)
0x000000000001ccdc in _sbrk ()
=> 0x1ccdc <_sbrk+8>:	mv	a5,a0
0x000000000001ccde in _sbrk ()
=> 0x1ccde <_sbrk+10>:	bnez	a4,0x1ccf6 <_sbrk+34>
0x000000000001ccf6 in _sbrk ()
=> 0x1ccf6 <_sbrk+34>:	li	a7,214
0x000000000001ccfa in _sbrk ()
=> 0x1ccfa <_sbrk+38>:	add	a0,a5,a4
0x000000000001ccfe in _sbrk ()
=> 0x1ccfe <_sbrk+42>:	ecall
0x000000000001cd02 in _sbrk ()
=> 0x1cd02 <_sbrk+46>:	ld	a4,-1816(gp)
0x000000000001cd06 in _sbrk ()
=> 0x1cd06 <_sbrk+50>:	add	a5,a5,a4
0x000000000001cd08 in _sbrk ()
=> 0x1cd08 <_sbrk+52>:	bne	a0,a5,0x1cd18 <_sbrk+68>
0x000000000001cd0c in _sbrk ()
=> 0x1cd0c <_sbrk+56>:	ld	ra,8(sp)
0x000000000001cd0e in _sbrk ()
=> 0x1cd0e <_sbrk+58>:	sd	a0,-1816(gp)
0x000000000001cd12 in _sbrk ()
=> 0x1cd12 <_sbrk+62>:	mv	a0,a4
0x000000000001cd14 in _sbrk ()
=> 0x1cd14 <_sbrk+64>:	addi	sp,sp,16
0x000000000001cd16 in _sbrk ()
=> 0x1cd16 <_sbrk+66>:	ret
0x00000000000121a2 in _sbrk_r ()
=> 0x121a2 <_sbrk_r+20>:	li	a5,-1
0x00000000000121a4 in _sbrk_r ()
=> 0x121a4 <_sbrk_r+22>:	beq	a0,a5,0x121b2 <_sbrk_r+36>
0x00000000000121a8 in _sbrk_r ()
=> 0x121a8 <_sbrk_r+26>:	ld	ra,24(sp)
0x00000000000121aa in _sbrk_r ()
=> 0x121aa <_sbrk_r+28>:	ld	s0,16(sp)
0x00000000000121ac in _sbrk_r ()
=> 0x121ac <_sbrk_r+30>:	ld	s1,8(sp)
0x00000000000121ae in _sbrk_r ()
=> 0x121ae <_sbrk_r+32>:	addi	sp,sp,32
0x00000000000121b0 in _sbrk_r ()
=> 0x121b0 <_sbrk_r+34>:	ret
0x0000000000014cfc in _malloc_trim_r ()
=> 0x14cfc <_malloc_trim_r+68>:	ld	a5,16(s3)
0x0000000000014d00 in _malloc_trim_r ()
=> 0x14d00 <_malloc_trim_r+72>:	add	a5,a5,s1
0x0000000000014d02 in _malloc_trim_r ()
=> 0x14d02 <_malloc_trim_r+74>:	beq	a0,a5,0x14d1e <_malloc_trim_r+102>
0x0000000000014d1e in _malloc_trim_r ()
=> 0x14d1e <_malloc_trim_r+102>:	neg	a1,s0
0x0000000000014d22 in _malloc_trim_r ()
=> 0x14d22 <_malloc_trim_r+106>:	mv	a0,s2
0x0000000000014d24 in _malloc_trim_r ()
=> 0x14d24 <_malloc_trim_r+108>:	jal	ra,0x1218e <_sbrk_r>
0x000000000001218e in _sbrk_r ()
=> 0x1218e <_sbrk_r>:	addi	sp,sp,-32
0x0000000000012190 in _sbrk_r ()
=> 0x12190 <_sbrk_r+2>:	sd	s0,16(sp)
0x0000000000012192 in _sbrk_r ()
=> 0x12192 <_sbrk_r+4>:	sd	s1,8(sp)
0x0000000000012194 in _sbrk_r ()
=> 0x12194 <_sbrk_r+6>:	mv	s0,a0
0x0000000000012196 in _sbrk_r ()
=> 0x12196 <_sbrk_r+8>:	mv	a0,a1
0x0000000000012198 in _sbrk_r ()
=> 0x12198 <_sbrk_r+10>:	sd	ra,24(sp)
0x000000000001219a in _sbrk_r ()
=> 0x1219a <_sbrk_r+12>:	sw	zero,-1824(gp)
0x000000000001219e in _sbrk_r ()
=> 0x1219e <_sbrk_r+16>:	jal	ra,0x1ccd4 <_sbrk>
0x000000000001ccd4 in _sbrk ()
=> 0x1ccd4 <_sbrk>:	ld	a4,-1816(gp)
0x000000000001ccd8 in _sbrk ()
=> 0x1ccd8 <_sbrk+4>:	addi	sp,sp,-16
0x000000000001ccda in _sbrk ()
=> 0x1ccda <_sbrk+6>:	sd	ra,8(sp)
0x000000000001ccdc in _sbrk ()
=> 0x1ccdc <_sbrk+8>:	mv	a5,a0
0x000000000001ccde in _sbrk ()
=> 0x1ccde <_sbrk+10>:	bnez	a4,0x1ccf6 <_sbrk+34>
0x000000000001ccf6 in _sbrk ()
=> 0x1ccf6 <_sbrk+34>:	li	a7,214
0x000000000001ccfa in _sbrk ()
=> 0x1ccfa <_sbrk+38>:	add	a0,a5,a4
0x000000000001ccfe in _sbrk ()
=> 0x1ccfe <_sbrk+42>:	ecall
0x000000000001cd02 in _sbrk ()
=> 0x1cd02 <_sbrk+46>:	ld	a4,-1816(gp)
0x000000000001cd06 in _sbrk ()
=> 0x1cd06 <_sbrk+50>:	add	a5,a5,a4
0x000000000001cd08 in _sbrk ()
=> 0x1cd08 <_sbrk+52>:	bne	a0,a5,0x1cd18 <_sbrk+68>
0x000000000001cd0c in _sbrk ()
=> 0x1cd0c <_sbrk+56>:	ld	ra,8(sp)
0x000000000001cd0e in _sbrk ()
=> 0x1cd0e <_sbrk+58>:	sd	a0,-1816(gp)
0x000000000001cd12 in _sbrk ()
=> 0x1cd12 <_sbrk+62>:	mv	a0,a4
0x000000000001cd14 in _sbrk ()
=> 0x1cd14 <_sbrk+64>:	addi	sp,sp,16
0x000000000001cd16 in _sbrk ()
=> 0x1cd16 <_sbrk+66>:	ret
0x00000000000121a2 in _sbrk_r ()
=> 0x121a2 <_sbrk_r+20>:	li	a5,-1
0x00000000000121a4 in _sbrk_r ()
=> 0x121a4 <_sbrk_r+22>:	beq	a0,a5,0x121b2 <_sbrk_r+36>
0x00000000000121a8 in _sbrk_r ()
=> 0x121a8 <_sbrk_r+26>:	ld	ra,24(sp)
0x00000000000121aa in _sbrk_r ()
=> 0x121aa <_sbrk_r+28>:	ld	s0,16(sp)
0x00000000000121ac in _sbrk_r ()
=> 0x121ac <_sbrk_r+30>:	ld	s1,8(sp)
0x00000000000121ae in _sbrk_r ()
=> 0x121ae <_sbrk_r+32>:	addi	sp,sp,32
0x00000000000121b0 in _sbrk_r ()
=> 0x121b0 <_sbrk_r+34>:	ret
0x0000000000014d28 in _malloc_trim_r ()
=> 0x14d28 <_malloc_trim_r+112>:	li	a5,-1
0x0000000000014d2a in _malloc_trim_r ()
=> 0x14d2a <_malloc_trim_r+114>:	beq	a0,a5,0x14d62 <_malloc_trim_r+170>
0x0000000000014d2e in _malloc_trim_r ()
=> 0x14d2e <_malloc_trim_r+118>:	lui	a5,0x23
0x0000000000014d32 in _malloc_trim_r ()
=> 0x14d32 <_malloc_trim_r+122>:	addi	a5,a5,672
0x0000000000014d36 in _malloc_trim_r ()
=> 0x14d36 <_malloc_trim_r+126>:	lw	a4,0(a5)
0x0000000000014d38 in _malloc_trim_r ()
=> 0x14d38 <_malloc_trim_r+128>:	ld	a3,16(s3)
0x0000000000014d3c in _malloc_trim_r ()
=> 0x14d3c <_malloc_trim_r+132>:	sub	s1,s1,s0
0x0000000000014d3e in _malloc_trim_r ()
=> 0x14d3e <_malloc_trim_r+134>:	ori	s1,s1,1
0x0000000000014d42 in _malloc_trim_r ()
=> 0x14d42 <_malloc_trim_r+138>:	subw	s0,a4,s0
0x0000000000014d46 in _malloc_trim_r ()
=> 0x14d46 <_malloc_trim_r+142>:	mv	a0,s2
0x0000000000014d48 in _malloc_trim_r ()
=> 0x14d48 <_malloc_trim_r+144>:	sd	s1,8(a3)
0x0000000000014d4a in _malloc_trim_r ()
=> 0x14d4a <_malloc_trim_r+146>:	sw	s0,0(a5)
0x0000000000014d4c in _malloc_trim_r ()
=> 0x14d4c <_malloc_trim_r+148>:	jal	ra,0x1213e <__malloc_unlock>
0x000000000001213e in __malloc_unlock ()
=> 0x1213e <__malloc_unlock>:	ret
0x0000000000014d50 in _malloc_trim_r ()
=> 0x14d50 <_malloc_trim_r+152>:	ld	ra,40(sp)
0x0000000000014d52 in _malloc_trim_r ()
=> 0x14d52 <_malloc_trim_r+154>:	ld	s0,32(sp)
0x0000000000014d54 in _malloc_trim_r ()
=> 0x14d54 <_malloc_trim_r+156>:	ld	s1,24(sp)
0x0000000000014d56 in _malloc_trim_r ()
=> 0x14d56 <_malloc_trim_r+158>:	ld	s2,16(sp)
0x0000000000014d58 in _malloc_trim_r ()
=> 0x14d58 <_malloc_trim_r+160>:	ld	s3,8(sp)
0x0000000000014d5a in _malloc_trim_r ()
=> 0x14d5a <_malloc_trim_r+162>:	ld	s4,0(sp)
0x0000000000014d5c in _malloc_trim_r ()
=> 0x14d5c <_malloc_trim_r+164>:	li	a0,1
0x0000000000014d5e in _malloc_trim_r ()
=> 0x14d5e <_malloc_trim_r+166>:	addi	sp,sp,48
0x0000000000014d60 in _malloc_trim_r ()
=> 0x14d60 <_malloc_trim_r+168>:	ret
0x0000000000014f34 in _free_r ()
=> 0x14f34 <_free_r+422>:	j	0x14e40 <_free_r+178>
0x0000000000014e40 in _free_r ()
=> 0x14e40 <_free_r+178>:	ld	s0,16(sp)
0x0000000000014e42 in _free_r ()
=> 0x14e42 <_free_r+180>:	ld	ra,24(sp)
0x0000000000014e44 in _free_r ()
=> 0x14e44 <_free_r+182>:	mv	a0,s1
0x0000000000014e46 in _free_r ()
=> 0x14e46 <_free_r+184>:	ld	s1,8(sp)
0x0000000000014e48 in _free_r ()
=> 0x14e48 <_free_r+186>:	addi	sp,sp,32
0x0000000000014e4a in _free_r ()
=> 0x14e4a <_free_r+188>:	j	0x1213e <__malloc_unlock>
0x000000000001213e in __malloc_unlock ()
=> 0x1213e <__malloc_unlock>:	ret
0x000000000001afba in _fclose_r.part.0 ()
=> 0x1afba <_fclose_r.part.0+126>:	j	0x1af68 <_fclose_r.part.0+44>
0x000000000001af68 in _fclose_r.part.0 ()
=> 0x1af68 <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001af6a in _fclose_r.part.0 ()
=> 0x1af6a <_fclose_r.part.0+46>:	beqz	a1,0x1af7e <_fclose_r.part.0+66>
0x000000000001af7e in _fclose_r.part.0 ()
=> 0x1af7e <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001af80 in _fclose_r.part.0 ()
=> 0x1af80 <_fclose_r.part.0+68>:	beqz	a1,0x1af8c <_fclose_r.part.0+80>
0x000000000001af8c in _fclose_r.part.0 ()
=> 0x1af8c <_fclose_r.part.0+80>:	jal	ra,0x14c60 <__sfp_lock_acquire>
0x0000000000014c60 in __sfp_lock_acquire ()
=> 0x14c60 <__sfp_lock_acquire>:	ret
0x000000000001af90 in _fclose_r.part.0 ()
=> 0x1af90 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001af94 in _fclose_r.part.0 ()
=> 0x1af94 <_fclose_r.part.0+88>:	jal	ra,0x14c62 <__sfp_lock_release>
0x0000000000014c62 in __sfp_lock_release ()
=> 0x14c62 <__sfp_lock_release>:	ret
0x000000000001af98 in _fclose_r.part.0 ()
=> 0x1af98 <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001af9a in _fclose_r.part.0 ()
=> 0x1af9a <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001af9c in _fclose_r.part.0 ()
=> 0x1af9c <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001af9e in _fclose_r.part.0 ()
=> 0x1af9e <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001afa0 in _fclose_r.part.0 ()
=> 0x1afa0 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001afa2 in _fclose_r.part.0 ()
=> 0x1afa2 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001afa4 in _fclose_r.part.0 ()
=> 0x1afa4 <_fclose_r.part.0+104>:	ret
0x00000000000150bc in _fwalk_reent ()
=> 0x150bc <_fwalk_reent+90>:	or	s6,a0,s6
0x00000000000150c0 in _fwalk_reent ()
=> 0x150c0 <_fwalk_reent+94>:	sext.w	s6,s6
0x00000000000150c2 in _fwalk_reent ()
=> 0x150c2 <_fwalk_reent+96>:	addi	s0,s0,176
0x00000000000150c6 in _fwalk_reent ()
=> 0x150c6 <_fwalk_reent+100>:	bne	s1,s0,0x150a6 <_fwalk_reent+68>
0x00000000000150a6 in _fwalk_reent ()
=> 0x150a6 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x00000000000150aa in _fwalk_reent ()
=> 0x150aa <_fwalk_reent+72>:	bgeu	s7,a5,0x150c2 <_fwalk_reent+96>
0x00000000000150ae in _fwalk_reent ()
=> 0x150ae <_fwalk_reent+76>:	lh	a5,18(s0)
0x00000000000150b2 in _fwalk_reent ()
=> 0x150b2 <_fwalk_reent+80>:	mv	a1,s0
0x00000000000150b4 in _fwalk_reent ()
=> 0x150b4 <_fwalk_reent+82>:	mv	a0,s8
0x00000000000150b6 in _fwalk_reent ()
=> 0x150b6 <_fwalk_reent+84>:	beq	a5,s3,0x150c2 <_fwalk_reent+96>
0x00000000000150ba in _fwalk_reent ()
=> 0x150ba <_fwalk_reent+88>:	jalr	s4
0x000000000001afbc in _fclose_r ()
=> 0x1afbc <_fclose_r>:	beqz	a1,0x1aff6 <_fclose_r+58>
0x000000000001afbe in _fclose_r ()
=> 0x1afbe <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001afc0 in _fclose_r ()
=> 0x1afc0 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001afc2 in _fclose_r ()
=> 0x1afc2 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001afc4 in _fclose_r ()
=> 0x1afc4 <_fclose_r+8>:	mv	s0,a0
0x000000000001afc6 in _fclose_r ()
=> 0x1afc6 <_fclose_r+10>:	beqz	a0,0x1afcc <_fclose_r+16>
0x000000000001afc8 in _fclose_r ()
=> 0x1afc8 <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001afca in _fclose_r ()
=> 0x1afca <_fclose_r+14>:	beqz	a5,0x1afe6 <_fclose_r+42>
0x000000000001afcc in _fclose_r ()
=> 0x1afcc <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001afd0 in _fclose_r ()
=> 0x1afd0 <_fclose_r+20>:	bnez	a5,0x1afdc <_fclose_r+32>
0x000000000001afdc in _fclose_r ()
=> 0x1afdc <_fclose_r+32>:	mv	a0,s0
0x000000000001afde in _fclose_r ()
=> 0x1afde <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001afe0 in _fclose_r ()
=> 0x1afe0 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001afe2 in _fclose_r ()
=> 0x1afe2 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001afe4 in _fclose_r ()
=> 0x1afe4 <_fclose_r+40>:	j	0x1af3c <_fclose_r.part.0>
0x000000000001af3c in _fclose_r.part.0 ()
=> 0x1af3c <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001af3e in _fclose_r.part.0 ()
=> 0x1af3e <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001af40 in _fclose_r.part.0 ()
=> 0x1af40 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001af42 in _fclose_r.part.0 ()
=> 0x1af42 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001af44 in _fclose_r.part.0 ()
=> 0x1af44 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001af46 in _fclose_r.part.0 ()
=> 0x1af46 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001af48 in _fclose_r.part.0 ()
=> 0x1af48 <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001af4a in _fclose_r.part.0 ()
=> 0x1af4a <_fclose_r.part.0+14>:	jal	ra,0x147ea <__sflush_r>
0x00000000000147ea in __sflush_r ()
=> 0x147ea <__sflush_r>:	lh	a5,16(a1)
0x00000000000147ee in __sflush_r ()
=> 0x147ee <__sflush_r+4>:	addi	sp,sp,-48
0x00000000000147f0 in __sflush_r ()
=> 0x147f0 <__sflush_r+6>:	sd	s0,32(sp)
0x00000000000147f2 in __sflush_r ()
=> 0x147f2 <__sflush_r+8>:	sd	s3,8(sp)
0x00000000000147f4 in __sflush_r ()
=> 0x147f4 <__sflush_r+10>:	sd	ra,40(sp)
0x00000000000147f6 in __sflush_r ()
=> 0x147f6 <__sflush_r+12>:	sd	s1,24(sp)
0x00000000000147f8 in __sflush_r ()
=> 0x147f8 <__sflush_r+14>:	sd	s2,16(sp)
0x00000000000147fa in __sflush_r ()
=> 0x147fa <__sflush_r+16>:	andi	a3,a5,8
0x00000000000147fe in __sflush_r ()
=> 0x147fe <__sflush_r+20>:	mv	s0,a1
0x0000000000014800 in __sflush_r ()
=> 0x14800 <__sflush_r+22>:	mv	s3,a0
0x0000000000014802 in __sflush_r ()
=> 0x14802 <__sflush_r+24>:	bnez	a3,0x148b6 <__sflush_r+204>
0x0000000000014804 in __sflush_r ()
=> 0x14804 <__sflush_r+26>:	lui	a4,0x1
0x0000000000014806 in __sflush_r ()
=> 0x14806 <__sflush_r+28>:	addi	a4,a4,-2048
0x000000000001480a in __sflush_r ()
=> 0x1480a <__sflush_r+32>:	lw	a3,8(a1)
0x000000000001480c in __sflush_r ()
=> 0x1480c <__sflush_r+34>:	or	a5,a5,a4
0x000000000001480e in __sflush_r ()
=> 0x1480e <__sflush_r+36>:	sh	a5,16(a1)
0x0000000000014812 in __sflush_r ()
=> 0x14812 <__sflush_r+40>:	blez	a3,0x14912 <__sflush_r+296>
0x0000000000014912 in __sflush_r ()
=> 0x14912 <__sflush_r+296>:	lw	a4,112(a1)
0x0000000000014914 in __sflush_r ()
=> 0x14914 <__sflush_r+298>:	bgtz	a4,0x14816 <__sflush_r+44>
0x0000000000014918 in __sflush_r ()
=> 0x14918 <__sflush_r+302>:	j	0x148a6 <__sflush_r+188>
0x00000000000148a6 in __sflush_r ()
=> 0x148a6 <__sflush_r+188>:	li	a0,0
0x00000000000148a8 in __sflush_r ()
=> 0x148a8 <__sflush_r+190>:	ld	ra,40(sp)
0x00000000000148aa in __sflush_r ()
=> 0x148aa <__sflush_r+192>:	ld	s0,32(sp)
0x00000000000148ac in __sflush_r ()
=> 0x148ac <__sflush_r+194>:	ld	s1,24(sp)
0x00000000000148ae in __sflush_r ()
=> 0x148ae <__sflush_r+196>:	ld	s2,16(sp)
0x00000000000148b0 in __sflush_r ()
=> 0x148b0 <__sflush_r+198>:	ld	s3,8(sp)
0x00000000000148b2 in __sflush_r ()
=> 0x148b2 <__sflush_r+200>:	addi	sp,sp,48
0x00000000000148b4 in __sflush_r ()
=> 0x148b4 <__sflush_r+202>:	ret
0x000000000001af4e in _fclose_r.part.0 ()
=> 0x1af4e <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001af50 in _fclose_r.part.0 ()
=> 0x1af50 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001af52 in _fclose_r.part.0 ()
=> 0x1af52 <_fclose_r.part.0+22>:	beqz	a5,0x1af5e <_fclose_r.part.0+34>
0x000000000001af54 in _fclose_r.part.0 ()
=> 0x1af54 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001af56 in _fclose_r.part.0 ()
=> 0x1af56 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001af58 in _fclose_r.part.0 ()
=> 0x1af58 <_fclose_r.part.0+28>:	jalr	a5
0x000000000001848a in __sclose ()
=> 0x1848a <__sclose>:	lh	a1,18(a1)
0x000000000001848e in __sclose ()
=> 0x1848e <__sclose+4>:	j	0x1af00 <_close_r>
0x000000000001af00 in _close_r ()
=> 0x1af00 <_close_r>:	addi	sp,sp,-32
0x000000000001af02 in _close_r ()
=> 0x1af02 <_close_r+2>:	sd	s0,16(sp)
0x000000000001af04 in _close_r ()
=> 0x1af04 <_close_r+4>:	sd	s1,8(sp)
0x000000000001af06 in _close_r ()
=> 0x1af06 <_close_r+6>:	mv	s0,a0
0x000000000001af08 in _close_r ()
=> 0x1af08 <_close_r+8>:	mv	a0,a1
0x000000000001af0a in _close_r ()
=> 0x1af0a <_close_r+10>:	sd	ra,24(sp)
0x000000000001af0c in _close_r ()
=> 0x1af0c <_close_r+12>:	sw	zero,-1824(gp)
0x000000000001af10 in _close_r ()
=> 0x1af10 <_close_r+16>:	jal	ra,0x1cbb0 <_close>
0x000000000001cbb0 in _close ()
=> 0x1cbb0 <_close>:	addi	sp,sp,-16
0x000000000001cbb2 in _close ()
=> 0x1cbb2 <_close+2>:	sd	ra,8(sp)
0x000000000001cbb4 in _close ()
=> 0x1cbb4 <_close+4>:	sd	s0,0(sp)
0x000000000001cbb6 in _close ()
=> 0x1cbb6 <_close+6>:	li	a7,57
0x000000000001cbba in _close ()
=> 0x1cbba <_close+10>:	ecall
0x000000000001cbbe in _close ()
=> 0x1cbbe <_close+14>:	mv	s0,a0
0x000000000001cbc0 in _close ()
=> 0x1cbc0 <_close+16>:	bltz	a0,0x1cbce <_close+30>
0x000000000001cbc4 in _close ()
=> 0x1cbc4 <_close+20>:	sext.w	a0,a0
0x000000000001cbc6 in _close ()
=> 0x1cbc6 <_close+22>:	ld	ra,8(sp)
0x000000000001cbc8 in _close ()
=> 0x1cbc8 <_close+24>:	ld	s0,0(sp)
0x000000000001cbca in _close ()
=> 0x1cbca <_close+26>:	addi	sp,sp,16
0x000000000001cbcc in _close ()
=> 0x1cbcc <_close+28>:	ret
0x000000000001af14 in _close_r ()
=> 0x1af14 <_close_r+20>:	li	a5,-1
0x000000000001af16 in _close_r ()
=> 0x1af16 <_close_r+22>:	beq	a0,a5,0x1af24 <_close_r+36>
0x000000000001af1a in _close_r ()
=> 0x1af1a <_close_r+26>:	ld	ra,24(sp)
0x000000000001af1c in _close_r ()
=> 0x1af1c <_close_r+28>:	ld	s0,16(sp)
0x000000000001af1e in _close_r ()
=> 0x1af1e <_close_r+30>:	ld	s1,8(sp)
0x000000000001af20 in _close_r ()
=> 0x1af20 <_close_r+32>:	addi	sp,sp,32
0x000000000001af22 in _close_r ()
=> 0x1af22 <_close_r+34>:	ret
0x000000000001af5a in _fclose_r.part.0 ()
=> 0x1af5a <_fclose_r.part.0+30>:	bltz	a0,0x1afa6 <_fclose_r.part.0+106>
0x000000000001af5e in _fclose_r.part.0 ()
=> 0x1af5e <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001af62 in _fclose_r.part.0 ()
=> 0x1af62 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001af66 in _fclose_r.part.0 ()
=> 0x1af66 <_fclose_r.part.0+42>:	bnez	a5,0x1afb2 <_fclose_r.part.0+118>
0x000000000001af68 in _fclose_r.part.0 ()
=> 0x1af68 <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001af6a in _fclose_r.part.0 ()
=> 0x1af6a <_fclose_r.part.0+46>:	beqz	a1,0x1af7e <_fclose_r.part.0+66>
0x000000000001af7e in _fclose_r.part.0 ()
=> 0x1af7e <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001af80 in _fclose_r.part.0 ()
=> 0x1af80 <_fclose_r.part.0+68>:	beqz	a1,0x1af8c <_fclose_r.part.0+80>
0x000000000001af8c in _fclose_r.part.0 ()
=> 0x1af8c <_fclose_r.part.0+80>:	jal	ra,0x14c60 <__sfp_lock_acquire>
0x0000000000014c60 in __sfp_lock_acquire ()
=> 0x14c60 <__sfp_lock_acquire>:	ret
0x000000000001af90 in _fclose_r.part.0 ()
=> 0x1af90 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001af94 in _fclose_r.part.0 ()
=> 0x1af94 <_fclose_r.part.0+88>:	jal	ra,0x14c62 <__sfp_lock_release>
0x0000000000014c62 in __sfp_lock_release ()
=> 0x14c62 <__sfp_lock_release>:	ret
0x000000000001af98 in _fclose_r.part.0 ()
=> 0x1af98 <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001af9a in _fclose_r.part.0 ()
=> 0x1af9a <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001af9c in _fclose_r.part.0 ()
=> 0x1af9c <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001af9e in _fclose_r.part.0 ()
=> 0x1af9e <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001afa0 in _fclose_r.part.0 ()
=> 0x1afa0 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001afa2 in _fclose_r.part.0 ()
=> 0x1afa2 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001afa4 in _fclose_r.part.0 ()
=> 0x1afa4 <_fclose_r.part.0+104>:	ret
0x00000000000150bc in _fwalk_reent ()
=> 0x150bc <_fwalk_reent+90>:	or	s6,a0,s6
0x00000000000150c0 in _fwalk_reent ()
=> 0x150c0 <_fwalk_reent+94>:	sext.w	s6,s6
0x00000000000150c2 in _fwalk_reent ()
=> 0x150c2 <_fwalk_reent+96>:	addi	s0,s0,176
0x00000000000150c6 in _fwalk_reent ()
=> 0x150c6 <_fwalk_reent+100>:	bne	s1,s0,0x150a6 <_fwalk_reent+68>
0x00000000000150ca in _fwalk_reent ()
=> 0x150ca <_fwalk_reent+104>:	ld	s2,0(s2)
0x00000000000150ce in _fwalk_reent ()
=> 0x150ce <_fwalk_reent+108>:	bnez	s2,0x1508a <_fwalk_reent+40>
0x00000000000150d2 in _fwalk_reent ()
=> 0x150d2 <_fwalk_reent+112>:	ld	ra,72(sp)
0x00000000000150d4 in _fwalk_reent ()
=> 0x150d4 <_fwalk_reent+114>:	ld	s0,64(sp)
0x00000000000150d6 in _fwalk_reent ()
=> 0x150d6 <_fwalk_reent+116>:	ld	s1,56(sp)
0x00000000000150d8 in _fwalk_reent ()
=> 0x150d8 <_fwalk_reent+118>:	ld	s2,48(sp)
0x00000000000150da in _fwalk_reent ()
=> 0x150da <_fwalk_reent+120>:	ld	s3,40(sp)
0x00000000000150dc in _fwalk_reent ()
=> 0x150dc <_fwalk_reent+122>:	ld	s4,32(sp)
0x00000000000150de in _fwalk_reent ()
=> 0x150de <_fwalk_reent+124>:	ld	s5,24(sp)
0x00000000000150e0 in _fwalk_reent ()
=> 0x150e0 <_fwalk_reent+126>:	ld	s7,8(sp)
0x00000000000150e2 in _fwalk_reent ()
=> 0x150e2 <_fwalk_reent+128>:	ld	s8,0(sp)
0x00000000000150e4 in _fwalk_reent ()
=> 0x150e4 <_fwalk_reent+130>:	mv	a0,s6
0x00000000000150e6 in _fwalk_reent ()
=> 0x150e6 <_fwalk_reent+132>:	ld	s6,16(sp)
0x00000000000150e8 in _fwalk_reent ()
=> 0x150e8 <_fwalk_reent+134>:	addi	sp,sp,80
0x00000000000150ea in _fwalk_reent ()
=> 0x150ea <_fwalk_reent+136>:	ret
0x0000000000011820 in exit ()
=> 0x11820 <exit+24>:	mv	a0,s0
0x0000000000011822 in exit ()
=> 0x11822 <exit+26>:	jal	ra,0x1cbdc <_exit>
0x000000000001cbdc in _exit ()
=> 0x1cbdc <_exit>:	li	a7,93
0x000000000001cbe0 in _exit ()
=> 0x1cbe0 <_exit+4>:	ecall
[Inferior 1 (process 790) exited normally]
script_remote.gdb:25: Error in sourced command file:
No registers.
