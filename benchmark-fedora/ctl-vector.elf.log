
Temporary breakpoint 1, start_trigger () at ../config/riscv64/boards/generic/boardsupport.c:37
37	}
=> 0x102d4 <start_trigger+16>:	sd	ra,8(sp)
0x00000000000102d8	37	}
=> 0x102d8 <start_trigger+20>:	sd	s0,0(sp)
0x00000000000102dc	37	}
=> 0x102dc <start_trigger+24>:	addi	s0,sp,16
0x00000000000102e0	37	}
=> 0x102e0 <start_trigger+28>:	ld	s0,0(sp)
0x00000000000102e4 in start_trigger () at ../config/riscv64/boards/generic/boardsupport.c:37
37	}
=> 0x102e4 <start_trigger+32>:	ld	ra,8(sp)
0x00000000000102e8	37	}
=> 0x102e8 <start_trigger+36>:	addi	sp,sp,16
0x00000000000102ec	37	}
=> 0x102ec <start_trigger+40>:	ld	ra,0(t6)
0x00000000000102f0	37	}
=> 0x102f0 <start_trigger+44>:	addi	t6,t6,16
0x00000000000102f4	37	}
=> 0x102f4 <start_trigger+48>:	ret
main (argc=1, argv=0x3ffffffb68) at main.c:54
54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10220 <main+144>:	ld	a0,-88(s0)
0x0000000000010224	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10224 <main+148>:	sw	a0,-36(s0)
0x0000000000010228	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10228 <main+152>:	j	0x1022c <main+156>
0x000000000001022c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1022c <main+156>:	lw	a0,-36(s0)
0x0000000000010230	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10230 <main+160>:	li	a1,0
0x0000000000010234	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10234 <main+164>:	blt	a1,a0,0x10260 <main+208>
0x0000000000010238	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10238 <main+168>:	j	0x1023c <main+172>
56	      initialise_benchmark ();
=> 0x1023c <main+172>:	jal	ra,0x11c08 <initialise_benchmark>
initialise_benchmark () at ctl.c:179
179	void initialise_benchmark() {
=> 0x11c08 <initialise_benchmark>:	addi	t6,t6,-16
0x0000000000011c0c	179	void initialise_benchmark() {
=> 0x11c0c <initialise_benchmark+4>:	sd	ra,0(t6)
0x0000000000011c10	179	void initialise_benchmark() {
=> 0x11c10 <initialise_benchmark+8>:	st	zero,0(t6)
0x0000000000011c14	179	void initialise_benchmark() {
=> 0x11c14 <initialise_benchmark+12>:	addi	sp,sp,-16
180	  init = 1;
=> 0x11c18 <initialise_benchmark+16>:	sd	ra,8(sp)
0x0000000000011c1c	180	  init = 1;
=> 0x11c1c <initialise_benchmark+20>:	sd	s0,0(sp)
0x0000000000011c20	180	  init = 1;
=> 0x11c20 <initialise_benchmark+24>:	addi	s0,sp,16
0x0000000000011c24	180	  init = 1;
=> 0x11c24 <initialise_benchmark+28>:	li	a1,1
0x0000000000011c28	180	  init = 1;
=> 0x11c28 <initialise_benchmark+32>:	sw	a1,-1916(gp)
181	  lim = 100;
=> 0x11c2c <initialise_benchmark+36>:	li	a1,100
0x0000000000011c30	181	  lim = 100;
=> 0x11c30 <initialise_benchmark+40>:	sw	a1,-1912(gp)
182	  fact = 11;
=> 0x11c34 <initialise_benchmark+44>:	li	a1,11
0x0000000000011c38	182	  fact = 11;
=> 0x11c38 <initialise_benchmark+48>:	sw	a1,-1908(gp)
183	  begin = 4;
=> 0x11c3c <initialise_benchmark+52>:	li	a1,4
0x0000000000011c40	183	  begin = 4;
=> 0x11c40 <initialise_benchmark+56>:	sw	a1,-1904(gp)
184	  end = 50;
=> 0x11c44 <initialise_benchmark+60>:	li	a1,50
0x0000000000011c48	184	  end = 50;
=> 0x11c48 <initialise_benchmark+64>:	sw	a1,-1900(gp)
185	  end2 = 8;
=> 0x11c4c <initialise_benchmark+68>:	li	a1,8
0x0000000000011c50	185	  end2 = 8;
=> 0x11c50 <initialise_benchmark+72>:	sw	a1,-1896(gp)
186	  init_heap ();
=> 0x11c54 <initialise_benchmark+76>:	jal	ra,0x11ce4 <init_heap>
init_heap () at ctl.c:46
46	{
=> 0x11ce4 <init_heap>:	addi	t6,t6,-16
0x0000000000011ce8	46	{
=> 0x11ce8 <init_heap+4>:	sd	ra,0(t6)
0x0000000000011cec	46	{
=> 0x11cec <init_heap+8>:	st	zero,0(t6)
0x0000000000011cf0	46	{
=> 0x11cf0 <init_heap+12>:	addi	sp,sp,-16
47	    heap_ptr = (void *) heap;
=> 0x11cf4 <init_heap+16>:	sd	ra,8(sp)
0x0000000000011cf8	47	    heap_ptr = (void *) heap;
=> 0x11cf8 <init_heap+20>:	sd	s0,0(sp)
0x0000000000011cfc	47	    heap_ptr = (void *) heap;
=> 0x11cfc <init_heap+24>:	addi	s0,sp,16
0x0000000000011d00	47	    heap_ptr = (void *) heap;
=> 0x11d00 <init_heap+28>:	lui	a0,0x20
0x0000000000011d04	47	    heap_ptr = (void *) heap;
=> 0x11d04 <init_heap+32>:	addi	a0,a0,568
0x0000000000011d08	47	    heap_ptr = (void *) heap;
=> 0x11d08 <init_heap+36>:	sd	a0,-1888(gp)
48	    heap_end = heap_ptr + HEAP_SIZE;
=> 0x11d0c <init_heap+40>:	ld	a0,-1888(gp)
0x0000000000011d10	48	    heap_end = heap_ptr + HEAP_SIZE;
=> 0x11d10 <init_heap+44>:	lui	a1,0x2
0x0000000000011d14	48	    heap_end = heap_ptr + HEAP_SIZE;
=> 0x11d14 <init_heap+48>:	add	a0,a0,a1
0x0000000000011d18	48	    heap_end = heap_ptr + HEAP_SIZE;
=> 0x11d18 <init_heap+52>:	sd	a0,-1880(gp)
49	}
=> 0x11d1c <init_heap+56>:	ld	s0,0(sp)
0x0000000000011d20 in init_heap () at ctl.c:49
49	}
=> 0x11d20 <init_heap+60>:	ld	ra,8(sp)
0x0000000000011d24	49	}
=> 0x11d24 <init_heap+64>:	addi	sp,sp,16
0x0000000000011d28	49	}
=> 0x11d28 <init_heap+68>:	ld	ra,0(t6)
0x0000000000011d2c	49	}
=> 0x11d2c <init_heap+72>:	addi	t6,t6,16
0x0000000000011d30	49	}
=> 0x11d30 <init_heap+76>:	ret
initialise_benchmark () at ctl.c:187
187	}
=> 0x11c58 <initialise_benchmark+80>:	ld	s0,0(sp)
0x0000000000011c5c in initialise_benchmark () at ctl.c:187
187	}
=> 0x11c5c <initialise_benchmark+84>:	ld	ra,8(sp)
0x0000000000011c60	187	}
=> 0x11c60 <initialise_benchmark+88>:	addi	sp,sp,16
0x0000000000011c64	187	}
=> 0x11c64 <initialise_benchmark+92>:	ld	ra,0(t6)
0x0000000000011c68	187	}
=> 0x11c68 <initialise_benchmark+96>:	addi	t6,t6,16
0x0000000000011c6c	187	}
=> 0x11c6c <initialise_benchmark+100>:	ret
main (argc=1, argv=0x3ffffffb68) at main.c:57
57	      result = benchmark ();
=> 0x10240 <main+176>:	sd	a0,-120(s0)
0x0000000000010244	57	      result = benchmark ();
=> 0x10244 <main+180>:	jal	ra,0x11a70 <benchmark>
benchmark () at ctl.c:131
131	{
=> 0x11a70 <benchmark>:	addi	t6,t6,-16
0x0000000000011a74	131	{
=> 0x11a74 <benchmark+4>:	sd	ra,0(t6)
0x0000000000011a78	131	{
=> 0x11a78 <benchmark+8>:	st	zero,0(t6)
0x0000000000011a7c	131	{
=> 0x11a7c <benchmark+12>:	addi	sp,sp,-64
0x0000000000011a80	131	{
=> 0x11a80 <benchmark+16>:	sd	ra,56(sp)
0x0000000000011a84	131	{
=> 0x11a84 <benchmark+20>:	sd	s0,48(sp)
0x0000000000011a88	131	{
=> 0x11a88 <benchmark+24>:	addi	s0,sp,64
0x0000000000011a8c	131	{
=> 0x11a8c <benchmark+28>:	li	a0,0
135	  int cnt=0, i;
=> 0x11a90 <benchmark+32>:	sw	a0,-36(s0)
137	  v = CTL_INIT (int);
=> 0x11a94 <benchmark+36>:	jal	ra,0x10528 <ctl_intVectorInit>
ctl_intVectorInit () at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10528 <ctl_intVectorInit>:	addi	t6,t6,-16
0x000000000001052c	85	MAKE_VECTOR(int)
=> 0x1052c <ctl_intVectorInit+4>:	sd	ra,0(t6)
0x0000000000010530	85	MAKE_VECTOR(int)
=> 0x10530 <ctl_intVectorInit+8>:	st	zero,0(t6)
0x0000000000010534	85	MAKE_VECTOR(int)
=> 0x10534 <ctl_intVectorInit+12>:	addi	sp,sp,-16
0x0000000000010538	85	MAKE_VECTOR(int)
=> 0x10538 <ctl_intVectorInit+16>:	sd	ra,8(sp)
0x000000000001053c	85	MAKE_VECTOR(int)
=> 0x1053c <ctl_intVectorInit+20>:	sd	s0,0(sp)
0x0000000000010540	85	MAKE_VECTOR(int)
=> 0x10540 <ctl_intVectorInit+24>:	addi	s0,sp,16
0x0000000000010544	85	MAKE_VECTOR(int)
=> 0x10544 <ctl_intVectorInit+28>:	li	a0,100
85	MAKE_VECTOR(int)
=> 0x10548 <ctl_intVectorInit+32>:	jal	ra,0x103a8 <ctl_intVectorInitSize>
ctl_intVectorInitSize (BlockSize=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x103a8 <ctl_intVectorInitSize>:	addi	t6,t6,-16
0x00000000000103ac	85	MAKE_VECTOR(int)
=> 0x103ac <ctl_intVectorInitSize+4>:	sd	ra,0(t6)
0x00000000000103b0	85	MAKE_VECTOR(int)
=> 0x103b0 <ctl_intVectorInitSize+8>:	st	zero,0(t6)
0x00000000000103b4	85	MAKE_VECTOR(int)
=> 0x103b4 <ctl_intVectorInitSize+12>:	addi	sp,sp,-48
0x00000000000103b8	85	MAKE_VECTOR(int)
=> 0x103b8 <ctl_intVectorInitSize+16>:	sd	ra,40(sp)
0x00000000000103bc	85	MAKE_VECTOR(int)
=> 0x103bc <ctl_intVectorInitSize+20>:	sd	s0,32(sp)
0x00000000000103c0	85	MAKE_VECTOR(int)
=> 0x103c0 <ctl_intVectorInitSize+24>:	addi	s0,sp,48
0x00000000000103c4	85	MAKE_VECTOR(int)
=> 0x103c4 <ctl_intVectorInitSize+28>:	mv	a1,a0
0x00000000000103c8	85	MAKE_VECTOR(int)
=> 0x103c8 <ctl_intVectorInitSize+32>:	sw	a0,-28(s0)
0x00000000000103cc	85	MAKE_VECTOR(int)
=> 0x103cc <ctl_intVectorInitSize+36>:	li	a0,32
85	MAKE_VECTOR(int)
=> 0x103d0 <ctl_intVectorInitSize+40>:	sd	a1,-48(s0)
0x00000000000103d4	85	MAKE_VECTOR(int)
=> 0x103d4 <ctl_intVectorInitSize+44>:	jal	ra,0x10494 <malloc_beebs>
malloc_beebs (size=433791695712) at ctl.c:60
60	{
=> 0x10494 <malloc_beebs>:	addi	t6,t6,-16
0x0000000000010498	60	{
=> 0x10498 <malloc_beebs+4>:	sd	ra,0(t6)
0x000000000001049c	60	{
=> 0x1049c <malloc_beebs+8>:	st	zero,0(t6)
0x00000000000104a0	60	{
=> 0x104a0 <malloc_beebs+12>:	addi	sp,sp,-48
0x00000000000104a4	60	{
=> 0x104a4 <malloc_beebs+16>:	sd	ra,40(sp)
0x00000000000104a8	60	{
=> 0x104a8 <malloc_beebs+20>:	sd	s0,32(sp)
0x00000000000104ac	60	{
=> 0x104ac <malloc_beebs+24>:	addi	s0,sp,48
0x00000000000104b0	60	{
=> 0x104b0 <malloc_beebs+28>:	sd	a0,-32(s0)
61	    void *new_ptr = heap_ptr;
=> 0x104b4 <malloc_beebs+32>:	ld	a1,-1888(gp)
0x00000000000104b8	61	    void *new_ptr = heap_ptr;
=> 0x104b8 <malloc_beebs+36>:	sd	a1,-40(s0)
63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104bc <malloc_beebs+40>:	ld	a0,-1888(gp)
0x00000000000104c0	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c0 <malloc_beebs+44>:	ld	a1,-32(s0)
0x00000000000104c4	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c4 <malloc_beebs+48>:	add	a0,a0,a1
0x00000000000104c8	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c8 <malloc_beebs+52>:	ld	a1,-1880(gp)
0x00000000000104cc	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104cc <malloc_beebs+56>:	bltu	a1,a0,0x104e4 <malloc_beebs+80>
0x00000000000104d0	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d0 <malloc_beebs+60>:	j	0x104d4 <malloc_beebs+64>
0x00000000000104d4	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d4 <malloc_beebs+64>:	ld	a0,-32(s0)
0x00000000000104d8	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d8 <malloc_beebs+68>:	li	a1,0
0x00000000000104dc	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104dc <malloc_beebs+72>:	bne	a0,a1,0x104f0 <malloc_beebs+92>
67		    heap_ptr += size;
=> 0x104f0 <malloc_beebs+92>:	ld	a0,-32(s0)
0x00000000000104f4	67		    heap_ptr += size;
=> 0x104f4 <malloc_beebs+96>:	ld	a2,-1888(gp)
0x00000000000104f8	67		    heap_ptr += size;
=> 0x104f8 <malloc_beebs+100>:	add	a0,a2,a0
0x00000000000104fc	67		    heap_ptr += size;
=> 0x104fc <malloc_beebs+104>:	sd	a0,-1888(gp)
68		    return new_ptr;
=> 0x10500 <malloc_beebs+108>:	ld	a0,-40(s0)
0x0000000000010504	68		    return new_ptr;
=> 0x10504 <malloc_beebs+112>:	sd	a0,-24(s0)
0x0000000000010508	68		    return new_ptr;
=> 0x10508 <malloc_beebs+116>:	j	0x1050c <malloc_beebs+120>
70	}
=> 0x1050c <malloc_beebs+120>:	ld	a0,-24(s0)
0x0000000000010510	70	}
=> 0x10510 <malloc_beebs+124>:	ld	s0,32(sp)
0x0000000000010514 in malloc_beebs (size=433791695712) at ctl.c:70
70	}
=> 0x10514 <malloc_beebs+128>:	ld	ra,40(sp)
0x0000000000010518	70	}
=> 0x10518 <malloc_beebs+132>:	addi	sp,sp,48
0x000000000001051c	70	}
=> 0x1051c <malloc_beebs+136>:	ld	ra,0(t6)
0x0000000000010520	70	}
=> 0x10520 <malloc_beebs+140>:	addi	t6,t6,16
0x0000000000010524	70	}
=> 0x10524 <malloc_beebs+144>:	ret
0x00000000000103d8 in ctl_intVectorInitSize (BlockSize=100) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x103d8 <ctl_intVectorInitSize+48>:	sd	a0,-40(s0)
0x00000000000103dc	85	MAKE_VECTOR(int)
=> 0x103dc <ctl_intVectorInitSize+52>:	ld	a0,-40(s0)
0x00000000000103e0	85	MAKE_VECTOR(int)
=> 0x103e0 <ctl_intVectorInitSize+56>:	li	a1,0
0x00000000000103e4	85	MAKE_VECTOR(int)
=> 0x103e4 <ctl_intVectorInitSize+60>:	bne	a0,a1,0x103f8 <ctl_intVectorInitSize+80>
0x00000000000103f8	85	MAKE_VECTOR(int)
=> 0x103f8 <ctl_intVectorInitSize+80>:	lw	a0,-28(s0)
0x00000000000103fc	85	MAKE_VECTOR(int)
=> 0x103fc <ctl_intVectorInitSize+84>:	ld	a1,-40(s0)
0x0000000000010400	85	MAKE_VECTOR(int)
=> 0x10400 <ctl_intVectorInitSize+88>:	sd	a0,0(a1)
0x0000000000010404	85	MAKE_VECTOR(int)
=> 0x10404 <ctl_intVectorInitSize+92>:	ld	a0,-40(s0)
0x0000000000010408	85	MAKE_VECTOR(int)
=> 0x10408 <ctl_intVectorInitSize+96>:	ld	a0,0(a0)
0x000000000001040c	85	MAKE_VECTOR(int)
=> 0x1040c <ctl_intVectorInitSize+100>:	slli	a0,a0,0x2
0x0000000000010410	85	MAKE_VECTOR(int)
=> 0x10410 <ctl_intVectorInitSize+104>:	jal	ra,0x10494 <malloc_beebs>
malloc_beebs (size=433791695712) at ctl.c:60
60	{
=> 0x10494 <malloc_beebs>:	addi	t6,t6,-16
0x0000000000010498	60	{
=> 0x10498 <malloc_beebs+4>:	sd	ra,0(t6)
0x000000000001049c	60	{
=> 0x1049c <malloc_beebs+8>:	st	zero,0(t6)
0x00000000000104a0	60	{
=> 0x104a0 <malloc_beebs+12>:	addi	sp,sp,-48
0x00000000000104a4	60	{
=> 0x104a4 <malloc_beebs+16>:	sd	ra,40(sp)
0x00000000000104a8	60	{
=> 0x104a8 <malloc_beebs+20>:	sd	s0,32(sp)
0x00000000000104ac	60	{
=> 0x104ac <malloc_beebs+24>:	addi	s0,sp,48
0x00000000000104b0	60	{
=> 0x104b0 <malloc_beebs+28>:	sd	a0,-32(s0)
61	    void *new_ptr = heap_ptr;
=> 0x104b4 <malloc_beebs+32>:	ld	a1,-1888(gp)
0x00000000000104b8	61	    void *new_ptr = heap_ptr;
=> 0x104b8 <malloc_beebs+36>:	sd	a1,-40(s0)
63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104bc <malloc_beebs+40>:	ld	a0,-1888(gp)
0x00000000000104c0	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c0 <malloc_beebs+44>:	ld	a1,-32(s0)
0x00000000000104c4	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c4 <malloc_beebs+48>:	add	a0,a0,a1
0x00000000000104c8	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c8 <malloc_beebs+52>:	ld	a1,-1880(gp)
0x00000000000104cc	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104cc <malloc_beebs+56>:	bltu	a1,a0,0x104e4 <malloc_beebs+80>
0x00000000000104d0	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d0 <malloc_beebs+60>:	j	0x104d4 <malloc_beebs+64>
0x00000000000104d4	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d4 <malloc_beebs+64>:	ld	a0,-32(s0)
0x00000000000104d8	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d8 <malloc_beebs+68>:	li	a1,0
0x00000000000104dc	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104dc <malloc_beebs+72>:	bne	a0,a1,0x104f0 <malloc_beebs+92>
67		    heap_ptr += size;
=> 0x104f0 <malloc_beebs+92>:	ld	a0,-32(s0)
0x00000000000104f4	67		    heap_ptr += size;
=> 0x104f4 <malloc_beebs+96>:	ld	a2,-1888(gp)
0x00000000000104f8	67		    heap_ptr += size;
=> 0x104f8 <malloc_beebs+100>:	add	a0,a2,a0
0x00000000000104fc	67		    heap_ptr += size;
=> 0x104fc <malloc_beebs+104>:	sd	a0,-1888(gp)
68		    return new_ptr;
=> 0x10500 <malloc_beebs+108>:	ld	a0,-40(s0)
0x0000000000010504	68		    return new_ptr;
=> 0x10504 <malloc_beebs+112>:	sd	a0,-24(s0)
0x0000000000010508	68		    return new_ptr;
=> 0x10508 <malloc_beebs+116>:	j	0x1050c <malloc_beebs+120>
70	}
=> 0x1050c <malloc_beebs+120>:	ld	a0,-24(s0)
0x0000000000010510	70	}
=> 0x10510 <malloc_beebs+124>:	ld	s0,32(sp)
0x0000000000010514 in malloc_beebs (size=433791695712) at ctl.c:70
70	}
=> 0x10514 <malloc_beebs+128>:	ld	ra,40(sp)
0x0000000000010518	70	}
=> 0x10518 <malloc_beebs+132>:	addi	sp,sp,48
0x000000000001051c	70	}
=> 0x1051c <malloc_beebs+136>:	ld	ra,0(t6)
0x0000000000010520	70	}
=> 0x10520 <malloc_beebs+140>:	addi	t6,t6,16
0x0000000000010524	70	}
=> 0x10524 <malloc_beebs+144>:	ret
0x0000000000010414 in ctl_intVectorInitSize (BlockSize=100) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10414 <ctl_intVectorInitSize+108>:	ld	a1,-40(s0)
0x0000000000010418	85	MAKE_VECTOR(int)
=> 0x10418 <ctl_intVectorInitSize+112>:	sd	a0,8(a1)
0x000000000001041c	85	MAKE_VECTOR(int)
=> 0x1041c <ctl_intVectorInitSize+116>:	ld	a0,-40(s0)
0x0000000000010420	85	MAKE_VECTOR(int)
=> 0x10420 <ctl_intVectorInitSize+120>:	ld	a0,8(a0)
0x0000000000010424	85	MAKE_VECTOR(int)
=> 0x10424 <ctl_intVectorInitSize+124>:	li	a1,0
0x0000000000010428	85	MAKE_VECTOR(int)
=> 0x10428 <ctl_intVectorInitSize+128>:	bne	a0,a1,0x10454 <ctl_intVectorInitSize+172>
0x0000000000010454	85	MAKE_VECTOR(int)
=> 0x10454 <ctl_intVectorInitSize+172>:	ld	a0,-40(s0)
0x0000000000010458	85	MAKE_VECTOR(int)
=> 0x10458 <ctl_intVectorInitSize+176>:	ld	a1,0(a0)
0x000000000001045c	85	MAKE_VECTOR(int)
=> 0x1045c <ctl_intVectorInitSize+180>:	sd	a1,24(a0)
0x0000000000010460	85	MAKE_VECTOR(int)
=> 0x10460 <ctl_intVectorInitSize+184>:	ld	a0,-40(s0)
0x0000000000010464	85	MAKE_VECTOR(int)
=> 0x10464 <ctl_intVectorInitSize+188>:	li	a1,0
0x0000000000010468	85	MAKE_VECTOR(int)
=> 0x10468 <ctl_intVectorInitSize+192>:	sd	a1,16(a0)
0x000000000001046c	85	MAKE_VECTOR(int)
=> 0x1046c <ctl_intVectorInitSize+196>:	ld	a0,-40(s0)
0x0000000000010470	85	MAKE_VECTOR(int)
=> 0x10470 <ctl_intVectorInitSize+200>:	sd	a0,-24(s0)
0x0000000000010474	85	MAKE_VECTOR(int)
=> 0x10474 <ctl_intVectorInitSize+204>:	j	0x10478 <ctl_intVectorInitSize+208>
0x0000000000010478	85	MAKE_VECTOR(int)
=> 0x10478 <ctl_intVectorInitSize+208>:	ld	a0,-24(s0)
0x000000000001047c	85	MAKE_VECTOR(int)
=> 0x1047c <ctl_intVectorInitSize+212>:	ld	s0,32(sp)
0x0000000000010480 in ctl_intVectorInitSize (BlockSize=63) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10480 <ctl_intVectorInitSize+216>:	ld	ra,40(sp)
0x0000000000010484	85	MAKE_VECTOR(int)
=> 0x10484 <ctl_intVectorInitSize+220>:	addi	sp,sp,48
0x0000000000010488	85	MAKE_VECTOR(int)
=> 0x10488 <ctl_intVectorInitSize+224>:	ld	ra,0(t6)
0x000000000001048c	85	MAKE_VECTOR(int)
=> 0x1048c <ctl_intVectorInitSize+228>:	addi	t6,t6,16
0x0000000000010490	85	MAKE_VECTOR(int)
=> 0x10490 <ctl_intVectorInitSize+232>:	ret
0x000000000001054c in ctl_intVectorInit () at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x1054c <ctl_intVectorInit+36>:	ld	s0,0(sp)
0x0000000000010550 in ctl_intVectorInit () at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10550 <ctl_intVectorInit+40>:	ld	ra,8(sp)
0x0000000000010554	85	MAKE_VECTOR(int)
=> 0x10554 <ctl_intVectorInit+44>:	addi	sp,sp,16
0x0000000000010558	85	MAKE_VECTOR(int)
=> 0x10558 <ctl_intVectorInit+48>:	ld	ra,0(t6)
0x000000000001055c	85	MAKE_VECTOR(int)
=> 0x1055c <ctl_intVectorInit+52>:	addi	t6,t6,16
0x0000000000010560	85	MAKE_VECTOR(int)
=> 0x10560 <ctl_intVectorInit+56>:	ret
0x0000000000011a98 in benchmark () at ctl.c:137
137	  v = CTL_INIT (int);
=> 0x11a98 <benchmark+40>:	sd	a0,-24(s0)
139	  for (i = init; i <= lim; ++i)
=> 0x11a9c <benchmark+44>:	lw	a0,-1916(gp)
0x0000000000011aa0	139	  for (i = init; i <= lim; ++i)
=> 0x11aa0 <benchmark+48>:	sw	a0,-40(s0)
0x0000000000011aa4	139	  for (i = init; i <= lim; ++i)
=> 0x11aa4 <benchmark+52>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
0x0000000000011ab4	139	  for (i = init; i <= lim; ++i)
=> 0x11ab4 <benchmark+68>:	j	0x11ab8 <benchmark+72>
140	    CTL_PUSH (int, v, i * fact);
=> 0x11ab8 <benchmark+72>:	ld	a0,-24(s0)
0x0000000000011abc	140	    CTL_PUSH (int, v, i * fact);
=> 0x11abc <benchmark+76>:	lw	a1,-40(s0)
0x0000000000011ac0	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac0 <benchmark+80>:	lw	a2,-1908(gp)
0x0000000000011ac4	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac4 <benchmark+84>:	mulw	a1,a1,a2
0x0000000000011ac8	140	    CTL_PUSH (int, v, i * fact);
=> 0x11ac8 <benchmark+88>:	jal	ra,0x10700 <ctl_intVectorPush_Back>
ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10700 <ctl_intVectorPush_Back>:	addi	t6,t6,-16
0x0000000000010704	85	MAKE_VECTOR(int)
=> 0x10704 <ctl_intVectorPush_Back+4>:	sd	ra,0(t6)
0x0000000000010708	85	MAKE_VECTOR(int)
=> 0x10708 <ctl_intVectorPush_Back+8>:	st	zero,0(t6)
0x000000000001070c	85	MAKE_VECTOR(int)
=> 0x1070c <ctl_intVectorPush_Back+12>:	addi	sp,sp,-64
0x0000000000010710	85	MAKE_VECTOR(int)
=> 0x10710 <ctl_intVectorPush_Back+16>:	sd	ra,56(sp)
0x0000000000010714	85	MAKE_VECTOR(int)
=> 0x10714 <ctl_intVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000010718	85	MAKE_VECTOR(int)
=> 0x10718 <ctl_intVectorPush_Back+24>:	addi	s0,sp,64
0x000000000001071c	85	MAKE_VECTOR(int)
=> 0x1071c <ctl_intVectorPush_Back+28>:	mv	a2,a1
0x0000000000010720	85	MAKE_VECTOR(int)
=> 0x10720 <ctl_intVectorPush_Back+32>:	sd	a0,-32(s0)
0x0000000000010724	85	MAKE_VECTOR(int)
=> 0x10724 <ctl_intVectorPush_Back+36>:	sw	a1,-36(s0)
85	MAKE_VECTOR(int)
=> 0x10728 <ctl_intVectorPush_Back+40>:	ld	a0,-32(s0)
0x000000000001072c	85	MAKE_VECTOR(int)
=> 0x1072c <ctl_intVectorPush_Back+44>:	ld	a1,24(a0)
0x0000000000010730	85	MAKE_VECTOR(int)
=> 0x10730 <ctl_intVectorPush_Back+48>:	ld	a0,16(a0)
0x0000000000010734	85	MAKE_VECTOR(int)
=> 0x10734 <ctl_intVectorPush_Back+52>:	bltu	a0,a1,0x107f0 <ctl_intVectorPush_Back+240>
0x00000000000107f0	85	MAKE_VECTOR(int)
=> 0x107f0 <ctl_intVectorPush_Back+240>:	lw	a0,-36(s0)
0x00000000000107f4	85	MAKE_VECTOR(int)
=> 0x107f4 <ctl_intVectorPush_Back+244>:	ld	a1,-32(s0)
0x00000000000107f8	85	MAKE_VECTOR(int)
=> 0x107f8 <ctl_intVectorPush_Back+248>:	ld	a2,8(a1)
0x00000000000107fc	85	MAKE_VECTOR(int)
=> 0x107fc <ctl_intVectorPush_Back+252>:	ld	a1,16(a1)
0x0000000000010800	85	MAKE_VECTOR(int)
=> 0x10800 <ctl_intVectorPush_Back+256>:	slli	a1,a1,0x2
0x0000000000010804	85	MAKE_VECTOR(int)
=> 0x10804 <ctl_intVectorPush_Back+260>:	add	a1,a2,a1
0x0000000000010808	85	MAKE_VECTOR(int)
=> 0x10808 <ctl_intVectorPush_Back+264>:	sw	a0,0(a1)
0x000000000001080c	85	MAKE_VECTOR(int)
=> 0x1080c <ctl_intVectorPush_Back+268>:	ld	a0,-32(s0)
0x0000000000010810	85	MAKE_VECTOR(int)
=> 0x10810 <ctl_intVectorPush_Back+272>:	ld	a1,16(a0)
0x0000000000010814	85	MAKE_VECTOR(int)
=> 0x10814 <ctl_intVectorPush_Back+276>:	addi	a1,a1,1
0x0000000000010818	85	MAKE_VECTOR(int)
=> 0x10818 <ctl_intVectorPush_Back+280>:	sd	a1,16(a0)
0x000000000001081c	85	MAKE_VECTOR(int)
=> 0x1081c <ctl_intVectorPush_Back+284>:	li	a0,0
0x0000000000010820	85	MAKE_VECTOR(int)
=> 0x10820 <ctl_intVectorPush_Back+288>:	sw	a0,-20(s0)
0x0000000000010824	85	MAKE_VECTOR(int)
=> 0x10824 <ctl_intVectorPush_Back+292>:	j	0x10828 <ctl_intVectorPush_Back+296>
0x0000000000010828	85	MAKE_VECTOR(int)
=> 0x10828 <ctl_intVectorPush_Back+296>:	lw	a0,-20(s0)
0x000000000001082c	85	MAKE_VECTOR(int)
=> 0x1082c <ctl_intVectorPush_Back+300>:	ld	s0,48(sp)
0x0000000000010830 in ctl_intVectorPush_Back (s=0x3ffffffae0, push=0) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10830 <ctl_intVectorPush_Back+304>:	ld	ra,56(sp)
0x0000000000010834	85	MAKE_VECTOR(int)
=> 0x10834 <ctl_intVectorPush_Back+308>:	addi	sp,sp,64
0x0000000000010838	85	MAKE_VECTOR(int)
=> 0x10838 <ctl_intVectorPush_Back+312>:	ld	ra,0(t6)
0x000000000001083c	85	MAKE_VECTOR(int)
=> 0x1083c <ctl_intVectorPush_Back+316>:	addi	t6,t6,16
0x0000000000010840	85	MAKE_VECTOR(int)
=> 0x10840 <ctl_intVectorPush_Back+320>:	ret
0x0000000000011acc in benchmark () at ctl.c:140
140	    CTL_PUSH (int, v, i * fact);
=> 0x11acc <benchmark+92>:	j	0x11ad0 <benchmark+96>
139	  for (i = init; i <= lim; ++i)
=> 0x11ad0 <benchmark+96>:	lw	a0,-40(s0)
0x0000000000011ad4	139	  for (i = init; i <= lim; ++i)
=> 0x11ad4 <benchmark+100>:	addi	a0,a0,1
0x0000000000011ad8	139	  for (i = init; i <= lim; ++i)
=> 0x11ad8 <benchmark+104>:	sw	a0,-40(s0)
0x0000000000011adc	139	  for (i = init; i <= lim; ++i)
=> 0x11adc <benchmark+108>:	j	0x11aa8 <benchmark+56>
0x0000000000011aa8	139	  for (i = init; i <= lim; ++i)
=> 0x11aa8 <benchmark+56>:	lw	a0,-40(s0)
0x0000000000011aac	139	  for (i = init; i <= lim; ++i)
=> 0x11aac <benchmark+60>:	lw	a1,-1912(gp)
0x0000000000011ab0	139	  for (i = init; i <= lim; ++i)
=> 0x11ab0 <benchmark+64>:	blt	a1,a0,0x11ae0 <benchmark+112>
142	  CTL_DELETE (int, v, begin, end);
=> 0x11ae0 <benchmark+112>:	ld	a0,-24(s0)
0x0000000000011ae4	142	  CTL_DELETE (int, v, begin, end);
=> 0x11ae4 <benchmark+116>:	lw	a1,-1904(gp)
0x0000000000011ae8	142	  CTL_DELETE (int, v, begin, end);
=> 0x11ae8 <benchmark+120>:	lw	a2,-1900(gp)
0x0000000000011aec	142	  CTL_DELETE (int, v, begin, end);
=> 0x11aec <benchmark+124>:	jal	ra,0x10de4 <ctl_intVectorDelete>
ctl_intVectorDelete (s=0x3ffffffae0, begin=101, end=4194304) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10de4 <ctl_intVectorDelete>:	addi	t6,t6,-16
0x0000000000010de8	85	MAKE_VECTOR(int)
=> 0x10de8 <ctl_intVectorDelete+4>:	sd	ra,0(t6)
0x0000000000010dec	85	MAKE_VECTOR(int)
=> 0x10dec <ctl_intVectorDelete+8>:	st	zero,0(t6)
0x0000000000010df0	85	MAKE_VECTOR(int)
=> 0x10df0 <ctl_intVectorDelete+12>:	addi	sp,sp,-64
0x0000000000010df4	85	MAKE_VECTOR(int)
=> 0x10df4 <ctl_intVectorDelete+16>:	sd	ra,56(sp)
0x0000000000010df8	85	MAKE_VECTOR(int)
=> 0x10df8 <ctl_intVectorDelete+20>:	sd	s0,48(sp)
0x0000000000010dfc	85	MAKE_VECTOR(int)
=> 0x10dfc <ctl_intVectorDelete+24>:	addi	s0,sp,64
0x0000000000010e00	85	MAKE_VECTOR(int)
=> 0x10e00 <ctl_intVectorDelete+28>:	sd	a0,-32(s0)
0x0000000000010e04	85	MAKE_VECTOR(int)
=> 0x10e04 <ctl_intVectorDelete+32>:	sd	a1,-40(s0)
0x0000000000010e08	85	MAKE_VECTOR(int)
=> 0x10e08 <ctl_intVectorDelete+36>:	sd	a2,-48(s0)
85	MAKE_VECTOR(int)
=> 0x10e0c <ctl_intVectorDelete+40>:	ld	a0,-40(s0)
0x0000000000010e10	85	MAKE_VECTOR(int)
=> 0x10e10 <ctl_intVectorDelete+44>:	ld	a1,-48(s0)
0x0000000000010e14	85	MAKE_VECTOR(int)
=> 0x10e14 <ctl_intVectorDelete+48>:	bgeu	a1,a0,0x10e30 <ctl_intVectorDelete+76>
0x0000000000010e30	85	MAKE_VECTOR(int)
=> 0x10e30 <ctl_intVectorDelete+76>:	ld	a0,-48(s0)
0x0000000000010e34	85	MAKE_VECTOR(int)
=> 0x10e34 <ctl_intVectorDelete+80>:	ld	a1,-40(s0)
0x0000000000010e38	85	MAKE_VECTOR(int)
=> 0x10e38 <ctl_intVectorDelete+84>:	ld	a2,-32(s0)
0x0000000000010e3c	85	MAKE_VECTOR(int)
=> 0x10e3c <ctl_intVectorDelete+88>:	ld	a3,16(a2)
0x0000000000010e40	85	MAKE_VECTOR(int)
=> 0x10e40 <ctl_intVectorDelete+92>:	sub	a0,a1,a0
0x0000000000010e44	85	MAKE_VECTOR(int)
=> 0x10e44 <ctl_intVectorDelete+96>:	add	a0,a3,a0
0x0000000000010e48	85	MAKE_VECTOR(int)
=> 0x10e48 <ctl_intVectorDelete+100>:	sd	a0,16(a2)
0x0000000000010e4c	85	MAKE_VECTOR(int)
=> 0x10e4c <ctl_intVectorDelete+104>:	ld	a0,-32(s0)
0x0000000000010e50	85	MAKE_VECTOR(int)
=> 0x10e50 <ctl_intVectorDelete+108>:	ld	a1,8(a0)
0x0000000000010e54	85	MAKE_VECTOR(int)
=> 0x10e54 <ctl_intVectorDelete+112>:	ld	a2,-40(s0)
0x0000000000010e58	85	MAKE_VECTOR(int)
=> 0x10e58 <ctl_intVectorDelete+116>:	slli	a2,a2,0x2
0x0000000000010e5c	85	MAKE_VECTOR(int)
=> 0x10e5c <ctl_intVectorDelete+120>:	add	a2,a1,a2
0x0000000000010e60	85	MAKE_VECTOR(int)
=> 0x10e60 <ctl_intVectorDelete+124>:	ld	a3,-48(s0)
0x0000000000010e64	85	MAKE_VECTOR(int)
=> 0x10e64 <ctl_intVectorDelete+128>:	slli	a3,a3,0x2
0x0000000000010e68	85	MAKE_VECTOR(int)
=> 0x10e68 <ctl_intVectorDelete+132>:	add	a1,a1,a3
0x0000000000010e6c	85	MAKE_VECTOR(int)
=> 0x10e6c <ctl_intVectorDelete+136>:	ld	a0,16(a0)
0x0000000000010e70	85	MAKE_VECTOR(int)
=> 0x10e70 <ctl_intVectorDelete+140>:	slli	a0,a0,0x2
0x0000000000010e74	85	MAKE_VECTOR(int)
=> 0x10e74 <ctl_intVectorDelete+144>:	sd	a0,-56(s0)
0x0000000000010e78	85	MAKE_VECTOR(int)
=> 0x10e78 <ctl_intVectorDelete+148>:	mv	a0,a2
0x0000000000010e7c	85	MAKE_VECTOR(int)
=> 0x10e7c <ctl_intVectorDelete+152>:	ld	a2,-56(s0)
0x0000000000010e80	85	MAKE_VECTOR(int)
=> 0x10e80 <ctl_intVectorDelete+156>:	jal	ra,0x124e8 <memmove>
0x00000000000124e8 in memmove ()
=> 0x124e8 <memmove>:	bgeu	a1,a0,0x1250c <memmove+36>
0x000000000001250c in memmove ()
=> 0x1250c <memmove+36>:	li	a5,31
0x000000000001250e in memmove ()
=> 0x1250e <memmove+38>:	bltu	a5,a2,0x12530 <memmove+72>
0x0000000000012530 in memmove ()
=> 0x12530 <memmove+72>:	or	a5,a1,a0
0x0000000000012534 in memmove ()
=> 0x12534 <memmove+76>:	andi	a5,a5,7
0x0000000000012536 in memmove ()
=> 0x12536 <memmove+78>:	bnez	a5,0x125b0 <memmove+200>
0x0000000000012538 in memmove ()
=> 0x12538 <memmove+80>:	addi	a7,a2,-32
0x000000000001253c in memmove ()
=> 0x1253c <memmove+84>:	andi	a7,a7,-32
0x0000000000012540 in memmove ()
=> 0x12540 <memmove+88>:	addi	a7,a7,32
0x0000000000012544 in memmove ()
=> 0x12544 <memmove+92>:	add	a6,a0,a7
0x0000000000012548 in memmove ()
=> 0x12548 <memmove+96>:	mv	a4,a1
0x000000000001254a in memmove ()
=> 0x1254a <memmove+98>:	mv	a5,a0
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x0000000000012576 in memmove ()
=> 0x12576 <memmove+142>:	andi	a4,a2,24
0x000000000001257a in memmove ()
=> 0x1257a <memmove+146>:	add	a1,a1,a7
0x000000000001257c in memmove ()
=> 0x1257c <memmove+148>:	andi	a6,a2,31
0x0000000000012580 in memmove ()
=> 0x12580 <memmove+152>:	beqz	a4,0x125ba <memmove+210>
0x0000000000012582 in memmove ()
=> 0x12582 <memmove+154>:	mv	a4,a1
0x0000000000012584 in memmove ()
=> 0x12584 <memmove+156>:	mv	a7,a5
0x0000000000012586 in memmove ()
=> 0x12586 <memmove+158>:	li	t3,7
0x0000000000012588 in memmove ()
=> 0x12588 <memmove+160>:	ld	t1,0(a4)
0x000000000001258c in memmove ()
=> 0x1258c <memmove+164>:	addi	a4,a4,8
0x000000000001258e in memmove ()
=> 0x1258e <memmove+166>:	sub	a3,a6,a4
0x0000000000012592 in memmove ()
=> 0x12592 <memmove+170>:	sd	t1,0(a7)
0x0000000000012596 in memmove ()
=> 0x12596 <memmove+174>:	add	a3,a3,a1
0x0000000000012598 in memmove ()
=> 0x12598 <memmove+176>:	addi	a7,a7,8
0x000000000001259a in memmove ()
=> 0x1259a <memmove+178>:	bltu	t3,a3,0x12588 <memmove+160>
0x0000000000012588 in memmove ()
=> 0x12588 <memmove+160>:	ld	t1,0(a4)
0x000000000001258c in memmove ()
=> 0x1258c <memmove+164>:	addi	a4,a4,8
0x000000000001258e in memmove ()
=> 0x1258e <memmove+166>:	sub	a3,a6,a4
0x0000000000012592 in memmove ()
=> 0x12592 <memmove+170>:	sd	t1,0(a7)
0x0000000000012596 in memmove ()
=> 0x12596 <memmove+174>:	add	a3,a3,a1
0x0000000000012598 in memmove ()
=> 0x12598 <memmove+176>:	addi	a7,a7,8
0x000000000001259a in memmove ()
=> 0x1259a <memmove+178>:	bltu	t3,a3,0x12588 <memmove+160>
0x0000000000012588 in memmove ()
=> 0x12588 <memmove+160>:	ld	t1,0(a4)
0x000000000001258c in memmove ()
=> 0x1258c <memmove+164>:	addi	a4,a4,8
0x000000000001258e in memmove ()
=> 0x1258e <memmove+166>:	sub	a3,a6,a4
0x0000000000012592 in memmove ()
=> 0x12592 <memmove+170>:	sd	t1,0(a7)
0x0000000000012596 in memmove ()
=> 0x12596 <memmove+174>:	add	a3,a3,a1
0x0000000000012598 in memmove ()
=> 0x12598 <memmove+176>:	addi	a7,a7,8
0x000000000001259a in memmove ()
=> 0x1259a <memmove+178>:	bltu	t3,a3,0x12588 <memmove+160>
0x000000000001259e in memmove ()
=> 0x1259e <memmove+182>:	addi	a4,a6,-8
0x00000000000125a2 in memmove ()
=> 0x125a2 <memmove+186>:	andi	a4,a4,-8
0x00000000000125a4 in memmove ()
=> 0x125a4 <memmove+188>:	addi	a4,a4,8
0x00000000000125a6 in memmove ()
=> 0x125a6 <memmove+190>:	andi	a2,a2,7
0x00000000000125a8 in memmove ()
=> 0x125a8 <memmove+192>:	add	a5,a5,a4
0x00000000000125aa in memmove ()
=> 0x125aa <memmove+194>:	add	a1,a1,a4
0x00000000000125ac in memmove ()
=> 0x125ac <memmove+196>:	j	0x12514 <memmove+44>
0x0000000000012514 in memmove ()
=> 0x12514 <memmove+44>:	addi	a3,a2,-1
0x0000000000012518 in memmove ()
=> 0x12518 <memmove+48>:	beqz	a2,0x125b8 <memmove+208>
0x00000000000125b8 in memmove ()
=> 0x125b8 <memmove+208>:	ret
0x0000000000010e84 in ctl_intVectorDelete (s=0x20238 <heap>, begin=4, end=50) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10e84 <ctl_intVectorDelete+160>:	li	a1,0
0x0000000000010e88	85	MAKE_VECTOR(int)
=> 0x10e88 <ctl_intVectorDelete+164>:	sw	a1,-20(s0)
0x0000000000010e8c	85	MAKE_VECTOR(int)
=> 0x10e8c <ctl_intVectorDelete+168>:	j	0x10e90 <ctl_intVectorDelete+172>
0x0000000000010e90	85	MAKE_VECTOR(int)
=> 0x10e90 <ctl_intVectorDelete+172>:	lw	a0,-20(s0)
0x0000000000010e94	85	MAKE_VECTOR(int)
=> 0x10e94 <ctl_intVectorDelete+176>:	ld	s0,48(sp)
0x0000000000010e98 in ctl_intVectorDelete (s=0x3ffffffae0, begin=101, end=4194304) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10e98 <ctl_intVectorDelete+180>:	ld	ra,56(sp)
0x0000000000010e9c	85	MAKE_VECTOR(int)
=> 0x10e9c <ctl_intVectorDelete+184>:	addi	sp,sp,64
0x0000000000010ea0	85	MAKE_VECTOR(int)
=> 0x10ea0 <ctl_intVectorDelete+188>:	ld	ra,0(t6)
0x0000000000010ea4	85	MAKE_VECTOR(int)
=> 0x10ea4 <ctl_intVectorDelete+192>:	addi	t6,t6,16
0x0000000000010ea8	85	MAKE_VECTOR(int)
=> 0x10ea8 <ctl_intVectorDelete+196>:	ret
benchmark () at ctl.c:144
144	  while(v->size > 0)
=> 0x11af0 <benchmark+128>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x65) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x65) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x44c00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x44c00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x88d00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x88d00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xcc300000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xcc300000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x10ee00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x10ee00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x150e00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x150e00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x192300000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x192300000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x1d2d00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x1d2d00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x212c00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x212c00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x252000000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x252000000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x290900000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x290900000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x2ce700000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x2ce700000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x30ba00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x30ba00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x348200000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x348200000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x383f00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x383f00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x3bf100000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x3bf100000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x3f9800000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x3f9800000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x433400000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x433400000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x46c500000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x46c500000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x4a4b00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x4a4b00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x4dc600000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x4dc600000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x513600000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x513600000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x549b00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x549b00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x57f500000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x57f500000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x5b4400000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x5b4400000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x5e8800000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x5e8800000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x61c100000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x61c100000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x64ef00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x64ef00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x681200000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x681200000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x6b2a00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x6b2a00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x6e3700000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x6e3700000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x713900000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x713900000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x743000000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x743000000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x771c00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x771c00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x79fd00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x79fd00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x7cd300000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x7cd300000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x7f9e00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x7f9e00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x825e00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x825e00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x851300000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x851300000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x87bd00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x87bd00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x8a5c00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x8a5c00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x8cf000000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x8cf000000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x8f7900000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x8f7900000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x91f700000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x91f700000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x946a00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x946a00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x96d200000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x96d200000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x992f00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x992f00000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x9b8100000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x9b8100000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x9dc800000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0x9dc800000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa00400000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa00400000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa23500000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa23500000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa26100000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa26100000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa28200000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa28200000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
0x0000000000011b04	144	  while(v->size > 0)
=> 0x11b04 <benchmark+148>:	j	0x11b08 <benchmark+152>
148	    CTL_POP (int, v, &k);
=> 0x11b08 <benchmark+152>:	ld	a0,-24(s0)
0x0000000000011b0c	148	    CTL_POP (int, v, &k);
=> 0x11b0c <benchmark+156>:	addi	a1,s0,-44
0x0000000000011b10	148	    CTL_POP (int, v, &k);
=> 0x11b10 <benchmark+160>:	jal	ra,0x10844 <ctl_intVectorPop_Back>
ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa29800000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x10844 <ctl_intVectorPop_Back>:	addi	t6,t6,-16
0x0000000000010848	85	MAKE_VECTOR(int)
=> 0x10848 <ctl_intVectorPop_Back+4>:	sd	ra,0(t6)
0x000000000001084c	85	MAKE_VECTOR(int)
=> 0x1084c <ctl_intVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000010850	85	MAKE_VECTOR(int)
=> 0x10850 <ctl_intVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000010854	85	MAKE_VECTOR(int)
=> 0x10854 <ctl_intVectorPop_Back+16>:	sd	ra,40(sp)
0x0000000000010858	85	MAKE_VECTOR(int)
=> 0x10858 <ctl_intVectorPop_Back+20>:	sd	s0,32(sp)
0x000000000001085c	85	MAKE_VECTOR(int)
=> 0x1085c <ctl_intVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000010860	85	MAKE_VECTOR(int)
=> 0x10860 <ctl_intVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000010864	85	MAKE_VECTOR(int)
=> 0x10864 <ctl_intVectorPop_Back+32>:	sd	a1,-40(s0)
85	MAKE_VECTOR(int)
=> 0x10868 <ctl_intVectorPop_Back+36>:	ld	a0,-32(s0)
0x000000000001086c	85	MAKE_VECTOR(int)
=> 0x1086c <ctl_intVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000010870	85	MAKE_VECTOR(int)
=> 0x10870 <ctl_intVectorPop_Back+44>:	li	a1,0
0x0000000000010874	85	MAKE_VECTOR(int)
=> 0x10874 <ctl_intVectorPop_Back+48>:	bne	a0,a1,0x10890 <ctl_intVectorPop_Back+76>
0x0000000000010890	85	MAKE_VECTOR(int)
=> 0x10890 <ctl_intVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000010894	85	MAKE_VECTOR(int)
=> 0x10894 <ctl_intVectorPop_Back+80>:	ld	a1,16(a0)
0x0000000000010898	85	MAKE_VECTOR(int)
=> 0x10898 <ctl_intVectorPop_Back+84>:	addi	a1,a1,-1
0x000000000001089c	85	MAKE_VECTOR(int)
=> 0x1089c <ctl_intVectorPop_Back+88>:	sd	a1,16(a0)
0x00000000000108a0	85	MAKE_VECTOR(int)
=> 0x108a0 <ctl_intVectorPop_Back+92>:	ld	a0,-40(s0)
0x00000000000108a4	85	MAKE_VECTOR(int)
=> 0x108a4 <ctl_intVectorPop_Back+96>:	li	a1,0
0x00000000000108a8	85	MAKE_VECTOR(int)
=> 0x108a8 <ctl_intVectorPop_Back+100>:	bne	a0,a1,0x108bc <ctl_intVectorPop_Back+120>
0x00000000000108bc	85	MAKE_VECTOR(int)
=> 0x108bc <ctl_intVectorPop_Back+120>:	ld	a0,-32(s0)
0x00000000000108c0	85	MAKE_VECTOR(int)
=> 0x108c0 <ctl_intVectorPop_Back+124>:	ld	a1,8(a0)
0x00000000000108c4	85	MAKE_VECTOR(int)
=> 0x108c4 <ctl_intVectorPop_Back+128>:	ld	a0,16(a0)
0x00000000000108c8	85	MAKE_VECTOR(int)
=> 0x108c8 <ctl_intVectorPop_Back+132>:	slli	a0,a0,0x2
0x00000000000108cc	85	MAKE_VECTOR(int)
=> 0x108cc <ctl_intVectorPop_Back+136>:	add	a0,a1,a0
0x00000000000108d0	85	MAKE_VECTOR(int)
=> 0x108d0 <ctl_intVectorPop_Back+140>:	lw	a0,0(a0)
0x00000000000108d4	85	MAKE_VECTOR(int)
=> 0x108d4 <ctl_intVectorPop_Back+144>:	ld	a1,-40(s0)
0x00000000000108d8	85	MAKE_VECTOR(int)
=> 0x108d8 <ctl_intVectorPop_Back+148>:	sw	a0,0(a1)
0x00000000000108dc	85	MAKE_VECTOR(int)
=> 0x108dc <ctl_intVectorPop_Back+152>:	li	a0,0
0x00000000000108e0	85	MAKE_VECTOR(int)
=> 0x108e0 <ctl_intVectorPop_Back+156>:	sw	a0,-20(s0)
0x00000000000108e4	85	MAKE_VECTOR(int)
=> 0x108e4 <ctl_intVectorPop_Back+160>:	j	0x108e8 <ctl_intVectorPop_Back+164>
0x00000000000108e8	85	MAKE_VECTOR(int)
=> 0x108e8 <ctl_intVectorPop_Back+164>:	lw	a0,-20(s0)
0x00000000000108ec	85	MAKE_VECTOR(int)
=> 0x108ec <ctl_intVectorPop_Back+168>:	ld	s0,32(sp)
0x00000000000108f0 in ctl_intVectorPop_Back (s=0x3ffffffae0, value=0xa29800000065) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x108f0 <ctl_intVectorPop_Back+172>:	ld	ra,40(sp)
0x00000000000108f4	85	MAKE_VECTOR(int)
=> 0x108f4 <ctl_intVectorPop_Back+176>:	addi	sp,sp,48
0x00000000000108f8	85	MAKE_VECTOR(int)
=> 0x108f8 <ctl_intVectorPop_Back+180>:	ld	ra,0(t6)
0x00000000000108fc	85	MAKE_VECTOR(int)
=> 0x108fc <ctl_intVectorPop_Back+184>:	addi	t6,t6,16
0x0000000000010900	85	MAKE_VECTOR(int)
=> 0x10900 <ctl_intVectorPop_Back+188>:	ret
benchmark () at ctl.c:150
150	    cnt += k;
=> 0x11b14 <benchmark+164>:	lw	a1,-44(s0)
0x0000000000011b18	150	    cnt += k;
=> 0x11b18 <benchmark+168>:	lw	a2,-36(s0)
0x0000000000011b1c	150	    cnt += k;
=> 0x11b1c <benchmark+172>:	add	a1,a2,a1
0x0000000000011b20	150	    cnt += k;
=> 0x11b20 <benchmark+176>:	sw	a1,-36(s0)
144	  while(v->size > 0)
=> 0x11b24 <benchmark+180>:	j	0x11af4 <benchmark+132>
0x0000000000011af4	144	  while(v->size > 0)
=> 0x11af4 <benchmark+132>:	ld	a0,-24(s0)
0x0000000000011af8	144	  while(v->size > 0)
=> 0x11af8 <benchmark+136>:	ld	a0,16(a0)
0x0000000000011afc	144	  while(v->size > 0)
=> 0x11afc <benchmark+140>:	li	a1,0
0x0000000000011b00	144	  while(v->size > 0)
=> 0x11b00 <benchmark+144>:	beq	a0,a1,0x11b28 <benchmark+184>
153	  CTL_FREE (int, v);
=> 0x11b28 <benchmark+184>:	ld	a0,-24(s0)
0x0000000000011b2c	153	  CTL_FREE (int, v);
=> 0x11b2c <benchmark+188>:	jal	ra,0x1067c <ctl_intVectorFree>
ctl_intVectorFree (s=0x20238 <heap>) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x1067c <ctl_intVectorFree>:	addi	t6,t6,-16
0x0000000000010680	85	MAKE_VECTOR(int)
=> 0x10680 <ctl_intVectorFree+4>:	sd	ra,0(t6)
0x0000000000010684	85	MAKE_VECTOR(int)
=> 0x10684 <ctl_intVectorFree+8>:	st	zero,0(t6)
0x0000000000010688	85	MAKE_VECTOR(int)
=> 0x10688 <ctl_intVectorFree+12>:	addi	sp,sp,-32
0x000000000001068c	85	MAKE_VECTOR(int)
=> 0x1068c <ctl_intVectorFree+16>:	sd	ra,24(sp)
0x0000000000010690	85	MAKE_VECTOR(int)
=> 0x10690 <ctl_intVectorFree+20>:	sd	s0,16(sp)
0x0000000000010694	85	MAKE_VECTOR(int)
=> 0x10694 <ctl_intVectorFree+24>:	addi	s0,sp,32
0x0000000000010698	85	MAKE_VECTOR(int)
=> 0x10698 <ctl_intVectorFree+28>:	sd	a0,-24(s0)
85	MAKE_VECTOR(int)
=> 0x1069c <ctl_intVectorFree+32>:	ld	a0,-24(s0)
0x00000000000106a0	85	MAKE_VECTOR(int)
=> 0x106a0 <ctl_intVectorFree+36>:	ld	a0,8(a0)
0x00000000000106a4	85	MAKE_VECTOR(int)
=> 0x106a4 <ctl_intVectorFree+40>:	jal	ra,0x106c8 <free_beebs>
free_beebs (ptr=0x20238 <heap>) at ctl.c:78
78	{
=> 0x106c8 <free_beebs>:	addi	t6,t6,-16
0x00000000000106cc	78	{
=> 0x106cc <free_beebs+4>:	sd	ra,0(t6)
0x00000000000106d0	78	{
=> 0x106d0 <free_beebs+8>:	st	zero,0(t6)
0x00000000000106d4	78	{
=> 0x106d4 <free_beebs+12>:	addi	sp,sp,-32
0x00000000000106d8	78	{
=> 0x106d8 <free_beebs+16>:	sd	ra,24(sp)
0x00000000000106dc	78	{
=> 0x106dc <free_beebs+20>:	sd	s0,16(sp)
0x00000000000106e0	78	{
=> 0x106e0 <free_beebs+24>:	addi	s0,sp,32
0x00000000000106e4	78	{
=> 0x106e4 <free_beebs+28>:	sd	a0,-24(s0)
79	}
=> 0x106e8 <free_beebs+32>:	ld	s0,16(sp)
0x00000000000106ec in free_beebs (ptr=0x20238 <heap>) at ctl.c:79
79	}
=> 0x106ec <free_beebs+36>:	ld	ra,24(sp)
0x00000000000106f0	79	}
=> 0x106f0 <free_beebs+40>:	addi	sp,sp,32
0x00000000000106f4	79	}
=> 0x106f4 <free_beebs+44>:	ld	ra,0(t6)
0x00000000000106f8	79	}
=> 0x106f8 <free_beebs+48>:	addi	t6,t6,16
0x00000000000106fc	79	}
=> 0x106fc <free_beebs+52>:	ret
0x00000000000106a8 in ctl_intVectorFree (s=0x20238 <heap>) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x106a8 <ctl_intVectorFree+44>:	ld	a0,-24(s0)
0x00000000000106ac	85	MAKE_VECTOR(int)
=> 0x106ac <ctl_intVectorFree+48>:	jal	ra,0x106c8 <free_beebs>
free_beebs (ptr=0x20238 <heap>) at ctl.c:78
78	{
=> 0x106c8 <free_beebs>:	addi	t6,t6,-16
0x00000000000106cc	78	{
=> 0x106cc <free_beebs+4>:	sd	ra,0(t6)
0x00000000000106d0	78	{
=> 0x106d0 <free_beebs+8>:	st	zero,0(t6)
0x00000000000106d4	78	{
=> 0x106d4 <free_beebs+12>:	addi	sp,sp,-32
0x00000000000106d8	78	{
=> 0x106d8 <free_beebs+16>:	sd	ra,24(sp)
0x00000000000106dc	78	{
=> 0x106dc <free_beebs+20>:	sd	s0,16(sp)
0x00000000000106e0	78	{
=> 0x106e0 <free_beebs+24>:	addi	s0,sp,32
0x00000000000106e4	78	{
=> 0x106e4 <free_beebs+28>:	sd	a0,-24(s0)
79	}
=> 0x106e8 <free_beebs+32>:	ld	s0,16(sp)
0x00000000000106ec in free_beebs (ptr=0x20238 <heap>) at ctl.c:79
79	}
=> 0x106ec <free_beebs+36>:	ld	ra,24(sp)
0x00000000000106f0	79	}
=> 0x106f0 <free_beebs+40>:	addi	sp,sp,32
0x00000000000106f4	79	}
=> 0x106f4 <free_beebs+44>:	ld	ra,0(t6)
0x00000000000106f8	79	}
=> 0x106f8 <free_beebs+48>:	addi	t6,t6,16
0x00000000000106fc	79	}
=> 0x106fc <free_beebs+52>:	ret
0x00000000000106b0 in ctl_intVectorFree (s=0x20238 <heap>) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x106b0 <ctl_intVectorFree+52>:	ld	s0,16(sp)
0x00000000000106b4 in ctl_intVectorFree (s=0x20238 <heap>) at ctl.c:85
85	MAKE_VECTOR(int)
=> 0x106b4 <ctl_intVectorFree+56>:	ld	ra,24(sp)
0x00000000000106b8	85	MAKE_VECTOR(int)
=> 0x106b8 <ctl_intVectorFree+60>:	addi	sp,sp,32
0x00000000000106bc	85	MAKE_VECTOR(int)
=> 0x106bc <ctl_intVectorFree+64>:	ld	ra,0(t6)
0x00000000000106c0	85	MAKE_VECTOR(int)
=> 0x106c0 <ctl_intVectorFree+68>:	addi	t6,t6,16
0x00000000000106c4	85	MAKE_VECTOR(int)
=> 0x106c4 <ctl_intVectorFree+72>:	ret
benchmark () at ctl.c:155
155	  v2 = CTL_INIT (pair);
=> 0x11b30 <benchmark+192>:	jal	ra,0x11048 <ctl_pairVectorInit>
ctl_pairVectorInit () at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11048 <ctl_pairVectorInit>:	addi	t6,t6,-16
0x000000000001104c	86	MAKE_VECTOR(pair)
=> 0x1104c <ctl_pairVectorInit+4>:	sd	ra,0(t6)
0x0000000000011050	86	MAKE_VECTOR(pair)
=> 0x11050 <ctl_pairVectorInit+8>:	st	zero,0(t6)
0x0000000000011054	86	MAKE_VECTOR(pair)
=> 0x11054 <ctl_pairVectorInit+12>:	addi	sp,sp,-16
0x0000000000011058	86	MAKE_VECTOR(pair)
=> 0x11058 <ctl_pairVectorInit+16>:	sd	ra,8(sp)
0x000000000001105c	86	MAKE_VECTOR(pair)
=> 0x1105c <ctl_pairVectorInit+20>:	sd	s0,0(sp)
0x0000000000011060	86	MAKE_VECTOR(pair)
=> 0x11060 <ctl_pairVectorInit+24>:	addi	s0,sp,16
0x0000000000011064	86	MAKE_VECTOR(pair)
=> 0x11064 <ctl_pairVectorInit+28>:	li	a0,100
86	MAKE_VECTOR(pair)
=> 0x11068 <ctl_pairVectorInit+32>:	jal	ra,0x10f5c <ctl_pairVectorInitSize>
ctl_pairVectorInitSize (BlockSize=0) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x10f5c <ctl_pairVectorInitSize>:	addi	t6,t6,-16
0x0000000000010f60	86	MAKE_VECTOR(pair)
=> 0x10f60 <ctl_pairVectorInitSize+4>:	sd	ra,0(t6)
0x0000000000010f64	86	MAKE_VECTOR(pair)
=> 0x10f64 <ctl_pairVectorInitSize+8>:	st	zero,0(t6)
0x0000000000010f68	86	MAKE_VECTOR(pair)
=> 0x10f68 <ctl_pairVectorInitSize+12>:	addi	sp,sp,-48
0x0000000000010f6c	86	MAKE_VECTOR(pair)
=> 0x10f6c <ctl_pairVectorInitSize+16>:	sd	ra,40(sp)
0x0000000000010f70	86	MAKE_VECTOR(pair)
=> 0x10f70 <ctl_pairVectorInitSize+20>:	sd	s0,32(sp)
0x0000000000010f74	86	MAKE_VECTOR(pair)
=> 0x10f74 <ctl_pairVectorInitSize+24>:	addi	s0,sp,48
0x0000000000010f78	86	MAKE_VECTOR(pair)
=> 0x10f78 <ctl_pairVectorInitSize+28>:	mv	a1,a0
0x0000000000010f7c	86	MAKE_VECTOR(pair)
=> 0x10f7c <ctl_pairVectorInitSize+32>:	sw	a0,-28(s0)
0x0000000000010f80	86	MAKE_VECTOR(pair)
=> 0x10f80 <ctl_pairVectorInitSize+36>:	li	a0,32
86	MAKE_VECTOR(pair)
=> 0x10f84 <ctl_pairVectorInitSize+40>:	sd	a1,-48(s0)
0x0000000000010f88	86	MAKE_VECTOR(pair)
=> 0x10f88 <ctl_pairVectorInitSize+44>:	jal	ra,0x10494 <malloc_beebs>
malloc_beebs (size=433791695520) at ctl.c:60
60	{
=> 0x10494 <malloc_beebs>:	addi	t6,t6,-16
0x0000000000010498	60	{
=> 0x10498 <malloc_beebs+4>:	sd	ra,0(t6)
0x000000000001049c	60	{
=> 0x1049c <malloc_beebs+8>:	st	zero,0(t6)
0x00000000000104a0	60	{
=> 0x104a0 <malloc_beebs+12>:	addi	sp,sp,-48
0x00000000000104a4	60	{
=> 0x104a4 <malloc_beebs+16>:	sd	ra,40(sp)
0x00000000000104a8	60	{
=> 0x104a8 <malloc_beebs+20>:	sd	s0,32(sp)
0x00000000000104ac	60	{
=> 0x104ac <malloc_beebs+24>:	addi	s0,sp,48
0x00000000000104b0	60	{
=> 0x104b0 <malloc_beebs+28>:	sd	a0,-32(s0)
61	    void *new_ptr = heap_ptr;
=> 0x104b4 <malloc_beebs+32>:	ld	a1,-1888(gp)
0x00000000000104b8	61	    void *new_ptr = heap_ptr;
=> 0x104b8 <malloc_beebs+36>:	sd	a1,-40(s0)
63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104bc <malloc_beebs+40>:	ld	a0,-1888(gp)
0x00000000000104c0	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c0 <malloc_beebs+44>:	ld	a1,-32(s0)
0x00000000000104c4	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c4 <malloc_beebs+48>:	add	a0,a0,a1
0x00000000000104c8	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c8 <malloc_beebs+52>:	ld	a1,-1880(gp)
0x00000000000104cc	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104cc <malloc_beebs+56>:	bltu	a1,a0,0x104e4 <malloc_beebs+80>
0x00000000000104d0	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d0 <malloc_beebs+60>:	j	0x104d4 <malloc_beebs+64>
0x00000000000104d4	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d4 <malloc_beebs+64>:	ld	a0,-32(s0)
0x00000000000104d8	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d8 <malloc_beebs+68>:	li	a1,0
0x00000000000104dc	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104dc <malloc_beebs+72>:	bne	a0,a1,0x104f0 <malloc_beebs+92>
67		    heap_ptr += size;
=> 0x104f0 <malloc_beebs+92>:	ld	a0,-32(s0)
0x00000000000104f4	67		    heap_ptr += size;
=> 0x104f4 <malloc_beebs+96>:	ld	a2,-1888(gp)
0x00000000000104f8	67		    heap_ptr += size;
=> 0x104f8 <malloc_beebs+100>:	add	a0,a2,a0
0x00000000000104fc	67		    heap_ptr += size;
=> 0x104fc <malloc_beebs+104>:	sd	a0,-1888(gp)
68		    return new_ptr;
=> 0x10500 <malloc_beebs+108>:	ld	a0,-40(s0)
0x0000000000010504	68		    return new_ptr;
=> 0x10504 <malloc_beebs+112>:	sd	a0,-24(s0)
0x0000000000010508	68		    return new_ptr;
=> 0x10508 <malloc_beebs+116>:	j	0x1050c <malloc_beebs+120>
70	}
=> 0x1050c <malloc_beebs+120>:	ld	a0,-24(s0)
0x0000000000010510	70	}
=> 0x10510 <malloc_beebs+124>:	ld	s0,32(sp)
0x0000000000010514 in malloc_beebs (size=433791695520) at ctl.c:70
70	}
=> 0x10514 <malloc_beebs+128>:	ld	ra,40(sp)
0x0000000000010518	70	}
=> 0x10518 <malloc_beebs+132>:	addi	sp,sp,48
0x000000000001051c	70	}
=> 0x1051c <malloc_beebs+136>:	ld	ra,0(t6)
0x0000000000010520	70	}
=> 0x10520 <malloc_beebs+140>:	addi	t6,t6,16
0x0000000000010524	70	}
=> 0x10524 <malloc_beebs+144>:	ret
0x0000000000010f8c in ctl_pairVectorInitSize (BlockSize=100) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x10f8c <ctl_pairVectorInitSize+48>:	sd	a0,-40(s0)
0x0000000000010f90	86	MAKE_VECTOR(pair)
=> 0x10f90 <ctl_pairVectorInitSize+52>:	ld	a0,-40(s0)
0x0000000000010f94	86	MAKE_VECTOR(pair)
=> 0x10f94 <ctl_pairVectorInitSize+56>:	li	a1,0
0x0000000000010f98	86	MAKE_VECTOR(pair)
=> 0x10f98 <ctl_pairVectorInitSize+60>:	bne	a0,a1,0x10fac <ctl_pairVectorInitSize+80>
0x0000000000010fac	86	MAKE_VECTOR(pair)
=> 0x10fac <ctl_pairVectorInitSize+80>:	lw	a0,-28(s0)
0x0000000000010fb0	86	MAKE_VECTOR(pair)
=> 0x10fb0 <ctl_pairVectorInitSize+84>:	ld	a1,-40(s0)
0x0000000000010fb4	86	MAKE_VECTOR(pair)
=> 0x10fb4 <ctl_pairVectorInitSize+88>:	sd	a0,0(a1)
0x0000000000010fb8	86	MAKE_VECTOR(pair)
=> 0x10fb8 <ctl_pairVectorInitSize+92>:	ld	a0,-40(s0)
0x0000000000010fbc	86	MAKE_VECTOR(pair)
=> 0x10fbc <ctl_pairVectorInitSize+96>:	ld	a0,0(a0)
0x0000000000010fc0	86	MAKE_VECTOR(pair)
=> 0x10fc0 <ctl_pairVectorInitSize+100>:	slli	a0,a0,0x3
0x0000000000010fc4	86	MAKE_VECTOR(pair)
=> 0x10fc4 <ctl_pairVectorInitSize+104>:	jal	ra,0x10494 <malloc_beebs>
malloc_beebs (size=433791695520) at ctl.c:60
60	{
=> 0x10494 <malloc_beebs>:	addi	t6,t6,-16
0x0000000000010498	60	{
=> 0x10498 <malloc_beebs+4>:	sd	ra,0(t6)
0x000000000001049c	60	{
=> 0x1049c <malloc_beebs+8>:	st	zero,0(t6)
0x00000000000104a0	60	{
=> 0x104a0 <malloc_beebs+12>:	addi	sp,sp,-48
0x00000000000104a4	60	{
=> 0x104a4 <malloc_beebs+16>:	sd	ra,40(sp)
0x00000000000104a8	60	{
=> 0x104a8 <malloc_beebs+20>:	sd	s0,32(sp)
0x00000000000104ac	60	{
=> 0x104ac <malloc_beebs+24>:	addi	s0,sp,48
0x00000000000104b0	60	{
=> 0x104b0 <malloc_beebs+28>:	sd	a0,-32(s0)
61	    void *new_ptr = heap_ptr;
=> 0x104b4 <malloc_beebs+32>:	ld	a1,-1888(gp)
0x00000000000104b8	61	    void *new_ptr = heap_ptr;
=> 0x104b8 <malloc_beebs+36>:	sd	a1,-40(s0)
63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104bc <malloc_beebs+40>:	ld	a0,-1888(gp)
0x00000000000104c0	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c0 <malloc_beebs+44>:	ld	a1,-32(s0)
0x00000000000104c4	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c4 <malloc_beebs+48>:	add	a0,a0,a1
0x00000000000104c8	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104c8 <malloc_beebs+52>:	ld	a1,-1880(gp)
0x00000000000104cc	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104cc <malloc_beebs+56>:	bltu	a1,a0,0x104e4 <malloc_beebs+80>
0x00000000000104d0	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d0 <malloc_beebs+60>:	j	0x104d4 <malloc_beebs+64>
0x00000000000104d4	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d4 <malloc_beebs+64>:	ld	a0,-32(s0)
0x00000000000104d8	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104d8 <malloc_beebs+68>:	li	a1,0
0x00000000000104dc	63	    if (((heap_ptr + size) > heap_end) || (0 == size))
=> 0x104dc <malloc_beebs+72>:	bne	a0,a1,0x104f0 <malloc_beebs+92>
67		    heap_ptr += size;
=> 0x104f0 <malloc_beebs+92>:	ld	a0,-32(s0)
0x00000000000104f4	67		    heap_ptr += size;
=> 0x104f4 <malloc_beebs+96>:	ld	a2,-1888(gp)
0x00000000000104f8	67		    heap_ptr += size;
=> 0x104f8 <malloc_beebs+100>:	add	a0,a2,a0
0x00000000000104fc	67		    heap_ptr += size;
=> 0x104fc <malloc_beebs+104>:	sd	a0,-1888(gp)
68		    return new_ptr;
=> 0x10500 <malloc_beebs+108>:	ld	a0,-40(s0)
0x0000000000010504	68		    return new_ptr;
=> 0x10504 <malloc_beebs+112>:	sd	a0,-24(s0)
0x0000000000010508	68		    return new_ptr;
=> 0x10508 <malloc_beebs+116>:	j	0x1050c <malloc_beebs+120>
70	}
=> 0x1050c <malloc_beebs+120>:	ld	a0,-24(s0)
0x0000000000010510	70	}
=> 0x10510 <malloc_beebs+124>:	ld	s0,32(sp)
0x0000000000010514 in malloc_beebs (size=433791695520) at ctl.c:70
70	}
=> 0x10514 <malloc_beebs+128>:	ld	ra,40(sp)
0x0000000000010518	70	}
=> 0x10518 <malloc_beebs+132>:	addi	sp,sp,48
0x000000000001051c	70	}
=> 0x1051c <malloc_beebs+136>:	ld	ra,0(t6)
0x0000000000010520	70	}
=> 0x10520 <malloc_beebs+140>:	addi	t6,t6,16
0x0000000000010524	70	}
=> 0x10524 <malloc_beebs+144>:	ret
0x0000000000010fc8 in ctl_pairVectorInitSize (BlockSize=100) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x10fc8 <ctl_pairVectorInitSize+108>:	ld	a1,-40(s0)
0x0000000000010fcc	86	MAKE_VECTOR(pair)
=> 0x10fcc <ctl_pairVectorInitSize+112>:	sd	a0,8(a1)
0x0000000000010fd0	86	MAKE_VECTOR(pair)
=> 0x10fd0 <ctl_pairVectorInitSize+116>:	ld	a0,-40(s0)
0x0000000000010fd4	86	MAKE_VECTOR(pair)
=> 0x10fd4 <ctl_pairVectorInitSize+120>:	ld	a0,8(a0)
0x0000000000010fd8	86	MAKE_VECTOR(pair)
=> 0x10fd8 <ctl_pairVectorInitSize+124>:	li	a1,0
0x0000000000010fdc	86	MAKE_VECTOR(pair)
=> 0x10fdc <ctl_pairVectorInitSize+128>:	bne	a0,a1,0x11008 <ctl_pairVectorInitSize+172>
0x0000000000011008	86	MAKE_VECTOR(pair)
=> 0x11008 <ctl_pairVectorInitSize+172>:	ld	a0,-40(s0)
0x000000000001100c	86	MAKE_VECTOR(pair)
=> 0x1100c <ctl_pairVectorInitSize+176>:	ld	a1,0(a0)
0x0000000000011010	86	MAKE_VECTOR(pair)
=> 0x11010 <ctl_pairVectorInitSize+180>:	sd	a1,24(a0)
0x0000000000011014	86	MAKE_VECTOR(pair)
=> 0x11014 <ctl_pairVectorInitSize+184>:	ld	a0,-40(s0)
0x0000000000011018	86	MAKE_VECTOR(pair)
=> 0x11018 <ctl_pairVectorInitSize+188>:	li	a1,0
0x000000000001101c	86	MAKE_VECTOR(pair)
=> 0x1101c <ctl_pairVectorInitSize+192>:	sd	a1,16(a0)
0x0000000000011020	86	MAKE_VECTOR(pair)
=> 0x11020 <ctl_pairVectorInitSize+196>:	ld	a0,-40(s0)
0x0000000000011024	86	MAKE_VECTOR(pair)
=> 0x11024 <ctl_pairVectorInitSize+200>:	sd	a0,-24(s0)
0x0000000000011028	86	MAKE_VECTOR(pair)
=> 0x11028 <ctl_pairVectorInitSize+204>:	j	0x1102c <ctl_pairVectorInitSize+208>
0x000000000001102c	86	MAKE_VECTOR(pair)
=> 0x1102c <ctl_pairVectorInitSize+208>:	ld	a0,-24(s0)
0x0000000000011030	86	MAKE_VECTOR(pair)
=> 0x11030 <ctl_pairVectorInitSize+212>:	ld	s0,32(sp)
0x0000000000011034 in ctl_pairVectorInitSize (BlockSize=63) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11034 <ctl_pairVectorInitSize+216>:	ld	ra,40(sp)
0x0000000000011038	86	MAKE_VECTOR(pair)
=> 0x11038 <ctl_pairVectorInitSize+220>:	addi	sp,sp,48
0x000000000001103c	86	MAKE_VECTOR(pair)
=> 0x1103c <ctl_pairVectorInitSize+224>:	ld	ra,0(t6)
0x0000000000011040	86	MAKE_VECTOR(pair)
=> 0x11040 <ctl_pairVectorInitSize+228>:	addi	t6,t6,16
0x0000000000011044	86	MAKE_VECTOR(pair)
=> 0x11044 <ctl_pairVectorInitSize+232>:	ret
0x000000000001106c in ctl_pairVectorInit () at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x1106c <ctl_pairVectorInit+36>:	ld	s0,0(sp)
0x0000000000011070 in ctl_pairVectorInit () at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11070 <ctl_pairVectorInit+40>:	ld	ra,8(sp)
0x0000000000011074	86	MAKE_VECTOR(pair)
=> 0x11074 <ctl_pairVectorInit+44>:	addi	sp,sp,16
0x0000000000011078	86	MAKE_VECTOR(pair)
=> 0x11078 <ctl_pairVectorInit+48>:	ld	ra,0(t6)
0x000000000001107c	86	MAKE_VECTOR(pair)
=> 0x1107c <ctl_pairVectorInit+52>:	addi	t6,t6,16
0x0000000000011080	86	MAKE_VECTOR(pair)
=> 0x11080 <ctl_pairVectorInit+56>:	ret
0x0000000000011b34 in benchmark () at ctl.c:155
155	  v2 = CTL_INIT (pair);
=> 0x11b34 <benchmark+196>:	sd	a0,-32(s0)
157	  for (i = init; i <= lim; ++i)
=> 0x11b38 <benchmark+200>:	lw	a0,-1916(gp)
0x0000000000011b3c	157	  for (i = init; i <= lim; ++i)
=> 0x11b3c <benchmark+204>:	sw	a0,-40(s0)
0x0000000000011b40	157	  for (i = init; i <= lim; ++i)
=> 0x11b40 <benchmark+208>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000001, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000001, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000002, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000002, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000003, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000003, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000004, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000004, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000005, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000005, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000006, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000006, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000007, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000007, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000008, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000008, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000009, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000009, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000000a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000000a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000000b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000000b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000000c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000000c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000000d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000000d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000000e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000000e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000000f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000000f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000010, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000010, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000011, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000011, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000012, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000012, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000013, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000013, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000014, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000014, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000015, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000015, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000016, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000016, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000017, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000017, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000018, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000018, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000019, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000019, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000001a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000001a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000001b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000001b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000001c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000001c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000001d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000001d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000001e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000001e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000001f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000001f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000020, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000020, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000021, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000021, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000022, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000022, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000023, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000023, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000024, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000024, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000025, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000025, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000026, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000026, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000027, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000027, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000028, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000028, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000029, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000029, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000002a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000002a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000002b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000002b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000002c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000002c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000002d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000002d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000002e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000002e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000002f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000002f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000030, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000030, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000031, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000031, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000032, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000032, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000033, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000033, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000034, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000034, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000035, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000035, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000036, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000036, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000037, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000037, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000038, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000038, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000039, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000039, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000003a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000003a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000003b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000003b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000003c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000003c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000003d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000003d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000003e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000003e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000003f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000003f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000040, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000040, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000041, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000041, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000042, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000042, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000043, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000043, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000044, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000044, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000045, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000045, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000046, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000046, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000047, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000047, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000048, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000048, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000049, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000049, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000004a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000004a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000004b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000004b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000004c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000004c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000004d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000004d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000004e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000004e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000004f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000004f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000050, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000050, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000051, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000051, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000052, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000052, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000053, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000053, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000054, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000054, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000055, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000055, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000056, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000056, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000057, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000057, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000058, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000058, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000059, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000059, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000005a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000005a, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000005b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000005b, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000005c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000005c, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000005d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000005d, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000005e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000005e, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a30000005f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a30000005f, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000060, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000060, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000061, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000061, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000062, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000062, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000063, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000063, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
0x0000000000011b50	157	  for (i = init; i <= lim; ++i)
=> 0x11b50 <benchmark+224>:	j	0x11b54 <benchmark+228>
159	    pair p = {i, i*i};
=> 0x11b54 <benchmark+228>:	lw	a0,-40(s0)
0x0000000000011b58	159	    pair p = {i, i*i};
=> 0x11b58 <benchmark+232>:	sw	a0,-56(s0)
0x0000000000011b5c	159	    pair p = {i, i*i};
=> 0x11b5c <benchmark+236>:	lw	a0,-40(s0)
0x0000000000011b60	159	    pair p = {i, i*i};
=> 0x11b60 <benchmark+240>:	mul	a0,a0,a0
0x0000000000011b64	159	    pair p = {i, i*i};
=> 0x11b64 <benchmark+244>:	sw	a0,-52(s0)
160	    CTL_PUSH (pair, v2, p);
=> 0x11b68 <benchmark+248>:	ld	a0,-32(s0)
0x0000000000011b6c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b6c <benchmark+252>:	lwu	a1,-52(s0)
0x0000000000011b70	160	    CTL_PUSH (pair, v2, p);
=> 0x11b70 <benchmark+256>:	slli	a1,a1,0x20
0x0000000000011b74	160	    CTL_PUSH (pair, v2, p);
=> 0x11b74 <benchmark+260>:	lwu	a2,-56(s0)
0x0000000000011b78	160	    CTL_PUSH (pair, v2, p);
=> 0x11b78 <benchmark+264>:	or	a1,a1,a2
0x0000000000011b7c	160	    CTL_PUSH (pair, v2, p);
=> 0x11b7c <benchmark+268>:	jal	ra,0x111e8 <ctl_pairVectorPush_Back>
ctl_pairVectorPush_Back (s=0xa2a300000064, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111e8 <ctl_pairVectorPush_Back>:	addi	t6,t6,-16
0x00000000000111ec	86	MAKE_VECTOR(pair)
=> 0x111ec <ctl_pairVectorPush_Back+4>:	sd	ra,0(t6)
0x00000000000111f0	86	MAKE_VECTOR(pair)
=> 0x111f0 <ctl_pairVectorPush_Back+8>:	st	zero,0(t6)
0x00000000000111f4	86	MAKE_VECTOR(pair)
=> 0x111f4 <ctl_pairVectorPush_Back+12>:	addi	sp,sp,-64
0x00000000000111f8	86	MAKE_VECTOR(pair)
=> 0x111f8 <ctl_pairVectorPush_Back+16>:	sd	ra,56(sp)
0x00000000000111fc	86	MAKE_VECTOR(pair)
=> 0x111fc <ctl_pairVectorPush_Back+20>:	sd	s0,48(sp)
0x0000000000011200	86	MAKE_VECTOR(pair)
=> 0x11200 <ctl_pairVectorPush_Back+24>:	addi	s0,sp,64
0x0000000000011204	86	MAKE_VECTOR(pair)
=> 0x11204 <ctl_pairVectorPush_Back+28>:	sw	a1,-32(s0)
0x0000000000011208	86	MAKE_VECTOR(pair)
=> 0x11208 <ctl_pairVectorPush_Back+32>:	srli	a1,a1,0x20
0x000000000001120c	86	MAKE_VECTOR(pair)
=> 0x1120c <ctl_pairVectorPush_Back+36>:	sw	a1,-28(s0)
0x0000000000011210	86	MAKE_VECTOR(pair)
=> 0x11210 <ctl_pairVectorPush_Back+40>:	sd	a0,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x11214 <ctl_pairVectorPush_Back+44>:	ld	a0,-40(s0)
0x0000000000011218	86	MAKE_VECTOR(pair)
=> 0x11218 <ctl_pairVectorPush_Back+48>:	ld	a1,24(a0)
0x000000000001121c	86	MAKE_VECTOR(pair)
=> 0x1121c <ctl_pairVectorPush_Back+52>:	ld	a0,16(a0)
0x0000000000011220	86	MAKE_VECTOR(pair)
=> 0x11220 <ctl_pairVectorPush_Back+56>:	bltu	a0,a1,0x112dc <ctl_pairVectorPush_Back+244>
0x00000000000112dc	86	MAKE_VECTOR(pair)
=> 0x112dc <ctl_pairVectorPush_Back+244>:	ld	a0,-40(s0)
0x00000000000112e0	86	MAKE_VECTOR(pair)
=> 0x112e0 <ctl_pairVectorPush_Back+248>:	ld	a1,8(a0)
0x00000000000112e4	86	MAKE_VECTOR(pair)
=> 0x112e4 <ctl_pairVectorPush_Back+252>:	ld	a0,16(a0)
0x00000000000112e8	86	MAKE_VECTOR(pair)
=> 0x112e8 <ctl_pairVectorPush_Back+256>:	slli	a0,a0,0x3
0x00000000000112ec	86	MAKE_VECTOR(pair)
=> 0x112ec <ctl_pairVectorPush_Back+260>:	add	a0,a1,a0
0x00000000000112f0	86	MAKE_VECTOR(pair)
=> 0x112f0 <ctl_pairVectorPush_Back+264>:	lw	a1,-28(s0)
0x00000000000112f4	86	MAKE_VECTOR(pair)
=> 0x112f4 <ctl_pairVectorPush_Back+268>:	sw	a1,4(a0)
0x00000000000112f8	86	MAKE_VECTOR(pair)
=> 0x112f8 <ctl_pairVectorPush_Back+272>:	lw	a1,-32(s0)
0x00000000000112fc	86	MAKE_VECTOR(pair)
=> 0x112fc <ctl_pairVectorPush_Back+276>:	sw	a1,0(a0)
0x0000000000011300	86	MAKE_VECTOR(pair)
=> 0x11300 <ctl_pairVectorPush_Back+280>:	ld	a0,-40(s0)
0x0000000000011304	86	MAKE_VECTOR(pair)
=> 0x11304 <ctl_pairVectorPush_Back+284>:	ld	a1,16(a0)
0x0000000000011308	86	MAKE_VECTOR(pair)
=> 0x11308 <ctl_pairVectorPush_Back+288>:	addi	a1,a1,1
0x000000000001130c	86	MAKE_VECTOR(pair)
=> 0x1130c <ctl_pairVectorPush_Back+292>:	sd	a1,16(a0)
0x0000000000011310	86	MAKE_VECTOR(pair)
=> 0x11310 <ctl_pairVectorPush_Back+296>:	li	a0,0
0x0000000000011314	86	MAKE_VECTOR(pair)
=> 0x11314 <ctl_pairVectorPush_Back+300>:	sw	a0,-20(s0)
0x0000000000011318	86	MAKE_VECTOR(pair)
=> 0x11318 <ctl_pairVectorPush_Back+304>:	j	0x1131c <ctl_pairVectorPush_Back+308>
0x000000000001131c	86	MAKE_VECTOR(pair)
=> 0x1131c <ctl_pairVectorPush_Back+308>:	lw	a0,-20(s0)
0x0000000000011320	86	MAKE_VECTOR(pair)
=> 0x11320 <ctl_pairVectorPush_Back+312>:	ld	s0,48(sp)
0x0000000000011324 in ctl_pairVectorPush_Back (s=0xa2a300000064, push=...) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11324 <ctl_pairVectorPush_Back+316>:	ld	ra,56(sp)
0x0000000000011328	86	MAKE_VECTOR(pair)
=> 0x11328 <ctl_pairVectorPush_Back+320>:	addi	sp,sp,64
0x000000000001132c	86	MAKE_VECTOR(pair)
=> 0x1132c <ctl_pairVectorPush_Back+324>:	ld	ra,0(t6)
0x0000000000011330	86	MAKE_VECTOR(pair)
=> 0x11330 <ctl_pairVectorPush_Back+328>:	addi	t6,t6,16
0x0000000000011334	86	MAKE_VECTOR(pair)
=> 0x11334 <ctl_pairVectorPush_Back+332>:	ret
benchmark () at ctl.c:161
161	  }
=> 0x11b80 <benchmark+272>:	j	0x11b84 <benchmark+276>
157	  for (i = init; i <= lim; ++i)
=> 0x11b84 <benchmark+276>:	lw	a0,-40(s0)
0x0000000000011b88	157	  for (i = init; i <= lim; ++i)
=> 0x11b88 <benchmark+280>:	addi	a0,a0,1
0x0000000000011b8c	157	  for (i = init; i <= lim; ++i)
=> 0x11b8c <benchmark+284>:	sw	a0,-40(s0)
0x0000000000011b90	157	  for (i = init; i <= lim; ++i)
=> 0x11b90 <benchmark+288>:	j	0x11b44 <benchmark+212>
0x0000000000011b44	157	  for (i = init; i <= lim; ++i)
=> 0x11b44 <benchmark+212>:	lw	a0,-40(s0)
0x0000000000011b48	157	  for (i = init; i <= lim; ++i)
=> 0x11b48 <benchmark+216>:	lw	a1,-1912(gp)
0x0000000000011b4c	157	  for (i = init; i <= lim; ++i)
=> 0x11b4c <benchmark+220>:	blt	a1,a0,0x11b94 <benchmark+292>
163	  CTL_DELETE (pair, v2, begin, end2);
=> 0x11b94 <benchmark+292>:	ld	a0,-32(s0)
0x0000000000011b98	163	  CTL_DELETE (pair, v2, begin, end2);
=> 0x11b98 <benchmark+296>:	lw	a1,-1904(gp)
0x0000000000011b9c	163	  CTL_DELETE (pair, v2, begin, end2);
=> 0x11b9c <benchmark+300>:	lw	a2,-1896(gp)
0x0000000000011ba0	163	  CTL_DELETE (pair, v2, begin, end2);
=> 0x11ba0 <benchmark+304>:	jal	ra,0x118f8 <ctl_pairVectorDelete>
ctl_pairVectorDelete (s=0x203e8 <heap+432>, begin=178820963369061, end=47248834560) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x118f8 <ctl_pairVectorDelete>:	addi	t6,t6,-16
0x00000000000118fc	86	MAKE_VECTOR(pair)
=> 0x118fc <ctl_pairVectorDelete+4>:	sd	ra,0(t6)
0x0000000000011900	86	MAKE_VECTOR(pair)
=> 0x11900 <ctl_pairVectorDelete+8>:	st	zero,0(t6)
0x0000000000011904	86	MAKE_VECTOR(pair)
=> 0x11904 <ctl_pairVectorDelete+12>:	addi	sp,sp,-64
0x0000000000011908	86	MAKE_VECTOR(pair)
=> 0x11908 <ctl_pairVectorDelete+16>:	sd	ra,56(sp)
0x000000000001190c	86	MAKE_VECTOR(pair)
=> 0x1190c <ctl_pairVectorDelete+20>:	sd	s0,48(sp)
0x0000000000011910	86	MAKE_VECTOR(pair)
=> 0x11910 <ctl_pairVectorDelete+24>:	addi	s0,sp,64
0x0000000000011914	86	MAKE_VECTOR(pair)
=> 0x11914 <ctl_pairVectorDelete+28>:	sd	a0,-32(s0)
0x0000000000011918	86	MAKE_VECTOR(pair)
=> 0x11918 <ctl_pairVectorDelete+32>:	sd	a1,-40(s0)
0x000000000001191c	86	MAKE_VECTOR(pair)
=> 0x1191c <ctl_pairVectorDelete+36>:	sd	a2,-48(s0)
86	MAKE_VECTOR(pair)
=> 0x11920 <ctl_pairVectorDelete+40>:	ld	a0,-40(s0)
0x0000000000011924	86	MAKE_VECTOR(pair)
=> 0x11924 <ctl_pairVectorDelete+44>:	ld	a1,-48(s0)
0x0000000000011928	86	MAKE_VECTOR(pair)
=> 0x11928 <ctl_pairVectorDelete+48>:	bgeu	a1,a0,0x11944 <ctl_pairVectorDelete+76>
0x0000000000011944	86	MAKE_VECTOR(pair)
=> 0x11944 <ctl_pairVectorDelete+76>:	ld	a0,-48(s0)
0x0000000000011948	86	MAKE_VECTOR(pair)
=> 0x11948 <ctl_pairVectorDelete+80>:	ld	a1,-40(s0)
0x000000000001194c	86	MAKE_VECTOR(pair)
=> 0x1194c <ctl_pairVectorDelete+84>:	ld	a2,-32(s0)
0x0000000000011950	86	MAKE_VECTOR(pair)
=> 0x11950 <ctl_pairVectorDelete+88>:	ld	a3,16(a2)
0x0000000000011954	86	MAKE_VECTOR(pair)
=> 0x11954 <ctl_pairVectorDelete+92>:	sub	a0,a1,a0
0x0000000000011958	86	MAKE_VECTOR(pair)
=> 0x11958 <ctl_pairVectorDelete+96>:	add	a0,a3,a0
0x000000000001195c	86	MAKE_VECTOR(pair)
=> 0x1195c <ctl_pairVectorDelete+100>:	sd	a0,16(a2)
0x0000000000011960	86	MAKE_VECTOR(pair)
=> 0x11960 <ctl_pairVectorDelete+104>:	ld	a0,-32(s0)
0x0000000000011964	86	MAKE_VECTOR(pair)
=> 0x11964 <ctl_pairVectorDelete+108>:	ld	a1,8(a0)
0x0000000000011968	86	MAKE_VECTOR(pair)
=> 0x11968 <ctl_pairVectorDelete+112>:	ld	a2,-40(s0)
0x000000000001196c	86	MAKE_VECTOR(pair)
=> 0x1196c <ctl_pairVectorDelete+116>:	slli	a2,a2,0x3
0x0000000000011970	86	MAKE_VECTOR(pair)
=> 0x11970 <ctl_pairVectorDelete+120>:	add	a2,a1,a2
0x0000000000011974	86	MAKE_VECTOR(pair)
=> 0x11974 <ctl_pairVectorDelete+124>:	ld	a3,-48(s0)
0x0000000000011978	86	MAKE_VECTOR(pair)
=> 0x11978 <ctl_pairVectorDelete+128>:	slli	a3,a3,0x3
0x000000000001197c	86	MAKE_VECTOR(pair)
=> 0x1197c <ctl_pairVectorDelete+132>:	add	a1,a1,a3
0x0000000000011980	86	MAKE_VECTOR(pair)
=> 0x11980 <ctl_pairVectorDelete+136>:	ld	a0,16(a0)
0x0000000000011984	86	MAKE_VECTOR(pair)
=> 0x11984 <ctl_pairVectorDelete+140>:	slli	a0,a0,0x3
0x0000000000011988	86	MAKE_VECTOR(pair)
=> 0x11988 <ctl_pairVectorDelete+144>:	sd	a0,-56(s0)
0x000000000001198c	86	MAKE_VECTOR(pair)
=> 0x1198c <ctl_pairVectorDelete+148>:	mv	a0,a2
0x0000000000011990	86	MAKE_VECTOR(pair)
=> 0x11990 <ctl_pairVectorDelete+152>:	ld	a2,-56(s0)
0x0000000000011994	86	MAKE_VECTOR(pair)
=> 0x11994 <ctl_pairVectorDelete+156>:	jal	ra,0x124e8 <memmove>
0x00000000000124e8 in memmove ()
=> 0x124e8 <memmove>:	bgeu	a1,a0,0x1250c <memmove+36>
0x000000000001250c in memmove ()
=> 0x1250c <memmove+36>:	li	a5,31
0x000000000001250e in memmove ()
=> 0x1250e <memmove+38>:	bltu	a5,a2,0x12530 <memmove+72>
0x0000000000012530 in memmove ()
=> 0x12530 <memmove+72>:	or	a5,a1,a0
0x0000000000012534 in memmove ()
=> 0x12534 <memmove+76>:	andi	a5,a5,7
0x0000000000012536 in memmove ()
=> 0x12536 <memmove+78>:	bnez	a5,0x125b0 <memmove+200>
0x0000000000012538 in memmove ()
=> 0x12538 <memmove+80>:	addi	a7,a2,-32
0x000000000001253c in memmove ()
=> 0x1253c <memmove+84>:	andi	a7,a7,-32
0x0000000000012540 in memmove ()
=> 0x12540 <memmove+88>:	addi	a7,a7,32
0x0000000000012544 in memmove ()
=> 0x12544 <memmove+92>:	add	a6,a0,a7
0x0000000000012548 in memmove ()
=> 0x12548 <memmove+96>:	mv	a4,a1
0x000000000001254a in memmove ()
=> 0x1254a <memmove+98>:	mv	a5,a0
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x000000000001254c in memmove ()
=> 0x1254c <memmove+100>:	ld	a3,0(a4)
0x000000000001254e in memmove ()
=> 0x1254e <memmove+102>:	addi	a4,a4,32
0x0000000000012552 in memmove ()
=> 0x12552 <memmove+106>:	addi	a5,a5,32
0x0000000000012556 in memmove ()
=> 0x12556 <memmove+110>:	sd	a3,-32(a5)
0x000000000001255a in memmove ()
=> 0x1255a <memmove+114>:	ld	a3,-24(a4)
0x000000000001255e in memmove ()
=> 0x1255e <memmove+118>:	sd	a3,-24(a5)
0x0000000000012562 in memmove ()
=> 0x12562 <memmove+122>:	ld	a3,-16(a4)
0x0000000000012566 in memmove ()
=> 0x12566 <memmove+126>:	sd	a3,-16(a5)
0x000000000001256a in memmove ()
=> 0x1256a <memmove+130>:	ld	a3,-8(a4)
0x000000000001256e in memmove ()
=> 0x1256e <memmove+134>:	sd	a3,-8(a5)
0x0000000000012572 in memmove ()
=> 0x12572 <memmove+138>:	bne	a6,a5,0x1254c <memmove+100>
0x0000000000012576 in memmove ()
=> 0x12576 <memmove+142>:	andi	a4,a2,24
0x000000000001257a in memmove ()
=> 0x1257a <memmove+146>:	add	a1,a1,a7
0x000000000001257c in memmove ()
=> 0x1257c <memmove+148>:	andi	a6,a2,31
0x0000000000012580 in memmove ()
=> 0x12580 <memmove+152>:	beqz	a4,0x125ba <memmove+210>
0x00000000000125ba in memmove ()
=> 0x125ba <memmove+210>:	mv	a2,a6
0x00000000000125bc in memmove ()
=> 0x125bc <memmove+212>:	j	0x12514 <memmove+44>
0x0000000000012514 in memmove ()
=> 0x12514 <memmove+44>:	addi	a3,a2,-1
0x0000000000012518 in memmove ()
=> 0x12518 <memmove+48>:	beqz	a2,0x125b8 <memmove+208>
0x00000000000125b8 in memmove ()
=> 0x125b8 <memmove+208>:	ret
0x0000000000011998 in ctl_pairVectorDelete (s=0x203e8 <heap+432>, begin=4, end=8) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11998 <ctl_pairVectorDelete+160>:	li	a1,0
0x000000000001199c	86	MAKE_VECTOR(pair)
=> 0x1199c <ctl_pairVectorDelete+164>:	sw	a1,-20(s0)
0x00000000000119a0	86	MAKE_VECTOR(pair)
=> 0x119a0 <ctl_pairVectorDelete+168>:	j	0x119a4 <ctl_pairVectorDelete+172>
0x00000000000119a4	86	MAKE_VECTOR(pair)
=> 0x119a4 <ctl_pairVectorDelete+172>:	lw	a0,-20(s0)
0x00000000000119a8	86	MAKE_VECTOR(pair)
=> 0x119a8 <ctl_pairVectorDelete+176>:	ld	s0,48(sp)
0x00000000000119ac in ctl_pairVectorDelete (s=0x203e8 <heap+432>, begin=178820963369061, end=47248834560) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x119ac <ctl_pairVectorDelete+180>:	ld	ra,56(sp)
0x00000000000119b0	86	MAKE_VECTOR(pair)
=> 0x119b0 <ctl_pairVectorDelete+184>:	addi	sp,sp,64
0x00000000000119b4	86	MAKE_VECTOR(pair)
=> 0x119b4 <ctl_pairVectorDelete+188>:	ld	ra,0(t6)
0x00000000000119b8	86	MAKE_VECTOR(pair)
=> 0x119b8 <ctl_pairVectorDelete+192>:	addi	t6,t6,16
0x00000000000119bc	86	MAKE_VECTOR(pair)
=> 0x119bc <ctl_pairVectorDelete+196>:	ret
benchmark () at ctl.c:165
165	  while(v2->size > 0)
=> 0x11ba4 <benchmark+308>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xa2a300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xa2a300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xfe4e300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xfe4e300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1eb31e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1eb31e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x2d0fa600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x2d0fa600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x3afcc700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x3afcc700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x487cc700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x487cc700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x5591e600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x5591e600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x623e5e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x623e5e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x6e846300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x6e846300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x7a662300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x7a662300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x85e5c600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x85e5c600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x91056e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x91056e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x9bc73700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x9bc73700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xa62d3700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xa62d3700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xb0397e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xb0397e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xb9ee1600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xb9ee1600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xc34d0300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xc34d0300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xcc584300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xcc584300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xd511ce00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xd511ce00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xdd7b9600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xdd7b9600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xe5978700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xe5978700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xed678700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xed678700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xf4ed7600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xf4ed7600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xfc2b2e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0xfc2b2e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x103228300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x103228300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x109d54300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x109d54300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x110453600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x110453600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x116741e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x116741e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x11c63b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x11c63b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x12215b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x12215b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1278bce00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1278bce00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x12cc7a600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x12cc7a600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x131cae300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x131cae300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x136972300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x136972300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x13b2dfe00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x13b2dfe00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x13f910600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x13f910600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x143c1c700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x143c1c700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x147c1c700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x147c1c700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x14b928600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x14b928600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x14f357e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x14f357e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x152ac2300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x152ac2300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x155f7e300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x155f7e300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1591a2600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1591a2600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x15c144e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x15c144e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x15ee7b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x15ee7b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16195b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16195b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1641f9e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1641f9e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16686b600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16686b600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x168cc4300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x168cc4300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16af18300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16af18300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16cf7ae00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16cf7ae00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16edff600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x16edff600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x170ab8700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x170ab8700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1725b8700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1725b8700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x173f11600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x173f11600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1756d4e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1756d4e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x176d14300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x176d14300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1781e0300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1781e0300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x179549600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x179549600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17a75fe00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17a75fe00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17b833700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17b833700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17c7d3700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17c7d3700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17d64ee00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17d64ee00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17e3b4600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17e3b4600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17f012300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17f012300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17fb76300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x17fb76300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1805ede00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1805ede00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x180f86600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x180f86600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18184c700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18184c700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18204c700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18204c700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x182792600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x182792600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x182e29e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x182e29e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18341e300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18341e300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18397a300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18397a300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x183e48600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x183e48600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x184292e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x184292e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x184663700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x184663700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1849c3700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1849c3700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x184cbbe00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x184cbbe00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x184f55600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x184f55600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185198300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185198300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18538c300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x18538c300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185538e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185538e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1856a5600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1856a5600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1857d8700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1857d8700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1858d8700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1858d8700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1859ab600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x1859ab600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185a56e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185a56e00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185ae0300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185ae0300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185b4c300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185b4c300000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185b9f600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185b9f600000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185bdde00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185bdde00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185c0b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185c0b700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185c0f700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185c0f700000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185c11200000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185c11200000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
0x0000000000011bb8	165	  while(v2->size > 0)
=> 0x11bb8 <benchmark+328>:	j	0x11bbc <benchmark+332>
169	    CTL_POP (pair, v2, &k);
=> 0x11bbc <benchmark+332>:	ld	a0,-32(s0)
0x0000000000011bc0	169	    CTL_POP (pair, v2, &k);
=> 0x11bc0 <benchmark+336>:	addi	a1,s0,-64
0x0000000000011bc4	169	    CTL_POP (pair, v2, &k);
=> 0x11bc4 <benchmark+340>:	jal	ra,0x11338 <ctl_pairVectorPop_Back>
ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185c11a00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x11338 <ctl_pairVectorPop_Back>:	addi	t6,t6,-16
0x000000000001133c	86	MAKE_VECTOR(pair)
=> 0x1133c <ctl_pairVectorPop_Back+4>:	sd	ra,0(t6)
0x0000000000011340	86	MAKE_VECTOR(pair)
=> 0x11340 <ctl_pairVectorPop_Back+8>:	st	zero,0(t6)
0x0000000000011344	86	MAKE_VECTOR(pair)
=> 0x11344 <ctl_pairVectorPop_Back+12>:	addi	sp,sp,-48
0x0000000000011348	86	MAKE_VECTOR(pair)
=> 0x11348 <ctl_pairVectorPop_Back+16>:	sd	ra,40(sp)
0x000000000001134c	86	MAKE_VECTOR(pair)
=> 0x1134c <ctl_pairVectorPop_Back+20>:	sd	s0,32(sp)
0x0000000000011350	86	MAKE_VECTOR(pair)
=> 0x11350 <ctl_pairVectorPop_Back+24>:	addi	s0,sp,48
0x0000000000011354	86	MAKE_VECTOR(pair)
=> 0x11354 <ctl_pairVectorPop_Back+28>:	sd	a0,-32(s0)
0x0000000000011358	86	MAKE_VECTOR(pair)
=> 0x11358 <ctl_pairVectorPop_Back+32>:	sd	a1,-40(s0)
86	MAKE_VECTOR(pair)
=> 0x1135c <ctl_pairVectorPop_Back+36>:	ld	a0,-32(s0)
0x0000000000011360	86	MAKE_VECTOR(pair)
=> 0x11360 <ctl_pairVectorPop_Back+40>:	ld	a0,16(a0)
0x0000000000011364	86	MAKE_VECTOR(pair)
=> 0x11364 <ctl_pairVectorPop_Back+44>:	li	a1,0
0x0000000000011368	86	MAKE_VECTOR(pair)
=> 0x11368 <ctl_pairVectorPop_Back+48>:	bne	a0,a1,0x11384 <ctl_pairVectorPop_Back+76>
0x0000000000011384	86	MAKE_VECTOR(pair)
=> 0x11384 <ctl_pairVectorPop_Back+76>:	ld	a0,-32(s0)
0x0000000000011388	86	MAKE_VECTOR(pair)
=> 0x11388 <ctl_pairVectorPop_Back+80>:	ld	a1,16(a0)
0x000000000001138c	86	MAKE_VECTOR(pair)
=> 0x1138c <ctl_pairVectorPop_Back+84>:	addi	a1,a1,-1
0x0000000000011390	86	MAKE_VECTOR(pair)
=> 0x11390 <ctl_pairVectorPop_Back+88>:	sd	a1,16(a0)
0x0000000000011394	86	MAKE_VECTOR(pair)
=> 0x11394 <ctl_pairVectorPop_Back+92>:	ld	a0,-40(s0)
0x0000000000011398	86	MAKE_VECTOR(pair)
=> 0x11398 <ctl_pairVectorPop_Back+96>:	li	a1,0
0x000000000001139c	86	MAKE_VECTOR(pair)
=> 0x1139c <ctl_pairVectorPop_Back+100>:	bne	a0,a1,0x113b0 <ctl_pairVectorPop_Back+120>
0x00000000000113b0	86	MAKE_VECTOR(pair)
=> 0x113b0 <ctl_pairVectorPop_Back+120>:	ld	a0,-40(s0)
0x00000000000113b4	86	MAKE_VECTOR(pair)
=> 0x113b4 <ctl_pairVectorPop_Back+124>:	ld	a1,-32(s0)
0x00000000000113b8	86	MAKE_VECTOR(pair)
=> 0x113b8 <ctl_pairVectorPop_Back+128>:	ld	a2,8(a1)
0x00000000000113bc	86	MAKE_VECTOR(pair)
=> 0x113bc <ctl_pairVectorPop_Back+132>:	ld	a1,16(a1)
0x00000000000113c0	86	MAKE_VECTOR(pair)
=> 0x113c0 <ctl_pairVectorPop_Back+136>:	slli	a1,a1,0x3
0x00000000000113c4	86	MAKE_VECTOR(pair)
=> 0x113c4 <ctl_pairVectorPop_Back+140>:	add	a1,a2,a1
0x00000000000113c8	86	MAKE_VECTOR(pair)
=> 0x113c8 <ctl_pairVectorPop_Back+144>:	lw	a2,4(a1)
0x00000000000113cc	86	MAKE_VECTOR(pair)
=> 0x113cc <ctl_pairVectorPop_Back+148>:	sw	a2,4(a0)
0x00000000000113d0	86	MAKE_VECTOR(pair)
=> 0x113d0 <ctl_pairVectorPop_Back+152>:	lw	a1,0(a1)
0x00000000000113d4	86	MAKE_VECTOR(pair)
=> 0x113d4 <ctl_pairVectorPop_Back+156>:	sw	a1,0(a0)
0x00000000000113d8	86	MAKE_VECTOR(pair)
=> 0x113d8 <ctl_pairVectorPop_Back+160>:	li	a0,0
0x00000000000113dc	86	MAKE_VECTOR(pair)
=> 0x113dc <ctl_pairVectorPop_Back+164>:	sw	a0,-20(s0)
0x00000000000113e0	86	MAKE_VECTOR(pair)
=> 0x113e0 <ctl_pairVectorPop_Back+168>:	j	0x113e4 <ctl_pairVectorPop_Back+172>
0x00000000000113e4	86	MAKE_VECTOR(pair)
=> 0x113e4 <ctl_pairVectorPop_Back+172>:	lw	a0,-20(s0)
0x00000000000113e8	86	MAKE_VECTOR(pair)
=> 0x113e8 <ctl_pairVectorPop_Back+176>:	ld	s0,32(sp)
0x00000000000113ec in ctl_pairVectorPop_Back (s=0x203e8 <heap+432>, value=0x185c11a00000065) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x113ec <ctl_pairVectorPop_Back+180>:	ld	ra,40(sp)
0x00000000000113f0	86	MAKE_VECTOR(pair)
=> 0x113f0 <ctl_pairVectorPop_Back+184>:	addi	sp,sp,48
0x00000000000113f4	86	MAKE_VECTOR(pair)
=> 0x113f4 <ctl_pairVectorPop_Back+188>:	ld	ra,0(t6)
0x00000000000113f8	86	MAKE_VECTOR(pair)
=> 0x113f8 <ctl_pairVectorPop_Back+192>:	addi	t6,t6,16
0x00000000000113fc	86	MAKE_VECTOR(pair)
=> 0x113fc <ctl_pairVectorPop_Back+196>:	ret
benchmark () at ctl.c:171
171	    cnt += k.a*k.b;
=> 0x11bc8 <benchmark+344>:	lw	a1,-64(s0)
0x0000000000011bcc	171	    cnt += k.a*k.b;
=> 0x11bcc <benchmark+348>:	lw	a2,-60(s0)
0x0000000000011bd0	171	    cnt += k.a*k.b;
=> 0x11bd0 <benchmark+352>:	mul	a1,a1,a2
0x0000000000011bd4	171	    cnt += k.a*k.b;
=> 0x11bd4 <benchmark+356>:	lw	a2,-36(s0)
0x0000000000011bd8	171	    cnt += k.a*k.b;
=> 0x11bd8 <benchmark+360>:	add	a1,a2,a1
0x0000000000011bdc	171	    cnt += k.a*k.b;
=> 0x11bdc <benchmark+364>:	sw	a1,-36(s0)
165	  while(v2->size > 0)
=> 0x11be0 <benchmark+368>:	j	0x11ba8 <benchmark+312>
0x0000000000011ba8	165	  while(v2->size > 0)
=> 0x11ba8 <benchmark+312>:	ld	a0,-32(s0)
0x0000000000011bac	165	  while(v2->size > 0)
=> 0x11bac <benchmark+316>:	ld	a0,16(a0)
0x0000000000011bb0	165	  while(v2->size > 0)
=> 0x11bb0 <benchmark+320>:	li	a1,0
0x0000000000011bb4	165	  while(v2->size > 0)
=> 0x11bb4 <benchmark+324>:	beq	a0,a1,0x11be4 <benchmark+372>
174	  CTL_FREE (pair, v2);
=> 0x11be4 <benchmark+372>:	ld	a0,-32(s0)
0x0000000000011be8	174	  CTL_FREE (pair, v2);
=> 0x11be8 <benchmark+376>:	jal	ra,0x1119c <ctl_pairVectorFree>
ctl_pairVectorFree (s=0x20238 <heap>) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x1119c <ctl_pairVectorFree>:	addi	t6,t6,-16
0x00000000000111a0	86	MAKE_VECTOR(pair)
=> 0x111a0 <ctl_pairVectorFree+4>:	sd	ra,0(t6)
0x00000000000111a4	86	MAKE_VECTOR(pair)
=> 0x111a4 <ctl_pairVectorFree+8>:	st	zero,0(t6)
0x00000000000111a8	86	MAKE_VECTOR(pair)
=> 0x111a8 <ctl_pairVectorFree+12>:	addi	sp,sp,-32
0x00000000000111ac	86	MAKE_VECTOR(pair)
=> 0x111ac <ctl_pairVectorFree+16>:	sd	ra,24(sp)
0x00000000000111b0	86	MAKE_VECTOR(pair)
=> 0x111b0 <ctl_pairVectorFree+20>:	sd	s0,16(sp)
0x00000000000111b4	86	MAKE_VECTOR(pair)
=> 0x111b4 <ctl_pairVectorFree+24>:	addi	s0,sp,32
0x00000000000111b8	86	MAKE_VECTOR(pair)
=> 0x111b8 <ctl_pairVectorFree+28>:	sd	a0,-24(s0)
86	MAKE_VECTOR(pair)
=> 0x111bc <ctl_pairVectorFree+32>:	ld	a0,-24(s0)
0x00000000000111c0	86	MAKE_VECTOR(pair)
=> 0x111c0 <ctl_pairVectorFree+36>:	ld	a0,8(a0)
0x00000000000111c4	86	MAKE_VECTOR(pair)
=> 0x111c4 <ctl_pairVectorFree+40>:	jal	ra,0x106c8 <free_beebs>
free_beebs (ptr=0x203e8 <heap+432>) at ctl.c:78
78	{
=> 0x106c8 <free_beebs>:	addi	t6,t6,-16
0x00000000000106cc	78	{
=> 0x106cc <free_beebs+4>:	sd	ra,0(t6)
0x00000000000106d0	78	{
=> 0x106d0 <free_beebs+8>:	st	zero,0(t6)
0x00000000000106d4	78	{
=> 0x106d4 <free_beebs+12>:	addi	sp,sp,-32
0x00000000000106d8	78	{
=> 0x106d8 <free_beebs+16>:	sd	ra,24(sp)
0x00000000000106dc	78	{
=> 0x106dc <free_beebs+20>:	sd	s0,16(sp)
0x00000000000106e0	78	{
=> 0x106e0 <free_beebs+24>:	addi	s0,sp,32
0x00000000000106e4	78	{
=> 0x106e4 <free_beebs+28>:	sd	a0,-24(s0)
79	}
=> 0x106e8 <free_beebs+32>:	ld	s0,16(sp)
0x00000000000106ec in free_beebs (ptr=0x203e8 <heap+432>) at ctl.c:79
79	}
=> 0x106ec <free_beebs+36>:	ld	ra,24(sp)
0x00000000000106f0	79	}
=> 0x106f0 <free_beebs+40>:	addi	sp,sp,32
0x00000000000106f4	79	}
=> 0x106f4 <free_beebs+44>:	ld	ra,0(t6)
0x00000000000106f8	79	}
=> 0x106f8 <free_beebs+48>:	addi	t6,t6,16
0x00000000000106fc	79	}
=> 0x106fc <free_beebs+52>:	ret
0x00000000000111c8 in ctl_pairVectorFree (s=0x203e8 <heap+432>) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111c8 <ctl_pairVectorFree+44>:	ld	a0,-24(s0)
0x00000000000111cc	86	MAKE_VECTOR(pair)
=> 0x111cc <ctl_pairVectorFree+48>:	jal	ra,0x106c8 <free_beebs>
free_beebs (ptr=0x203e8 <heap+432>) at ctl.c:78
78	{
=> 0x106c8 <free_beebs>:	addi	t6,t6,-16
0x00000000000106cc	78	{
=> 0x106cc <free_beebs+4>:	sd	ra,0(t6)
0x00000000000106d0	78	{
=> 0x106d0 <free_beebs+8>:	st	zero,0(t6)
0x00000000000106d4	78	{
=> 0x106d4 <free_beebs+12>:	addi	sp,sp,-32
0x00000000000106d8	78	{
=> 0x106d8 <free_beebs+16>:	sd	ra,24(sp)
0x00000000000106dc	78	{
=> 0x106dc <free_beebs+20>:	sd	s0,16(sp)
0x00000000000106e0	78	{
=> 0x106e0 <free_beebs+24>:	addi	s0,sp,32
0x00000000000106e4	78	{
=> 0x106e4 <free_beebs+28>:	sd	a0,-24(s0)
79	}
=> 0x106e8 <free_beebs+32>:	ld	s0,16(sp)
0x00000000000106ec in free_beebs (ptr=0x203e8 <heap+432>) at ctl.c:79
79	}
=> 0x106ec <free_beebs+36>:	ld	ra,24(sp)
0x00000000000106f0	79	}
=> 0x106f0 <free_beebs+40>:	addi	sp,sp,32
0x00000000000106f4	79	}
=> 0x106f4 <free_beebs+44>:	ld	ra,0(t6)
0x00000000000106f8	79	}
=> 0x106f8 <free_beebs+48>:	addi	t6,t6,16
0x00000000000106fc	79	}
=> 0x106fc <free_beebs+52>:	ret
0x00000000000111d0 in ctl_pairVectorFree (s=0x203e8 <heap+432>) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111d0 <ctl_pairVectorFree+52>:	ld	s0,16(sp)
0x00000000000111d4 in ctl_pairVectorFree (s=0x20238 <heap>) at ctl.c:86
86	MAKE_VECTOR(pair)
=> 0x111d4 <ctl_pairVectorFree+56>:	ld	ra,24(sp)
0x00000000000111d8	86	MAKE_VECTOR(pair)
=> 0x111d8 <ctl_pairVectorFree+60>:	addi	sp,sp,32
0x00000000000111dc	86	MAKE_VECTOR(pair)
=> 0x111dc <ctl_pairVectorFree+64>:	ld	ra,0(t6)
0x00000000000111e0	86	MAKE_VECTOR(pair)
=> 0x111e0 <ctl_pairVectorFree+68>:	addi	t6,t6,16
0x00000000000111e4	86	MAKE_VECTOR(pair)
=> 0x111e4 <ctl_pairVectorFree+72>:	ret
benchmark () at ctl.c:176
176	  return cnt;
=> 0x11bec <benchmark+380>:	lw	a0,-36(s0)
0x0000000000011bf0	176	  return cnt;
=> 0x11bf0 <benchmark+384>:	ld	s0,48(sp)
0x0000000000011bf4 in benchmark () at ctl.c:176
176	  return cnt;
=> 0x11bf4 <benchmark+388>:	ld	ra,56(sp)
0x0000000000011bf8	176	  return cnt;
=> 0x11bf8 <benchmark+392>:	addi	sp,sp,64
0x0000000000011bfc	176	  return cnt;
=> 0x11bfc <benchmark+396>:	ld	ra,0(t6)
0x0000000000011c00	176	  return cnt;
=> 0x11c00 <benchmark+400>:	addi	t6,t6,16
0x0000000000011c04	176	  return cnt;
=> 0x11c04 <benchmark+404>:	ret
0x0000000000010248 in main (argc=1, argv=0x3ffffffb68) at main.c:57
57	      result = benchmark ();
=> 0x10248 <main+184>:	sw	a0,-40(s0)
58	    }
=> 0x1024c <main+188>:	j	0x10250 <main+192>
54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10250 <main+192>:	lw	a0,-36(s0)
0x0000000000010254	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10254 <main+196>:	addi	a0,a0,1
0x0000000000010258	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10258 <main+200>:	sw	a0,-36(s0)
0x000000000001025c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1025c <main+204>:	j	0x1022c <main+156>
0x000000000001022c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1022c <main+156>:	lw	a0,-36(s0)
0x0000000000010230	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10230 <main+160>:	li	a1,0
0x0000000000010234	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10234 <main+164>:	blt	a1,a0,0x10260 <main+208>
60	  stop_trigger ();
=> 0x10260 <main+208>:	jal	ra,0x102f8 <stop_trigger>
stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:40
40	{
=> 0x102f8 <stop_trigger>:	addi	t6,t6,-16
0x00000000000102fc	40	{
=> 0x102fc <stop_trigger+4>:	sd	ra,0(t6)
0x0000000000010300	40	{
=> 0x10300 <stop_trigger+8>:	st	zero,0(t6)
0x0000000000010304	40	{
=> 0x10304 <stop_trigger+12>:	addi	sp,sp,-16
47	}
=> 0x10308 <stop_trigger+16>:	sd	ra,8(sp)
0x000000000001030c	47	}
=> 0x1030c <stop_trigger+20>:	sd	s0,0(sp)
0x0000000000010310	47	}
=> 0x10310 <stop_trigger+24>:	addi	s0,sp,16
0x0000000000010314	47	}
=> 0x10314 <stop_trigger+28>:	ld	s0,0(sp)
0x0000000000010318 in stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:47
47	}
=> 0x10318 <stop_trigger+32>:	ld	ra,8(sp)
0x000000000001031c	47	}
=> 0x1031c <stop_trigger+36>:	addi	sp,sp,16
0x0000000000010320	47	}
=> 0x10320 <stop_trigger+40>:	ld	ra,0(t6)
0x0000000000010324	47	}
=> 0x10324 <stop_trigger+44>:	addi	t6,t6,16
0x0000000000010328	47	}
=> 0x10328 <stop_trigger+48>:	ret
main (argc=1, argv=0x3ffffffb68) at main.c:64
64	  correct = verify_benchmark (result);
=> 0x10264 <main+212>:	lw	a0,-40(s0)
0x0000000000010268	64	  correct = verify_benchmark (result);
=> 0x10268 <main+216>:	jal	ra,0x11c70 <verify_benchmark>
verify_benchmark (r=1) at ctl.c:190
190	{
=> 0x11c70 <verify_benchmark>:	addi	t6,t6,-16
0x0000000000011c74	190	{
=> 0x11c74 <verify_benchmark+4>:	sd	ra,0(t6)
0x0000000000011c78	190	{
=> 0x11c78 <verify_benchmark+8>:	st	zero,0(t6)
0x0000000000011c7c	190	{
=> 0x11c7c <verify_benchmark+12>:	addi	sp,sp,-32
0x0000000000011c80	190	{
=> 0x11c80 <verify_benchmark+16>:	sd	ra,24(sp)
0x0000000000011c84	190	{
=> 0x11c84 <verify_benchmark+20>:	sd	s0,16(sp)
0x0000000000011c88	190	{
=> 0x11c88 <verify_benchmark+24>:	addi	s0,sp,32
0x0000000000011c8c	190	{
=> 0x11c8c <verify_benchmark+28>:	mv	a1,a0
0x0000000000011c90	190	{
=> 0x11c90 <verify_benchmark+32>:	sw	a0,-24(s0)
0x0000000000011c94	190	{
=> 0x11c94 <verify_benchmark+36>:	lui	a0,0x185c
0x0000000000011c98	190	{
=> 0x11c98 <verify_benchmark+40>:	addiw	a0,a0,283
192	  int expected = 25542939;
=> 0x11c9c <verify_benchmark+44>:	sw	a0,-28(s0)
198	  if (r != expected)
=> 0x11ca0 <verify_benchmark+48>:	lw	a0,-24(s0)
0x0000000000011ca4	198	  if (r != expected)
=> 0x11ca4 <verify_benchmark+52>:	lw	a2,-28(s0)
0x0000000000011ca8	198	  if (r != expected)
=> 0x11ca8 <verify_benchmark+56>:	beq	a0,a2,0x11cbc <verify_benchmark+76>
0x0000000000011cbc	199	    return 0;
=> 0x11cbc <verify_benchmark+76>:	li	a0,1
200	  return 1;
=> 0x11cc0 <verify_benchmark+80>:	sw	a0,-20(s0)
0x0000000000011cc4	200	  return 1;
=> 0x11cc4 <verify_benchmark+84>:	j	0x11cc8 <verify_benchmark+88>
201	}
=> 0x11cc8 <verify_benchmark+88>:	lw	a0,-20(s0)
0x0000000000011ccc	201	}
=> 0x11ccc <verify_benchmark+92>:	ld	s0,16(sp)
0x0000000000011cd0 in verify_benchmark (r=1) at ctl.c:201
201	}
=> 0x11cd0 <verify_benchmark+96>:	ld	ra,24(sp)
0x0000000000011cd4	201	}
=> 0x11cd4 <verify_benchmark+100>:	addi	sp,sp,32
0x0000000000011cd8	201	}
=> 0x11cd8 <verify_benchmark+104>:	ld	ra,0(t6)
0x0000000000011cdc	201	}
=> 0x11cdc <verify_benchmark+108>:	addi	t6,t6,16
0x0000000000011ce0	201	}
=> 0x11ce0 <verify_benchmark+112>:	ret
0x000000000001026c in main (argc=1, argv=0x3ffffffb68) at main.c:64
64	  correct = verify_benchmark (result);
=> 0x1026c <main+220>:	sw	a0,-44(s0)
66	  free(a);
=> 0x10270 <main+224>:	ld	a0,-56(s0)
0x0000000000010274	66	  free(a);
=> 0x10274 <main+228>:	jal	ra,0x11dcc <free>
0x0000000000011dcc in free ()
=> 0x11dcc <free>:	mv	a1,a0
0x0000000000011dce in free ()
=> 0x11dce <free+2>:	ld	a0,-1952(gp)
0x0000000000011dd2 in free ()
=> 0x11dd2 <free+6>:	j	0x14a6e <_free_r>
0x0000000000014a6e in _free_r ()
=> 0x14a6e <_free_r>:	beqz	a1,0x14b5e <_free_r+240>
0x0000000000014a70 in _free_r ()
=> 0x14a70 <_free_r+2>:	addi	sp,sp,-32
0x0000000000014a72 in _free_r ()
=> 0x14a72 <_free_r+4>:	sd	s0,16(sp)
0x0000000000014a74 in _free_r ()
=> 0x14a74 <_free_r+6>:	sd	s1,8(sp)
0x0000000000014a76 in _free_r ()
=> 0x14a76 <_free_r+8>:	mv	s0,a1
0x0000000000014a78 in _free_r ()
=> 0x14a78 <_free_r+10>:	mv	s1,a0
0x0000000000014a7a in _free_r ()
=> 0x14a7a <_free_r+12>:	sd	ra,24(sp)
0x0000000000014a7c in _free_r ()
=> 0x14a7c <_free_r+14>:	jal	ra,0x12668 <__malloc_lock>
0x0000000000012668 in __malloc_lock ()
=> 0x12668 <__malloc_lock>:	ret
0x0000000000014a80 in _free_r ()
=> 0x14a80 <_free_r+18>:	ld	a0,-8(s0)
0x0000000000014a84 in _free_r ()
=> 0x14a84 <_free_r+22>:	addi	a4,s0,-16
0x0000000000014a88 in _free_r ()
=> 0x14a88 <_free_r+26>:	lui	a1,0x1f
0x0000000000014a8c in _free_r ()
=> 0x14a8c <_free_r+30>:	andi	a5,a0,-2
0x0000000000014a90 in _free_r ()
=> 0x14a90 <_free_r+34>:	add	a2,a4,a5
0x0000000000014a94 in _free_r ()
=> 0x14a94 <_free_r+38>:	addi	a1,a1,1896
0x0000000000014a98 in _free_r ()
=> 0x14a98 <_free_r+42>:	ld	a3,8(a2)
0x0000000000014a9a in _free_r ()
=> 0x14a9a <_free_r+44>:	ld	a6,16(a1)
0x0000000000014a9e in _free_r ()
=> 0x14a9e <_free_r+48>:	andi	a3,a3,-4
0x0000000000014aa0 in _free_r ()
=> 0x14aa0 <_free_r+50>:	beq	a6,a2,0x14be4 <_free_r+374>
0x0000000000014aa4 in _free_r ()
=> 0x14aa4 <_free_r+54>:	sd	a3,8(a2)
0x0000000000014aa6 in _free_r ()
=> 0x14aa6 <_free_r+56>:	andi	a0,a0,1
0x0000000000014aa8 in _free_r ()
=> 0x14aa8 <_free_r+58>:	add	a6,a2,a3
0x0000000000014aac in _free_r ()
=> 0x14aac <_free_r+62>:	bnez	a0,0x14b2e <_free_r+192>
0x0000000000014b2e in _free_r ()
=> 0x14b2e <_free_r+192>:	ld	a0,8(a6)
0x0000000000014b32 in _free_r ()
=> 0x14b32 <_free_r+196>:	andi	a0,a0,1
0x0000000000014b34 in _free_r ()
=> 0x14b34 <_free_r+198>:	bnez	a0,0x14b60 <_free_r+242>
0x0000000000014b60 in _free_r ()
=> 0x14b60 <_free_r+242>:	ori	a3,a5,1
0x0000000000014b64 in _free_r ()
=> 0x14b64 <_free_r+246>:	sd	a3,-8(s0)
0x0000000000014b68 in _free_r ()
=> 0x14b68 <_free_r+250>:	sd	a5,0(a2)
0x0000000000014b6a in _free_r ()
=> 0x14b6a <_free_r+252>:	li	a3,511
0x0000000000014b6e in _free_r ()
=> 0x14b6e <_free_r+256>:	bgeu	a3,a5,0x14af0 <_free_r+130>
0x0000000000014b72 in _free_r ()
=> 0x14b72 <_free_r+260>:	srli	a3,a5,0x9
0x0000000000014b76 in _free_r ()
=> 0x14b76 <_free_r+264>:	li	a2,4
0x0000000000014b78 in _free_r ()
=> 0x14b78 <_free_r+266>:	bltu	a2,a3,0x14c16 <_free_r+424>
0x0000000000014c16 in _free_r ()
=> 0x14c16 <_free_r+424>:	li	a2,20
0x0000000000014c18 in _free_r ()
=> 0x14c18 <_free_r+426>:	bgeu	a2,a3,0x14c3c <_free_r+462>
0x0000000000014c1c in _free_r ()
=> 0x14c1c <_free_r+430>:	li	a2,84
0x0000000000014c20 in _free_r ()
=> 0x14c20 <_free_r+434>:	bltu	a2,a3,0x14c74 <_free_r+518>
0x0000000000014c74 in _free_r ()
=> 0x14c74 <_free_r+518>:	li	a2,340
0x0000000000014c78 in _free_r ()
=> 0x14c78 <_free_r+522>:	bltu	a2,a3,0x14c90 <_free_r+546>
0x0000000000014c90 in _free_r ()
=> 0x14c90 <_free_r+546>:	li	a2,1364
0x0000000000014c94 in _free_r ()
=> 0x14c94 <_free_r+550>:	bltu	a2,a3,0x14cac <_free_r+574>
0x0000000000014cac in _free_r ()
=> 0x14cac <_free_r+574>:	li	a0,2032
0x0000000000014cb0 in _free_r ()
=> 0x14cb0 <_free_r+578>:	li	a2,126
0x0000000000014cb4 in _free_r ()
=> 0x14cb4 <_free_r+582>:	j	0x14b8e <_free_r+288>
0x0000000000014b8e in _free_r ()
=> 0x14b8e <_free_r+288>:	add	a0,a0,a1
0x0000000000014b90 in _free_r ()
=> 0x14b90 <_free_r+290>:	ld	a3,0(a0)
0x0000000000014b92 in _free_r ()
=> 0x14b92 <_free_r+292>:	addi	a0,a0,-16
0x0000000000014b94 in _free_r ()
=> 0x14b94 <_free_r+294>:	beq	a0,a3,0x14c5e <_free_r+496>
0x0000000000014c5e in _free_r ()
=> 0x14c5e <_free_r+496>:	ld	a6,8(a1)
0x0000000000014c62 in _free_r ()
=> 0x14c62 <_free_r+500>:	sraiw	a2,a2,0x2
0x0000000000014c66 in _free_r ()
=> 0x14c66 <_free_r+504>:	li	a5,1
0x0000000000014c68 in _free_r ()
=> 0x14c68 <_free_r+506>:	sll	a2,a5,a2
0x0000000000014c6c in _free_r ()
=> 0x14c6c <_free_r+510>:	or	a2,a2,a6
0x0000000000014c70 in _free_r ()
=> 0x14c70 <_free_r+514>:	sd	a2,8(a1)
0x0000000000014c72 in _free_r ()
=> 0x14c72 <_free_r+516>:	j	0x14ba8 <_free_r+314>
0x0000000000014ba8 in _free_r ()
=> 0x14ba8 <_free_r+314>:	sd	a0,24(a4)
0x0000000000014baa in _free_r ()
=> 0x14baa <_free_r+316>:	sd	a3,16(a4)
0x0000000000014bac in _free_r ()
=> 0x14bac <_free_r+318>:	ld	s0,16(sp)
0x0000000000014bae in _free_r ()
=> 0x14bae <_free_r+320>:	sd	a4,16(a0)
0x0000000000014bb0 in _free_r ()
=> 0x14bb0 <_free_r+322>:	ld	ra,24(sp)
0x0000000000014bb2 in _free_r ()
=> 0x14bb2 <_free_r+324>:	mv	a0,s1
0x0000000000014bb4 in _free_r ()
=> 0x14bb4 <_free_r+326>:	ld	s1,8(sp)
0x0000000000014bb6 in _free_r ()
=> 0x14bb6 <_free_r+328>:	sd	a4,24(a3)
0x0000000000014bb8 in _free_r ()
=> 0x14bb8 <_free_r+330>:	addi	sp,sp,32
0x0000000000014bba in _free_r ()
=> 0x14bba <_free_r+332>:	j	0x1266a <__malloc_unlock>
0x000000000001266a in __malloc_unlock ()
=> 0x1266a <__malloc_unlock>:	ret
main (argc=1, argv=0x3ffffffb68) at main.c:68
68	  return (!correct);
=> 0x10278 <main+232>:	lw	a0,-44(s0)
0x000000000001027c	68	  return (!correct);
=> 0x1027c <main+236>:	seqz	a0,a0
0x0000000000010280	68	  return (!correct);
=> 0x10280 <main+240>:	ld	s0,112(sp)
0x0000000000010284 in main (argc=<error reading variable: Cannot access memory at address 0x2aaabbdd08>, argv=<error reading variable: Cannot access memory at address 0x2aaabbdd00>) at main.c:68
68	  return (!correct);
=> 0x10284 <main+244>:	ld	ra,120(sp)
0x0000000000010288	68	  return (!correct);
=> 0x10288 <main+248>:	addi	sp,sp,128
0x000000000001028c	68	  return (!correct);
=> 0x1028c <main+252>:	ret
0x000000000001013a in _start ()
=> 0x1013a <_start+64>:	j	0x11d34 <exit>
0x0000000000011d34 in exit ()
=> 0x11d34 <exit>:	addi	sp,sp,-16
0x0000000000011d36 in exit ()
=> 0x11d36 <exit+2>:	li	a1,0
0x0000000000011d38 in exit ()
=> 0x11d38 <exit+4>:	sd	s0,0(sp)
0x0000000000011d3a in exit ()
=> 0x11d3a <exit+6>:	sd	ra,8(sp)
0x0000000000011d3c in exit ()
=> 0x11d3c <exit+8>:	mv	s0,a0
0x0000000000011d3e in exit ()
=> 0x11d3e <exit+10>:	jal	ra,0x14408 <__call_exitprocs>
0x0000000000014408 in __call_exitprocs ()
=> 0x14408 <__call_exitprocs>:	addi	sp,sp,-80
0x000000000001440a in __call_exitprocs ()
=> 0x1440a <__call_exitprocs+2>:	sd	s4,32(sp)
0x000000000001440c in __call_exitprocs ()
=> 0x1440c <__call_exitprocs+4>:	ld	s4,-2000(gp)
0x0000000000014410 in __call_exitprocs ()
=> 0x14410 <__call_exitprocs+8>:	sd	s2,48(sp)
0x0000000000014412 in __call_exitprocs ()
=> 0x14412 <__call_exitprocs+10>:	sd	ra,72(sp)
0x0000000000014414 in __call_exitprocs ()
=> 0x14414 <__call_exitprocs+12>:	ld	s2,504(s4)
0x0000000000014418 in __call_exitprocs ()
=> 0x14418 <__call_exitprocs+16>:	sd	s0,64(sp)
0x000000000001441a in __call_exitprocs ()
=> 0x1441a <__call_exitprocs+18>:	sd	s1,56(sp)
0x000000000001441c in __call_exitprocs ()
=> 0x1441c <__call_exitprocs+20>:	sd	s3,40(sp)
0x000000000001441e in __call_exitprocs ()
=> 0x1441e <__call_exitprocs+22>:	sd	s5,24(sp)
0x0000000000014420 in __call_exitprocs ()
=> 0x14420 <__call_exitprocs+24>:	sd	s6,16(sp)
0x0000000000014422 in __call_exitprocs ()
=> 0x14422 <__call_exitprocs+26>:	sd	s7,8(sp)
0x0000000000014424 in __call_exitprocs ()
=> 0x14424 <__call_exitprocs+28>:	sd	s8,0(sp)
0x0000000000014426 in __call_exitprocs ()
=> 0x14426 <__call_exitprocs+30>:	beqz	s2,0x14456 <__call_exitprocs+78>
0x000000000001442a in __call_exitprocs ()
=> 0x1442a <__call_exitprocs+34>:	mv	s6,a0
0x000000000001442c in __call_exitprocs ()
=> 0x1442c <__call_exitprocs+36>:	mv	s7,a1
0x000000000001442e in __call_exitprocs ()
=> 0x1442e <__call_exitprocs+38>:	li	s5,1
0x0000000000014430 in __call_exitprocs ()
=> 0x14430 <__call_exitprocs+40>:	li	s3,-1
0x0000000000014432 in __call_exitprocs ()
=> 0x14432 <__call_exitprocs+42>:	lw	s1,8(s2)
0x0000000000014436 in __call_exitprocs ()
=> 0x14436 <__call_exitprocs+46>:	addiw	s0,s1,-1
0x000000000001443a in __call_exitprocs ()
=> 0x1443a <__call_exitprocs+50>:	bltz	s0,0x14456 <__call_exitprocs+78>
0x000000000001443e in __call_exitprocs ()
=> 0x1443e <__call_exitprocs+54>:	slli	s1,s1,0x3
0x0000000000014440 in __call_exitprocs ()
=> 0x14440 <__call_exitprocs+56>:	add	s1,s1,s2
0x0000000000014442 in __call_exitprocs ()
=> 0x14442 <__call_exitprocs+58>:	beqz	s7,0x1446e <__call_exitprocs+102>
0x000000000001446e in __call_exitprocs ()
=> 0x1446e <__call_exitprocs+102>:	lw	a5,8(s2)
0x0000000000014472 in __call_exitprocs ()
=> 0x14472 <__call_exitprocs+106>:	ld	a4,8(s1)
0x0000000000014474 in __call_exitprocs ()
=> 0x14474 <__call_exitprocs+108>:	addiw	a5,a5,-1
0x0000000000014476 in __call_exitprocs ()
=> 0x14476 <__call_exitprocs+110>:	beq	a5,s0,0x144be <__call_exitprocs+182>
0x00000000000144be in __call_exitprocs ()
=> 0x144be <__call_exitprocs+182>:	sw	s0,8(s2)
0x00000000000144c2 in __call_exitprocs ()
=> 0x144c2 <__call_exitprocs+186>:	j	0x1447e <__call_exitprocs+118>
0x000000000001447e in __call_exitprocs ()
=> 0x1447e <__call_exitprocs+118>:	beqz	a4,0x1444e <__call_exitprocs+70>
0x0000000000014480 in __call_exitprocs ()
=> 0x14480 <__call_exitprocs+120>:	lw	a5,784(s2)
0x0000000000014484 in __call_exitprocs ()
=> 0x14484 <__call_exitprocs+124>:	sllw	a3,s5,s0
0x0000000000014488 in __call_exitprocs ()
=> 0x14488 <__call_exitprocs+128>:	lw	s8,8(s2)
0x000000000001448c in __call_exitprocs ()
=> 0x1448c <__call_exitprocs+132>:	and	a5,a5,a3
0x000000000001448e in __call_exitprocs ()
=> 0x1448e <__call_exitprocs+134>:	sext.w	a5,a5
0x0000000000014490 in __call_exitprocs ()
=> 0x14490 <__call_exitprocs+136>:	bnez	a5,0x144aa <__call_exitprocs+162>
0x0000000000014492 in __call_exitprocs ()
=> 0x14492 <__call_exitprocs+138>:	jalr	a4
0x0000000000014960 in __libc_fini_array ()
=> 0x14960 <__libc_fini_array>:	addi	sp,sp,-32
0x0000000000014962 in __libc_fini_array ()
=> 0x14962 <__libc_fini_array+2>:	sd	s0,16(sp)
0x0000000000014964 in __libc_fini_array ()
=> 0x14964 <__libc_fini_array+4>:	lui	a5,0x1f
0x0000000000014968 in __libc_fini_array ()
=> 0x14968 <__libc_fini_array+8>:	lui	s0,0x1f
0x000000000001496c in __libc_fini_array ()
=> 0x1496c <__libc_fini_array+12>:	addi	s0,s0,24
0x0000000000014970 in __libc_fini_array ()
=> 0x14970 <__libc_fini_array+16>:	addi	a5,a5,32
0x0000000000014974 in __libc_fini_array ()
=> 0x14974 <__libc_fini_array+20>:	sub	a5,a5,s0
0x0000000000014976 in __libc_fini_array ()
=> 0x14976 <__libc_fini_array+22>:	sd	s1,8(sp)
0x0000000000014978 in __libc_fini_array ()
=> 0x14978 <__libc_fini_array+24>:	sd	ra,24(sp)
0x000000000001497a in __libc_fini_array ()
=> 0x1497a <__libc_fini_array+26>:	srai	s1,a5,0x3
0x000000000001497e in __libc_fini_array ()
=> 0x1497e <__libc_fini_array+30>:	beqz	s1,0x1498e <__libc_fini_array+46>
0x0000000000014980 in __libc_fini_array ()
=> 0x14980 <__libc_fini_array+32>:	addi	a5,a5,-8
0x0000000000014982 in __libc_fini_array ()
=> 0x14982 <__libc_fini_array+34>:	add	s0,s0,a5
0x0000000000014984 in __libc_fini_array ()
=> 0x14984 <__libc_fini_array+36>:	ld	a5,0(s0)
0x0000000000014986 in __libc_fini_array ()
=> 0x14986 <__libc_fini_array+38>:	addi	s1,s1,-1
0x0000000000014988 in __libc_fini_array ()
=> 0x14988 <__libc_fini_array+40>:	addi	s0,s0,-8
0x000000000001498a in __libc_fini_array ()
=> 0x1498a <__libc_fini_array+42>:	jalr	a5
0x000000000001013e in __do_global_dtors_aux ()
=> 0x1013e <__do_global_dtors_aux>:	lbu	a4,-1824(gp)
0x0000000000010142 in __do_global_dtors_aux ()
=> 0x10142 <__do_global_dtors_aux+4>:	bnez	a4,0x10170 <__do_global_dtors_aux+50>
0x0000000000010144 in __do_global_dtors_aux ()
=> 0x10144 <__do_global_dtors_aux+6>:	addi	sp,sp,-16
0x0000000000010146 in __do_global_dtors_aux ()
=> 0x10146 <__do_global_dtors_aux+8>:	sd	s0,0(sp)
0x0000000000010148 in __do_global_dtors_aux ()
=> 0x10148 <__do_global_dtors_aux+10>:	mv	s0,a5
0x000000000001014a in __do_global_dtors_aux ()
=> 0x1014a <__do_global_dtors_aux+12>:	sd	ra,8(sp)
0x000000000001014c in __do_global_dtors_aux ()
=> 0x1014c <__do_global_dtors_aux+14>:	li	a5,0
0x0000000000010150 in __do_global_dtors_aux ()
=> 0x10150 <__do_global_dtors_aux+18>:	beqz	a5,0x10162 <__do_global_dtors_aux+36>
0x0000000000010162 in __do_global_dtors_aux ()
=> 0x10162 <__do_global_dtors_aux+36>:	li	a5,1
0x0000000000010164 in __do_global_dtors_aux ()
=> 0x10164 <__do_global_dtors_aux+38>:	ld	ra,8(sp)
0x0000000000010166 in __do_global_dtors_aux ()
=> 0x10166 <__do_global_dtors_aux+40>:	sb	a5,-1824(gp)
0x000000000001016a in __do_global_dtors_aux ()
=> 0x1016a <__do_global_dtors_aux+44>:	ld	s0,0(sp)
0x000000000001016c in __do_global_dtors_aux ()
=> 0x1016c <__do_global_dtors_aux+46>:	addi	sp,sp,16
0x000000000001016e in __do_global_dtors_aux ()
=> 0x1016e <__do_global_dtors_aux+48>:	ret
0x000000000001498c in __libc_fini_array ()
=> 0x1498c <__libc_fini_array+44>:	bnez	s1,0x14984 <__libc_fini_array+36>
0x000000000001498e in __libc_fini_array ()
=> 0x1498e <__libc_fini_array+46>:	ld	ra,24(sp)
0x0000000000014990 in __libc_fini_array ()
=> 0x14990 <__libc_fini_array+48>:	ld	s0,16(sp)
0x0000000000014992 in __libc_fini_array ()
=> 0x14992 <__libc_fini_array+50>:	ld	s1,8(sp)
0x0000000000014994 in __libc_fini_array ()
=> 0x14994 <__libc_fini_array+52>:	addi	sp,sp,32
0x0000000000014996 in __libc_fini_array ()
=> 0x14996 <__libc_fini_array+54>:	ret
0x0000000000014494 in __call_exitprocs ()
=> 0x14494 <__call_exitprocs+140>:	lw	a4,8(s2)
0x0000000000014498 in __call_exitprocs ()
=> 0x14498 <__call_exitprocs+144>:	ld	a5,504(s4)
0x000000000001449c in __call_exitprocs ()
=> 0x1449c <__call_exitprocs+148>:	bne	a4,s8,0x144a4 <__call_exitprocs+156>
0x00000000000144a0 in __call_exitprocs ()
=> 0x144a0 <__call_exitprocs+152>:	beq	a5,s2,0x1444e <__call_exitprocs+70>
0x000000000001444e in __call_exitprocs ()
=> 0x1444e <__call_exitprocs+70>:	addiw	s0,s0,-1
0x0000000000014450 in __call_exitprocs ()
=> 0x14450 <__call_exitprocs+72>:	addi	s1,s1,-8
0x0000000000014452 in __call_exitprocs ()
=> 0x14452 <__call_exitprocs+74>:	bne	s0,s3,0x14442 <__call_exitprocs+58>
0x0000000000014456 in __call_exitprocs ()
=> 0x14456 <__call_exitprocs+78>:	ld	ra,72(sp)
0x0000000000014458 in __call_exitprocs ()
=> 0x14458 <__call_exitprocs+80>:	ld	s0,64(sp)
0x000000000001445a in __call_exitprocs ()
=> 0x1445a <__call_exitprocs+82>:	ld	s1,56(sp)
0x000000000001445c in __call_exitprocs ()
=> 0x1445c <__call_exitprocs+84>:	ld	s2,48(sp)
0x000000000001445e in __call_exitprocs ()
=> 0x1445e <__call_exitprocs+86>:	ld	s3,40(sp)
0x0000000000014460 in __call_exitprocs ()
=> 0x14460 <__call_exitprocs+88>:	ld	s4,32(sp)
0x0000000000014462 in __call_exitprocs ()
=> 0x14462 <__call_exitprocs+90>:	ld	s5,24(sp)
0x0000000000014464 in __call_exitprocs ()
=> 0x14464 <__call_exitprocs+92>:	ld	s6,16(sp)
0x0000000000014466 in __call_exitprocs ()
=> 0x14466 <__call_exitprocs+94>:	ld	s7,8(sp)
0x0000000000014468 in __call_exitprocs ()
=> 0x14468 <__call_exitprocs+96>:	ld	s8,0(sp)
0x000000000001446a in __call_exitprocs ()
=> 0x1446a <__call_exitprocs+98>:	addi	sp,sp,80
0x000000000001446c in __call_exitprocs ()
=> 0x1446c <__call_exitprocs+100>:	ret
0x0000000000011d42 in exit ()
=> 0x11d42 <exit+14>:	ld	a0,-2000(gp)
0x0000000000011d46 in exit ()
=> 0x11d46 <exit+18>:	ld	a5,88(a0)
0x0000000000011d48 in exit ()
=> 0x11d48 <exit+20>:	beqz	a5,0x11d4c <exit+24>
0x0000000000011d4a in exit ()
=> 0x11d4a <exit+22>:	jalr	a5
0x00000000000146e0 in _cleanup_r ()
=> 0x146e0 <_cleanup_r>:	lui	a1,0x1b
0x00000000000146e2 in _cleanup_r ()
=> 0x146e2 <_cleanup_r+2>:	addi	a1,a1,-368
0x00000000000146e6 in _cleanup_r ()
=> 0x146e6 <_cleanup_r+6>:	j	0x14d42 <_fwalk_reent>
0x0000000000014d42 in _fwalk_reent ()
=> 0x14d42 <_fwalk_reent>:	addi	sp,sp,-80
0x0000000000014d44 in _fwalk_reent ()
=> 0x14d44 <_fwalk_reent+2>:	sd	s2,48(sp)
0x0000000000014d46 in _fwalk_reent ()
=> 0x14d46 <_fwalk_reent+4>:	sd	s3,40(sp)
0x0000000000014d48 in _fwalk_reent ()
=> 0x14d48 <_fwalk_reent+6>:	sd	s4,32(sp)
0x0000000000014d4a in _fwalk_reent ()
=> 0x14d4a <_fwalk_reent+8>:	sd	s5,24(sp)
0x0000000000014d4c in _fwalk_reent ()
=> 0x14d4c <_fwalk_reent+10>:	sd	s6,16(sp)
0x0000000000014d4e in _fwalk_reent ()
=> 0x14d4e <_fwalk_reent+12>:	sd	s7,8(sp)
0x0000000000014d50 in _fwalk_reent ()
=> 0x14d50 <_fwalk_reent+14>:	sd	s8,0(sp)
0x0000000000014d52 in _fwalk_reent ()
=> 0x14d52 <_fwalk_reent+16>:	sd	ra,72(sp)
0x0000000000014d54 in _fwalk_reent ()
=> 0x14d54 <_fwalk_reent+18>:	sd	s0,64(sp)
0x0000000000014d56 in _fwalk_reent ()
=> 0x14d56 <_fwalk_reent+20>:	sd	s1,56(sp)
0x0000000000014d58 in _fwalk_reent ()
=> 0x14d58 <_fwalk_reent+22>:	mv	s8,a0
0x0000000000014d5a in _fwalk_reent ()
=> 0x14d5a <_fwalk_reent+24>:	mv	s4,a1
0x0000000000014d5c in _fwalk_reent ()
=> 0x14d5c <_fwalk_reent+26>:	addi	s2,a0,1312
0x0000000000014d60 in _fwalk_reent ()
=> 0x14d60 <_fwalk_reent+30>:	li	s6,0
0x0000000000014d62 in _fwalk_reent ()
=> 0x14d62 <_fwalk_reent+32>:	li	s5,176
0x0000000000014d66 in _fwalk_reent ()
=> 0x14d66 <_fwalk_reent+36>:	li	s7,1
0x0000000000014d68 in _fwalk_reent ()
=> 0x14d68 <_fwalk_reent+38>:	li	s3,-1
0x0000000000014d6a in _fwalk_reent ()
=> 0x14d6a <_fwalk_reent+40>:	lw	a5,8(s2)
0x0000000000014d6e in _fwalk_reent ()
=> 0x14d6e <_fwalk_reent+44>:	ld	s0,16(s2)
0x0000000000014d72 in _fwalk_reent ()
=> 0x14d72 <_fwalk_reent+48>:	blez	a5,0x14daa <_fwalk_reent+104>
0x0000000000014d76 in _fwalk_reent ()
=> 0x14d76 <_fwalk_reent+52>:	addiw	s1,a5,-1
0x0000000000014d7a in _fwalk_reent ()
=> 0x14d7a <_fwalk_reent+56>:	slli	s1,s1,0x20
0x0000000000014d7c in _fwalk_reent ()
=> 0x14d7c <_fwalk_reent+58>:	srli	s1,s1,0x20
0x0000000000014d7e in _fwalk_reent ()
=> 0x14d7e <_fwalk_reent+60>:	addi	s1,s1,1
0x0000000000014d80 in _fwalk_reent ()
=> 0x14d80 <_fwalk_reent+62>:	mul	s1,s1,s5
0x0000000000014d84 in _fwalk_reent ()
=> 0x14d84 <_fwalk_reent+66>:	add	s1,s1,s0
0x0000000000014d86 in _fwalk_reent ()
=> 0x14d86 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000014d8a in _fwalk_reent ()
=> 0x14d8a <_fwalk_reent+72>:	bgeu	s7,a5,0x14da2 <_fwalk_reent+96>
0x0000000000014d8e in _fwalk_reent ()
=> 0x14d8e <_fwalk_reent+76>:	lh	a5,18(s0)
0x0000000000014d92 in _fwalk_reent ()
=> 0x14d92 <_fwalk_reent+80>:	mv	a1,s0
0x0000000000014d94 in _fwalk_reent ()
=> 0x14d94 <_fwalk_reent+82>:	mv	a0,s8
0x0000000000014d96 in _fwalk_reent ()
=> 0x14d96 <_fwalk_reent+84>:	beq	a5,s3,0x14da2 <_fwalk_reent+96>
0x0000000000014d9a in _fwalk_reent ()
=> 0x14d9a <_fwalk_reent+88>:	jalr	s4
0x000000000001ae90 in _fclose_r ()
=> 0x1ae90 <_fclose_r>:	beqz	a1,0x1aeca <_fclose_r+58>
0x000000000001ae92 in _fclose_r ()
=> 0x1ae92 <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001ae94 in _fclose_r ()
=> 0x1ae94 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001ae96 in _fclose_r ()
=> 0x1ae96 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001ae98 in _fclose_r ()
=> 0x1ae98 <_fclose_r+8>:	mv	s0,a0
0x000000000001ae9a in _fclose_r ()
=> 0x1ae9a <_fclose_r+10>:	beqz	a0,0x1aea0 <_fclose_r+16>
0x000000000001ae9c in _fclose_r ()
=> 0x1ae9c <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001ae9e in _fclose_r ()
=> 0x1ae9e <_fclose_r+14>:	beqz	a5,0x1aeba <_fclose_r+42>
0x000000000001aea0 in _fclose_r ()
=> 0x1aea0 <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001aea4 in _fclose_r ()
=> 0x1aea4 <_fclose_r+20>:	bnez	a5,0x1aeb0 <_fclose_r+32>
0x000000000001aeb0 in _fclose_r ()
=> 0x1aeb0 <_fclose_r+32>:	mv	a0,s0
0x000000000001aeb2 in _fclose_r ()
=> 0x1aeb2 <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001aeb4 in _fclose_r ()
=> 0x1aeb4 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001aeb6 in _fclose_r ()
=> 0x1aeb6 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001aeb8 in _fclose_r ()
=> 0x1aeb8 <_fclose_r+40>:	j	0x1ae10 <_fclose_r.part.0>
0x000000000001ae10 in _fclose_r.part.0 ()
=> 0x1ae10 <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001ae12 in _fclose_r.part.0 ()
=> 0x1ae12 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001ae14 in _fclose_r.part.0 ()
=> 0x1ae14 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001ae16 in _fclose_r.part.0 ()
=> 0x1ae16 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001ae18 in _fclose_r.part.0 ()
=> 0x1ae18 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001ae1a in _fclose_r.part.0 ()
=> 0x1ae1a <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001ae1c in _fclose_r.part.0 ()
=> 0x1ae1c <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001ae1e in _fclose_r.part.0 ()
=> 0x1ae1e <_fclose_r.part.0+14>:	jal	ra,0x144ca <__sflush_r>
0x00000000000144ca in __sflush_r ()
=> 0x144ca <__sflush_r>:	lh	a5,16(a1)
0x00000000000144ce in __sflush_r ()
=> 0x144ce <__sflush_r+4>:	addi	sp,sp,-48
0x00000000000144d0 in __sflush_r ()
=> 0x144d0 <__sflush_r+6>:	sd	s0,32(sp)
0x00000000000144d2 in __sflush_r ()
=> 0x144d2 <__sflush_r+8>:	sd	s3,8(sp)
0x00000000000144d4 in __sflush_r ()
=> 0x144d4 <__sflush_r+10>:	sd	ra,40(sp)
0x00000000000144d6 in __sflush_r ()
=> 0x144d6 <__sflush_r+12>:	sd	s1,24(sp)
0x00000000000144d8 in __sflush_r ()
=> 0x144d8 <__sflush_r+14>:	sd	s2,16(sp)
0x00000000000144da in __sflush_r ()
=> 0x144da <__sflush_r+16>:	andi	a3,a5,8
0x00000000000144de in __sflush_r ()
=> 0x144de <__sflush_r+20>:	mv	s0,a1
0x00000000000144e0 in __sflush_r ()
=> 0x144e0 <__sflush_r+22>:	mv	s3,a0
0x00000000000144e2 in __sflush_r ()
=> 0x144e2 <__sflush_r+24>:	bnez	a3,0x14596 <__sflush_r+204>
0x00000000000144e4 in __sflush_r ()
=> 0x144e4 <__sflush_r+26>:	lui	a4,0x1
0x00000000000144e6 in __sflush_r ()
=> 0x144e6 <__sflush_r+28>:	addi	a4,a4,-2048
0x00000000000144ea in __sflush_r ()
=> 0x144ea <__sflush_r+32>:	lw	a3,8(a1)
0x00000000000144ec in __sflush_r ()
=> 0x144ec <__sflush_r+34>:	or	a5,a5,a4
0x00000000000144ee in __sflush_r ()
=> 0x144ee <__sflush_r+36>:	sh	a5,16(a1)
0x00000000000144f2 in __sflush_r ()
=> 0x144f2 <__sflush_r+40>:	blez	a3,0x145f2 <__sflush_r+296>
0x00000000000145f2 in __sflush_r ()
=> 0x145f2 <__sflush_r+296>:	lw	a4,112(a1)
0x00000000000145f4 in __sflush_r ()
=> 0x145f4 <__sflush_r+298>:	bgtz	a4,0x144f6 <__sflush_r+44>
0x00000000000145f8 in __sflush_r ()
=> 0x145f8 <__sflush_r+302>:	j	0x14586 <__sflush_r+188>
0x0000000000014586 in __sflush_r ()
=> 0x14586 <__sflush_r+188>:	li	a0,0
0x0000000000014588 in __sflush_r ()
=> 0x14588 <__sflush_r+190>:	ld	ra,40(sp)
0x000000000001458a in __sflush_r ()
=> 0x1458a <__sflush_r+192>:	ld	s0,32(sp)
0x000000000001458c in __sflush_r ()
=> 0x1458c <__sflush_r+194>:	ld	s1,24(sp)
0x000000000001458e in __sflush_r ()
=> 0x1458e <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000014590 in __sflush_r ()
=> 0x14590 <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000014592 in __sflush_r ()
=> 0x14592 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000014594 in __sflush_r ()
=> 0x14594 <__sflush_r+202>:	ret
0x000000000001ae22 in _fclose_r.part.0 ()
=> 0x1ae22 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001ae24 in _fclose_r.part.0 ()
=> 0x1ae24 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001ae26 in _fclose_r.part.0 ()
=> 0x1ae26 <_fclose_r.part.0+22>:	beqz	a5,0x1ae32 <_fclose_r.part.0+34>
0x000000000001ae28 in _fclose_r.part.0 ()
=> 0x1ae28 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001ae2a in _fclose_r.part.0 ()
=> 0x1ae2a <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001ae2c in _fclose_r.part.0 ()
=> 0x1ae2c <_fclose_r.part.0+28>:	jalr	a5
0x00000000000180f6 in __sclose ()
=> 0x180f6 <__sclose>:	lh	a1,18(a1)
0x00000000000180fa in __sclose ()
=> 0x180fa <__sclose+4>:	j	0x1add4 <_close_r>
0x000000000001add4 in _close_r ()
=> 0x1add4 <_close_r>:	addi	sp,sp,-32
0x000000000001add6 in _close_r ()
=> 0x1add6 <_close_r+2>:	sd	s0,16(sp)
0x000000000001add8 in _close_r ()
=> 0x1add8 <_close_r+4>:	sd	s1,8(sp)
0x000000000001adda in _close_r ()
=> 0x1adda <_close_r+6>:	mv	s0,a0
0x000000000001addc in _close_r ()
=> 0x1addc <_close_r+8>:	mv	a0,a1
0x000000000001adde in _close_r ()
=> 0x1adde <_close_r+10>:	sd	ra,24(sp)
0x000000000001ade0 in _close_r ()
=> 0x1ade0 <_close_r+12>:	sw	zero,-1840(gp)
0x000000000001ade4 in _close_r ()
=> 0x1ade4 <_close_r+16>:	jal	ra,0x1ca84 <_close>
0x000000000001ca84 in _close ()
=> 0x1ca84 <_close>:	addi	sp,sp,-16
0x000000000001ca86 in _close ()
=> 0x1ca86 <_close+2>:	sd	ra,8(sp)
0x000000000001ca88 in _close ()
=> 0x1ca88 <_close+4>:	sd	s0,0(sp)
0x000000000001ca8a in _close ()
=> 0x1ca8a <_close+6>:	li	a7,57
0x000000000001ca8e in _close ()
=> 0x1ca8e <_close+10>:	ecall
0x000000000001ca92 in _close ()
=> 0x1ca92 <_close+14>:	mv	s0,a0
0x000000000001ca94 in _close ()
=> 0x1ca94 <_close+16>:	bltz	a0,0x1caa2 <_close+30>
0x000000000001ca98 in _close ()
=> 0x1ca98 <_close+20>:	sext.w	a0,a0
0x000000000001ca9a in _close ()
=> 0x1ca9a <_close+22>:	ld	ra,8(sp)
0x000000000001ca9c in _close ()
=> 0x1ca9c <_close+24>:	ld	s0,0(sp)
0x000000000001ca9e in _close ()
=> 0x1ca9e <_close+26>:	addi	sp,sp,16
0x000000000001caa0 in _close ()
=> 0x1caa0 <_close+28>:	ret
0x000000000001ade8 in _close_r ()
=> 0x1ade8 <_close_r+20>:	li	a5,-1
0x000000000001adea in _close_r ()
=> 0x1adea <_close_r+22>:	beq	a0,a5,0x1adf8 <_close_r+36>
0x000000000001adee in _close_r ()
=> 0x1adee <_close_r+26>:	ld	ra,24(sp)
0x000000000001adf0 in _close_r ()
=> 0x1adf0 <_close_r+28>:	ld	s0,16(sp)
0x000000000001adf2 in _close_r ()
=> 0x1adf2 <_close_r+30>:	ld	s1,8(sp)
0x000000000001adf4 in _close_r ()
=> 0x1adf4 <_close_r+32>:	addi	sp,sp,32
0x000000000001adf6 in _close_r ()
=> 0x1adf6 <_close_r+34>:	ret
0x000000000001ae2e in _fclose_r.part.0 ()
=> 0x1ae2e <_fclose_r.part.0+30>:	bltz	a0,0x1ae7a <_fclose_r.part.0+106>
0x000000000001ae32 in _fclose_r.part.0 ()
=> 0x1ae32 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001ae36 in _fclose_r.part.0 ()
=> 0x1ae36 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001ae3a in _fclose_r.part.0 ()
=> 0x1ae3a <_fclose_r.part.0+42>:	bnez	a5,0x1ae86 <_fclose_r.part.0+118>
0x000000000001ae3c in _fclose_r.part.0 ()
=> 0x1ae3c <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001ae3e in _fclose_r.part.0 ()
=> 0x1ae3e <_fclose_r.part.0+46>:	beqz	a1,0x1ae52 <_fclose_r.part.0+66>
0x000000000001ae52 in _fclose_r.part.0 ()
=> 0x1ae52 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001ae54 in _fclose_r.part.0 ()
=> 0x1ae54 <_fclose_r.part.0+68>:	beqz	a1,0x1ae60 <_fclose_r.part.0+80>
0x000000000001ae60 in _fclose_r.part.0 ()
=> 0x1ae60 <_fclose_r.part.0+80>:	jal	ra,0x14940 <__sfp_lock_acquire>
0x0000000000014940 in __sfp_lock_acquire ()
=> 0x14940 <__sfp_lock_acquire>:	ret
0x000000000001ae64 in _fclose_r.part.0 ()
=> 0x1ae64 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001ae68 in _fclose_r.part.0 ()
=> 0x1ae68 <_fclose_r.part.0+88>:	jal	ra,0x14942 <__sfp_lock_release>
0x0000000000014942 in __sfp_lock_release ()
=> 0x14942 <__sfp_lock_release>:	ret
0x000000000001ae6c in _fclose_r.part.0 ()
=> 0x1ae6c <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001ae6e in _fclose_r.part.0 ()
=> 0x1ae6e <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001ae70 in _fclose_r.part.0 ()
=> 0x1ae70 <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001ae72 in _fclose_r.part.0 ()
=> 0x1ae72 <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001ae74 in _fclose_r.part.0 ()
=> 0x1ae74 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001ae76 in _fclose_r.part.0 ()
=> 0x1ae76 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001ae78 in _fclose_r.part.0 ()
=> 0x1ae78 <_fclose_r.part.0+104>:	ret
0x0000000000014d9c in _fwalk_reent ()
=> 0x14d9c <_fwalk_reent+90>:	or	s6,a0,s6
0x0000000000014da0 in _fwalk_reent ()
=> 0x14da0 <_fwalk_reent+94>:	sext.w	s6,s6
0x0000000000014da2 in _fwalk_reent ()
=> 0x14da2 <_fwalk_reent+96>:	addi	s0,s0,176
0x0000000000014da6 in _fwalk_reent ()
=> 0x14da6 <_fwalk_reent+100>:	bne	s1,s0,0x14d86 <_fwalk_reent+68>
0x0000000000014d86 in _fwalk_reent ()
=> 0x14d86 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000014d8a in _fwalk_reent ()
=> 0x14d8a <_fwalk_reent+72>:	bgeu	s7,a5,0x14da2 <_fwalk_reent+96>
0x0000000000014d8e in _fwalk_reent ()
=> 0x14d8e <_fwalk_reent+76>:	lh	a5,18(s0)
0x0000000000014d92 in _fwalk_reent ()
=> 0x14d92 <_fwalk_reent+80>:	mv	a1,s0
0x0000000000014d94 in _fwalk_reent ()
=> 0x14d94 <_fwalk_reent+82>:	mv	a0,s8
0x0000000000014d96 in _fwalk_reent ()
=> 0x14d96 <_fwalk_reent+84>:	beq	a5,s3,0x14da2 <_fwalk_reent+96>
0x0000000000014d9a in _fwalk_reent ()
=> 0x14d9a <_fwalk_reent+88>:	jalr	s4
0x000000000001ae90 in _fclose_r ()
=> 0x1ae90 <_fclose_r>:	beqz	a1,0x1aeca <_fclose_r+58>
0x000000000001ae92 in _fclose_r ()
=> 0x1ae92 <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001ae94 in _fclose_r ()
=> 0x1ae94 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001ae96 in _fclose_r ()
=> 0x1ae96 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001ae98 in _fclose_r ()
=> 0x1ae98 <_fclose_r+8>:	mv	s0,a0
0x000000000001ae9a in _fclose_r ()
=> 0x1ae9a <_fclose_r+10>:	beqz	a0,0x1aea0 <_fclose_r+16>
0x000000000001ae9c in _fclose_r ()
=> 0x1ae9c <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001ae9e in _fclose_r ()
=> 0x1ae9e <_fclose_r+14>:	beqz	a5,0x1aeba <_fclose_r+42>
0x000000000001aea0 in _fclose_r ()
=> 0x1aea0 <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001aea4 in _fclose_r ()
=> 0x1aea4 <_fclose_r+20>:	bnez	a5,0x1aeb0 <_fclose_r+32>
0x000000000001aeb0 in _fclose_r ()
=> 0x1aeb0 <_fclose_r+32>:	mv	a0,s0
0x000000000001aeb2 in _fclose_r ()
=> 0x1aeb2 <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001aeb4 in _fclose_r ()
=> 0x1aeb4 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001aeb6 in _fclose_r ()
=> 0x1aeb6 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001aeb8 in _fclose_r ()
=> 0x1aeb8 <_fclose_r+40>:	j	0x1ae10 <_fclose_r.part.0>
0x000000000001ae10 in _fclose_r.part.0 ()
=> 0x1ae10 <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001ae12 in _fclose_r.part.0 ()
=> 0x1ae12 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001ae14 in _fclose_r.part.0 ()
=> 0x1ae14 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001ae16 in _fclose_r.part.0 ()
=> 0x1ae16 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001ae18 in _fclose_r.part.0 ()
=> 0x1ae18 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001ae1a in _fclose_r.part.0 ()
=> 0x1ae1a <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001ae1c in _fclose_r.part.0 ()
=> 0x1ae1c <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001ae1e in _fclose_r.part.0 ()
=> 0x1ae1e <_fclose_r.part.0+14>:	jal	ra,0x144ca <__sflush_r>
0x00000000000144ca in __sflush_r ()
=> 0x144ca <__sflush_r>:	lh	a5,16(a1)
0x00000000000144ce in __sflush_r ()
=> 0x144ce <__sflush_r+4>:	addi	sp,sp,-48
0x00000000000144d0 in __sflush_r ()
=> 0x144d0 <__sflush_r+6>:	sd	s0,32(sp)
0x00000000000144d2 in __sflush_r ()
=> 0x144d2 <__sflush_r+8>:	sd	s3,8(sp)
0x00000000000144d4 in __sflush_r ()
=> 0x144d4 <__sflush_r+10>:	sd	ra,40(sp)
0x00000000000144d6 in __sflush_r ()
=> 0x144d6 <__sflush_r+12>:	sd	s1,24(sp)
0x00000000000144d8 in __sflush_r ()
=> 0x144d8 <__sflush_r+14>:	sd	s2,16(sp)
0x00000000000144da in __sflush_r ()
=> 0x144da <__sflush_r+16>:	andi	a3,a5,8
0x00000000000144de in __sflush_r ()
=> 0x144de <__sflush_r+20>:	mv	s0,a1
0x00000000000144e0 in __sflush_r ()
=> 0x144e0 <__sflush_r+22>:	mv	s3,a0
0x00000000000144e2 in __sflush_r ()
=> 0x144e2 <__sflush_r+24>:	bnez	a3,0x14596 <__sflush_r+204>
0x0000000000014596 in __sflush_r ()
=> 0x14596 <__sflush_r+204>:	ld	s2,24(a1)
0x000000000001459a in __sflush_r ()
=> 0x1459a <__sflush_r+208>:	beqz	s2,0x14586 <__sflush_r+188>
0x000000000001459e in __sflush_r ()
=> 0x1459e <__sflush_r+212>:	ld	s1,0(a1)
0x00000000000145a0 in __sflush_r ()
=> 0x145a0 <__sflush_r+214>:	slli	a4,a5,0x30
0x00000000000145a4 in __sflush_r ()
=> 0x145a4 <__sflush_r+218>:	srli	a4,a4,0x30
0x00000000000145a6 in __sflush_r ()
=> 0x145a6 <__sflush_r+220>:	andi	a4,a4,3
0x00000000000145a8 in __sflush_r ()
=> 0x145a8 <__sflush_r+222>:	sd	s2,0(a1)
0x00000000000145ac in __sflush_r ()
=> 0x145ac <__sflush_r+226>:	subw	s1,s1,s2
0x00000000000145b0 in __sflush_r ()
=> 0x145b0 <__sflush_r+230>:	li	a5,0
0x00000000000145b2 in __sflush_r ()
=> 0x145b2 <__sflush_r+232>:	bnez	a4,0x145b6 <__sflush_r+236>
0x00000000000145b6 in __sflush_r ()
=> 0x145b6 <__sflush_r+236>:	sw	a5,12(s0)
0x00000000000145b8 in __sflush_r ()
=> 0x145b8 <__sflush_r+238>:	bgtz	s1,0x145c4 <__sflush_r+250>
0x00000000000145bc in __sflush_r ()
=> 0x145bc <__sflush_r+242>:	j	0x14586 <__sflush_r+188>
0x0000000000014586 in __sflush_r ()
=> 0x14586 <__sflush_r+188>:	li	a0,0
0x0000000000014588 in __sflush_r ()
=> 0x14588 <__sflush_r+190>:	ld	ra,40(sp)
0x000000000001458a in __sflush_r ()
=> 0x1458a <__sflush_r+192>:	ld	s0,32(sp)
0x000000000001458c in __sflush_r ()
=> 0x1458c <__sflush_r+194>:	ld	s1,24(sp)
0x000000000001458e in __sflush_r ()
=> 0x1458e <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000014590 in __sflush_r ()
=> 0x14590 <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000014592 in __sflush_r ()
=> 0x14592 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000014594 in __sflush_r ()
=> 0x14594 <__sflush_r+202>:	ret
0x000000000001ae22 in _fclose_r.part.0 ()
=> 0x1ae22 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001ae24 in _fclose_r.part.0 ()
=> 0x1ae24 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001ae26 in _fclose_r.part.0 ()
=> 0x1ae26 <_fclose_r.part.0+22>:	beqz	a5,0x1ae32 <_fclose_r.part.0+34>
0x000000000001ae28 in _fclose_r.part.0 ()
=> 0x1ae28 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001ae2a in _fclose_r.part.0 ()
=> 0x1ae2a <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001ae2c in _fclose_r.part.0 ()
=> 0x1ae2c <_fclose_r.part.0+28>:	jalr	a5
0x00000000000180f6 in __sclose ()
=> 0x180f6 <__sclose>:	lh	a1,18(a1)
0x00000000000180fa in __sclose ()
=> 0x180fa <__sclose+4>:	j	0x1add4 <_close_r>
0x000000000001add4 in _close_r ()
=> 0x1add4 <_close_r>:	addi	sp,sp,-32
0x000000000001add6 in _close_r ()
=> 0x1add6 <_close_r+2>:	sd	s0,16(sp)
0x000000000001add8 in _close_r ()
=> 0x1add8 <_close_r+4>:	sd	s1,8(sp)
0x000000000001adda in _close_r ()
=> 0x1adda <_close_r+6>:	mv	s0,a0
0x000000000001addc in _close_r ()
=> 0x1addc <_close_r+8>:	mv	a0,a1
0x000000000001adde in _close_r ()
=> 0x1adde <_close_r+10>:	sd	ra,24(sp)
0x000000000001ade0 in _close_r ()
=> 0x1ade0 <_close_r+12>:	sw	zero,-1840(gp)
0x000000000001ade4 in _close_r ()
=> 0x1ade4 <_close_r+16>:	jal	ra,0x1ca84 <_close>
0x000000000001ca84 in _close ()
=> 0x1ca84 <_close>:	addi	sp,sp,-16
0x000000000001ca86 in _close ()
=> 0x1ca86 <_close+2>:	sd	ra,8(sp)
0x000000000001ca88 in _close ()
=> 0x1ca88 <_close+4>:	sd	s0,0(sp)
0x000000000001ca8a in _close ()
=> 0x1ca8a <_close+6>:	li	a7,57
0x000000000001ca8e in _close ()
=> 0x1ca8e <_close+10>:	ecall
0x000000000001ca92 in _close ()
=> 0x1ca92 <_close+14>:	mv	s0,a0
0x000000000001ca94 in _close ()
=> 0x1ca94 <_close+16>:	bltz	a0,0x1caa2 <_close+30>
0x000000000001ca98 in _close ()
=> 0x1ca98 <_close+20>:	sext.w	a0,a0
0x000000000001ca9a in _close ()
=> 0x1ca9a <_close+22>:	ld	ra,8(sp)
0x000000000001ca9c in _close ()
=> 0x1ca9c <_close+24>:	ld	s0,0(sp)
0x000000000001ca9e in _close ()
=> 0x1ca9e <_close+26>:	addi	sp,sp,16
0x000000000001caa0 in _close ()
=> 0x1caa0 <_close+28>:	ret
0x000000000001ade8 in _close_r ()
=> 0x1ade8 <_close_r+20>:	li	a5,-1
0x000000000001adea in _close_r ()
=> 0x1adea <_close_r+22>:	beq	a0,a5,0x1adf8 <_close_r+36>
0x000000000001adee in _close_r ()
=> 0x1adee <_close_r+26>:	ld	ra,24(sp)
0x000000000001adf0 in _close_r ()
=> 0x1adf0 <_close_r+28>:	ld	s0,16(sp)
0x000000000001adf2 in _close_r ()
=> 0x1adf2 <_close_r+30>:	ld	s1,8(sp)
0x000000000001adf4 in _close_r ()
=> 0x1adf4 <_close_r+32>:	addi	sp,sp,32
0x000000000001adf6 in _close_r ()
=> 0x1adf6 <_close_r+34>:	ret
0x000000000001ae2e in _fclose_r.part.0 ()
=> 0x1ae2e <_fclose_r.part.0+30>:	bltz	a0,0x1ae7a <_fclose_r.part.0+106>
0x000000000001ae32 in _fclose_r.part.0 ()
=> 0x1ae32 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001ae36 in _fclose_r.part.0 ()
=> 0x1ae36 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001ae3a in _fclose_r.part.0 ()
=> 0x1ae3a <_fclose_r.part.0+42>:	bnez	a5,0x1ae86 <_fclose_r.part.0+118>
0x000000000001ae86 in _fclose_r.part.0 ()
=> 0x1ae86 <_fclose_r.part.0+118>:	ld	a1,24(s0)
0x000000000001ae88 in _fclose_r.part.0 ()
=> 0x1ae88 <_fclose_r.part.0+120>:	mv	a0,s1
0x000000000001ae8a in _fclose_r.part.0 ()
=> 0x1ae8a <_fclose_r.part.0+122>:	jal	ra,0x14a6e <_free_r>
0x0000000000014a6e in _free_r ()
=> 0x14a6e <_free_r>:	beqz	a1,0x14b5e <_free_r+240>
0x0000000000014a70 in _free_r ()
=> 0x14a70 <_free_r+2>:	addi	sp,sp,-32
0x0000000000014a72 in _free_r ()
=> 0x14a72 <_free_r+4>:	sd	s0,16(sp)
0x0000000000014a74 in _free_r ()
=> 0x14a74 <_free_r+6>:	sd	s1,8(sp)
0x0000000000014a76 in _free_r ()
=> 0x14a76 <_free_r+8>:	mv	s0,a1
0x0000000000014a78 in _free_r ()
=> 0x14a78 <_free_r+10>:	mv	s1,a0
0x0000000000014a7a in _free_r ()
=> 0x14a7a <_free_r+12>:	sd	ra,24(sp)
0x0000000000014a7c in _free_r ()
=> 0x14a7c <_free_r+14>:	jal	ra,0x12668 <__malloc_lock>
0x0000000000012668 in __malloc_lock ()
=> 0x12668 <__malloc_lock>:	ret
0x0000000000014a80 in _free_r ()
=> 0x14a80 <_free_r+18>:	ld	a0,-8(s0)
0x0000000000014a84 in _free_r ()
=> 0x14a84 <_free_r+22>:	addi	a4,s0,-16
0x0000000000014a88 in _free_r ()
=> 0x14a88 <_free_r+26>:	lui	a1,0x1f
0x0000000000014a8c in _free_r ()
=> 0x14a8c <_free_r+30>:	andi	a5,a0,-2
0x0000000000014a90 in _free_r ()
=> 0x14a90 <_free_r+34>:	add	a2,a4,a5
0x0000000000014a94 in _free_r ()
=> 0x14a94 <_free_r+38>:	addi	a1,a1,1896
0x0000000000014a98 in _free_r ()
=> 0x14a98 <_free_r+42>:	ld	a3,8(a2)
0x0000000000014a9a in _free_r ()
=> 0x14a9a <_free_r+44>:	ld	a6,16(a1)
0x0000000000014a9e in _free_r ()
=> 0x14a9e <_free_r+48>:	andi	a3,a3,-4
0x0000000000014aa0 in _free_r ()
=> 0x14aa0 <_free_r+50>:	beq	a6,a2,0x14be4 <_free_r+374>
0x0000000000014be4 in _free_r ()
=> 0x14be4 <_free_r+374>:	andi	a0,a0,1
0x0000000000014be6 in _free_r ()
=> 0x14be6 <_free_r+376>:	add	a5,a5,a3
0x0000000000014be8 in _free_r ()
=> 0x14be8 <_free_r+378>:	bnez	a0,0x14bfa <_free_r+396>
0x0000000000014bea in _free_r ()
=> 0x14bea <_free_r+380>:	ld	a0,-16(s0)
0x0000000000014bee in _free_r ()
=> 0x14bee <_free_r+384>:	sub	a4,a4,a0
0x0000000000014bf0 in _free_r ()
=> 0x14bf0 <_free_r+386>:	ld	a3,24(a4)
0x0000000000014bf2 in _free_r ()
=> 0x14bf2 <_free_r+388>:	ld	a2,16(a4)
0x0000000000014bf4 in _free_r ()
=> 0x14bf4 <_free_r+390>:	add	a5,a5,a0
0x0000000000014bf6 in _free_r ()
=> 0x14bf6 <_free_r+392>:	sd	a3,24(a2)
0x0000000000014bf8 in _free_r ()
=> 0x14bf8 <_free_r+394>:	sd	a2,16(a3)
0x0000000000014bfa in _free_r ()
=> 0x14bfa <_free_r+396>:	ori	a2,a5,1
0x0000000000014bfe in _free_r ()
=> 0x14bfe <_free_r+400>:	ld	a3,-1936(gp)
0x0000000000014c02 in _free_r ()
=> 0x14c02 <_free_r+404>:	sd	a2,8(a4)
0x0000000000014c04 in _free_r ()
=> 0x14c04 <_free_r+406>:	sd	a4,16(a1)
0x0000000000014c06 in _free_r ()
=> 0x14c06 <_free_r+408>:	bltu	a5,a3,0x14b20 <_free_r+178>
0x0000000000014c0a in _free_r ()
=> 0x14c0a <_free_r+412>:	ld	a1,-1856(gp)
0x0000000000014c0e in _free_r ()
=> 0x14c0e <_free_r+416>:	mv	a0,s1
0x0000000000014c10 in _free_r ()
=> 0x14c10 <_free_r+418>:	jal	ra,0x14998 <_malloc_trim_r>
0x0000000000014998 in _malloc_trim_r ()
=> 0x14998 <_malloc_trim_r>:	addi	sp,sp,-48
0x000000000001499a in _malloc_trim_r ()
=> 0x1499a <_malloc_trim_r+2>:	sd	s3,8(sp)
0x000000000001499c in _malloc_trim_r ()
=> 0x1499c <_malloc_trim_r+4>:	lui	s3,0x1f
0x00000000000149a0 in _malloc_trim_r ()
=> 0x149a0 <_malloc_trim_r+8>:	sd	s0,32(sp)
0x00000000000149a2 in _malloc_trim_r ()
=> 0x149a2 <_malloc_trim_r+10>:	sd	s1,24(sp)
0x00000000000149a4 in _malloc_trim_r ()
=> 0x149a4 <_malloc_trim_r+12>:	sd	s2,16(sp)
0x00000000000149a6 in _malloc_trim_r ()
=> 0x149a6 <_malloc_trim_r+14>:	sd	s4,0(sp)
0x00000000000149a8 in _malloc_trim_r ()
=> 0x149a8 <_malloc_trim_r+16>:	sd	ra,40(sp)
0x00000000000149aa in _malloc_trim_r ()
=> 0x149aa <_malloc_trim_r+18>:	mv	s4,a1
0x00000000000149ac in _malloc_trim_r ()
=> 0x149ac <_malloc_trim_r+20>:	mv	s2,a0
0x00000000000149ae in _malloc_trim_r ()
=> 0x149ae <_malloc_trim_r+22>:	addi	s3,s3,1896
0x00000000000149b2 in _malloc_trim_r ()
=> 0x149b2 <_malloc_trim_r+26>:	jal	ra,0x12668 <__malloc_lock>
0x0000000000012668 in __malloc_lock ()
=> 0x12668 <__malloc_lock>:	ret
0x00000000000149b6 in _malloc_trim_r ()
=> 0x149b6 <_malloc_trim_r+30>:	ld	a4,16(s3)
0x00000000000149ba in _malloc_trim_r ()
=> 0x149ba <_malloc_trim_r+34>:	lui	a5,0x1
0x00000000000149bc in _malloc_trim_r ()
=> 0x149bc <_malloc_trim_r+36>:	addi	s0,a5,-33
0x00000000000149c0 in _malloc_trim_r ()
=> 0x149c0 <_malloc_trim_r+40>:	ld	s1,8(a4)
0x00000000000149c2 in _malloc_trim_r ()
=> 0x149c2 <_malloc_trim_r+42>:	sub	s0,s0,s4
0x00000000000149c6 in _malloc_trim_r ()
=> 0x149c6 <_malloc_trim_r+46>:	andi	s1,s1,-4
0x00000000000149c8 in _malloc_trim_r ()
=> 0x149c8 <_malloc_trim_r+48>:	add	s0,s0,s1
0x00000000000149ca in _malloc_trim_r ()
=> 0x149ca <_malloc_trim_r+50>:	srli	s0,s0,0xc
0x00000000000149cc in _malloc_trim_r ()
=> 0x149cc <_malloc_trim_r+52>:	addi	s0,s0,-1
0x00000000000149ce in _malloc_trim_r ()
=> 0x149ce <_malloc_trim_r+54>:	slli	s0,s0,0xc
0x00000000000149d0 in _malloc_trim_r ()
=> 0x149d0 <_malloc_trim_r+56>:	blt	s0,a5,0x149e6 <_malloc_trim_r+78>
0x00000000000149d4 in _malloc_trim_r ()
=> 0x149d4 <_malloc_trim_r+60>:	li	a1,0
0x00000000000149d6 in _malloc_trim_r ()
=> 0x149d6 <_malloc_trim_r+62>:	mv	a0,s2
0x00000000000149d8 in _malloc_trim_r ()
=> 0x149d8 <_malloc_trim_r+64>:	jal	ra,0x126ba <_sbrk_r>
0x00000000000126ba in _sbrk_r ()
=> 0x126ba <_sbrk_r>:	addi	sp,sp,-32
0x00000000000126bc in _sbrk_r ()
=> 0x126bc <_sbrk_r+2>:	sd	s0,16(sp)
0x00000000000126be in _sbrk_r ()
=> 0x126be <_sbrk_r+4>:	sd	s1,8(sp)
0x00000000000126c0 in _sbrk_r ()
=> 0x126c0 <_sbrk_r+6>:	mv	s0,a0
0x00000000000126c2 in _sbrk_r ()
=> 0x126c2 <_sbrk_r+8>:	mv	a0,a1
0x00000000000126c4 in _sbrk_r ()
=> 0x126c4 <_sbrk_r+10>:	sd	ra,24(sp)
0x00000000000126c6 in _sbrk_r ()
=> 0x126c6 <_sbrk_r+12>:	sw	zero,-1840(gp)
0x00000000000126ca in _sbrk_r ()
=> 0x126ca <_sbrk_r+16>:	jal	ra,0x1cba8 <_sbrk>
0x000000000001cba8 in _sbrk ()
=> 0x1cba8 <_sbrk>:	ld	a4,-1832(gp)
0x000000000001cbac in _sbrk ()
=> 0x1cbac <_sbrk+4>:	addi	sp,sp,-16
0x000000000001cbae in _sbrk ()
=> 0x1cbae <_sbrk+6>:	sd	ra,8(sp)
0x000000000001cbb0 in _sbrk ()
=> 0x1cbb0 <_sbrk+8>:	mv	a5,a0
0x000000000001cbb2 in _sbrk ()
=> 0x1cbb2 <_sbrk+10>:	bnez	a4,0x1cbca <_sbrk+34>
0x000000000001cbca in _sbrk ()
=> 0x1cbca <_sbrk+34>:	li	a7,214
0x000000000001cbce in _sbrk ()
=> 0x1cbce <_sbrk+38>:	add	a0,a5,a4
0x000000000001cbd2 in _sbrk ()
=> 0x1cbd2 <_sbrk+42>:	ecall
0x000000000001cbd6 in _sbrk ()
=> 0x1cbd6 <_sbrk+46>:	ld	a4,-1832(gp)
0x000000000001cbda in _sbrk ()
=> 0x1cbda <_sbrk+50>:	add	a5,a5,a4
0x000000000001cbdc in _sbrk ()
=> 0x1cbdc <_sbrk+52>:	bne	a0,a5,0x1cbec <_sbrk+68>
0x000000000001cbe0 in _sbrk ()
=> 0x1cbe0 <_sbrk+56>:	ld	ra,8(sp)
0x000000000001cbe2 in _sbrk ()
=> 0x1cbe2 <_sbrk+58>:	sd	a0,-1832(gp)
0x000000000001cbe6 in _sbrk ()
=> 0x1cbe6 <_sbrk+62>:	mv	a0,a4
0x000000000001cbe8 in _sbrk ()
=> 0x1cbe8 <_sbrk+64>:	addi	sp,sp,16
0x000000000001cbea in _sbrk ()
=> 0x1cbea <_sbrk+66>:	ret
0x00000000000126ce in _sbrk_r ()
=> 0x126ce <_sbrk_r+20>:	li	a5,-1
0x00000000000126d0 in _sbrk_r ()
=> 0x126d0 <_sbrk_r+22>:	beq	a0,a5,0x126de <_sbrk_r+36>
0x00000000000126d4 in _sbrk_r ()
=> 0x126d4 <_sbrk_r+26>:	ld	ra,24(sp)
0x00000000000126d6 in _sbrk_r ()
=> 0x126d6 <_sbrk_r+28>:	ld	s0,16(sp)
0x00000000000126d8 in _sbrk_r ()
=> 0x126d8 <_sbrk_r+30>:	ld	s1,8(sp)
0x00000000000126da in _sbrk_r ()
=> 0x126da <_sbrk_r+32>:	addi	sp,sp,32
0x00000000000126dc in _sbrk_r ()
=> 0x126dc <_sbrk_r+34>:	ret
0x00000000000149dc in _malloc_trim_r ()
=> 0x149dc <_malloc_trim_r+68>:	ld	a5,16(s3)
0x00000000000149e0 in _malloc_trim_r ()
=> 0x149e0 <_malloc_trim_r+72>:	add	a5,a5,s1
0x00000000000149e2 in _malloc_trim_r ()
=> 0x149e2 <_malloc_trim_r+74>:	beq	a0,a5,0x149fe <_malloc_trim_r+102>
0x00000000000149fe in _malloc_trim_r ()
=> 0x149fe <_malloc_trim_r+102>:	neg	a1,s0
0x0000000000014a02 in _malloc_trim_r ()
=> 0x14a02 <_malloc_trim_r+106>:	mv	a0,s2
0x0000000000014a04 in _malloc_trim_r ()
=> 0x14a04 <_malloc_trim_r+108>:	jal	ra,0x126ba <_sbrk_r>
0x00000000000126ba in _sbrk_r ()
=> 0x126ba <_sbrk_r>:	addi	sp,sp,-32
0x00000000000126bc in _sbrk_r ()
=> 0x126bc <_sbrk_r+2>:	sd	s0,16(sp)
0x00000000000126be in _sbrk_r ()
=> 0x126be <_sbrk_r+4>:	sd	s1,8(sp)
0x00000000000126c0 in _sbrk_r ()
=> 0x126c0 <_sbrk_r+6>:	mv	s0,a0
0x00000000000126c2 in _sbrk_r ()
=> 0x126c2 <_sbrk_r+8>:	mv	a0,a1
0x00000000000126c4 in _sbrk_r ()
=> 0x126c4 <_sbrk_r+10>:	sd	ra,24(sp)
0x00000000000126c6 in _sbrk_r ()
=> 0x126c6 <_sbrk_r+12>:	sw	zero,-1840(gp)
0x00000000000126ca in _sbrk_r ()
=> 0x126ca <_sbrk_r+16>:	jal	ra,0x1cba8 <_sbrk>
0x000000000001cba8 in _sbrk ()
=> 0x1cba8 <_sbrk>:	ld	a4,-1832(gp)
0x000000000001cbac in _sbrk ()
=> 0x1cbac <_sbrk+4>:	addi	sp,sp,-16
0x000000000001cbae in _sbrk ()
=> 0x1cbae <_sbrk+6>:	sd	ra,8(sp)
0x000000000001cbb0 in _sbrk ()
=> 0x1cbb0 <_sbrk+8>:	mv	a5,a0
0x000000000001cbb2 in _sbrk ()
=> 0x1cbb2 <_sbrk+10>:	bnez	a4,0x1cbca <_sbrk+34>
0x000000000001cbca in _sbrk ()
=> 0x1cbca <_sbrk+34>:	li	a7,214
0x000000000001cbce in _sbrk ()
=> 0x1cbce <_sbrk+38>:	add	a0,a5,a4
0x000000000001cbd2 in _sbrk ()
=> 0x1cbd2 <_sbrk+42>:	ecall
0x000000000001cbd6 in _sbrk ()
=> 0x1cbd6 <_sbrk+46>:	ld	a4,-1832(gp)
0x000000000001cbda in _sbrk ()
=> 0x1cbda <_sbrk+50>:	add	a5,a5,a4
0x000000000001cbdc in _sbrk ()
=> 0x1cbdc <_sbrk+52>:	bne	a0,a5,0x1cbec <_sbrk+68>
0x000000000001cbe0 in _sbrk ()
=> 0x1cbe0 <_sbrk+56>:	ld	ra,8(sp)
0x000000000001cbe2 in _sbrk ()
=> 0x1cbe2 <_sbrk+58>:	sd	a0,-1832(gp)
0x000000000001cbe6 in _sbrk ()
=> 0x1cbe6 <_sbrk+62>:	mv	a0,a4
0x000000000001cbe8 in _sbrk ()
=> 0x1cbe8 <_sbrk+64>:	addi	sp,sp,16
0x000000000001cbea in _sbrk ()
=> 0x1cbea <_sbrk+66>:	ret
0x00000000000126ce in _sbrk_r ()
=> 0x126ce <_sbrk_r+20>:	li	a5,-1
0x00000000000126d0 in _sbrk_r ()
=> 0x126d0 <_sbrk_r+22>:	beq	a0,a5,0x126de <_sbrk_r+36>
0x00000000000126d4 in _sbrk_r ()
=> 0x126d4 <_sbrk_r+26>:	ld	ra,24(sp)
0x00000000000126d6 in _sbrk_r ()
=> 0x126d6 <_sbrk_r+28>:	ld	s0,16(sp)
0x00000000000126d8 in _sbrk_r ()
=> 0x126d8 <_sbrk_r+30>:	ld	s1,8(sp)
0x00000000000126da in _sbrk_r ()
=> 0x126da <_sbrk_r+32>:	addi	sp,sp,32
0x00000000000126dc in _sbrk_r ()
=> 0x126dc <_sbrk_r+34>:	ret
0x0000000000014a08 in _malloc_trim_r ()
=> 0x14a08 <_malloc_trim_r+112>:	li	a5,-1
0x0000000000014a0a in _malloc_trim_r ()
=> 0x14a0a <_malloc_trim_r+114>:	beq	a0,a5,0x14a42 <_malloc_trim_r+170>
0x0000000000014a0e in _malloc_trim_r ()
=> 0x14a0e <_malloc_trim_r+118>:	lui	a5,0x22
0x0000000000014a12 in _malloc_trim_r ()
=> 0x14a12 <_malloc_trim_r+122>:	addi	a5,a5,568
0x0000000000014a16 in _malloc_trim_r ()
=> 0x14a16 <_malloc_trim_r+126>:	lw	a4,0(a5)
0x0000000000014a18 in _malloc_trim_r ()
=> 0x14a18 <_malloc_trim_r+128>:	ld	a3,16(s3)
0x0000000000014a1c in _malloc_trim_r ()
=> 0x14a1c <_malloc_trim_r+132>:	sub	s1,s1,s0
0x0000000000014a1e in _malloc_trim_r ()
=> 0x14a1e <_malloc_trim_r+134>:	ori	s1,s1,1
0x0000000000014a22 in _malloc_trim_r ()
=> 0x14a22 <_malloc_trim_r+138>:	subw	s0,a4,s0
0x0000000000014a26 in _malloc_trim_r ()
=> 0x14a26 <_malloc_trim_r+142>:	mv	a0,s2
0x0000000000014a28 in _malloc_trim_r ()
=> 0x14a28 <_malloc_trim_r+144>:	sd	s1,8(a3)
0x0000000000014a2a in _malloc_trim_r ()
=> 0x14a2a <_malloc_trim_r+146>:	sw	s0,0(a5)
0x0000000000014a2c in _malloc_trim_r ()
=> 0x14a2c <_malloc_trim_r+148>:	jal	ra,0x1266a <__malloc_unlock>
0x000000000001266a in __malloc_unlock ()
=> 0x1266a <__malloc_unlock>:	ret
0x0000000000014a30 in _malloc_trim_r ()
=> 0x14a30 <_malloc_trim_r+152>:	ld	ra,40(sp)
0x0000000000014a32 in _malloc_trim_r ()
=> 0x14a32 <_malloc_trim_r+154>:	ld	s0,32(sp)
0x0000000000014a34 in _malloc_trim_r ()
=> 0x14a34 <_malloc_trim_r+156>:	ld	s1,24(sp)
0x0000000000014a36 in _malloc_trim_r ()
=> 0x14a36 <_malloc_trim_r+158>:	ld	s2,16(sp)
0x0000000000014a38 in _malloc_trim_r ()
=> 0x14a38 <_malloc_trim_r+160>:	ld	s3,8(sp)
0x0000000000014a3a in _malloc_trim_r ()
=> 0x14a3a <_malloc_trim_r+162>:	ld	s4,0(sp)
0x0000000000014a3c in _malloc_trim_r ()
=> 0x14a3c <_malloc_trim_r+164>:	li	a0,1
0x0000000000014a3e in _malloc_trim_r ()
=> 0x14a3e <_malloc_trim_r+166>:	addi	sp,sp,48
0x0000000000014a40 in _malloc_trim_r ()
=> 0x14a40 <_malloc_trim_r+168>:	ret
0x0000000000014c14 in _free_r ()
=> 0x14c14 <_free_r+422>:	j	0x14b20 <_free_r+178>
0x0000000000014b20 in _free_r ()
=> 0x14b20 <_free_r+178>:	ld	s0,16(sp)
0x0000000000014b22 in _free_r ()
=> 0x14b22 <_free_r+180>:	ld	ra,24(sp)
0x0000000000014b24 in _free_r ()
=> 0x14b24 <_free_r+182>:	mv	a0,s1
0x0000000000014b26 in _free_r ()
=> 0x14b26 <_free_r+184>:	ld	s1,8(sp)
0x0000000000014b28 in _free_r ()
=> 0x14b28 <_free_r+186>:	addi	sp,sp,32
0x0000000000014b2a in _free_r ()
=> 0x14b2a <_free_r+188>:	j	0x1266a <__malloc_unlock>
0x000000000001266a in __malloc_unlock ()
=> 0x1266a <__malloc_unlock>:	ret
0x000000000001ae8e in _fclose_r.part.0 ()
=> 0x1ae8e <_fclose_r.part.0+126>:	j	0x1ae3c <_fclose_r.part.0+44>
0x000000000001ae3c in _fclose_r.part.0 ()
=> 0x1ae3c <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001ae3e in _fclose_r.part.0 ()
=> 0x1ae3e <_fclose_r.part.0+46>:	beqz	a1,0x1ae52 <_fclose_r.part.0+66>
0x000000000001ae52 in _fclose_r.part.0 ()
=> 0x1ae52 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001ae54 in _fclose_r.part.0 ()
=> 0x1ae54 <_fclose_r.part.0+68>:	beqz	a1,0x1ae60 <_fclose_r.part.0+80>
0x000000000001ae60 in _fclose_r.part.0 ()
=> 0x1ae60 <_fclose_r.part.0+80>:	jal	ra,0x14940 <__sfp_lock_acquire>
0x0000000000014940 in __sfp_lock_acquire ()
=> 0x14940 <__sfp_lock_acquire>:	ret
0x000000000001ae64 in _fclose_r.part.0 ()
=> 0x1ae64 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001ae68 in _fclose_r.part.0 ()
=> 0x1ae68 <_fclose_r.part.0+88>:	jal	ra,0x14942 <__sfp_lock_release>
0x0000000000014942 in __sfp_lock_release ()
=> 0x14942 <__sfp_lock_release>:	ret
0x000000000001ae6c in _fclose_r.part.0 ()
=> 0x1ae6c <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001ae6e in _fclose_r.part.0 ()
=> 0x1ae6e <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001ae70 in _fclose_r.part.0 ()
=> 0x1ae70 <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001ae72 in _fclose_r.part.0 ()
=> 0x1ae72 <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001ae74 in _fclose_r.part.0 ()
=> 0x1ae74 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001ae76 in _fclose_r.part.0 ()
=> 0x1ae76 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001ae78 in _fclose_r.part.0 ()
=> 0x1ae78 <_fclose_r.part.0+104>:	ret
0x0000000000014d9c in _fwalk_reent ()
=> 0x14d9c <_fwalk_reent+90>:	or	s6,a0,s6
0x0000000000014da0 in _fwalk_reent ()
=> 0x14da0 <_fwalk_reent+94>:	sext.w	s6,s6
0x0000000000014da2 in _fwalk_reent ()
=> 0x14da2 <_fwalk_reent+96>:	addi	s0,s0,176
0x0000000000014da6 in _fwalk_reent ()
=> 0x14da6 <_fwalk_reent+100>:	bne	s1,s0,0x14d86 <_fwalk_reent+68>
0x0000000000014d86 in _fwalk_reent ()
=> 0x14d86 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000014d8a in _fwalk_reent ()
=> 0x14d8a <_fwalk_reent+72>:	bgeu	s7,a5,0x14da2 <_fwalk_reent+96>
0x0000000000014d8e in _fwalk_reent ()
=> 0x14d8e <_fwalk_reent+76>:	lh	a5,18(s0)
0x0000000000014d92 in _fwalk_reent ()
=> 0x14d92 <_fwalk_reent+80>:	mv	a1,s0
0x0000000000014d94 in _fwalk_reent ()
=> 0x14d94 <_fwalk_reent+82>:	mv	a0,s8
0x0000000000014d96 in _fwalk_reent ()
=> 0x14d96 <_fwalk_reent+84>:	beq	a5,s3,0x14da2 <_fwalk_reent+96>
0x0000000000014d9a in _fwalk_reent ()
=> 0x14d9a <_fwalk_reent+88>:	jalr	s4
0x000000000001ae90 in _fclose_r ()
=> 0x1ae90 <_fclose_r>:	beqz	a1,0x1aeca <_fclose_r+58>
0x000000000001ae92 in _fclose_r ()
=> 0x1ae92 <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001ae94 in _fclose_r ()
=> 0x1ae94 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001ae96 in _fclose_r ()
=> 0x1ae96 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001ae98 in _fclose_r ()
=> 0x1ae98 <_fclose_r+8>:	mv	s0,a0
0x000000000001ae9a in _fclose_r ()
=> 0x1ae9a <_fclose_r+10>:	beqz	a0,0x1aea0 <_fclose_r+16>
0x000000000001ae9c in _fclose_r ()
=> 0x1ae9c <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001ae9e in _fclose_r ()
=> 0x1ae9e <_fclose_r+14>:	beqz	a5,0x1aeba <_fclose_r+42>
0x000000000001aea0 in _fclose_r ()
=> 0x1aea0 <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001aea4 in _fclose_r ()
=> 0x1aea4 <_fclose_r+20>:	bnez	a5,0x1aeb0 <_fclose_r+32>
0x000000000001aeb0 in _fclose_r ()
=> 0x1aeb0 <_fclose_r+32>:	mv	a0,s0
0x000000000001aeb2 in _fclose_r ()
=> 0x1aeb2 <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001aeb4 in _fclose_r ()
=> 0x1aeb4 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001aeb6 in _fclose_r ()
=> 0x1aeb6 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001aeb8 in _fclose_r ()
=> 0x1aeb8 <_fclose_r+40>:	j	0x1ae10 <_fclose_r.part.0>
0x000000000001ae10 in _fclose_r.part.0 ()
=> 0x1ae10 <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001ae12 in _fclose_r.part.0 ()
=> 0x1ae12 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001ae14 in _fclose_r.part.0 ()
=> 0x1ae14 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001ae16 in _fclose_r.part.0 ()
=> 0x1ae16 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001ae18 in _fclose_r.part.0 ()
=> 0x1ae18 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001ae1a in _fclose_r.part.0 ()
=> 0x1ae1a <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001ae1c in _fclose_r.part.0 ()
=> 0x1ae1c <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001ae1e in _fclose_r.part.0 ()
=> 0x1ae1e <_fclose_r.part.0+14>:	jal	ra,0x144ca <__sflush_r>
0x00000000000144ca in __sflush_r ()
=> 0x144ca <__sflush_r>:	lh	a5,16(a1)
0x00000000000144ce in __sflush_r ()
=> 0x144ce <__sflush_r+4>:	addi	sp,sp,-48
0x00000000000144d0 in __sflush_r ()
=> 0x144d0 <__sflush_r+6>:	sd	s0,32(sp)
0x00000000000144d2 in __sflush_r ()
=> 0x144d2 <__sflush_r+8>:	sd	s3,8(sp)
0x00000000000144d4 in __sflush_r ()
=> 0x144d4 <__sflush_r+10>:	sd	ra,40(sp)
0x00000000000144d6 in __sflush_r ()
=> 0x144d6 <__sflush_r+12>:	sd	s1,24(sp)
0x00000000000144d8 in __sflush_r ()
=> 0x144d8 <__sflush_r+14>:	sd	s2,16(sp)
0x00000000000144da in __sflush_r ()
=> 0x144da <__sflush_r+16>:	andi	a3,a5,8
0x00000000000144de in __sflush_r ()
=> 0x144de <__sflush_r+20>:	mv	s0,a1
0x00000000000144e0 in __sflush_r ()
=> 0x144e0 <__sflush_r+22>:	mv	s3,a0
0x00000000000144e2 in __sflush_r ()
=> 0x144e2 <__sflush_r+24>:	bnez	a3,0x14596 <__sflush_r+204>
0x00000000000144e4 in __sflush_r ()
=> 0x144e4 <__sflush_r+26>:	lui	a4,0x1
0x00000000000144e6 in __sflush_r ()
=> 0x144e6 <__sflush_r+28>:	addi	a4,a4,-2048
0x00000000000144ea in __sflush_r ()
=> 0x144ea <__sflush_r+32>:	lw	a3,8(a1)
0x00000000000144ec in __sflush_r ()
=> 0x144ec <__sflush_r+34>:	or	a5,a5,a4
0x00000000000144ee in __sflush_r ()
=> 0x144ee <__sflush_r+36>:	sh	a5,16(a1)
0x00000000000144f2 in __sflush_r ()
=> 0x144f2 <__sflush_r+40>:	blez	a3,0x145f2 <__sflush_r+296>
0x00000000000145f2 in __sflush_r ()
=> 0x145f2 <__sflush_r+296>:	lw	a4,112(a1)
0x00000000000145f4 in __sflush_r ()
=> 0x145f4 <__sflush_r+298>:	bgtz	a4,0x144f6 <__sflush_r+44>
0x00000000000145f8 in __sflush_r ()
=> 0x145f8 <__sflush_r+302>:	j	0x14586 <__sflush_r+188>
0x0000000000014586 in __sflush_r ()
=> 0x14586 <__sflush_r+188>:	li	a0,0
0x0000000000014588 in __sflush_r ()
=> 0x14588 <__sflush_r+190>:	ld	ra,40(sp)
0x000000000001458a in __sflush_r ()
=> 0x1458a <__sflush_r+192>:	ld	s0,32(sp)
0x000000000001458c in __sflush_r ()
=> 0x1458c <__sflush_r+194>:	ld	s1,24(sp)
0x000000000001458e in __sflush_r ()
=> 0x1458e <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000014590 in __sflush_r ()
=> 0x14590 <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000014592 in __sflush_r ()
=> 0x14592 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000014594 in __sflush_r ()
=> 0x14594 <__sflush_r+202>:	ret
0x000000000001ae22 in _fclose_r.part.0 ()
=> 0x1ae22 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001ae24 in _fclose_r.part.0 ()
=> 0x1ae24 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001ae26 in _fclose_r.part.0 ()
=> 0x1ae26 <_fclose_r.part.0+22>:	beqz	a5,0x1ae32 <_fclose_r.part.0+34>
0x000000000001ae28 in _fclose_r.part.0 ()
=> 0x1ae28 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001ae2a in _fclose_r.part.0 ()
=> 0x1ae2a <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001ae2c in _fclose_r.part.0 ()
=> 0x1ae2c <_fclose_r.part.0+28>:	jalr	a5
0x00000000000180f6 in __sclose ()
=> 0x180f6 <__sclose>:	lh	a1,18(a1)
0x00000000000180fa in __sclose ()
=> 0x180fa <__sclose+4>:	j	0x1add4 <_close_r>
0x000000000001add4 in _close_r ()
=> 0x1add4 <_close_r>:	addi	sp,sp,-32
0x000000000001add6 in _close_r ()
=> 0x1add6 <_close_r+2>:	sd	s0,16(sp)
0x000000000001add8 in _close_r ()
=> 0x1add8 <_close_r+4>:	sd	s1,8(sp)
0x000000000001adda in _close_r ()
=> 0x1adda <_close_r+6>:	mv	s0,a0
0x000000000001addc in _close_r ()
=> 0x1addc <_close_r+8>:	mv	a0,a1
0x000000000001adde in _close_r ()
=> 0x1adde <_close_r+10>:	sd	ra,24(sp)
0x000000000001ade0 in _close_r ()
=> 0x1ade0 <_close_r+12>:	sw	zero,-1840(gp)
0x000000000001ade4 in _close_r ()
=> 0x1ade4 <_close_r+16>:	jal	ra,0x1ca84 <_close>
0x000000000001ca84 in _close ()
=> 0x1ca84 <_close>:	addi	sp,sp,-16
0x000000000001ca86 in _close ()
=> 0x1ca86 <_close+2>:	sd	ra,8(sp)
0x000000000001ca88 in _close ()
=> 0x1ca88 <_close+4>:	sd	s0,0(sp)
0x000000000001ca8a in _close ()
=> 0x1ca8a <_close+6>:	li	a7,57
0x000000000001ca8e in _close ()
=> 0x1ca8e <_close+10>:	ecall
0x000000000001ca92 in _close ()
=> 0x1ca92 <_close+14>:	mv	s0,a0
0x000000000001ca94 in _close ()
=> 0x1ca94 <_close+16>:	bltz	a0,0x1caa2 <_close+30>
0x000000000001ca98 in _close ()
=> 0x1ca98 <_close+20>:	sext.w	a0,a0
0x000000000001ca9a in _close ()
=> 0x1ca9a <_close+22>:	ld	ra,8(sp)
0x000000000001ca9c in _close ()
=> 0x1ca9c <_close+24>:	ld	s0,0(sp)
0x000000000001ca9e in _close ()
=> 0x1ca9e <_close+26>:	addi	sp,sp,16
0x000000000001caa0 in _close ()
=> 0x1caa0 <_close+28>:	ret
0x000000000001ade8 in _close_r ()
=> 0x1ade8 <_close_r+20>:	li	a5,-1
0x000000000001adea in _close_r ()
=> 0x1adea <_close_r+22>:	beq	a0,a5,0x1adf8 <_close_r+36>
0x000000000001adee in _close_r ()
=> 0x1adee <_close_r+26>:	ld	ra,24(sp)
0x000000000001adf0 in _close_r ()
=> 0x1adf0 <_close_r+28>:	ld	s0,16(sp)
0x000000000001adf2 in _close_r ()
=> 0x1adf2 <_close_r+30>:	ld	s1,8(sp)
0x000000000001adf4 in _close_r ()
=> 0x1adf4 <_close_r+32>:	addi	sp,sp,32
0x000000000001adf6 in _close_r ()
=> 0x1adf6 <_close_r+34>:	ret
0x000000000001ae2e in _fclose_r.part.0 ()
=> 0x1ae2e <_fclose_r.part.0+30>:	bltz	a0,0x1ae7a <_fclose_r.part.0+106>
0x000000000001ae32 in _fclose_r.part.0 ()
=> 0x1ae32 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001ae36 in _fclose_r.part.0 ()
=> 0x1ae36 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001ae3a in _fclose_r.part.0 ()
=> 0x1ae3a <_fclose_r.part.0+42>:	bnez	a5,0x1ae86 <_fclose_r.part.0+118>
0x000000000001ae3c in _fclose_r.part.0 ()
=> 0x1ae3c <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001ae3e in _fclose_r.part.0 ()
=> 0x1ae3e <_fclose_r.part.0+46>:	beqz	a1,0x1ae52 <_fclose_r.part.0+66>
0x000000000001ae52 in _fclose_r.part.0 ()
=> 0x1ae52 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001ae54 in _fclose_r.part.0 ()
=> 0x1ae54 <_fclose_r.part.0+68>:	beqz	a1,0x1ae60 <_fclose_r.part.0+80>
0x000000000001ae60 in _fclose_r.part.0 ()
=> 0x1ae60 <_fclose_r.part.0+80>:	jal	ra,0x14940 <__sfp_lock_acquire>
0x0000000000014940 in __sfp_lock_acquire ()
=> 0x14940 <__sfp_lock_acquire>:	ret
0x000000000001ae64 in _fclose_r.part.0 ()
=> 0x1ae64 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001ae68 in _fclose_r.part.0 ()
=> 0x1ae68 <_fclose_r.part.0+88>:	jal	ra,0x14942 <__sfp_lock_release>
0x0000000000014942 in __sfp_lock_release ()
=> 0x14942 <__sfp_lock_release>:	ret
0x000000000001ae6c in _fclose_r.part.0 ()
=> 0x1ae6c <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001ae6e in _fclose_r.part.0 ()
=> 0x1ae6e <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001ae70 in _fclose_r.part.0 ()
=> 0x1ae70 <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001ae72 in _fclose_r.part.0 ()
=> 0x1ae72 <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001ae74 in _fclose_r.part.0 ()
=> 0x1ae74 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001ae76 in _fclose_r.part.0 ()
=> 0x1ae76 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001ae78 in _fclose_r.part.0 ()
=> 0x1ae78 <_fclose_r.part.0+104>:	ret
0x0000000000014d9c in _fwalk_reent ()
=> 0x14d9c <_fwalk_reent+90>:	or	s6,a0,s6
0x0000000000014da0 in _fwalk_reent ()
=> 0x14da0 <_fwalk_reent+94>:	sext.w	s6,s6
0x0000000000014da2 in _fwalk_reent ()
=> 0x14da2 <_fwalk_reent+96>:	addi	s0,s0,176
0x0000000000014da6 in _fwalk_reent ()
=> 0x14da6 <_fwalk_reent+100>:	bne	s1,s0,0x14d86 <_fwalk_reent+68>
0x0000000000014daa in _fwalk_reent ()
=> 0x14daa <_fwalk_reent+104>:	ld	s2,0(s2)
0x0000000000014dae in _fwalk_reent ()
=> 0x14dae <_fwalk_reent+108>:	bnez	s2,0x14d6a <_fwalk_reent+40>
0x0000000000014db2 in _fwalk_reent ()
=> 0x14db2 <_fwalk_reent+112>:	ld	ra,72(sp)
0x0000000000014db4 in _fwalk_reent ()
=> 0x14db4 <_fwalk_reent+114>:	ld	s0,64(sp)
0x0000000000014db6 in _fwalk_reent ()
=> 0x14db6 <_fwalk_reent+116>:	ld	s1,56(sp)
0x0000000000014db8 in _fwalk_reent ()
=> 0x14db8 <_fwalk_reent+118>:	ld	s2,48(sp)
0x0000000000014dba in _fwalk_reent ()
=> 0x14dba <_fwalk_reent+120>:	ld	s3,40(sp)
0x0000000000014dbc in _fwalk_reent ()
=> 0x14dbc <_fwalk_reent+122>:	ld	s4,32(sp)
0x0000000000014dbe in _fwalk_reent ()
=> 0x14dbe <_fwalk_reent+124>:	ld	s5,24(sp)
0x0000000000014dc0 in _fwalk_reent ()
=> 0x14dc0 <_fwalk_reent+126>:	ld	s7,8(sp)
0x0000000000014dc2 in _fwalk_reent ()
=> 0x14dc2 <_fwalk_reent+128>:	ld	s8,0(sp)
0x0000000000014dc4 in _fwalk_reent ()
=> 0x14dc4 <_fwalk_reent+130>:	mv	a0,s6
0x0000000000014dc6 in _fwalk_reent ()
=> 0x14dc6 <_fwalk_reent+132>:	ld	s6,16(sp)
0x0000000000014dc8 in _fwalk_reent ()
=> 0x14dc8 <_fwalk_reent+134>:	addi	sp,sp,80
0x0000000000014dca in _fwalk_reent ()
=> 0x14dca <_fwalk_reent+136>:	ret
0x0000000000011d4c in exit ()
=> 0x11d4c <exit+24>:	mv	a0,s0
0x0000000000011d4e in exit ()
=> 0x11d4e <exit+26>:	jal	ra,0x1cab0 <_exit>
0x000000000001cab0 in _exit ()
=> 0x1cab0 <_exit>:	li	a7,93
0x000000000001cab4 in _exit ()
=> 0x1cab4 <_exit+4>:	ecall
[Inferior 1 (process 792) exited normally]
script_remote.gdb:25: Error in sourced command file:
No registers.
