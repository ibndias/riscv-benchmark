
Temporary breakpoint 1, start_trigger () at ../config/riscv64/boards/generic/boardsupport.c:37
37	}
=> 0x102d4 <start_trigger+16>:	sd	ra,8(sp)
0x00000000000102d8	37	}
=> 0x102d8 <start_trigger+20>:	sd	s0,0(sp)
0x00000000000102dc	37	}
=> 0x102dc <start_trigger+24>:	addi	s0,sp,16
0x00000000000102e0	37	}
=> 0x102e0 <start_trigger+28>:	ld	s0,0(sp)
0x00000000000102e4 in start_trigger () at ../config/riscv64/boards/generic/boardsupport.c:37
37	}
=> 0x102e4 <start_trigger+32>:	ld	ra,8(sp)
0x00000000000102e8	37	}
=> 0x102e8 <start_trigger+36>:	addi	sp,sp,16
0x00000000000102ec	37	}
=> 0x102ec <start_trigger+40>:	ld	ra,0(t6)
0x00000000000102f0	37	}
=> 0x102f0 <start_trigger+44>:	addi	t6,t6,16
0x00000000000102f4	37	}
=> 0x102f4 <start_trigger+48>:	ret
main (argc=1, argv=0x3ffffffb78) at main.c:54
54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10220 <main+144>:	ld	a0,-88(s0)
0x0000000000010224	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10224 <main+148>:	sw	a0,-36(s0)
0x0000000000010228	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10228 <main+152>:	j	0x1022c <main+156>
0x000000000001022c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1022c <main+156>:	lw	a0,-36(s0)
0x0000000000010230	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10230 <main+160>:	li	a1,0
0x0000000000010234	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10234 <main+164>:	blt	a1,a0,0x10260 <main+208>
0x0000000000010238	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10238 <main+168>:	j	0x1023c <main+172>
56	      initialise_benchmark ();
=> 0x1023c <main+172>:	jal	ra,0x1036c <initialise_benchmark>
initialise_benchmark () at basicmath_small.c:41
41	{
=> 0x1036c <initialise_benchmark>:	addi	t6,t6,-16
0x0000000000010370	41	{
=> 0x10370 <initialise_benchmark+4>:	sd	ra,0(t6)
0x0000000000010374	41	{
=> 0x10374 <initialise_benchmark+8>:	st	zero,0(t6)
0x0000000000010378	41	{
=> 0x10378 <initialise_benchmark+12>:	addi	sp,sp,-16
42	}
=> 0x1037c <initialise_benchmark+16>:	sd	ra,8(sp)
0x0000000000010380	42	}
=> 0x10380 <initialise_benchmark+20>:	sd	s0,0(sp)
0x0000000000010384	42	}
=> 0x10384 <initialise_benchmark+24>:	addi	s0,sp,16
0x0000000000010388	42	}
=> 0x10388 <initialise_benchmark+28>:	ld	s0,0(sp)
0x000000000001038c in initialise_benchmark () at basicmath_small.c:42
42	}
=> 0x1038c <initialise_benchmark+32>:	ld	ra,8(sp)
0x0000000000010390	42	}
=> 0x10390 <initialise_benchmark+36>:	addi	sp,sp,16
0x0000000000010394	42	}
=> 0x10394 <initialise_benchmark+40>:	ld	ra,0(t6)
0x0000000000010398	42	}
=> 0x10398 <initialise_benchmark+44>:	addi	t6,t6,16
0x000000000001039c	42	}
=> 0x1039c <initialise_benchmark+48>:	ret
main (argc=1, argv=0x3ffffffb78) at main.c:57
57	      result = benchmark ();
=> 0x10240 <main+176>:	sd	a0,-120(s0)
0x0000000000010244	57	      result = benchmark ();
=> 0x10244 <main+180>:	jal	ra,0x103a0 <benchmark>
benchmark () at basicmath_small.c:47
47	{
=> 0x103a0 <benchmark>:	addi	t6,t6,-16
0x00000000000103a4	47	{
=> 0x103a4 <benchmark+4>:	sd	ra,0(t6)
0x00000000000103a8	47	{
=> 0x103a8 <benchmark+8>:	st	zero,0(t6)
0x00000000000103ac	47	{
=> 0x103ac <benchmark+12>:	addi	sp,sp,-576
0x00000000000103b0	47	{
=> 0x103b0 <benchmark+16>:	sd	ra,568(sp)
0x00000000000103b4	47	{
=> 0x103b4 <benchmark+20>:	sd	s0,560(sp)
0x00000000000103b8	47	{
=> 0x103b8 <benchmark+24>:	addi	s0,sp,576
0x00000000000103bc	47	{
=> 0x103bc <benchmark+28>:	li	a0,1023
0x00000000000103c0	47	{
=> 0x103c0 <benchmark+32>:	slli	a0,a0,0x34
48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103c4 <benchmark+36>:	sd	a0,-24(s0)
0x00000000000103c8	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103c8 <benchmark+40>:	lui	a1,0xffffc
0x00000000000103cc	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103cc <benchmark+44>:	addiw	a2,a1,37
0x00000000000103d0	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103d0 <benchmark+48>:	slli	a2,a2,0x30
0x00000000000103d4	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103d4 <benchmark+52>:	sd	a2,-32(s0)
0x00000000000103d8	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103d8 <benchmark+56>:	li	a2,257
0x00000000000103dc	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103dc <benchmark+60>:	slli	a2,a2,0x36
0x00000000000103e0	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103e0 <benchmark+64>:	sd	a2,-40(s0)
0x00000000000103e4	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103e4 <benchmark+68>:	lui	a2,0xffffe
0x00000000000103e8	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103e8 <benchmark+72>:	addiw	a3,a2,31
0x00000000000103ec	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103ec <benchmark+76>:	slli	a3,a3,0x31
0x00000000000103f0	48	   double  a1 = 1.0, b1 = -10.5, c1 = 32.0, d1 = -30.0;
=> 0x103f0 <benchmark+80>:	sd	a3,-48(s0)
49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x103f4 <benchmark+84>:	sd	a0,-56(s0)
0x00000000000103f8	49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x103f8 <benchmark+88>:	addiw	a2,a2,9
0x00000000000103fc	49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x103fc <benchmark+92>:	slli	a2,a2,0x31
0x0000000000010400	49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x10400 <benchmark+96>:	sd	a2,-64(s0)
0x0000000000010404	49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x10404 <benchmark+100>:	lui	a2,0x4
0x0000000000010408	49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x10408 <benchmark+104>:	addiw	a2,a2,49
0x000000000001040c	49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x1040c <benchmark+108>:	slli	a2,a2,0x30
0x0000000000010410	49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x10410 <benchmark+112>:	sd	a2,-72(s0)
0x0000000000010414	49	   double  a2 = 1.0, b2 = -4.5, c2 = 17.0, d2 = -30.0;
=> 0x10414 <benchmark+116>:	sd	a3,-80(s0)
50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10418 <benchmark+120>:	sd	a0,-88(s0)
0x000000000001041c	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x1041c <benchmark+124>:	lui	a2,0xfffff
0x0000000000010420	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10420 <benchmark+128>:	addiw	a2,a2,3
0x0000000000010424	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10424 <benchmark+132>:	slli	a2,a2,0x32
0x0000000000010428	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10428 <benchmark+136>:	sd	a2,-96(s0)
0x000000000001042c	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x1042c <benchmark+140>:	lui	a2,0x2
0x0000000000010430	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10430 <benchmark+144>:	addiw	a2,a2,27
0x0000000000010434	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10434 <benchmark+148>:	slli	a2,a2,0x31
0x0000000000010438	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10438 <benchmark+152>:	sd	a2,-104(s0)
0x000000000001043c	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x1043c <benchmark+156>:	addiw	a1,a1,63
0x0000000000010440	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10440 <benchmark+160>:	slli	a1,a1,0x30
0x0000000000010444	50	   double  a3 = 1.0, b3 = -3.5, c3 = 22.0, d3 = -31.0;
=> 0x10444 <benchmark+164>:	sd	a1,-112(s0)
51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10448 <benchmark+168>:	sd	a0,-120(s0)
0x000000000001044c	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x1044c <benchmark+172>:	lui	a1,0xfe016
0x0000000000010450	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10450 <benchmark+176>:	addiw	a1,a1,-1229
0x0000000000010454	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10454 <benchmark+180>:	slli	a1,a1,0xc
0x0000000000010458	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10458 <benchmark+184>:	addi	a1,a1,819
0x000000000001045c	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x1045c <benchmark+188>:	slli	a1,a1,0xc
0x0000000000010460	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10460 <benchmark+192>:	addi	a1,a1,819
0x0000000000010464	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10464 <benchmark+196>:	slli	a1,a1,0xd
0x0000000000010468	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10468 <benchmark+200>:	addi	a1,a1,1638
0x000000000001046c	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x1046c <benchmark+204>:	sd	a1,-128(s0)
0x0000000000010470	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10470 <benchmark+208>:	sd	a0,-136(s0)
0x0000000000010474	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10474 <benchmark+212>:	lui	a1,0xffff8
0x0000000000010478	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10478 <benchmark+216>:	addiw	a1,a1,131
0x000000000001047c	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x1047c <benchmark+220>:	slli	a1,a1,0x2f
0x0000000000010480	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10480 <benchmark+224>:	sd	a1,-144(s0)
0x0000000000010484	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10484 <benchmark+228>:	addi	a1,s0,-536
0x0000000000010488	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x10488 <benchmark+232>:	li	a2,0
0x000000000001048c	51	   double  a4 = 1.0, b4 = -13.7, c4 = 1.0, d4 = -35.0;
=> 0x1048c <benchmark+236>:	li	a3,384
54	   double output[48] = {0};
=> 0x10490 <benchmark+240>:	sd	a0,-552(s0)
0x0000000000010494	54	   double output[48] = {0};
=> 0x10494 <benchmark+244>:	mv	a0,a1
0x0000000000010498	54	   double output[48] = {0};
=> 0x10498 <benchmark+248>:	sd	a1,-560(s0)
0x000000000001049c	54	   double output[48] = {0};
=> 0x1049c <benchmark+252>:	mv	a1,a2
0x00000000000104a0	54	   double output[48] = {0};
=> 0x104a0 <benchmark+256>:	mv	a2,a3
0x00000000000104a4	54	   double output[48] = {0};
=> 0x104a4 <benchmark+260>:	jal	ra,0x12ea4 <memset>
0x0000000000012ea4 in memset ()
=> 0x12ea4 <memset>:	li	t1,15
0x0000000000012ea6 in memset ()
=> 0x12ea6 <memset+2>:	mv	a4,a0
0x0000000000012ea8 in memset ()
=> 0x12ea8 <memset+4>:	bgeu	t1,a2,0x12eca <memset+38>
0x0000000000012eac in memset ()
=> 0x12eac <memset+8>:	andi	a5,a4,15
0x0000000000012eb0 in memset ()
=> 0x12eb0 <memset+12>:	bnez	a5,0x12f30 <memset+140>
0x0000000000012f30 in memset ()
=> 0x12f30 <memset+140>:	slli	a3,a5,0x2
0x0000000000012f34 in memset ()
=> 0x12f34 <memset+144>:	auipc	t0,0x0
0x0000000000012f38 in memset ()
=> 0x12f38 <memset+148>:	add	a3,a3,t0
0x0000000000012f3a in memset ()
=> 0x12f3a <memset+150>:	mv	t0,ra
0x0000000000012f3c in memset ()
=> 0x12f3c <memset+152>:	jalr	-94(a3)
0x0000000000012ef6 in memset ()
=> 0x12ef6 <memset+82>:	sb	a1,7(a4)
0x0000000000012efa in memset ()
=> 0x12efa <memset+86>:	sb	a1,6(a4)
0x0000000000012efe in memset ()
=> 0x12efe <memset+90>:	sb	a1,5(a4)
0x0000000000012f02 in memset ()
=> 0x12f02 <memset+94>:	sb	a1,4(a4)
0x0000000000012f06 in memset ()
=> 0x12f06 <memset+98>:	sb	a1,3(a4)
0x0000000000012f0a in memset ()
=> 0x12f0a <memset+102>:	sb	a1,2(a4)
0x0000000000012f0e in memset ()
=> 0x12f0e <memset+106>:	sb	a1,1(a4)
0x0000000000012f12 in memset ()
=> 0x12f12 <memset+110>:	sb	a1,0(a4)
0x0000000000012f16 in memset ()
=> 0x12f16 <memset+114>:	ret
0x0000000000012f40 in memset ()
=> 0x12f40 <memset+156>:	mv	ra,t0
0x0000000000012f42 in memset ()
=> 0x12f42 <memset+158>:	addi	a5,a5,-16
0x0000000000012f44 in memset ()
=> 0x12f44 <memset+160>:	sub	a4,a4,a5
0x0000000000012f46 in memset ()
=> 0x12f46 <memset+162>:	add	a2,a2,a5
0x0000000000012f48 in memset ()
=> 0x12f48 <memset+164>:	bgeu	t1,a2,0x12eca <memset+38>
0x0000000000012f4c in memset ()
=> 0x12f4c <memset+168>:	j	0x12eb2 <memset+14>
0x0000000000012eb2 in memset ()
=> 0x12eb2 <memset+14>:	bnez	a1,0x12f18 <memset+116>
0x0000000000012eb4 in memset ()
=> 0x12eb4 <memset+16>:	andi	a3,a2,-16
0x0000000000012eb8 in memset ()
=> 0x12eb8 <memset+20>:	andi	a2,a2,15
0x0000000000012eba in memset ()
=> 0x12eba <memset+22>:	add	a3,a3,a4
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ebc in memset ()
=> 0x12ebc <memset+24>:	sd	a1,0(a4)
0x0000000000012ebe in memset ()
=> 0x12ebe <memset+26>:	sd	a1,8(a4)
0x0000000000012ec0 in memset ()
=> 0x12ec0 <memset+28>:	addi	a4,a4,16
0x0000000000012ec2 in memset ()
=> 0x12ec2 <memset+30>:	bltu	a4,a3,0x12ebc <memset+24>
0x0000000000012ec6 in memset ()
=> 0x12ec6 <memset+34>:	bnez	a2,0x12eca <memset+38>
0x0000000000012eca in memset ()
=> 0x12eca <memset+38>:	sub	a3,t1,a2
0x0000000000012ece in memset ()
=> 0x12ece <memset+42>:	slli	a3,a3,0x2
0x0000000000012ed0 in memset ()
=> 0x12ed0 <memset+44>:	auipc	t0,0x0
0x0000000000012ed4 in memset ()
=> 0x12ed4 <memset+48>:	add	a3,a3,t0
0x0000000000012ed6 in memset ()
=> 0x12ed6 <memset+50>:	jr	10(a3)
0x0000000000012ef6 in memset ()
=> 0x12ef6 <memset+82>:	sb	a1,7(a4)
0x0000000000012efa in memset ()
=> 0x12efa <memset+86>:	sb	a1,6(a4)
0x0000000000012efe in memset ()
=> 0x12efe <memset+90>:	sb	a1,5(a4)
0x0000000000012f02 in memset ()
=> 0x12f02 <memset+94>:	sb	a1,4(a4)
0x0000000000012f06 in memset ()
=> 0x12f06 <memset+98>:	sb	a1,3(a4)
0x0000000000012f0a in memset ()
=> 0x12f0a <memset+102>:	sb	a1,2(a4)
0x0000000000012f0e in memset ()
=> 0x12f0e <memset+106>:	sb	a1,1(a4)
0x0000000000012f12 in memset ()
=> 0x12f12 <memset+110>:	sb	a1,0(a4)
0x0000000000012f16 in memset ()
=> 0x12f16 <memset+114>:	ret
benchmark () at basicmath_small.c:55
55	   double *output_pos = &(output[0]);
=> 0x104a8 <benchmark+264>:	ld	a1,-560(s0)
0x00000000000104ac	55	   double *output_pos = &(output[0]);
=> 0x104ac <benchmark+268>:	sd	a1,-544(s0)
59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104b0 <benchmark+272>:	fld	fa0,-24(s0)
0x00000000000104b4	59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104b4 <benchmark+276>:	fld	fa1,-32(s0)
0x00000000000104b8	59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104b8 <benchmark+280>:	fld	fa2,-40(s0)
0x00000000000104bc	59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104bc <benchmark+284>:	fld	fa3,-48(s0)
0x00000000000104c0	59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104c0 <benchmark+288>:	addi	a2,s0,-148
0x00000000000104c4	59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104c4 <benchmark+292>:	sd	a0,-568(s0)
0x00000000000104c8	59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104c8 <benchmark+296>:	mv	a0,a2
0x00000000000104cc	59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104cc <benchmark+300>:	sd	a2,-576(s0)
0x00000000000104d0	59	   SolveCubic(a1, b1, c1, d1, &solutions, output);
=> 0x104d0 <benchmark+304>:	jal	ra,0x10664 <SolveCubic>
SolveCubic (a=1, b=-10.5, c=32, d=-30, solutions=0x3ff0000000000000, x=0xc012000000000000) at libcubic.c:37
37	{
=> 0x10664 <SolveCubic>:	addi	t6,t6,-16
0x0000000000010668	37	{
=> 0x10668 <SolveCubic+4>:	sd	ra,0(t6)
0x000000000001066c	37	{
=> 0x1066c <SolveCubic+8>:	st	zero,0(t6)
0x0000000000010670	37	{
=> 0x10670 <SolveCubic+12>:	addi	sp,sp,-736
0x0000000000010674	37	{
=> 0x10674 <SolveCubic+16>:	sd	ra,728(sp)
0x0000000000010678	37	{
=> 0x10678 <SolveCubic+20>:	sd	s0,720(sp)
0x000000000001067c	37	{
=> 0x1067c <SolveCubic+24>:	addi	s0,sp,736
0x0000000000010680	37	{
=> 0x10680 <SolveCubic+28>:	fsd	fa0,-24(s0)
0x0000000000010684	37	{
=> 0x10684 <SolveCubic+32>:	fsd	fa1,-32(s0)
0x0000000000010688	37	{
=> 0x10688 <SolveCubic+36>:	fsd	fa2,-40(s0)
0x000000000001068c	37	{
=> 0x1068c <SolveCubic+40>:	fsd	fa3,-48(s0)
0x0000000000010690	37	{
=> 0x10690 <SolveCubic+44>:	sd	a0,-56(s0)
0x0000000000010694	37	{
=> 0x10694 <SolveCubic+48>:	sd	a1,-64(s0)
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x10698 <SolveCubic+52>:	fld	ft0,-32(s0)
0x000000000001069c	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x1069c <SolveCubic+56>:	fld	ft1,-24(s0)
0x00000000000106a0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a0 <SolveCubic+60>:	fdiv.d	fa0,ft0,ft1
0x00000000000106a4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a4 <SolveCubic+64>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106a8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a8 <SolveCubic+68>:	sd	a1,-72(s0)
0x00000000000106ac	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106ac <SolveCubic+72>:	sd	a0,-80(s0)
0x00000000000106b0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b0 <SolveCubic+76>:	fld	ft0,-40(s0)
0x00000000000106b4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b4 <SolveCubic+80>:	fld	ft1,-24(s0)
0x00000000000106b8	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b8 <SolveCubic+84>:	fdiv.d	fa0,ft0,ft1
0x00000000000106bc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106bc <SolveCubic+88>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106c0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c0 <SolveCubic+92>:	sd	a1,-88(s0)
0x00000000000106c4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c4 <SolveCubic+96>:	sd	a0,-96(s0)
0x00000000000106c8	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c8 <SolveCubic+100>:	fld	ft0,-48(s0)
0x00000000000106cc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106cc <SolveCubic+104>:	fld	ft1,-24(s0)
0x00000000000106d0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d0 <SolveCubic+108>:	fdiv.d	fa0,ft0,ft1
0x00000000000106d4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d4 <SolveCubic+112>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106d8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d8 <SolveCubic+116>:	sd	a1,-104(s0)
0x00000000000106dc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106dc <SolveCubic+120>:	sd	a0,-112(s0)
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e0 <SolveCubic+124>:	ld	a0,-80(s0)
0x00000000000106e4	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e4 <SolveCubic+128>:	ld	a1,-72(s0)
0x00000000000106e8	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e8 <SolveCubic+132>:	sd	a0,-168(s0)
0x00000000000106ec	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106ec <SolveCubic+136>:	sd	a1,-176(s0)
0x00000000000106f0	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f0 <SolveCubic+140>:	ld	a2,-168(s0)
0x00000000000106f4	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f4 <SolveCubic+144>:	ld	a3,-176(s0)
0x00000000000106f8	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f8 <SolveCubic+148>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000106fc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106fc <SolveCubic+152>:	ld	a2,-96(s0)
0x0000000000010700	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10700 <SolveCubic+156>:	ld	a3,-88(s0)
0x0000000000010704	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10704 <SolveCubic+160>:	lui	a4,0xffff8
0x0000000000010708	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10708 <SolveCubic+164>:	addiw	a4,a4,1
0x000000000001070c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1070c <SolveCubic+168>:	slli	a4,a4,0x2f
0x0000000000010710	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10710 <SolveCubic+172>:	li	a5,0
0x0000000000010714	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10714 <SolveCubic+176>:	sd	a0,-184(s0)
0x0000000000010718	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10718 <SolveCubic+180>:	mv	a0,a2
0x000000000001071c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1071c <SolveCubic+184>:	sd	a1,-192(s0)
0x0000000000010720	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10720 <SolveCubic+188>:	mv	a1,a3
0x0000000000010724	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10724 <SolveCubic+192>:	mv	a2,a5
0x0000000000010728	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10728 <SolveCubic+196>:	mv	a3,a4
0x000000000001072c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1072c <SolveCubic+200>:	sd	a5,-200(s0)
0x0000000000010730	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10730 <SolveCubic+204>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=-3) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010734 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10734 <SolveCubic+208>:	ld	a2,-184(s0)
0x0000000000010738	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10738 <SolveCubic+212>:	sd	a0,-208(s0)
0x000000000001073c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1073c <SolveCubic+216>:	mv	a0,a2
0x0000000000010740	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10740 <SolveCubic+220>:	ld	a3,-192(s0)
0x0000000000010744	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10744 <SolveCubic+224>:	sd	a1,-216(s0)
0x0000000000010748	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10748 <SolveCubic+228>:	mv	a1,a3
0x000000000001074c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1074c <SolveCubic+232>:	ld	a2,-208(s0)
0x0000000000010750	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10750 <SolveCubic+236>:	ld	a3,-216(s0)
0x0000000000010754	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10754 <SolveCubic+240>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=-0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
46	  FP_ADD_Q (R, A, B);
=> 0x1db98 <__addtf3+996>:	blez	a2,0x1dc62 <__addtf3+1198>
0x000000000001dc62	46	  FP_ADD_Q (R, A, B);
=> 0x1dc62 <__addtf3+1198>:	beqz	a2,0x1dd48 <__addtf3+1428>
0x000000000001dd48	46	  FP_ADD_Q (R, A, B);
=> 0x1dd48 <__addtf3+1428>:	addi	t4,s0,1
0x000000000001dd4c	46	  FP_ADD_Q (R, A, B);
=> 0x1dd4c <__addtf3+1432>:	addi	a3,t1,-2
0x000000000001dd50	46	  FP_ADD_Q (R, A, B);
=> 0x1dd50 <__addtf3+1436>:	and	a3,t4,a3
0x000000000001dd54	46	  FP_ADD_Q (R, A, B);
=> 0x1dd54 <__addtf3+1440>:	bnez	a3,0x1de42 <__addtf3+1678>
0x000000000001dd56	46	  FP_ADD_Q (R, A, B);
=> 0x1dd56 <__addtf3+1442>:	or	t4,a5,a0
0x000000000001dd5a	46	  FP_ADD_Q (R, A, B);
=> 0x1dd5a <__addtf3+1446>:	or	t1,a4,a6
0x000000000001dd5e	46	  FP_ADD_Q (R, A, B);
=> 0x1dd5e <__addtf3+1450>:	bnez	s0,0x1ddfe <__addtf3+1610>
0x000000000001dd60	46	  FP_ADD_Q (R, A, B);
=> 0x1dd60 <__addtf3+1452>:	bnez	t4,0x1ddbc <__addtf3+1544>
0x000000000001dd64	46	  FP_ADD_Q (R, A, B);
=> 0x1dd64 <__addtf3+1456>:	bnez	t1,0x1df3a <__addtf3+1926>
0x000000000001dd68	46	  FP_ADD_Q (R, A, B);
=> 0x1dd68 <__addtf3+1460>:	addi	s2,s1,-2
0x000000000001dd6c	46	  FP_ADD_Q (R, A, B);
=> 0x1dd6c <__addtf3+1464>:	seqz	s2,s2
0x000000000001dd70	46	  FP_ADD_Q (R, A, B);
=> 0x1dd70 <__addtf3+1468>:	li	a5,0
0x000000000001dd72	46	  FP_ADD_Q (R, A, B);
=> 0x1dd72 <__addtf3+1470>:	li	a0,0
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x0000000000010758 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10758 <SolveCubic+244>:	lui	a2,0x20
0x000000000001075c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1075c <SolveCubic+248>:	addiw	a2,a2,17
0x0000000000010760	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10760 <SolveCubic+252>:	slli	a2,a2,0x2d
0x0000000000010764	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10764 <SolveCubic+256>:	ld	a3,-200(s0)
0x0000000000010768	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10768 <SolveCubic+260>:	sd	a2,-224(s0)
0x000000000001076c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1076c <SolveCubic+264>:	mv	a2,a3
0x0000000000010770	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10770 <SolveCubic+268>:	ld	a3,-224(s0)
0x0000000000010774	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10774 <SolveCubic+272>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=9) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010778 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10778 <SolveCubic+276>:	sd	a1,-120(s0)
0x000000000001077c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1077c <SolveCubic+280>:	sd	a0,-128(s0)
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10780 <SolveCubic+284>:	ld	a0,-80(s0)
0x0000000000010784	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10784 <SolveCubic+288>:	ld	a1,-72(s0)
0x0000000000010788	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10788 <SolveCubic+292>:	sd	a0,-232(s0)
0x000000000001078c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1078c <SolveCubic+296>:	sd	a1,-240(s0)
0x0000000000010790	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10790 <SolveCubic+300>:	ld	a2,-232(s0)
0x0000000000010794	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10794 <SolveCubic+304>:	ld	a3,-240(s0)
0x0000000000010798	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10798 <SolveCubic+308>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
0x000000000001d812	46	  FP_ADD_Q (R, A, B);
=> 0x1d812 <__addtf3+94>:	blez	a2,0x1d90c <__addtf3+344>
0x000000000001d90c	46	  FP_ADD_Q (R, A, B);
=> 0x1d90c <__addtf3+344>:	beqz	a2,0x1d9e8 <__addtf3+564>
0x000000000001d9e8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9e8 <__addtf3+564>:	addi	a7,s0,1
0x000000000001d9ec	46	  FP_ADD_Q (R, A, B);
=> 0x1d9ec <__addtf3+568>:	addi	a3,t1,-2
0x000000000001d9f0	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f0 <__addtf3+572>:	and	t1,a7,a3
0x000000000001d9f4	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f4 <__addtf3+576>:	bnez	t1,0x1dafe <__addtf3+842>
0x000000000001d9f8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f8 <__addtf3+580>:	or	a7,a5,a0
0x000000000001d9fc	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fc <__addtf3+584>:	bnez	s0,0x1da42 <__addtf3+654>
0x000000000001d9fe	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fe <__addtf3+586>:	beqz	a7,0x1df34 <__addtf3+1920>
0x000000000001df34	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1df34 <__addtf3+1920>:	mv	a5,a4
0x000000000001df36	46	  FP_ADD_Q (R, A, B);
=> 0x1df36 <__addtf3+1922>:	mv	a0,a6
0x000000000001df38	46	  FP_ADD_Q (R, A, B);
=> 0x1df38 <__addtf3+1924>:	j	0x1dd74 <__addtf3+1472>
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x000000000001079c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1079c <SolveCubic+312>:	ld	a2,-232(s0)
0x00000000000107a0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a0 <SolveCubic+316>:	ld	a3,-240(s0)
0x00000000000107a4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a4 <SolveCubic+320>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107a8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a8 <SolveCubic+324>:	ld	a2,-232(s0)
0x00000000000107ac	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107ac <SolveCubic+328>:	ld	a3,-240(s0)
0x00000000000107b0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b0 <SolveCubic+332>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107b4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b4 <SolveCubic+336>:	ld	a2,-232(s0)
0x00000000000107b8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b8 <SolveCubic+340>:	sd	a0,-248(s0)
0x00000000000107bc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107bc <SolveCubic+344>:	mv	a0,a2
0x00000000000107c0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c0 <SolveCubic+348>:	ld	a3,-240(s0)
0x00000000000107c4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c4 <SolveCubic+352>:	sd	a1,-256(s0)
0x00000000000107c8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c8 <SolveCubic+356>:	mv	a1,a3
0x00000000000107cc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107cc <SolveCubic+360>:	ld	a2,-200(s0)
0x00000000000107d0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d0 <SolveCubic+364>:	ld	a3,-224(s0)
0x00000000000107d4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d4 <SolveCubic+368>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=9) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107d8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d8 <SolveCubic+372>:	ld	a2,-96(s0)
0x00000000000107dc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107dc <SolveCubic+376>:	ld	a3,-88(s0)
0x00000000000107e0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e0 <SolveCubic+380>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107e4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e4 <SolveCubic+384>:	ld	a2,-248(s0)
0x00000000000107e8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e8 <SolveCubic+388>:	sd	a0,-264(s0)
0x00000000000107ec	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107ec <SolveCubic+392>:	mv	a0,a2
0x00000000000107f0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f0 <SolveCubic+396>:	ld	a3,-256(s0)
0x00000000000107f4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f4 <SolveCubic+400>:	sd	a1,-272(s0)
0x00000000000107f8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f8 <SolveCubic+404>:	mv	a1,a3
0x00000000000107fc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107fc <SolveCubic+408>:	ld	a2,-264(s0)
0x0000000000010800	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10800 <SolveCubic+412>:	ld	a3,-272(s0)
0x0000000000010804	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10804 <SolveCubic+416>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010808 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10808 <SolveCubic+420>:	ld	a2,-112(s0)
0x000000000001080c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1080c <SolveCubic+424>:	ld	a3,-104(s0)
0x0000000000010810	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10810 <SolveCubic+428>:	lui	a4,0x40
0x0000000000010814	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10814 <SolveCubic+432>:	addiw	a5,a4,59
0x0000000000010818	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10818 <SolveCubic+436>:	slli	a5,a5,0x2c
0x000000000001081c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1081c <SolveCubic+440>:	sd	a0,-280(s0)
0x0000000000010820	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10820 <SolveCubic+444>:	mv	a0,a2
0x0000000000010824	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10824 <SolveCubic+448>:	sd	a1,-288(s0)
0x0000000000010828	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10828 <SolveCubic+452>:	mv	a1,a3
0x000000000001082c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1082c <SolveCubic+456>:	ld	a2,-200(s0)
0x0000000000010830	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10830 <SolveCubic+460>:	mv	a3,a5
0x0000000000010834	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10834 <SolveCubic+464>:	sd	a4,-296(s0)
0x0000000000010838	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10838 <SolveCubic+468>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=27) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x000000000001083c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1083c <SolveCubic+472>:	ld	a2,-280(s0)
0x0000000000010840	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10840 <SolveCubic+476>:	sd	a0,-304(s0)
0x0000000000010844	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10844 <SolveCubic+480>:	mv	a0,a2
0x0000000000010848	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10848 <SolveCubic+484>:	ld	a3,-288(s0)
0x000000000001084c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1084c <SolveCubic+488>:	sd	a1,-312(s0)
0x0000000000010850	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10850 <SolveCubic+492>:	mv	a1,a3
0x0000000000010854	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10854 <SolveCubic+496>:	ld	a2,-304(s0)
0x0000000000010858	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10858 <SolveCubic+500>:	ld	a3,-312(s0)
0x000000000001085c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1085c <SolveCubic+504>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
0x000000000001d812	46	  FP_ADD_Q (R, A, B);
=> 0x1d812 <__addtf3+94>:	blez	a2,0x1d90c <__addtf3+344>
0x000000000001d90c	46	  FP_ADD_Q (R, A, B);
=> 0x1d90c <__addtf3+344>:	beqz	a2,0x1d9e8 <__addtf3+564>
0x000000000001d9e8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9e8 <__addtf3+564>:	addi	a7,s0,1
0x000000000001d9ec	46	  FP_ADD_Q (R, A, B);
=> 0x1d9ec <__addtf3+568>:	addi	a3,t1,-2
0x000000000001d9f0	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f0 <__addtf3+572>:	and	t1,a7,a3
0x000000000001d9f4	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f4 <__addtf3+576>:	bnez	t1,0x1dafe <__addtf3+842>
0x000000000001d9f8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f8 <__addtf3+580>:	or	a7,a5,a0
0x000000000001d9fc	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fc <__addtf3+584>:	bnez	s0,0x1da42 <__addtf3+654>
0x000000000001d9fe	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fe <__addtf3+586>:	beqz	a7,0x1df34 <__addtf3+1920>
0x000000000001df34	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1df34 <__addtf3+1920>:	mv	a5,a4
0x000000000001df36	46	  FP_ADD_Q (R, A, B);
=> 0x1df36 <__addtf3+1922>:	mv	a0,a6
0x000000000001df38	46	  FP_ADD_Q (R, A, B);
=> 0x1df38 <__addtf3+1924>:	j	0x1dd74 <__addtf3+1472>
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x0000000000010860 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10860 <SolveCubic+508>:	ld	a2,-296(s0)
0x0000000000010864	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10864 <SolveCubic+512>:	addiw	a3,a2,75
0x0000000000010868	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10868 <SolveCubic+516>:	slli	a3,a3,0x2c
0x000000000001086c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1086c <SolveCubic+520>:	ld	a2,-200(s0)
0x0000000000010870	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10870 <SolveCubic+524>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=54) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010874 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10874 <SolveCubic+528>:	sd	a1,-136(s0)
0x0000000000010878	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10878 <SolveCubic+532>:	sd	a0,-144(s0)
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1087c <SolveCubic+536>:	ld	a0,-144(s0)
0x0000000000010880	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10880 <SolveCubic+540>:	ld	a1,-136(s0)
0x0000000000010884	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10884 <SolveCubic+544>:	sd	a0,-320(s0)
0x0000000000010888	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10888 <SolveCubic+548>:	sd	a1,-328(s0)
0x000000000001088c	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1088c <SolveCubic+552>:	ld	a2,-320(s0)
0x0000000000010890	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10890 <SolveCubic+556>:	ld	a3,-328(s0)
0x0000000000010894	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10894 <SolveCubic+560>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010898 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10898 <SolveCubic+564>:	ld	a2,-128(s0)
0x000000000001089c	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1089c <SolveCubic+568>:	ld	a3,-120(s0)
0x00000000000108a0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a0 <SolveCubic+572>:	sd	a0,-336(s0)
0x00000000000108a4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a4 <SolveCubic+576>:	mv	a0,a2
0x00000000000108a8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a8 <SolveCubic+580>:	sd	a1,-344(s0)
0x00000000000108ac	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108ac <SolveCubic+584>:	mv	a1,a3
0x00000000000108b0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b0 <SolveCubic+588>:	sd	a2,-352(s0)
0x00000000000108b4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b4 <SolveCubic+592>:	sd	a3,-360(s0)
0x00000000000108b8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b8 <SolveCubic+596>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000108bc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108bc <SolveCubic+600>:	ld	a2,-352(s0)
0x00000000000108c0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c0 <SolveCubic+604>:	ld	a3,-360(s0)
0x00000000000108c4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c4 <SolveCubic+608>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000108c8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c8 <SolveCubic+612>:	ld	a2,-336(s0)
0x00000000000108cc	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108cc <SolveCubic+616>:	sd	a0,-368(s0)
0x00000000000108d0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d0 <SolveCubic+620>:	mv	a0,a2
0x00000000000108d4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d4 <SolveCubic+624>:	ld	a3,-344(s0)
0x00000000000108d8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d8 <SolveCubic+628>:	sd	a1,-376(s0)
0x00000000000108dc	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108dc <SolveCubic+632>:	mv	a1,a3
0x00000000000108e0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e0 <SolveCubic+636>:	ld	a2,-368(s0)
0x00000000000108e4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e4 <SolveCubic+640>:	ld	a3,-376(s0)
0x00000000000108e8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e8 <SolveCubic+644>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x00000000000108ec in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108ec <SolveCubic+648>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x00000000000108f0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108f0 <SolveCubic+652>:	fsd	fa0,-152(s0)
45	   if (R2_Q3 <= 0)
=> 0x108f4 <SolveCubic+656>:	fld	ft0,-152(s0)
0x00000000000108f8	45	   if (R2_Q3 <= 0)
=> 0x108f8 <SolveCubic+660>:	fmv.d.x	ft1,zero
0x00000000000108fc	45	   if (R2_Q3 <= 0)
=> 0x108fc <SolveCubic+664>:	fle.d	a0,ft0,ft1
0x0000000000010900	45	   if (R2_Q3 <= 0)
=> 0x10900 <SolveCubic+668>:	xori	a0,a0,1
0x0000000000010904	45	   if (R2_Q3 <= 0)
=> 0x10904 <SolveCubic+672>:	bnez	a0,0x10ba0 <SolveCubic+1340>
0x0000000000010908	45	   if (R2_Q3 <= 0)
=> 0x10908 <SolveCubic+676>:	j	0x1090c <SolveCubic+680>
47	      *solutions = 3;
=> 0x1090c <SolveCubic+680>:	ld	a0,-56(s0)
0x0000000000010910	47	      *solutions = 3;
=> 0x10910 <SolveCubic+684>:	li	a1,3
0x0000000000010914	47	      *solutions = 3;
=> 0x10914 <SolveCubic+688>:	sw	a1,0(a0)
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10918 <SolveCubic+692>:	ld	a1,-136(s0)
0x000000000001091c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1091c <SolveCubic+696>:	ld	a0,-144(s0)
0x0000000000010920	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10920 <SolveCubic+700>:	ld	a2,-128(s0)
0x0000000000010924	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10924 <SolveCubic+704>:	ld	a3,-120(s0)
0x0000000000010928	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10928 <SolveCubic+708>:	sd	a0,-384(s0)
0x000000000001092c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1092c <SolveCubic+712>:	mv	a0,a2
0x0000000000010930	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10930 <SolveCubic+716>:	sd	a1,-392(s0)
0x0000000000010934	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10934 <SolveCubic+720>:	mv	a1,a3
0x0000000000010938	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10938 <SolveCubic+724>:	sd	a2,-400(s0)
0x000000000001093c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1093c <SolveCubic+728>:	sd	a3,-408(s0)
0x0000000000010940	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10940 <SolveCubic+732>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010944 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10944 <SolveCubic+736>:	ld	a2,-400(s0)
0x0000000000010948	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10948 <SolveCubic+740>:	ld	a3,-408(s0)
0x000000000001094c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1094c <SolveCubic+744>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010950 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10950 <SolveCubic+748>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010954 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10954 <SolveCubic+752>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010958 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10958 <SolveCubic+756>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x000000000001095c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1095c <SolveCubic+760>:	ld	a2,-384(s0)
0x0000000000010960	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10960 <SolveCubic+764>:	sd	a0,-416(s0)
0x0000000000010964	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10964 <SolveCubic+768>:	mv	a0,a2
0x0000000000010968	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10968 <SolveCubic+772>:	ld	a3,-392(s0)
0x000000000001096c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1096c <SolveCubic+776>:	sd	a1,-424(s0)
0x0000000000010970	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10970 <SolveCubic+780>:	mv	a1,a3
0x0000000000010974	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10974 <SolveCubic+784>:	ld	a2,-416(s0)
0x0000000000010978	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10978 <SolveCubic+788>:	ld	a3,-424(s0)
0x000000000001097c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1097c <SolveCubic+792>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
45	  FP_UNPACK_Q (B, b);
=> 0x1e140 <__divtf3+342>:	or	a5,s9,s0
0x000000000001e144	45	  FP_UNPACK_Q (B, b);
=> 0x1e144 <__divtf3+346>:	beqz	a5,0x1e1b2 <__divtf3+456>
0x000000000001e1b2	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b2 <__divtf3+456>:	li	s0,0
0x000000000001e1b4	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b4 <__divtf3+458>:	li	a5,0
0x000000000001e1b6	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b6 <__divtf3+460>:	li	a0,0
0x000000000001e1b8	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b8 <__divtf3+462>:	li	a2,1
0x000000000001e1ba	45	  FP_UNPACK_Q (B, b);
=> 0x1e1ba <__divtf3+464>:	j	0x1e106 <__divtf3+284>
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e66e	47	  FP_PACK_Q (r, R);
=> 0x1e66e <__divtf3+1668>:	li	s0,1
0x000000000001e670	47	  FP_PACK_Q (r, R);
=> 0x1e670 <__divtf3+1670>:	lui	a4,0x8
0x000000000001e672	47	  FP_PACK_Q (r, R);
=> 0x1e672 <__divtf3+1672>:	slli	s0,s0,0x2f
0x000000000001e674	47	  FP_PACK_Q (r, R);
=> 0x1e674 <__divtf3+1674>:	li	a0,0
0x000000000001e676	47	  FP_PACK_Q (r, R);
=> 0x1e676 <__divtf3+1676>:	addi	a4,a4,-1
0x000000000001e678	47	  FP_PACK_Q (r, R);
=> 0x1e678 <__divtf3+1678>:	li	a1,0
0x000000000001e67a	46	  FP_DIV_Q (R, A, B);
=> 0x1e67a <__divtf3+1680>:	li	s2,16
0x000000000001e67c	46	  FP_DIV_Q (R, A, B);
=> 0x1e67c <__divtf3+1682>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
0x000000000001e4c6	48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c6 <__divtf3+1244>:	csrs	fflags,s2
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010980 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10980 <SolveCubic+796>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=nan(0x8000000000000000000000000000)) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa16 <__trunctfdf2+442>:	beqz	a5,0x1fa50 <__trunctfdf2+500>
0x000000000001fa18	38	  FP_DECL_EX;
=> 0x1fa18 <__trunctfdf2+444>:	li	a7,0
0x000000000001fa1a	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa1a <__trunctfdf2+446>:	bne	a2,t3,0x1fa28 <__trunctfdf2+460>
0x000000000001fa1e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa1e <__trunctfdf2+450>:	srli	a7,a4,0x32
0x000000000001fa22	38	  FP_DECL_EX;
=> 0x1fa22 <__trunctfdf2+454>:	seqz	a7,a7
0x000000000001fa26	38	  FP_DECL_EX;
=> 0x1fa26 <__trunctfdf2+458>:	slli	a7,a7,0x4
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa28 <__trunctfdf2+460>:	srli	a5,t4,0x3c
0x000000000001fa2c	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa2c <__trunctfdf2+464>:	slli	a4,a4,0x4
0x000000000001fa2e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa2e <__trunctfdf2+466>:	or	a4,a4,a5
0x000000000001fa30	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa30 <__trunctfdf2+468>:	li	a5,1
0x000000000001fa32	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa32 <__trunctfdf2+470>:	andi	a4,a4,-8
0x000000000001fa34	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa34 <__trunctfdf2+472>:	slli	a5,a5,0x36
0x000000000001fa36	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa36 <__trunctfdf2+474>:	or	a5,a5,a4
0x000000000001fa38	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa38 <__trunctfdf2+476>:	li	a2,2047
0x000000000001fa3c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa3c <__trunctfdf2+480>:	li	a4,0
0x000000000001fa3e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa3e <__trunctfdf2+482>:	j	0x1f9f8 <__trunctfdf2+412>
0x000000000001f9f8	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f9f8 <__trunctfdf2+412>:	andi	a1,a5,7
0x000000000001f9fc	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f9fc <__trunctfdf2+416>:	bnez	a1,0x1f8b6 <__trunctfdf2+90>
0x000000000001fa00	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa00 <__trunctfdf2+420>:	beqz	a4,0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f912	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f912 <__trunctfdf2+182>:	beqz	a5,0x1f91a <__trunctfdf2+190>
0x000000000001f914	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f914 <__trunctfdf2+184>:	li	a5,1
0x000000000001f916	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f916 <__trunctfdf2+186>:	slli	a5,a5,0x33
0x000000000001f918	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f918 <__trunctfdf2+188>:	li	a3,0
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010984 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10984 <SolveCubic+800>:	jal	ra,0x10f48 <acos>
0x0000000000010f48 in acos ()
=> 0x10f48 <acos>:	addi	sp,sp,-32
0x0000000000010f4a in acos ()
=> 0x10f4a <acos+2>:	fsd	fs0,8(sp)
0x0000000000010f4c in acos ()
=> 0x10f4c <acos+4>:	fmv.d	fs0,fa0
0x0000000000010f50 in acos ()
=> 0x10f50 <acos+8>:	fsd	fs1,0(sp)
0x0000000000010f52 in acos ()
=> 0x10f52 <acos+10>:	sd	ra,24(sp)
0x0000000000010f54 in acos ()
=> 0x10f54 <acos+12>:	jal	ra,0x11094 <__ieee754_acos>
0x0000000000011094 in __ieee754_acos ()
=> 0x11094 <__ieee754_acos>:	fmv.x.d	a5,fa0
0x0000000000011098 in __ieee754_acos ()
=> 0x11098 <__ieee754_acos+4>:	lui	a3,0x3ff00
0x000000000001109c in __ieee754_acos ()
=> 0x1109c <__ieee754_acos+8>:	srai	a2,a5,0x20
0x00000000000110a0 in __ieee754_acos ()
=> 0x110a0 <__ieee754_acos+12>:	slli	a4,a2,0x21
0x00000000000110a4 in __ieee754_acos ()
=> 0x110a4 <__ieee754_acos+16>:	srli	a4,a4,0x21
0x00000000000110a6 in __ieee754_acos ()
=> 0x110a6 <__ieee754_acos+18>:	blt	a4,a3,0x110c2 <__ieee754_acos+46>
0x00000000000110c2 in __ieee754_acos ()
=> 0x110c2 <__ieee754_acos+46>:	lui	a3,0x3fe00
0x00000000000110c6 in __ieee754_acos ()
=> 0x110c6 <__ieee754_acos+50>:	bge	a4,a3,0x110d8 <__ieee754_acos+68>
0x00000000000110ca in __ieee754_acos ()
=> 0x110ca <__ieee754_acos+54>:	lui	a3,0x3c600
0x00000000000110ce in __ieee754_acos ()
=> 0x110ce <__ieee754_acos+58>:	blt	a3,a4,0x1119c <__ieee754_acos+264>
0x00000000000110d2 in __ieee754_acos ()
=> 0x110d2 <__ieee754_acos+62>:	fld	fa0,976(gp)
0x00000000000110d6 in __ieee754_acos ()
=> 0x110d6 <__ieee754_acos+66>:	ret
0x0000000000010f58 in acos ()
=> 0x10f58 <acos+16>:	feq.d	a5,fs0,fs0
0x0000000000010f5c in acos ()
=> 0x10f5c <acos+20>:	fmv.d	fs1,fa0
0x0000000000010f60 in acos ()
=> 0x10f60 <acos+24>:	beqz	a5,0x10f74 <acos+44>
0x0000000000010f62 in acos ()
=> 0x10f62 <acos+26>:	fmv.d	fa0,fs0
0x0000000000010f66 in acos ()
=> 0x10f66 <acos+30>:	jal	ra,0x10f42 <fabs>
0x0000000000010f42 in fabs ()
=> 0x10f42 <fabs>:	fabs.d	fa0,fa0
0x0000000000010f46 in fabs ()
=> 0x10f46 <fabs+4>:	ret
0x0000000000010f6a in acos ()
=> 0x10f6a <acos+34>:	fld	fa5,1000(gp)
0x0000000000010f6e in acos ()
=> 0x10f6e <acos+38>:	flt.d	a5,fa5,fa0
0x0000000000010f72 in acos ()
=> 0x10f72 <acos+42>:	bnez	a5,0x10f82 <acos+58>
0x0000000000010f74 in acos ()
=> 0x10f74 <acos+44>:	ld	ra,24(sp)
0x0000000000010f76 in acos ()
=> 0x10f76 <acos+46>:	fmv.d	fa0,fs1
0x0000000000010f7a in acos ()
=> 0x10f7a <acos+50>:	fld	fs0,8(sp)
0x0000000000010f7c in acos ()
=> 0x10f7c <acos+52>:	fld	fs1,0(sp)
0x0000000000010f7e in acos ()
=> 0x10f7e <acos+54>:	addi	sp,sp,32
0x0000000000010f80 in acos ()
=> 0x10f80 <acos+56>:	ret
0x0000000000010988 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10988 <SolveCubic+804>:	fsd	fa0,-160(s0)
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x1098c <SolveCubic+808>:	ld	a0,-128(s0)
0x0000000000010990	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10990 <SolveCubic+812>:	ld	a1,-120(s0)
0x0000000000010994	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10994 <SolveCubic+816>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010998 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10998 <SolveCubic+820>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x000000000001099c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x1099c <SolveCubic+824>:	fld	ft0,1840(gp)
0x00000000000109a0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a0 <SolveCubic+828>:	fmul.d	ft1,fa0,ft0
0x00000000000109a4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a4 <SolveCubic+832>:	fld	ft2,-160(s0)
0x00000000000109a8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a8 <SolveCubic+836>:	fld	ft3,1848(gp)
0x00000000000109ac	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109ac <SolveCubic+840>:	fdiv.d	fa0,ft2,ft3
0x00000000000109b0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b0 <SolveCubic+844>:	fsd	ft0,-432(s0)
0x00000000000109b4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b4 <SolveCubic+848>:	fsd	ft1,-440(s0)
0x00000000000109b8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b8 <SolveCubic+852>:	fsd	ft3,-448(s0)
0x00000000000109bc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109bc <SolveCubic+856>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x00000000000109c0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c0 <SolveCubic+860>:	fld	ft0,-440(s0)
0x00000000000109c4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c4 <SolveCubic+864>:	fmul.d	fa0,ft0,fa0
0x00000000000109c8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c8 <SolveCubic+868>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000109cc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109cc <SolveCubic+872>:	ld	a2,-80(s0)
0x00000000000109d0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d0 <SolveCubic+876>:	ld	a3,-72(s0)
0x00000000000109d4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d4 <SolveCubic+880>:	lui	a4,0x8
0x00000000000109d8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d8 <SolveCubic+884>:	addiw	a4,a4,1
0x00000000000109dc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109dc <SolveCubic+888>:	slli	a4,a4,0x2f
0x00000000000109e0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e0 <SolveCubic+892>:	li	a5,0
0x00000000000109e4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e4 <SolveCubic+896>:	sd	a0,-456(s0)
0x00000000000109e8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e8 <SolveCubic+900>:	mv	a0,a2
0x00000000000109ec	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109ec <SolveCubic+904>:	sd	a1,-464(s0)
0x00000000000109f0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f0 <SolveCubic+908>:	mv	a1,a3
0x00000000000109f4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f4 <SolveCubic+912>:	mv	a2,a5
0x00000000000109f8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f8 <SolveCubic+916>:	mv	a3,a4
0x00000000000109fc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109fc <SolveCubic+920>:	sd	a4,-472(s0)
0x0000000000010a00	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a00 <SolveCubic+924>:	sd	a5,-480(s0)
0x0000000000010a04	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a04 <SolveCubic+928>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010a08 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a08 <SolveCubic+932>:	ld	a2,-456(s0)
0x0000000000010a0c	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a0c <SolveCubic+936>:	sd	a0,-488(s0)
0x0000000000010a10	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a10 <SolveCubic+940>:	mv	a0,a2
0x0000000000010a14	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a14 <SolveCubic+944>:	ld	a3,-464(s0)
0x0000000000010a18	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a18 <SolveCubic+948>:	sd	a1,-496(s0)
0x0000000000010a1c	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a1c <SolveCubic+952>:	mv	a1,a3
0x0000000000010a20	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a20 <SolveCubic+956>:	ld	a2,-488(s0)
0x0000000000010a24	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a24 <SolveCubic+960>:	ld	a3,-496(s0)
0x0000000000010a28	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a28 <SolveCubic+964>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010a2c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a2c <SolveCubic+968>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010a30 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a30 <SolveCubic+972>:	ld	a0,-64(s0)
0x0000000000010a34	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a34 <SolveCubic+976>:	fsd	fa0,0(a0)
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a38 <SolveCubic+980>:	ld	a0,-128(s0)
0x0000000000010a3c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a3c <SolveCubic+984>:	ld	a1,-120(s0)
0x0000000000010a40	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a40 <SolveCubic+988>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010a44 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a44 <SolveCubic+992>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010a48 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a48 <SolveCubic+996>:	fld	ft0,-432(s0)
0x0000000000010a4c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a4c <SolveCubic+1000>:	fmul.d	ft1,fa0,ft0
0x0000000000010a50	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a50 <SolveCubic+1004>:	fld	ft2,-160(s0)
0x0000000000010a54	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a54 <SolveCubic+1008>:	fld	ft3,1856(gp)
0x0000000000010a58	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a58 <SolveCubic+1012>:	fmv.d	fa0,ft3
0x0000000000010a5c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a5c <SolveCubic+1016>:	fsd	ft1,-504(s0)
0x0000000000010a60	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a60 <SolveCubic+1020>:	fsd	ft2,-512(s0)
0x0000000000010a64	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a64 <SolveCubic+1024>:	fsd	ft3,-520(s0)
0x0000000000010a68	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a68 <SolveCubic+1028>:	jal	ra,0x10d14 <atan>
0x0000000000010d14 in atan ()
=> 0x10d14 <atan>:	fmv.x.d	a5,fa0
0x0000000000010d18 in atan ()
=> 0x10d18 <atan+4>:	addi	sp,sp,-32
0x0000000000010d1a in atan ()
=> 0x10d1a <atan+6>:	sd	s1,8(sp)
0x0000000000010d1c in atan ()
=> 0x10d1c <atan+8>:	srai	s1,a5,0x20
0x0000000000010d20 in atan ()
=> 0x10d20 <atan+12>:	sd	s0,16(sp)
0x0000000000010d22 in atan ()
=> 0x10d22 <atan+14>:	slli	s0,s1,0x21
0x0000000000010d26 in atan ()
=> 0x10d26 <atan+18>:	sd	ra,24(sp)
0x0000000000010d28 in atan ()
=> 0x10d28 <atan+20>:	lui	a4,0x44100
0x0000000000010d2c in atan ()
=> 0x10d2c <atan+24>:	srli	s0,s0,0x21
0x0000000000010d2e in atan ()
=> 0x10d2e <atan+26>:	blt	s0,a4,0x10d68 <atan+84>
0x0000000000010d68 in atan ()
=> 0x10d68 <atan+84>:	lui	a4,0x3fdc0
0x0000000000010d6c in atan ()
=> 0x10d6c <atan+88>:	bge	s0,a4,0x10e42 <atan+302>
0x0000000000010d70 in atan ()
=> 0x10d70 <atan+92>:	lui	a4,0x3e200
0x0000000000010d74 in atan ()
=> 0x10d74 <atan+96>:	blt	s0,a4,0x10e20 <atan+268>
0x0000000000010e20 in atan ()
=> 0x10e20 <atan+268>:	fld	fa5,992(gp)
0x0000000000010e24 in atan ()
=> 0x10e24 <atan+272>:	fld	fa4,1000(gp)
0x0000000000010e28 in atan ()
=> 0x10e28 <atan+276>:	fadd.d	fa5,fa0,fa5
0x0000000000010e2c in atan ()
=> 0x10e2c <atan+280>:	flt.d	a4,fa4,fa5
0x0000000000010e30 in atan ()
=> 0x10e30 <atan+284>:	beqz	a4,0x10d78 <atan+100>
0x0000000000010d78 in atan ()
=> 0x10d78 <atan+100>:	li	a4,-1
0x0000000000010d7a in atan ()
=> 0x10d7a <atan+102>:	fmv.d.x	fa5,a5
0x0000000000010d7e in atan ()
=> 0x10d7e <atan+106>:	fmul.d	fa3,fa5,fa5
0x0000000000010d82 in atan ()
=> 0x10d82 <atan+110>:	fld	fa5,1032(gp)
0x0000000000010d86 in atan ()
=> 0x10d86 <atan+114>:	fld	fa2,1040(gp)
0x0000000000010d8a in atan ()
=> 0x10d8a <atan+118>:	fld	fa0,1080(gp)
0x0000000000010d8e in atan ()
=> 0x10d8e <atan+122>:	fmul.d	fa4,fa3,fa3
0x0000000000010d92 in atan ()
=> 0x10d92 <atan+126>:	fmadd.d	fa5,fa4,fa5,fa2
0x0000000000010d96 in atan ()
=> 0x10d96 <atan+130>:	fld	fa2,1088(gp)
0x0000000000010d9a in atan ()
=> 0x10d9a <atan+134>:	fmadd.d	fa0,fa4,fa0,fa2
0x0000000000010d9e in atan ()
=> 0x10d9e <atan+138>:	fld	fa2,1048(gp)
0x0000000000010da2 in atan ()
=> 0x10da2 <atan+142>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010da6 in atan ()
=> 0x10da6 <atan+146>:	fld	fa2,1096(gp)
0x0000000000010daa in atan ()
=> 0x10daa <atan+150>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dae in atan ()
=> 0x10dae <atan+154>:	fld	fa2,1056(gp)
0x0000000000010db2 in atan ()
=> 0x10db2 <atan+158>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010db6 in atan ()
=> 0x10db6 <atan+162>:	fld	fa2,1104(gp)
0x0000000000010dba in atan ()
=> 0x10dba <atan+166>:	li	a3,-1
0x0000000000010dbc in atan ()
=> 0x10dbc <atan+168>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dc0 in atan ()
=> 0x10dc0 <atan+172>:	fld	fa2,1064(gp)
0x0000000000010dc4 in atan ()
=> 0x10dc4 <atan+176>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dc8 in atan ()
=> 0x10dc8 <atan+180>:	fld	fa2,1112(gp)
0x0000000000010dcc in atan ()
=> 0x10dcc <atan+184>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dd0 in atan ()
=> 0x10dd0 <atan+188>:	fld	fa2,1072(gp)
0x0000000000010dd4 in atan ()
=> 0x10dd4 <atan+192>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dd8 in atan ()
=> 0x10dd8 <atan+196>:	fmul.d	fa0,fa0,fa4
0x0000000000010ddc in atan ()
=> 0x10ddc <atan+200>:	fmv.d.x	fa4,a5
0x0000000000010de0 in atan ()
=> 0x10de0 <atan+204>:	fmadd.d	fa5,fa5,fa3,fa0
0x0000000000010de4 in atan ()
=> 0x10de4 <atan+208>:	fmul.d	fa5,fa4,fa5
0x0000000000010de8 in atan ()
=> 0x10de8 <atan+212>:	beq	a4,a3,0x10e72 <atan+350>
0x0000000000010e72 in atan ()
=> 0x10e72 <atan+350>:	ld	ra,24(sp)
0x0000000000010e74 in atan ()
=> 0x10e74 <atan+352>:	ld	s0,16(sp)
0x0000000000010e76 in atan ()
=> 0x10e76 <atan+354>:	ld	s1,8(sp)
0x0000000000010e78 in atan ()
=> 0x10e78 <atan+356>:	fsub.d	fa0,fa4,fa5
0x0000000000010e7c in atan ()
=> 0x10e7c <atan+360>:	addi	sp,sp,32
0x0000000000010e7e in atan ()
=> 0x10e7e <atan+362>:	ret
0x0000000000010a6c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a6c <SolveCubic+1032>:	fld	ft0,1864(gp)
0x0000000000010a70	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a70 <SolveCubic+1036>:	fmul.d	ft1,fa0,ft0
0x0000000000010a74	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a74 <SolveCubic+1040>:	fadd.d	ft1,ft1,ft1
0x0000000000010a78	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a78 <SolveCubic+1044>:	fld	ft2,-512(s0)
0x0000000000010a7c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a7c <SolveCubic+1048>:	fadd.d	ft1,ft2,ft1
0x0000000000010a80	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a80 <SolveCubic+1052>:	fld	ft2,-448(s0)
0x0000000000010a84	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a84 <SolveCubic+1056>:	fdiv.d	fa0,ft1,ft2
0x0000000000010a88	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a88 <SolveCubic+1060>:	fsd	ft0,-528(s0)
0x0000000000010a8c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a8c <SolveCubic+1064>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x0000000000010a90 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a90 <SolveCubic+1068>:	fld	ft0,-504(s0)
0x0000000000010a94	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a94 <SolveCubic+1072>:	fmul.d	fa0,ft0,fa0
0x0000000000010a98	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a98 <SolveCubic+1076>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x0000000000010a9c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a9c <SolveCubic+1080>:	ld	a2,-80(s0)
0x0000000000010aa0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa0 <SolveCubic+1084>:	ld	a3,-72(s0)
0x0000000000010aa4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa4 <SolveCubic+1088>:	sd	a0,-536(s0)
0x0000000000010aa8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa8 <SolveCubic+1092>:	mv	a0,a2
0x0000000000010aac	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aac <SolveCubic+1096>:	sd	a1,-544(s0)
0x0000000000010ab0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab0 <SolveCubic+1100>:	mv	a1,a3
0x0000000000010ab4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab4 <SolveCubic+1104>:	ld	a2,-480(s0)
0x0000000000010ab8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab8 <SolveCubic+1108>:	ld	a3,-472(s0)
0x0000000000010abc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10abc <SolveCubic+1112>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010ac0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac0 <SolveCubic+1116>:	ld	a2,-536(s0)
0x0000000000010ac4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac4 <SolveCubic+1120>:	sd	a0,-552(s0)
0x0000000000010ac8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac8 <SolveCubic+1124>:	mv	a0,a2
0x0000000000010acc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10acc <SolveCubic+1128>:	ld	a3,-544(s0)
0x0000000000010ad0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad0 <SolveCubic+1132>:	sd	a1,-560(s0)
0x0000000000010ad4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad4 <SolveCubic+1136>:	mv	a1,a3
0x0000000000010ad8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad8 <SolveCubic+1140>:	ld	a2,-552(s0)
0x0000000000010adc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10adc <SolveCubic+1144>:	ld	a3,-560(s0)
0x0000000000010ae0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae0 <SolveCubic+1148>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010ae4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae4 <SolveCubic+1152>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010ae8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae8 <SolveCubic+1156>:	ld	a0,-64(s0)
0x0000000000010aec	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aec <SolveCubic+1160>:	fsd	fa0,8(a0)
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af0 <SolveCubic+1164>:	ld	a0,-128(s0)
0x0000000000010af4	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af4 <SolveCubic+1168>:	ld	a1,-120(s0)
0x0000000000010af8	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af8 <SolveCubic+1172>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010afc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10afc <SolveCubic+1176>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010b00 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b00 <SolveCubic+1180>:	fld	ft0,-432(s0)
0x0000000000010b04	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b04 <SolveCubic+1184>:	fmul.d	ft1,fa0,ft0
0x0000000000010b08	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b08 <SolveCubic+1188>:	fld	ft2,-160(s0)
0x0000000000010b0c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b0c <SolveCubic+1192>:	fld	fa0,-520(s0)
0x0000000000010b10	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b10 <SolveCubic+1196>:	fsd	ft1,-568(s0)
0x0000000000010b14	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b14 <SolveCubic+1200>:	fsd	ft2,-576(s0)
0x0000000000010b18	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b18 <SolveCubic+1204>:	jal	ra,0x10d14 <atan>
0x0000000000010d14 in atan ()
=> 0x10d14 <atan>:	fmv.x.d	a5,fa0
0x0000000000010d18 in atan ()
=> 0x10d18 <atan+4>:	addi	sp,sp,-32
0x0000000000010d1a in atan ()
=> 0x10d1a <atan+6>:	sd	s1,8(sp)
0x0000000000010d1c in atan ()
=> 0x10d1c <atan+8>:	srai	s1,a5,0x20
0x0000000000010d20 in atan ()
=> 0x10d20 <atan+12>:	sd	s0,16(sp)
0x0000000000010d22 in atan ()
=> 0x10d22 <atan+14>:	slli	s0,s1,0x21
0x0000000000010d26 in atan ()
=> 0x10d26 <atan+18>:	sd	ra,24(sp)
0x0000000000010d28 in atan ()
=> 0x10d28 <atan+20>:	lui	a4,0x44100
0x0000000000010d2c in atan ()
=> 0x10d2c <atan+24>:	srli	s0,s0,0x21
0x0000000000010d2e in atan ()
=> 0x10d2e <atan+26>:	blt	s0,a4,0x10d68 <atan+84>
0x0000000000010d68 in atan ()
=> 0x10d68 <atan+84>:	lui	a4,0x3fdc0
0x0000000000010d6c in atan ()
=> 0x10d6c <atan+88>:	bge	s0,a4,0x10e42 <atan+302>
0x0000000000010d70 in atan ()
=> 0x10d70 <atan+92>:	lui	a4,0x3e200
0x0000000000010d74 in atan ()
=> 0x10d74 <atan+96>:	blt	s0,a4,0x10e20 <atan+268>
0x0000000000010e20 in atan ()
=> 0x10e20 <atan+268>:	fld	fa5,992(gp)
0x0000000000010e24 in atan ()
=> 0x10e24 <atan+272>:	fld	fa4,1000(gp)
0x0000000000010e28 in atan ()
=> 0x10e28 <atan+276>:	fadd.d	fa5,fa0,fa5
0x0000000000010e2c in atan ()
=> 0x10e2c <atan+280>:	flt.d	a4,fa4,fa5
0x0000000000010e30 in atan ()
=> 0x10e30 <atan+284>:	beqz	a4,0x10d78 <atan+100>
0x0000000000010d78 in atan ()
=> 0x10d78 <atan+100>:	li	a4,-1
0x0000000000010d7a in atan ()
=> 0x10d7a <atan+102>:	fmv.d.x	fa5,a5
0x0000000000010d7e in atan ()
=> 0x10d7e <atan+106>:	fmul.d	fa3,fa5,fa5
0x0000000000010d82 in atan ()
=> 0x10d82 <atan+110>:	fld	fa5,1032(gp)
0x0000000000010d86 in atan ()
=> 0x10d86 <atan+114>:	fld	fa2,1040(gp)
0x0000000000010d8a in atan ()
=> 0x10d8a <atan+118>:	fld	fa0,1080(gp)
0x0000000000010d8e in atan ()
=> 0x10d8e <atan+122>:	fmul.d	fa4,fa3,fa3
0x0000000000010d92 in atan ()
=> 0x10d92 <atan+126>:	fmadd.d	fa5,fa4,fa5,fa2
0x0000000000010d96 in atan ()
=> 0x10d96 <atan+130>:	fld	fa2,1088(gp)
0x0000000000010d9a in atan ()
=> 0x10d9a <atan+134>:	fmadd.d	fa0,fa4,fa0,fa2
0x0000000000010d9e in atan ()
=> 0x10d9e <atan+138>:	fld	fa2,1048(gp)
0x0000000000010da2 in atan ()
=> 0x10da2 <atan+142>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010da6 in atan ()
=> 0x10da6 <atan+146>:	fld	fa2,1096(gp)
0x0000000000010daa in atan ()
=> 0x10daa <atan+150>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dae in atan ()
=> 0x10dae <atan+154>:	fld	fa2,1056(gp)
0x0000000000010db2 in atan ()
=> 0x10db2 <atan+158>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010db6 in atan ()
=> 0x10db6 <atan+162>:	fld	fa2,1104(gp)
0x0000000000010dba in atan ()
=> 0x10dba <atan+166>:	li	a3,-1
0x0000000000010dbc in atan ()
=> 0x10dbc <atan+168>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dc0 in atan ()
=> 0x10dc0 <atan+172>:	fld	fa2,1064(gp)
0x0000000000010dc4 in atan ()
=> 0x10dc4 <atan+176>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dc8 in atan ()
=> 0x10dc8 <atan+180>:	fld	fa2,1112(gp)
0x0000000000010dcc in atan ()
=> 0x10dcc <atan+184>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dd0 in atan ()
=> 0x10dd0 <atan+188>:	fld	fa2,1072(gp)
0x0000000000010dd4 in atan ()
=> 0x10dd4 <atan+192>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dd8 in atan ()
=> 0x10dd8 <atan+196>:	fmul.d	fa0,fa0,fa4
0x0000000000010ddc in atan ()
=> 0x10ddc <atan+200>:	fmv.d.x	fa4,a5
0x0000000000010de0 in atan ()
=> 0x10de0 <atan+204>:	fmadd.d	fa5,fa5,fa3,fa0
0x0000000000010de4 in atan ()
=> 0x10de4 <atan+208>:	fmul.d	fa5,fa4,fa5
0x0000000000010de8 in atan ()
=> 0x10de8 <atan+212>:	beq	a4,a3,0x10e72 <atan+350>
0x0000000000010e72 in atan ()
=> 0x10e72 <atan+350>:	ld	ra,24(sp)
0x0000000000010e74 in atan ()
=> 0x10e74 <atan+352>:	ld	s0,16(sp)
0x0000000000010e76 in atan ()
=> 0x10e76 <atan+354>:	ld	s1,8(sp)
0x0000000000010e78 in atan ()
=> 0x10e78 <atan+356>:	fsub.d	fa0,fa4,fa5
0x0000000000010e7c in atan ()
=> 0x10e7c <atan+360>:	addi	sp,sp,32
0x0000000000010e7e in atan ()
=> 0x10e7e <atan+362>:	ret
0x0000000000010b1c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b1c <SolveCubic+1208>:	fld	ft0,-528(s0)
0x0000000000010b20	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b20 <SolveCubic+1212>:	fmul.d	ft1,fa0,ft0
0x0000000000010b24	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b24 <SolveCubic+1216>:	fmul.d	ft1,ft1,ft0
0x0000000000010b28	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b28 <SolveCubic+1220>:	fld	ft2,-576(s0)
0x0000000000010b2c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b2c <SolveCubic+1224>:	fadd.d	ft1,ft2,ft1
0x0000000000010b30	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b30 <SolveCubic+1228>:	fld	ft2,-448(s0)
0x0000000000010b34	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b34 <SolveCubic+1232>:	fdiv.d	fa0,ft1,ft2
0x0000000000010b38	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b38 <SolveCubic+1236>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x0000000000010b3c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b3c <SolveCubic+1240>:	fld	ft0,-568(s0)
0x0000000000010b40	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b40 <SolveCubic+1244>:	fmul.d	fa0,ft0,fa0
0x0000000000010b44	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b44 <SolveCubic+1248>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x0000000000010b48 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b48 <SolveCubic+1252>:	ld	a2,-80(s0)
0x0000000000010b4c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b4c <SolveCubic+1256>:	ld	a3,-72(s0)
0x0000000000010b50	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b50 <SolveCubic+1260>:	sd	a0,-584(s0)
0x0000000000010b54	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b54 <SolveCubic+1264>:	mv	a0,a2
0x0000000000010b58	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b58 <SolveCubic+1268>:	sd	a1,-592(s0)
0x0000000000010b5c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b5c <SolveCubic+1272>:	mv	a1,a3
0x0000000000010b60	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b60 <SolveCubic+1276>:	ld	a2,-480(s0)
0x0000000000010b64	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b64 <SolveCubic+1280>:	ld	a3,-472(s0)
0x0000000000010b68	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b68 <SolveCubic+1284>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010b6c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b6c <SolveCubic+1288>:	ld	a2,-584(s0)
0x0000000000010b70	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b70 <SolveCubic+1292>:	sd	a0,-600(s0)
0x0000000000010b74	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b74 <SolveCubic+1296>:	mv	a0,a2
0x0000000000010b78	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b78 <SolveCubic+1300>:	ld	a3,-592(s0)
0x0000000000010b7c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b7c <SolveCubic+1304>:	sd	a1,-608(s0)
0x0000000000010b80	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b80 <SolveCubic+1308>:	mv	a1,a3
0x0000000000010b84	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b84 <SolveCubic+1312>:	ld	a2,-600(s0)
0x0000000000010b88	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b88 <SolveCubic+1316>:	ld	a3,-608(s0)
0x0000000000010b8c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b8c <SolveCubic+1320>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010b90 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b90 <SolveCubic+1324>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010b94 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b94 <SolveCubic+1328>:	ld	a0,-64(s0)
0x0000000000010b98	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b98 <SolveCubic+1332>:	fsd	fa0,16(a0)
52	   }
=> 0x10b9c <SolveCubic+1336>:	j	0x10cfc <SolveCubic+1688>
61	}
=> 0x10cfc <SolveCubic+1688>:	ld	s0,720(sp)
0x0000000000010d00 in SolveCubic (a=1, b=-10.5, c=32, d=-30, solutions=0x3ff0000000000000, x=0xc012000000000000) at libcubic.c:61
61	}
=> 0x10d00 <SolveCubic+1692>:	ld	ra,728(sp)
0x0000000000010d04	61	}
=> 0x10d04 <SolveCubic+1696>:	addi	sp,sp,736
0x0000000000010d08	61	}
=> 0x10d08 <SolveCubic+1700>:	ld	ra,0(t6)
0x0000000000010d0c	61	}
=> 0x10d0c <SolveCubic+1704>:	addi	t6,t6,16
0x0000000000010d10	61	}
=> 0x10d10 <SolveCubic+1708>:	ret
benchmark () at basicmath_small.c:61
61	   SolveCubic(a2, b2, c2, d2, &solutions, output);
=> 0x104d4 <benchmark+308>:	fld	fa0,-56(s0)
0x00000000000104d8	61	   SolveCubic(a2, b2, c2, d2, &solutions, output);
=> 0x104d8 <benchmark+312>:	fld	fa1,-64(s0)
0x00000000000104dc	61	   SolveCubic(a2, b2, c2, d2, &solutions, output);
=> 0x104dc <benchmark+316>:	fld	fa2,-72(s0)
0x00000000000104e0	61	   SolveCubic(a2, b2, c2, d2, &solutions, output);
=> 0x104e0 <benchmark+320>:	fld	fa3,-80(s0)
0x00000000000104e4	61	   SolveCubic(a2, b2, c2, d2, &solutions, output);
=> 0x104e4 <benchmark+324>:	ld	a0,-576(s0)
0x00000000000104e8	61	   SolveCubic(a2, b2, c2, d2, &solutions, output);
=> 0x104e8 <benchmark+328>:	ld	a1,-560(s0)
0x00000000000104ec	61	   SolveCubic(a2, b2, c2, d2, &solutions, output);
=> 0x104ec <benchmark+332>:	jal	ra,0x10664 <SolveCubic>
SolveCubic (a=1, b=-10.5, c=32, d=-30, solutions=0x3ff0000000000000, x=0xc012000000000000) at libcubic.c:37
37	{
=> 0x10664 <SolveCubic>:	addi	t6,t6,-16
0x0000000000010668	37	{
=> 0x10668 <SolveCubic+4>:	sd	ra,0(t6)
0x000000000001066c	37	{
=> 0x1066c <SolveCubic+8>:	st	zero,0(t6)
0x0000000000010670	37	{
=> 0x10670 <SolveCubic+12>:	addi	sp,sp,-736
0x0000000000010674	37	{
=> 0x10674 <SolveCubic+16>:	sd	ra,728(sp)
0x0000000000010678	37	{
=> 0x10678 <SolveCubic+20>:	sd	s0,720(sp)
0x000000000001067c	37	{
=> 0x1067c <SolveCubic+24>:	addi	s0,sp,736
0x0000000000010680	37	{
=> 0x10680 <SolveCubic+28>:	fsd	fa0,-24(s0)
0x0000000000010684	37	{
=> 0x10684 <SolveCubic+32>:	fsd	fa1,-32(s0)
0x0000000000010688	37	{
=> 0x10688 <SolveCubic+36>:	fsd	fa2,-40(s0)
0x000000000001068c	37	{
=> 0x1068c <SolveCubic+40>:	fsd	fa3,-48(s0)
0x0000000000010690	37	{
=> 0x10690 <SolveCubic+44>:	sd	a0,-56(s0)
0x0000000000010694	37	{
=> 0x10694 <SolveCubic+48>:	sd	a1,-64(s0)
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x10698 <SolveCubic+52>:	fld	ft0,-32(s0)
0x000000000001069c	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x1069c <SolveCubic+56>:	fld	ft1,-24(s0)
0x00000000000106a0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a0 <SolveCubic+60>:	fdiv.d	fa0,ft0,ft1
0x00000000000106a4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a4 <SolveCubic+64>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106a8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a8 <SolveCubic+68>:	sd	a1,-72(s0)
0x00000000000106ac	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106ac <SolveCubic+72>:	sd	a0,-80(s0)
0x00000000000106b0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b0 <SolveCubic+76>:	fld	ft0,-40(s0)
0x00000000000106b4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b4 <SolveCubic+80>:	fld	ft1,-24(s0)
0x00000000000106b8	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b8 <SolveCubic+84>:	fdiv.d	fa0,ft0,ft1
0x00000000000106bc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106bc <SolveCubic+88>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106c0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c0 <SolveCubic+92>:	sd	a1,-88(s0)
0x00000000000106c4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c4 <SolveCubic+96>:	sd	a0,-96(s0)
0x00000000000106c8	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c8 <SolveCubic+100>:	fld	ft0,-48(s0)
0x00000000000106cc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106cc <SolveCubic+104>:	fld	ft1,-24(s0)
0x00000000000106d0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d0 <SolveCubic+108>:	fdiv.d	fa0,ft0,ft1
0x00000000000106d4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d4 <SolveCubic+112>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106d8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d8 <SolveCubic+116>:	sd	a1,-104(s0)
0x00000000000106dc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106dc <SolveCubic+120>:	sd	a0,-112(s0)
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e0 <SolveCubic+124>:	ld	a0,-80(s0)
0x00000000000106e4	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e4 <SolveCubic+128>:	ld	a1,-72(s0)
0x00000000000106e8	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e8 <SolveCubic+132>:	sd	a0,-168(s0)
0x00000000000106ec	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106ec <SolveCubic+136>:	sd	a1,-176(s0)
0x00000000000106f0	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f0 <SolveCubic+140>:	ld	a2,-168(s0)
0x00000000000106f4	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f4 <SolveCubic+144>:	ld	a3,-176(s0)
0x00000000000106f8	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f8 <SolveCubic+148>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000106fc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106fc <SolveCubic+152>:	ld	a2,-96(s0)
0x0000000000010700	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10700 <SolveCubic+156>:	ld	a3,-88(s0)
0x0000000000010704	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10704 <SolveCubic+160>:	lui	a4,0xffff8
0x0000000000010708	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10708 <SolveCubic+164>:	addiw	a4,a4,1
0x000000000001070c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1070c <SolveCubic+168>:	slli	a4,a4,0x2f
0x0000000000010710	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10710 <SolveCubic+172>:	li	a5,0
0x0000000000010714	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10714 <SolveCubic+176>:	sd	a0,-184(s0)
0x0000000000010718	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10718 <SolveCubic+180>:	mv	a0,a2
0x000000000001071c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1071c <SolveCubic+184>:	sd	a1,-192(s0)
0x0000000000010720	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10720 <SolveCubic+188>:	mv	a1,a3
0x0000000000010724	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10724 <SolveCubic+192>:	mv	a2,a5
0x0000000000010728	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10728 <SolveCubic+196>:	mv	a3,a4
0x000000000001072c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1072c <SolveCubic+200>:	sd	a5,-200(s0)
0x0000000000010730	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10730 <SolveCubic+204>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=-3) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010734 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10734 <SolveCubic+208>:	ld	a2,-184(s0)
0x0000000000010738	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10738 <SolveCubic+212>:	sd	a0,-208(s0)
0x000000000001073c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1073c <SolveCubic+216>:	mv	a0,a2
0x0000000000010740	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10740 <SolveCubic+220>:	ld	a3,-192(s0)
0x0000000000010744	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10744 <SolveCubic+224>:	sd	a1,-216(s0)
0x0000000000010748	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10748 <SolveCubic+228>:	mv	a1,a3
0x000000000001074c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1074c <SolveCubic+232>:	ld	a2,-208(s0)
0x0000000000010750	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10750 <SolveCubic+236>:	ld	a3,-216(s0)
0x0000000000010754	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10754 <SolveCubic+240>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=-0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
46	  FP_ADD_Q (R, A, B);
=> 0x1db98 <__addtf3+996>:	blez	a2,0x1dc62 <__addtf3+1198>
0x000000000001dc62	46	  FP_ADD_Q (R, A, B);
=> 0x1dc62 <__addtf3+1198>:	beqz	a2,0x1dd48 <__addtf3+1428>
0x000000000001dd48	46	  FP_ADD_Q (R, A, B);
=> 0x1dd48 <__addtf3+1428>:	addi	t4,s0,1
0x000000000001dd4c	46	  FP_ADD_Q (R, A, B);
=> 0x1dd4c <__addtf3+1432>:	addi	a3,t1,-2
0x000000000001dd50	46	  FP_ADD_Q (R, A, B);
=> 0x1dd50 <__addtf3+1436>:	and	a3,t4,a3
0x000000000001dd54	46	  FP_ADD_Q (R, A, B);
=> 0x1dd54 <__addtf3+1440>:	bnez	a3,0x1de42 <__addtf3+1678>
0x000000000001dd56	46	  FP_ADD_Q (R, A, B);
=> 0x1dd56 <__addtf3+1442>:	or	t4,a5,a0
0x000000000001dd5a	46	  FP_ADD_Q (R, A, B);
=> 0x1dd5a <__addtf3+1446>:	or	t1,a4,a6
0x000000000001dd5e	46	  FP_ADD_Q (R, A, B);
=> 0x1dd5e <__addtf3+1450>:	bnez	s0,0x1ddfe <__addtf3+1610>
0x000000000001dd60	46	  FP_ADD_Q (R, A, B);
=> 0x1dd60 <__addtf3+1452>:	bnez	t4,0x1ddbc <__addtf3+1544>
0x000000000001dd64	46	  FP_ADD_Q (R, A, B);
=> 0x1dd64 <__addtf3+1456>:	bnez	t1,0x1df3a <__addtf3+1926>
0x000000000001dd68	46	  FP_ADD_Q (R, A, B);
=> 0x1dd68 <__addtf3+1460>:	addi	s2,s1,-2
0x000000000001dd6c	46	  FP_ADD_Q (R, A, B);
=> 0x1dd6c <__addtf3+1464>:	seqz	s2,s2
0x000000000001dd70	46	  FP_ADD_Q (R, A, B);
=> 0x1dd70 <__addtf3+1468>:	li	a5,0
0x000000000001dd72	46	  FP_ADD_Q (R, A, B);
=> 0x1dd72 <__addtf3+1470>:	li	a0,0
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x0000000000010758 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10758 <SolveCubic+244>:	lui	a2,0x20
0x000000000001075c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1075c <SolveCubic+248>:	addiw	a2,a2,17
0x0000000000010760	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10760 <SolveCubic+252>:	slli	a2,a2,0x2d
0x0000000000010764	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10764 <SolveCubic+256>:	ld	a3,-200(s0)
0x0000000000010768	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10768 <SolveCubic+260>:	sd	a2,-224(s0)
0x000000000001076c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1076c <SolveCubic+264>:	mv	a2,a3
0x0000000000010770	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10770 <SolveCubic+268>:	ld	a3,-224(s0)
0x0000000000010774	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10774 <SolveCubic+272>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=9) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010778 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10778 <SolveCubic+276>:	sd	a1,-120(s0)
0x000000000001077c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1077c <SolveCubic+280>:	sd	a0,-128(s0)
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10780 <SolveCubic+284>:	ld	a0,-80(s0)
0x0000000000010784	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10784 <SolveCubic+288>:	ld	a1,-72(s0)
0x0000000000010788	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10788 <SolveCubic+292>:	sd	a0,-232(s0)
0x000000000001078c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1078c <SolveCubic+296>:	sd	a1,-240(s0)
0x0000000000010790	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10790 <SolveCubic+300>:	ld	a2,-232(s0)
0x0000000000010794	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10794 <SolveCubic+304>:	ld	a3,-240(s0)
0x0000000000010798	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10798 <SolveCubic+308>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
0x000000000001d812	46	  FP_ADD_Q (R, A, B);
=> 0x1d812 <__addtf3+94>:	blez	a2,0x1d90c <__addtf3+344>
0x000000000001d90c	46	  FP_ADD_Q (R, A, B);
=> 0x1d90c <__addtf3+344>:	beqz	a2,0x1d9e8 <__addtf3+564>
0x000000000001d9e8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9e8 <__addtf3+564>:	addi	a7,s0,1
0x000000000001d9ec	46	  FP_ADD_Q (R, A, B);
=> 0x1d9ec <__addtf3+568>:	addi	a3,t1,-2
0x000000000001d9f0	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f0 <__addtf3+572>:	and	t1,a7,a3
0x000000000001d9f4	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f4 <__addtf3+576>:	bnez	t1,0x1dafe <__addtf3+842>
0x000000000001d9f8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f8 <__addtf3+580>:	or	a7,a5,a0
0x000000000001d9fc	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fc <__addtf3+584>:	bnez	s0,0x1da42 <__addtf3+654>
0x000000000001d9fe	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fe <__addtf3+586>:	beqz	a7,0x1df34 <__addtf3+1920>
0x000000000001df34	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1df34 <__addtf3+1920>:	mv	a5,a4
0x000000000001df36	46	  FP_ADD_Q (R, A, B);
=> 0x1df36 <__addtf3+1922>:	mv	a0,a6
0x000000000001df38	46	  FP_ADD_Q (R, A, B);
=> 0x1df38 <__addtf3+1924>:	j	0x1dd74 <__addtf3+1472>
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x000000000001079c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1079c <SolveCubic+312>:	ld	a2,-232(s0)
0x00000000000107a0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a0 <SolveCubic+316>:	ld	a3,-240(s0)
0x00000000000107a4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a4 <SolveCubic+320>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107a8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a8 <SolveCubic+324>:	ld	a2,-232(s0)
0x00000000000107ac	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107ac <SolveCubic+328>:	ld	a3,-240(s0)
0x00000000000107b0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b0 <SolveCubic+332>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107b4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b4 <SolveCubic+336>:	ld	a2,-232(s0)
0x00000000000107b8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b8 <SolveCubic+340>:	sd	a0,-248(s0)
0x00000000000107bc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107bc <SolveCubic+344>:	mv	a0,a2
0x00000000000107c0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c0 <SolveCubic+348>:	ld	a3,-240(s0)
0x00000000000107c4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c4 <SolveCubic+352>:	sd	a1,-256(s0)
0x00000000000107c8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c8 <SolveCubic+356>:	mv	a1,a3
0x00000000000107cc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107cc <SolveCubic+360>:	ld	a2,-200(s0)
0x00000000000107d0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d0 <SolveCubic+364>:	ld	a3,-224(s0)
0x00000000000107d4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d4 <SolveCubic+368>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=9) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107d8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d8 <SolveCubic+372>:	ld	a2,-96(s0)
0x00000000000107dc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107dc <SolveCubic+376>:	ld	a3,-88(s0)
0x00000000000107e0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e0 <SolveCubic+380>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107e4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e4 <SolveCubic+384>:	ld	a2,-248(s0)
0x00000000000107e8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e8 <SolveCubic+388>:	sd	a0,-264(s0)
0x00000000000107ec	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107ec <SolveCubic+392>:	mv	a0,a2
0x00000000000107f0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f0 <SolveCubic+396>:	ld	a3,-256(s0)
0x00000000000107f4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f4 <SolveCubic+400>:	sd	a1,-272(s0)
0x00000000000107f8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f8 <SolveCubic+404>:	mv	a1,a3
0x00000000000107fc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107fc <SolveCubic+408>:	ld	a2,-264(s0)
0x0000000000010800	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10800 <SolveCubic+412>:	ld	a3,-272(s0)
0x0000000000010804	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10804 <SolveCubic+416>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010808 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10808 <SolveCubic+420>:	ld	a2,-112(s0)
0x000000000001080c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1080c <SolveCubic+424>:	ld	a3,-104(s0)
0x0000000000010810	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10810 <SolveCubic+428>:	lui	a4,0x40
0x0000000000010814	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10814 <SolveCubic+432>:	addiw	a5,a4,59
0x0000000000010818	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10818 <SolveCubic+436>:	slli	a5,a5,0x2c
0x000000000001081c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1081c <SolveCubic+440>:	sd	a0,-280(s0)
0x0000000000010820	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10820 <SolveCubic+444>:	mv	a0,a2
0x0000000000010824	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10824 <SolveCubic+448>:	sd	a1,-288(s0)
0x0000000000010828	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10828 <SolveCubic+452>:	mv	a1,a3
0x000000000001082c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1082c <SolveCubic+456>:	ld	a2,-200(s0)
0x0000000000010830	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10830 <SolveCubic+460>:	mv	a3,a5
0x0000000000010834	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10834 <SolveCubic+464>:	sd	a4,-296(s0)
0x0000000000010838	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10838 <SolveCubic+468>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=27) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x000000000001083c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1083c <SolveCubic+472>:	ld	a2,-280(s0)
0x0000000000010840	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10840 <SolveCubic+476>:	sd	a0,-304(s0)
0x0000000000010844	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10844 <SolveCubic+480>:	mv	a0,a2
0x0000000000010848	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10848 <SolveCubic+484>:	ld	a3,-288(s0)
0x000000000001084c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1084c <SolveCubic+488>:	sd	a1,-312(s0)
0x0000000000010850	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10850 <SolveCubic+492>:	mv	a1,a3
0x0000000000010854	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10854 <SolveCubic+496>:	ld	a2,-304(s0)
0x0000000000010858	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10858 <SolveCubic+500>:	ld	a3,-312(s0)
0x000000000001085c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1085c <SolveCubic+504>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
0x000000000001d812	46	  FP_ADD_Q (R, A, B);
=> 0x1d812 <__addtf3+94>:	blez	a2,0x1d90c <__addtf3+344>
0x000000000001d90c	46	  FP_ADD_Q (R, A, B);
=> 0x1d90c <__addtf3+344>:	beqz	a2,0x1d9e8 <__addtf3+564>
0x000000000001d9e8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9e8 <__addtf3+564>:	addi	a7,s0,1
0x000000000001d9ec	46	  FP_ADD_Q (R, A, B);
=> 0x1d9ec <__addtf3+568>:	addi	a3,t1,-2
0x000000000001d9f0	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f0 <__addtf3+572>:	and	t1,a7,a3
0x000000000001d9f4	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f4 <__addtf3+576>:	bnez	t1,0x1dafe <__addtf3+842>
0x000000000001d9f8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f8 <__addtf3+580>:	or	a7,a5,a0
0x000000000001d9fc	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fc <__addtf3+584>:	bnez	s0,0x1da42 <__addtf3+654>
0x000000000001d9fe	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fe <__addtf3+586>:	beqz	a7,0x1df34 <__addtf3+1920>
0x000000000001df34	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1df34 <__addtf3+1920>:	mv	a5,a4
0x000000000001df36	46	  FP_ADD_Q (R, A, B);
=> 0x1df36 <__addtf3+1922>:	mv	a0,a6
0x000000000001df38	46	  FP_ADD_Q (R, A, B);
=> 0x1df38 <__addtf3+1924>:	j	0x1dd74 <__addtf3+1472>
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x0000000000010860 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10860 <SolveCubic+508>:	ld	a2,-296(s0)
0x0000000000010864	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10864 <SolveCubic+512>:	addiw	a3,a2,75
0x0000000000010868	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10868 <SolveCubic+516>:	slli	a3,a3,0x2c
0x000000000001086c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1086c <SolveCubic+520>:	ld	a2,-200(s0)
0x0000000000010870	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10870 <SolveCubic+524>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=54) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010874 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10874 <SolveCubic+528>:	sd	a1,-136(s0)
0x0000000000010878	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10878 <SolveCubic+532>:	sd	a0,-144(s0)
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1087c <SolveCubic+536>:	ld	a0,-144(s0)
0x0000000000010880	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10880 <SolveCubic+540>:	ld	a1,-136(s0)
0x0000000000010884	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10884 <SolveCubic+544>:	sd	a0,-320(s0)
0x0000000000010888	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10888 <SolveCubic+548>:	sd	a1,-328(s0)
0x000000000001088c	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1088c <SolveCubic+552>:	ld	a2,-320(s0)
0x0000000000010890	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10890 <SolveCubic+556>:	ld	a3,-328(s0)
0x0000000000010894	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10894 <SolveCubic+560>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010898 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10898 <SolveCubic+564>:	ld	a2,-128(s0)
0x000000000001089c	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1089c <SolveCubic+568>:	ld	a3,-120(s0)
0x00000000000108a0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a0 <SolveCubic+572>:	sd	a0,-336(s0)
0x00000000000108a4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a4 <SolveCubic+576>:	mv	a0,a2
0x00000000000108a8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a8 <SolveCubic+580>:	sd	a1,-344(s0)
0x00000000000108ac	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108ac <SolveCubic+584>:	mv	a1,a3
0x00000000000108b0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b0 <SolveCubic+588>:	sd	a2,-352(s0)
0x00000000000108b4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b4 <SolveCubic+592>:	sd	a3,-360(s0)
0x00000000000108b8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b8 <SolveCubic+596>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000108bc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108bc <SolveCubic+600>:	ld	a2,-352(s0)
0x00000000000108c0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c0 <SolveCubic+604>:	ld	a3,-360(s0)
0x00000000000108c4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c4 <SolveCubic+608>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000108c8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c8 <SolveCubic+612>:	ld	a2,-336(s0)
0x00000000000108cc	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108cc <SolveCubic+616>:	sd	a0,-368(s0)
0x00000000000108d0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d0 <SolveCubic+620>:	mv	a0,a2
0x00000000000108d4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d4 <SolveCubic+624>:	ld	a3,-344(s0)
0x00000000000108d8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d8 <SolveCubic+628>:	sd	a1,-376(s0)
0x00000000000108dc	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108dc <SolveCubic+632>:	mv	a1,a3
0x00000000000108e0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e0 <SolveCubic+636>:	ld	a2,-368(s0)
0x00000000000108e4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e4 <SolveCubic+640>:	ld	a3,-376(s0)
0x00000000000108e8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e8 <SolveCubic+644>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x00000000000108ec in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108ec <SolveCubic+648>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x00000000000108f0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108f0 <SolveCubic+652>:	fsd	fa0,-152(s0)
45	   if (R2_Q3 <= 0)
=> 0x108f4 <SolveCubic+656>:	fld	ft0,-152(s0)
0x00000000000108f8	45	   if (R2_Q3 <= 0)
=> 0x108f8 <SolveCubic+660>:	fmv.d.x	ft1,zero
0x00000000000108fc	45	   if (R2_Q3 <= 0)
=> 0x108fc <SolveCubic+664>:	fle.d	a0,ft0,ft1
0x0000000000010900	45	   if (R2_Q3 <= 0)
=> 0x10900 <SolveCubic+668>:	xori	a0,a0,1
0x0000000000010904	45	   if (R2_Q3 <= 0)
=> 0x10904 <SolveCubic+672>:	bnez	a0,0x10ba0 <SolveCubic+1340>
0x0000000000010908	45	   if (R2_Q3 <= 0)
=> 0x10908 <SolveCubic+676>:	j	0x1090c <SolveCubic+680>
47	      *solutions = 3;
=> 0x1090c <SolveCubic+680>:	ld	a0,-56(s0)
0x0000000000010910	47	      *solutions = 3;
=> 0x10910 <SolveCubic+684>:	li	a1,3
0x0000000000010914	47	      *solutions = 3;
=> 0x10914 <SolveCubic+688>:	sw	a1,0(a0)
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10918 <SolveCubic+692>:	ld	a1,-136(s0)
0x000000000001091c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1091c <SolveCubic+696>:	ld	a0,-144(s0)
0x0000000000010920	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10920 <SolveCubic+700>:	ld	a2,-128(s0)
0x0000000000010924	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10924 <SolveCubic+704>:	ld	a3,-120(s0)
0x0000000000010928	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10928 <SolveCubic+708>:	sd	a0,-384(s0)
0x000000000001092c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1092c <SolveCubic+712>:	mv	a0,a2
0x0000000000010930	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10930 <SolveCubic+716>:	sd	a1,-392(s0)
0x0000000000010934	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10934 <SolveCubic+720>:	mv	a1,a3
0x0000000000010938	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10938 <SolveCubic+724>:	sd	a2,-400(s0)
0x000000000001093c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1093c <SolveCubic+728>:	sd	a3,-408(s0)
0x0000000000010940	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10940 <SolveCubic+732>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010944 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10944 <SolveCubic+736>:	ld	a2,-400(s0)
0x0000000000010948	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10948 <SolveCubic+740>:	ld	a3,-408(s0)
0x000000000001094c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1094c <SolveCubic+744>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010950 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10950 <SolveCubic+748>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010954 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10954 <SolveCubic+752>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010958 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10958 <SolveCubic+756>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x000000000001095c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1095c <SolveCubic+760>:	ld	a2,-384(s0)
0x0000000000010960	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10960 <SolveCubic+764>:	sd	a0,-416(s0)
0x0000000000010964	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10964 <SolveCubic+768>:	mv	a0,a2
0x0000000000010968	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10968 <SolveCubic+772>:	ld	a3,-392(s0)
0x000000000001096c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1096c <SolveCubic+776>:	sd	a1,-424(s0)
0x0000000000010970	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10970 <SolveCubic+780>:	mv	a1,a3
0x0000000000010974	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10974 <SolveCubic+784>:	ld	a2,-416(s0)
0x0000000000010978	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10978 <SolveCubic+788>:	ld	a3,-424(s0)
0x000000000001097c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1097c <SolveCubic+792>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
45	  FP_UNPACK_Q (B, b);
=> 0x1e140 <__divtf3+342>:	or	a5,s9,s0
0x000000000001e144	45	  FP_UNPACK_Q (B, b);
=> 0x1e144 <__divtf3+346>:	beqz	a5,0x1e1b2 <__divtf3+456>
0x000000000001e1b2	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b2 <__divtf3+456>:	li	s0,0
0x000000000001e1b4	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b4 <__divtf3+458>:	li	a5,0
0x000000000001e1b6	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b6 <__divtf3+460>:	li	a0,0
0x000000000001e1b8	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b8 <__divtf3+462>:	li	a2,1
0x000000000001e1ba	45	  FP_UNPACK_Q (B, b);
=> 0x1e1ba <__divtf3+464>:	j	0x1e106 <__divtf3+284>
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e66e	47	  FP_PACK_Q (r, R);
=> 0x1e66e <__divtf3+1668>:	li	s0,1
0x000000000001e670	47	  FP_PACK_Q (r, R);
=> 0x1e670 <__divtf3+1670>:	lui	a4,0x8
0x000000000001e672	47	  FP_PACK_Q (r, R);
=> 0x1e672 <__divtf3+1672>:	slli	s0,s0,0x2f
0x000000000001e674	47	  FP_PACK_Q (r, R);
=> 0x1e674 <__divtf3+1674>:	li	a0,0
0x000000000001e676	47	  FP_PACK_Q (r, R);
=> 0x1e676 <__divtf3+1676>:	addi	a4,a4,-1
0x000000000001e678	47	  FP_PACK_Q (r, R);
=> 0x1e678 <__divtf3+1678>:	li	a1,0
0x000000000001e67a	46	  FP_DIV_Q (R, A, B);
=> 0x1e67a <__divtf3+1680>:	li	s2,16
0x000000000001e67c	46	  FP_DIV_Q (R, A, B);
=> 0x1e67c <__divtf3+1682>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
0x000000000001e4c6	48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c6 <__divtf3+1244>:	csrs	fflags,s2
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010980 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10980 <SolveCubic+796>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=nan(0x8000000000000000000000000000)) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa16 <__trunctfdf2+442>:	beqz	a5,0x1fa50 <__trunctfdf2+500>
0x000000000001fa18	38	  FP_DECL_EX;
=> 0x1fa18 <__trunctfdf2+444>:	li	a7,0
0x000000000001fa1a	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa1a <__trunctfdf2+446>:	bne	a2,t3,0x1fa28 <__trunctfdf2+460>
0x000000000001fa1e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa1e <__trunctfdf2+450>:	srli	a7,a4,0x32
0x000000000001fa22	38	  FP_DECL_EX;
=> 0x1fa22 <__trunctfdf2+454>:	seqz	a7,a7
0x000000000001fa26	38	  FP_DECL_EX;
=> 0x1fa26 <__trunctfdf2+458>:	slli	a7,a7,0x4
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa28 <__trunctfdf2+460>:	srli	a5,t4,0x3c
0x000000000001fa2c	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa2c <__trunctfdf2+464>:	slli	a4,a4,0x4
0x000000000001fa2e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa2e <__trunctfdf2+466>:	or	a4,a4,a5
0x000000000001fa30	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa30 <__trunctfdf2+468>:	li	a5,1
0x000000000001fa32	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa32 <__trunctfdf2+470>:	andi	a4,a4,-8
0x000000000001fa34	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa34 <__trunctfdf2+472>:	slli	a5,a5,0x36
0x000000000001fa36	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa36 <__trunctfdf2+474>:	or	a5,a5,a4
0x000000000001fa38	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa38 <__trunctfdf2+476>:	li	a2,2047
0x000000000001fa3c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa3c <__trunctfdf2+480>:	li	a4,0
0x000000000001fa3e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa3e <__trunctfdf2+482>:	j	0x1f9f8 <__trunctfdf2+412>
0x000000000001f9f8	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f9f8 <__trunctfdf2+412>:	andi	a1,a5,7
0x000000000001f9fc	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f9fc <__trunctfdf2+416>:	bnez	a1,0x1f8b6 <__trunctfdf2+90>
0x000000000001fa00	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa00 <__trunctfdf2+420>:	beqz	a4,0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f912	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f912 <__trunctfdf2+182>:	beqz	a5,0x1f91a <__trunctfdf2+190>
0x000000000001f914	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f914 <__trunctfdf2+184>:	li	a5,1
0x000000000001f916	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f916 <__trunctfdf2+186>:	slli	a5,a5,0x33
0x000000000001f918	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f918 <__trunctfdf2+188>:	li	a3,0
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010984 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10984 <SolveCubic+800>:	jal	ra,0x10f48 <acos>
0x0000000000010f48 in acos ()
=> 0x10f48 <acos>:	addi	sp,sp,-32
0x0000000000010f4a in acos ()
=> 0x10f4a <acos+2>:	fsd	fs0,8(sp)
0x0000000000010f4c in acos ()
=> 0x10f4c <acos+4>:	fmv.d	fs0,fa0
0x0000000000010f50 in acos ()
=> 0x10f50 <acos+8>:	fsd	fs1,0(sp)
0x0000000000010f52 in acos ()
=> 0x10f52 <acos+10>:	sd	ra,24(sp)
0x0000000000010f54 in acos ()
=> 0x10f54 <acos+12>:	jal	ra,0x11094 <__ieee754_acos>
0x0000000000011094 in __ieee754_acos ()
=> 0x11094 <__ieee754_acos>:	fmv.x.d	a5,fa0
0x0000000000011098 in __ieee754_acos ()
=> 0x11098 <__ieee754_acos+4>:	lui	a3,0x3ff00
0x000000000001109c in __ieee754_acos ()
=> 0x1109c <__ieee754_acos+8>:	srai	a2,a5,0x20
0x00000000000110a0 in __ieee754_acos ()
=> 0x110a0 <__ieee754_acos+12>:	slli	a4,a2,0x21
0x00000000000110a4 in __ieee754_acos ()
=> 0x110a4 <__ieee754_acos+16>:	srli	a4,a4,0x21
0x00000000000110a6 in __ieee754_acos ()
=> 0x110a6 <__ieee754_acos+18>:	blt	a4,a3,0x110c2 <__ieee754_acos+46>
0x00000000000110c2 in __ieee754_acos ()
=> 0x110c2 <__ieee754_acos+46>:	lui	a3,0x3fe00
0x00000000000110c6 in __ieee754_acos ()
=> 0x110c6 <__ieee754_acos+50>:	bge	a4,a3,0x110d8 <__ieee754_acos+68>
0x00000000000110ca in __ieee754_acos ()
=> 0x110ca <__ieee754_acos+54>:	lui	a3,0x3c600
0x00000000000110ce in __ieee754_acos ()
=> 0x110ce <__ieee754_acos+58>:	blt	a3,a4,0x1119c <__ieee754_acos+264>
0x00000000000110d2 in __ieee754_acos ()
=> 0x110d2 <__ieee754_acos+62>:	fld	fa0,976(gp)
0x00000000000110d6 in __ieee754_acos ()
=> 0x110d6 <__ieee754_acos+66>:	ret
0x0000000000010f58 in acos ()
=> 0x10f58 <acos+16>:	feq.d	a5,fs0,fs0
0x0000000000010f5c in acos ()
=> 0x10f5c <acos+20>:	fmv.d	fs1,fa0
0x0000000000010f60 in acos ()
=> 0x10f60 <acos+24>:	beqz	a5,0x10f74 <acos+44>
0x0000000000010f62 in acos ()
=> 0x10f62 <acos+26>:	fmv.d	fa0,fs0
0x0000000000010f66 in acos ()
=> 0x10f66 <acos+30>:	jal	ra,0x10f42 <fabs>
0x0000000000010f42 in fabs ()
=> 0x10f42 <fabs>:	fabs.d	fa0,fa0
0x0000000000010f46 in fabs ()
=> 0x10f46 <fabs+4>:	ret
0x0000000000010f6a in acos ()
=> 0x10f6a <acos+34>:	fld	fa5,1000(gp)
0x0000000000010f6e in acos ()
=> 0x10f6e <acos+38>:	flt.d	a5,fa5,fa0
0x0000000000010f72 in acos ()
=> 0x10f72 <acos+42>:	bnez	a5,0x10f82 <acos+58>
0x0000000000010f74 in acos ()
=> 0x10f74 <acos+44>:	ld	ra,24(sp)
0x0000000000010f76 in acos ()
=> 0x10f76 <acos+46>:	fmv.d	fa0,fs1
0x0000000000010f7a in acos ()
=> 0x10f7a <acos+50>:	fld	fs0,8(sp)
0x0000000000010f7c in acos ()
=> 0x10f7c <acos+52>:	fld	fs1,0(sp)
0x0000000000010f7e in acos ()
=> 0x10f7e <acos+54>:	addi	sp,sp,32
0x0000000000010f80 in acos ()
=> 0x10f80 <acos+56>:	ret
0x0000000000010988 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10988 <SolveCubic+804>:	fsd	fa0,-160(s0)
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x1098c <SolveCubic+808>:	ld	a0,-128(s0)
0x0000000000010990	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10990 <SolveCubic+812>:	ld	a1,-120(s0)
0x0000000000010994	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10994 <SolveCubic+816>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010998 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10998 <SolveCubic+820>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x000000000001099c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x1099c <SolveCubic+824>:	fld	ft0,1840(gp)
0x00000000000109a0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a0 <SolveCubic+828>:	fmul.d	ft1,fa0,ft0
0x00000000000109a4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a4 <SolveCubic+832>:	fld	ft2,-160(s0)
0x00000000000109a8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a8 <SolveCubic+836>:	fld	ft3,1848(gp)
0x00000000000109ac	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109ac <SolveCubic+840>:	fdiv.d	fa0,ft2,ft3
0x00000000000109b0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b0 <SolveCubic+844>:	fsd	ft0,-432(s0)
0x00000000000109b4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b4 <SolveCubic+848>:	fsd	ft1,-440(s0)
0x00000000000109b8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b8 <SolveCubic+852>:	fsd	ft3,-448(s0)
0x00000000000109bc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109bc <SolveCubic+856>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x00000000000109c0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c0 <SolveCubic+860>:	fld	ft0,-440(s0)
0x00000000000109c4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c4 <SolveCubic+864>:	fmul.d	fa0,ft0,fa0
0x00000000000109c8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c8 <SolveCubic+868>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000109cc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109cc <SolveCubic+872>:	ld	a2,-80(s0)
0x00000000000109d0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d0 <SolveCubic+876>:	ld	a3,-72(s0)
0x00000000000109d4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d4 <SolveCubic+880>:	lui	a4,0x8
0x00000000000109d8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d8 <SolveCubic+884>:	addiw	a4,a4,1
0x00000000000109dc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109dc <SolveCubic+888>:	slli	a4,a4,0x2f
0x00000000000109e0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e0 <SolveCubic+892>:	li	a5,0
0x00000000000109e4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e4 <SolveCubic+896>:	sd	a0,-456(s0)
0x00000000000109e8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e8 <SolveCubic+900>:	mv	a0,a2
0x00000000000109ec	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109ec <SolveCubic+904>:	sd	a1,-464(s0)
0x00000000000109f0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f0 <SolveCubic+908>:	mv	a1,a3
0x00000000000109f4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f4 <SolveCubic+912>:	mv	a2,a5
0x00000000000109f8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f8 <SolveCubic+916>:	mv	a3,a4
0x00000000000109fc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109fc <SolveCubic+920>:	sd	a4,-472(s0)
0x0000000000010a00	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a00 <SolveCubic+924>:	sd	a5,-480(s0)
0x0000000000010a04	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a04 <SolveCubic+928>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010a08 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a08 <SolveCubic+932>:	ld	a2,-456(s0)
0x0000000000010a0c	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a0c <SolveCubic+936>:	sd	a0,-488(s0)
0x0000000000010a10	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a10 <SolveCubic+940>:	mv	a0,a2
0x0000000000010a14	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a14 <SolveCubic+944>:	ld	a3,-464(s0)
0x0000000000010a18	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a18 <SolveCubic+948>:	sd	a1,-496(s0)
0x0000000000010a1c	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a1c <SolveCubic+952>:	mv	a1,a3
0x0000000000010a20	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a20 <SolveCubic+956>:	ld	a2,-488(s0)
0x0000000000010a24	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a24 <SolveCubic+960>:	ld	a3,-496(s0)
0x0000000000010a28	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a28 <SolveCubic+964>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010a2c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a2c <SolveCubic+968>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010a30 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a30 <SolveCubic+972>:	ld	a0,-64(s0)
0x0000000000010a34	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a34 <SolveCubic+976>:	fsd	fa0,0(a0)
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a38 <SolveCubic+980>:	ld	a0,-128(s0)
0x0000000000010a3c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a3c <SolveCubic+984>:	ld	a1,-120(s0)
0x0000000000010a40	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a40 <SolveCubic+988>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010a44 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a44 <SolveCubic+992>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010a48 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a48 <SolveCubic+996>:	fld	ft0,-432(s0)
0x0000000000010a4c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a4c <SolveCubic+1000>:	fmul.d	ft1,fa0,ft0
0x0000000000010a50	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a50 <SolveCubic+1004>:	fld	ft2,-160(s0)
0x0000000000010a54	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a54 <SolveCubic+1008>:	fld	ft3,1856(gp)
0x0000000000010a58	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a58 <SolveCubic+1012>:	fmv.d	fa0,ft3
0x0000000000010a5c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a5c <SolveCubic+1016>:	fsd	ft1,-504(s0)
0x0000000000010a60	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a60 <SolveCubic+1020>:	fsd	ft2,-512(s0)
0x0000000000010a64	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a64 <SolveCubic+1024>:	fsd	ft3,-520(s0)
0x0000000000010a68	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a68 <SolveCubic+1028>:	jal	ra,0x10d14 <atan>
0x0000000000010d14 in atan ()
=> 0x10d14 <atan>:	fmv.x.d	a5,fa0
0x0000000000010d18 in atan ()
=> 0x10d18 <atan+4>:	addi	sp,sp,-32
0x0000000000010d1a in atan ()
=> 0x10d1a <atan+6>:	sd	s1,8(sp)
0x0000000000010d1c in atan ()
=> 0x10d1c <atan+8>:	srai	s1,a5,0x20
0x0000000000010d20 in atan ()
=> 0x10d20 <atan+12>:	sd	s0,16(sp)
0x0000000000010d22 in atan ()
=> 0x10d22 <atan+14>:	slli	s0,s1,0x21
0x0000000000010d26 in atan ()
=> 0x10d26 <atan+18>:	sd	ra,24(sp)
0x0000000000010d28 in atan ()
=> 0x10d28 <atan+20>:	lui	a4,0x44100
0x0000000000010d2c in atan ()
=> 0x10d2c <atan+24>:	srli	s0,s0,0x21
0x0000000000010d2e in atan ()
=> 0x10d2e <atan+26>:	blt	s0,a4,0x10d68 <atan+84>
0x0000000000010d68 in atan ()
=> 0x10d68 <atan+84>:	lui	a4,0x3fdc0
0x0000000000010d6c in atan ()
=> 0x10d6c <atan+88>:	bge	s0,a4,0x10e42 <atan+302>
0x0000000000010d70 in atan ()
=> 0x10d70 <atan+92>:	lui	a4,0x3e200
0x0000000000010d74 in atan ()
=> 0x10d74 <atan+96>:	blt	s0,a4,0x10e20 <atan+268>
0x0000000000010e20 in atan ()
=> 0x10e20 <atan+268>:	fld	fa5,992(gp)
0x0000000000010e24 in atan ()
=> 0x10e24 <atan+272>:	fld	fa4,1000(gp)
0x0000000000010e28 in atan ()
=> 0x10e28 <atan+276>:	fadd.d	fa5,fa0,fa5
0x0000000000010e2c in atan ()
=> 0x10e2c <atan+280>:	flt.d	a4,fa4,fa5
0x0000000000010e30 in atan ()
=> 0x10e30 <atan+284>:	beqz	a4,0x10d78 <atan+100>
0x0000000000010d78 in atan ()
=> 0x10d78 <atan+100>:	li	a4,-1
0x0000000000010d7a in atan ()
=> 0x10d7a <atan+102>:	fmv.d.x	fa5,a5
0x0000000000010d7e in atan ()
=> 0x10d7e <atan+106>:	fmul.d	fa3,fa5,fa5
0x0000000000010d82 in atan ()
=> 0x10d82 <atan+110>:	fld	fa5,1032(gp)
0x0000000000010d86 in atan ()
=> 0x10d86 <atan+114>:	fld	fa2,1040(gp)
0x0000000000010d8a in atan ()
=> 0x10d8a <atan+118>:	fld	fa0,1080(gp)
0x0000000000010d8e in atan ()
=> 0x10d8e <atan+122>:	fmul.d	fa4,fa3,fa3
0x0000000000010d92 in atan ()
=> 0x10d92 <atan+126>:	fmadd.d	fa5,fa4,fa5,fa2
0x0000000000010d96 in atan ()
=> 0x10d96 <atan+130>:	fld	fa2,1088(gp)
0x0000000000010d9a in atan ()
=> 0x10d9a <atan+134>:	fmadd.d	fa0,fa4,fa0,fa2
0x0000000000010d9e in atan ()
=> 0x10d9e <atan+138>:	fld	fa2,1048(gp)
0x0000000000010da2 in atan ()
=> 0x10da2 <atan+142>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010da6 in atan ()
=> 0x10da6 <atan+146>:	fld	fa2,1096(gp)
0x0000000000010daa in atan ()
=> 0x10daa <atan+150>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dae in atan ()
=> 0x10dae <atan+154>:	fld	fa2,1056(gp)
0x0000000000010db2 in atan ()
=> 0x10db2 <atan+158>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010db6 in atan ()
=> 0x10db6 <atan+162>:	fld	fa2,1104(gp)
0x0000000000010dba in atan ()
=> 0x10dba <atan+166>:	li	a3,-1
0x0000000000010dbc in atan ()
=> 0x10dbc <atan+168>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dc0 in atan ()
=> 0x10dc0 <atan+172>:	fld	fa2,1064(gp)
0x0000000000010dc4 in atan ()
=> 0x10dc4 <atan+176>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dc8 in atan ()
=> 0x10dc8 <atan+180>:	fld	fa2,1112(gp)
0x0000000000010dcc in atan ()
=> 0x10dcc <atan+184>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dd0 in atan ()
=> 0x10dd0 <atan+188>:	fld	fa2,1072(gp)
0x0000000000010dd4 in atan ()
=> 0x10dd4 <atan+192>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dd8 in atan ()
=> 0x10dd8 <atan+196>:	fmul.d	fa0,fa0,fa4
0x0000000000010ddc in atan ()
=> 0x10ddc <atan+200>:	fmv.d.x	fa4,a5
0x0000000000010de0 in atan ()
=> 0x10de0 <atan+204>:	fmadd.d	fa5,fa5,fa3,fa0
0x0000000000010de4 in atan ()
=> 0x10de4 <atan+208>:	fmul.d	fa5,fa4,fa5
0x0000000000010de8 in atan ()
=> 0x10de8 <atan+212>:	beq	a4,a3,0x10e72 <atan+350>
0x0000000000010e72 in atan ()
=> 0x10e72 <atan+350>:	ld	ra,24(sp)
0x0000000000010e74 in atan ()
=> 0x10e74 <atan+352>:	ld	s0,16(sp)
0x0000000000010e76 in atan ()
=> 0x10e76 <atan+354>:	ld	s1,8(sp)
0x0000000000010e78 in atan ()
=> 0x10e78 <atan+356>:	fsub.d	fa0,fa4,fa5
0x0000000000010e7c in atan ()
=> 0x10e7c <atan+360>:	addi	sp,sp,32
0x0000000000010e7e in atan ()
=> 0x10e7e <atan+362>:	ret
0x0000000000010a6c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a6c <SolveCubic+1032>:	fld	ft0,1864(gp)
0x0000000000010a70	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a70 <SolveCubic+1036>:	fmul.d	ft1,fa0,ft0
0x0000000000010a74	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a74 <SolveCubic+1040>:	fadd.d	ft1,ft1,ft1
0x0000000000010a78	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a78 <SolveCubic+1044>:	fld	ft2,-512(s0)
0x0000000000010a7c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a7c <SolveCubic+1048>:	fadd.d	ft1,ft2,ft1
0x0000000000010a80	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a80 <SolveCubic+1052>:	fld	ft2,-448(s0)
0x0000000000010a84	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a84 <SolveCubic+1056>:	fdiv.d	fa0,ft1,ft2
0x0000000000010a88	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a88 <SolveCubic+1060>:	fsd	ft0,-528(s0)
0x0000000000010a8c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a8c <SolveCubic+1064>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x0000000000010a90 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a90 <SolveCubic+1068>:	fld	ft0,-504(s0)
0x0000000000010a94	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a94 <SolveCubic+1072>:	fmul.d	fa0,ft0,fa0
0x0000000000010a98	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a98 <SolveCubic+1076>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x0000000000010a9c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a9c <SolveCubic+1080>:	ld	a2,-80(s0)
0x0000000000010aa0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa0 <SolveCubic+1084>:	ld	a3,-72(s0)
0x0000000000010aa4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa4 <SolveCubic+1088>:	sd	a0,-536(s0)
0x0000000000010aa8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa8 <SolveCubic+1092>:	mv	a0,a2
0x0000000000010aac	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aac <SolveCubic+1096>:	sd	a1,-544(s0)
0x0000000000010ab0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab0 <SolveCubic+1100>:	mv	a1,a3
0x0000000000010ab4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab4 <SolveCubic+1104>:	ld	a2,-480(s0)
0x0000000000010ab8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab8 <SolveCubic+1108>:	ld	a3,-472(s0)
0x0000000000010abc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10abc <SolveCubic+1112>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010ac0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac0 <SolveCubic+1116>:	ld	a2,-536(s0)
0x0000000000010ac4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac4 <SolveCubic+1120>:	sd	a0,-552(s0)
0x0000000000010ac8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac8 <SolveCubic+1124>:	mv	a0,a2
0x0000000000010acc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10acc <SolveCubic+1128>:	ld	a3,-544(s0)
0x0000000000010ad0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad0 <SolveCubic+1132>:	sd	a1,-560(s0)
0x0000000000010ad4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad4 <SolveCubic+1136>:	mv	a1,a3
0x0000000000010ad8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad8 <SolveCubic+1140>:	ld	a2,-552(s0)
0x0000000000010adc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10adc <SolveCubic+1144>:	ld	a3,-560(s0)
0x0000000000010ae0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae0 <SolveCubic+1148>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010ae4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae4 <SolveCubic+1152>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010ae8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae8 <SolveCubic+1156>:	ld	a0,-64(s0)
0x0000000000010aec	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aec <SolveCubic+1160>:	fsd	fa0,8(a0)
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af0 <SolveCubic+1164>:	ld	a0,-128(s0)
0x0000000000010af4	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af4 <SolveCubic+1168>:	ld	a1,-120(s0)
0x0000000000010af8	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af8 <SolveCubic+1172>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010afc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10afc <SolveCubic+1176>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010b00 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b00 <SolveCubic+1180>:	fld	ft0,-432(s0)
0x0000000000010b04	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b04 <SolveCubic+1184>:	fmul.d	ft1,fa0,ft0
0x0000000000010b08	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b08 <SolveCubic+1188>:	fld	ft2,-160(s0)
0x0000000000010b0c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b0c <SolveCubic+1192>:	fld	fa0,-520(s0)
0x0000000000010b10	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b10 <SolveCubic+1196>:	fsd	ft1,-568(s0)
0x0000000000010b14	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b14 <SolveCubic+1200>:	fsd	ft2,-576(s0)
0x0000000000010b18	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b18 <SolveCubic+1204>:	jal	ra,0x10d14 <atan>
0x0000000000010d14 in atan ()
=> 0x10d14 <atan>:	fmv.x.d	a5,fa0
0x0000000000010d18 in atan ()
=> 0x10d18 <atan+4>:	addi	sp,sp,-32
0x0000000000010d1a in atan ()
=> 0x10d1a <atan+6>:	sd	s1,8(sp)
0x0000000000010d1c in atan ()
=> 0x10d1c <atan+8>:	srai	s1,a5,0x20
0x0000000000010d20 in atan ()
=> 0x10d20 <atan+12>:	sd	s0,16(sp)
0x0000000000010d22 in atan ()
=> 0x10d22 <atan+14>:	slli	s0,s1,0x21
0x0000000000010d26 in atan ()
=> 0x10d26 <atan+18>:	sd	ra,24(sp)
0x0000000000010d28 in atan ()
=> 0x10d28 <atan+20>:	lui	a4,0x44100
0x0000000000010d2c in atan ()
=> 0x10d2c <atan+24>:	srli	s0,s0,0x21
0x0000000000010d2e in atan ()
=> 0x10d2e <atan+26>:	blt	s0,a4,0x10d68 <atan+84>
0x0000000000010d68 in atan ()
=> 0x10d68 <atan+84>:	lui	a4,0x3fdc0
0x0000000000010d6c in atan ()
=> 0x10d6c <atan+88>:	bge	s0,a4,0x10e42 <atan+302>
0x0000000000010d70 in atan ()
=> 0x10d70 <atan+92>:	lui	a4,0x3e200
0x0000000000010d74 in atan ()
=> 0x10d74 <atan+96>:	blt	s0,a4,0x10e20 <atan+268>
0x0000000000010e20 in atan ()
=> 0x10e20 <atan+268>:	fld	fa5,992(gp)
0x0000000000010e24 in atan ()
=> 0x10e24 <atan+272>:	fld	fa4,1000(gp)
0x0000000000010e28 in atan ()
=> 0x10e28 <atan+276>:	fadd.d	fa5,fa0,fa5
0x0000000000010e2c in atan ()
=> 0x10e2c <atan+280>:	flt.d	a4,fa4,fa5
0x0000000000010e30 in atan ()
=> 0x10e30 <atan+284>:	beqz	a4,0x10d78 <atan+100>
0x0000000000010d78 in atan ()
=> 0x10d78 <atan+100>:	li	a4,-1
0x0000000000010d7a in atan ()
=> 0x10d7a <atan+102>:	fmv.d.x	fa5,a5
0x0000000000010d7e in atan ()
=> 0x10d7e <atan+106>:	fmul.d	fa3,fa5,fa5
0x0000000000010d82 in atan ()
=> 0x10d82 <atan+110>:	fld	fa5,1032(gp)
0x0000000000010d86 in atan ()
=> 0x10d86 <atan+114>:	fld	fa2,1040(gp)
0x0000000000010d8a in atan ()
=> 0x10d8a <atan+118>:	fld	fa0,1080(gp)
0x0000000000010d8e in atan ()
=> 0x10d8e <atan+122>:	fmul.d	fa4,fa3,fa3
0x0000000000010d92 in atan ()
=> 0x10d92 <atan+126>:	fmadd.d	fa5,fa4,fa5,fa2
0x0000000000010d96 in atan ()
=> 0x10d96 <atan+130>:	fld	fa2,1088(gp)
0x0000000000010d9a in atan ()
=> 0x10d9a <atan+134>:	fmadd.d	fa0,fa4,fa0,fa2
0x0000000000010d9e in atan ()
=> 0x10d9e <atan+138>:	fld	fa2,1048(gp)
0x0000000000010da2 in atan ()
=> 0x10da2 <atan+142>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010da6 in atan ()
=> 0x10da6 <atan+146>:	fld	fa2,1096(gp)
0x0000000000010daa in atan ()
=> 0x10daa <atan+150>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dae in atan ()
=> 0x10dae <atan+154>:	fld	fa2,1056(gp)
0x0000000000010db2 in atan ()
=> 0x10db2 <atan+158>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010db6 in atan ()
=> 0x10db6 <atan+162>:	fld	fa2,1104(gp)
0x0000000000010dba in atan ()
=> 0x10dba <atan+166>:	li	a3,-1
0x0000000000010dbc in atan ()
=> 0x10dbc <atan+168>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dc0 in atan ()
=> 0x10dc0 <atan+172>:	fld	fa2,1064(gp)
0x0000000000010dc4 in atan ()
=> 0x10dc4 <atan+176>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dc8 in atan ()
=> 0x10dc8 <atan+180>:	fld	fa2,1112(gp)
0x0000000000010dcc in atan ()
=> 0x10dcc <atan+184>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dd0 in atan ()
=> 0x10dd0 <atan+188>:	fld	fa2,1072(gp)
0x0000000000010dd4 in atan ()
=> 0x10dd4 <atan+192>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dd8 in atan ()
=> 0x10dd8 <atan+196>:	fmul.d	fa0,fa0,fa4
0x0000000000010ddc in atan ()
=> 0x10ddc <atan+200>:	fmv.d.x	fa4,a5
0x0000000000010de0 in atan ()
=> 0x10de0 <atan+204>:	fmadd.d	fa5,fa5,fa3,fa0
0x0000000000010de4 in atan ()
=> 0x10de4 <atan+208>:	fmul.d	fa5,fa4,fa5
0x0000000000010de8 in atan ()
=> 0x10de8 <atan+212>:	beq	a4,a3,0x10e72 <atan+350>
0x0000000000010e72 in atan ()
=> 0x10e72 <atan+350>:	ld	ra,24(sp)
0x0000000000010e74 in atan ()
=> 0x10e74 <atan+352>:	ld	s0,16(sp)
0x0000000000010e76 in atan ()
=> 0x10e76 <atan+354>:	ld	s1,8(sp)
0x0000000000010e78 in atan ()
=> 0x10e78 <atan+356>:	fsub.d	fa0,fa4,fa5
0x0000000000010e7c in atan ()
=> 0x10e7c <atan+360>:	addi	sp,sp,32
0x0000000000010e7e in atan ()
=> 0x10e7e <atan+362>:	ret
0x0000000000010b1c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b1c <SolveCubic+1208>:	fld	ft0,-528(s0)
0x0000000000010b20	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b20 <SolveCubic+1212>:	fmul.d	ft1,fa0,ft0
0x0000000000010b24	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b24 <SolveCubic+1216>:	fmul.d	ft1,ft1,ft0
0x0000000000010b28	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b28 <SolveCubic+1220>:	fld	ft2,-576(s0)
0x0000000000010b2c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b2c <SolveCubic+1224>:	fadd.d	ft1,ft2,ft1
0x0000000000010b30	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b30 <SolveCubic+1228>:	fld	ft2,-448(s0)
0x0000000000010b34	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b34 <SolveCubic+1232>:	fdiv.d	fa0,ft1,ft2
0x0000000000010b38	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b38 <SolveCubic+1236>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x0000000000010b3c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b3c <SolveCubic+1240>:	fld	ft0,-568(s0)
0x0000000000010b40	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b40 <SolveCubic+1244>:	fmul.d	fa0,ft0,fa0
0x0000000000010b44	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b44 <SolveCubic+1248>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x0000000000010b48 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b48 <SolveCubic+1252>:	ld	a2,-80(s0)
0x0000000000010b4c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b4c <SolveCubic+1256>:	ld	a3,-72(s0)
0x0000000000010b50	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b50 <SolveCubic+1260>:	sd	a0,-584(s0)
0x0000000000010b54	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b54 <SolveCubic+1264>:	mv	a0,a2
0x0000000000010b58	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b58 <SolveCubic+1268>:	sd	a1,-592(s0)
0x0000000000010b5c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b5c <SolveCubic+1272>:	mv	a1,a3
0x0000000000010b60	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b60 <SolveCubic+1276>:	ld	a2,-480(s0)
0x0000000000010b64	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b64 <SolveCubic+1280>:	ld	a3,-472(s0)
0x0000000000010b68	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b68 <SolveCubic+1284>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010b6c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b6c <SolveCubic+1288>:	ld	a2,-584(s0)
0x0000000000010b70	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b70 <SolveCubic+1292>:	sd	a0,-600(s0)
0x0000000000010b74	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b74 <SolveCubic+1296>:	mv	a0,a2
0x0000000000010b78	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b78 <SolveCubic+1300>:	ld	a3,-592(s0)
0x0000000000010b7c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b7c <SolveCubic+1304>:	sd	a1,-608(s0)
0x0000000000010b80	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b80 <SolveCubic+1308>:	mv	a1,a3
0x0000000000010b84	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b84 <SolveCubic+1312>:	ld	a2,-600(s0)
0x0000000000010b88	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b88 <SolveCubic+1316>:	ld	a3,-608(s0)
0x0000000000010b8c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b8c <SolveCubic+1320>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010b90 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b90 <SolveCubic+1324>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010b94 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b94 <SolveCubic+1328>:	ld	a0,-64(s0)
0x0000000000010b98	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b98 <SolveCubic+1332>:	fsd	fa0,16(a0)
52	   }
=> 0x10b9c <SolveCubic+1336>:	j	0x10cfc <SolveCubic+1688>
61	}
=> 0x10cfc <SolveCubic+1688>:	ld	s0,720(sp)
0x0000000000010d00 in SolveCubic (a=1, b=-10.5, c=32, d=-30, solutions=0x3ff0000000000000, x=0xc012000000000000) at libcubic.c:61
61	}
=> 0x10d00 <SolveCubic+1692>:	ld	ra,728(sp)
0x0000000000010d04	61	}
=> 0x10d04 <SolveCubic+1696>:	addi	sp,sp,736
0x0000000000010d08	61	}
=> 0x10d08 <SolveCubic+1700>:	ld	ra,0(t6)
0x0000000000010d0c	61	}
=> 0x10d0c <SolveCubic+1704>:	addi	t6,t6,16
0x0000000000010d10	61	}
=> 0x10d10 <SolveCubic+1708>:	ret
benchmark () at basicmath_small.c:62
62	   SolveCubic(a3, b3, c3, d3, &solutions, output);
=> 0x104f0 <benchmark+336>:	fld	fa0,-88(s0)
0x00000000000104f4	62	   SolveCubic(a3, b3, c3, d3, &solutions, output);
=> 0x104f4 <benchmark+340>:	fld	fa1,-96(s0)
0x00000000000104f8	62	   SolveCubic(a3, b3, c3, d3, &solutions, output);
=> 0x104f8 <benchmark+344>:	fld	fa2,-104(s0)
0x00000000000104fc	62	   SolveCubic(a3, b3, c3, d3, &solutions, output);
=> 0x104fc <benchmark+348>:	fld	fa3,-112(s0)
0x0000000000010500	62	   SolveCubic(a3, b3, c3, d3, &solutions, output);
=> 0x10500 <benchmark+352>:	ld	a0,-576(s0)
0x0000000000010504	62	   SolveCubic(a3, b3, c3, d3, &solutions, output);
=> 0x10504 <benchmark+356>:	ld	a1,-560(s0)
0x0000000000010508	62	   SolveCubic(a3, b3, c3, d3, &solutions, output);
=> 0x10508 <benchmark+360>:	jal	ra,0x10664 <SolveCubic>
SolveCubic (a=1, b=-10.5, c=32, d=-30, solutions=0x3ff0000000000000, x=0xc012000000000000) at libcubic.c:37
37	{
=> 0x10664 <SolveCubic>:	addi	t6,t6,-16
0x0000000000010668	37	{
=> 0x10668 <SolveCubic+4>:	sd	ra,0(t6)
0x000000000001066c	37	{
=> 0x1066c <SolveCubic+8>:	st	zero,0(t6)
0x0000000000010670	37	{
=> 0x10670 <SolveCubic+12>:	addi	sp,sp,-736
0x0000000000010674	37	{
=> 0x10674 <SolveCubic+16>:	sd	ra,728(sp)
0x0000000000010678	37	{
=> 0x10678 <SolveCubic+20>:	sd	s0,720(sp)
0x000000000001067c	37	{
=> 0x1067c <SolveCubic+24>:	addi	s0,sp,736
0x0000000000010680	37	{
=> 0x10680 <SolveCubic+28>:	fsd	fa0,-24(s0)
0x0000000000010684	37	{
=> 0x10684 <SolveCubic+32>:	fsd	fa1,-32(s0)
0x0000000000010688	37	{
=> 0x10688 <SolveCubic+36>:	fsd	fa2,-40(s0)
0x000000000001068c	37	{
=> 0x1068c <SolveCubic+40>:	fsd	fa3,-48(s0)
0x0000000000010690	37	{
=> 0x10690 <SolveCubic+44>:	sd	a0,-56(s0)
0x0000000000010694	37	{
=> 0x10694 <SolveCubic+48>:	sd	a1,-64(s0)
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x10698 <SolveCubic+52>:	fld	ft0,-32(s0)
0x000000000001069c	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x1069c <SolveCubic+56>:	fld	ft1,-24(s0)
0x00000000000106a0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a0 <SolveCubic+60>:	fdiv.d	fa0,ft0,ft1
0x00000000000106a4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a4 <SolveCubic+64>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106a8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a8 <SolveCubic+68>:	sd	a1,-72(s0)
0x00000000000106ac	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106ac <SolveCubic+72>:	sd	a0,-80(s0)
0x00000000000106b0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b0 <SolveCubic+76>:	fld	ft0,-40(s0)
0x00000000000106b4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b4 <SolveCubic+80>:	fld	ft1,-24(s0)
0x00000000000106b8	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b8 <SolveCubic+84>:	fdiv.d	fa0,ft0,ft1
0x00000000000106bc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106bc <SolveCubic+88>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106c0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c0 <SolveCubic+92>:	sd	a1,-88(s0)
0x00000000000106c4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c4 <SolveCubic+96>:	sd	a0,-96(s0)
0x00000000000106c8	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c8 <SolveCubic+100>:	fld	ft0,-48(s0)
0x00000000000106cc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106cc <SolveCubic+104>:	fld	ft1,-24(s0)
0x00000000000106d0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d0 <SolveCubic+108>:	fdiv.d	fa0,ft0,ft1
0x00000000000106d4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d4 <SolveCubic+112>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106d8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d8 <SolveCubic+116>:	sd	a1,-104(s0)
0x00000000000106dc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106dc <SolveCubic+120>:	sd	a0,-112(s0)
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e0 <SolveCubic+124>:	ld	a0,-80(s0)
0x00000000000106e4	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e4 <SolveCubic+128>:	ld	a1,-72(s0)
0x00000000000106e8	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e8 <SolveCubic+132>:	sd	a0,-168(s0)
0x00000000000106ec	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106ec <SolveCubic+136>:	sd	a1,-176(s0)
0x00000000000106f0	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f0 <SolveCubic+140>:	ld	a2,-168(s0)
0x00000000000106f4	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f4 <SolveCubic+144>:	ld	a3,-176(s0)
0x00000000000106f8	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f8 <SolveCubic+148>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000106fc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106fc <SolveCubic+152>:	ld	a2,-96(s0)
0x0000000000010700	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10700 <SolveCubic+156>:	ld	a3,-88(s0)
0x0000000000010704	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10704 <SolveCubic+160>:	lui	a4,0xffff8
0x0000000000010708	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10708 <SolveCubic+164>:	addiw	a4,a4,1
0x000000000001070c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1070c <SolveCubic+168>:	slli	a4,a4,0x2f
0x0000000000010710	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10710 <SolveCubic+172>:	li	a5,0
0x0000000000010714	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10714 <SolveCubic+176>:	sd	a0,-184(s0)
0x0000000000010718	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10718 <SolveCubic+180>:	mv	a0,a2
0x000000000001071c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1071c <SolveCubic+184>:	sd	a1,-192(s0)
0x0000000000010720	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10720 <SolveCubic+188>:	mv	a1,a3
0x0000000000010724	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10724 <SolveCubic+192>:	mv	a2,a5
0x0000000000010728	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10728 <SolveCubic+196>:	mv	a3,a4
0x000000000001072c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1072c <SolveCubic+200>:	sd	a5,-200(s0)
0x0000000000010730	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10730 <SolveCubic+204>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=-3) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010734 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10734 <SolveCubic+208>:	ld	a2,-184(s0)
0x0000000000010738	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10738 <SolveCubic+212>:	sd	a0,-208(s0)
0x000000000001073c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1073c <SolveCubic+216>:	mv	a0,a2
0x0000000000010740	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10740 <SolveCubic+220>:	ld	a3,-192(s0)
0x0000000000010744	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10744 <SolveCubic+224>:	sd	a1,-216(s0)
0x0000000000010748	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10748 <SolveCubic+228>:	mv	a1,a3
0x000000000001074c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1074c <SolveCubic+232>:	ld	a2,-208(s0)
0x0000000000010750	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10750 <SolveCubic+236>:	ld	a3,-216(s0)
0x0000000000010754	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10754 <SolveCubic+240>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=-0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
46	  FP_ADD_Q (R, A, B);
=> 0x1db98 <__addtf3+996>:	blez	a2,0x1dc62 <__addtf3+1198>
0x000000000001dc62	46	  FP_ADD_Q (R, A, B);
=> 0x1dc62 <__addtf3+1198>:	beqz	a2,0x1dd48 <__addtf3+1428>
0x000000000001dd48	46	  FP_ADD_Q (R, A, B);
=> 0x1dd48 <__addtf3+1428>:	addi	t4,s0,1
0x000000000001dd4c	46	  FP_ADD_Q (R, A, B);
=> 0x1dd4c <__addtf3+1432>:	addi	a3,t1,-2
0x000000000001dd50	46	  FP_ADD_Q (R, A, B);
=> 0x1dd50 <__addtf3+1436>:	and	a3,t4,a3
0x000000000001dd54	46	  FP_ADD_Q (R, A, B);
=> 0x1dd54 <__addtf3+1440>:	bnez	a3,0x1de42 <__addtf3+1678>
0x000000000001dd56	46	  FP_ADD_Q (R, A, B);
=> 0x1dd56 <__addtf3+1442>:	or	t4,a5,a0
0x000000000001dd5a	46	  FP_ADD_Q (R, A, B);
=> 0x1dd5a <__addtf3+1446>:	or	t1,a4,a6
0x000000000001dd5e	46	  FP_ADD_Q (R, A, B);
=> 0x1dd5e <__addtf3+1450>:	bnez	s0,0x1ddfe <__addtf3+1610>
0x000000000001dd60	46	  FP_ADD_Q (R, A, B);
=> 0x1dd60 <__addtf3+1452>:	bnez	t4,0x1ddbc <__addtf3+1544>
0x000000000001dd64	46	  FP_ADD_Q (R, A, B);
=> 0x1dd64 <__addtf3+1456>:	bnez	t1,0x1df3a <__addtf3+1926>
0x000000000001dd68	46	  FP_ADD_Q (R, A, B);
=> 0x1dd68 <__addtf3+1460>:	addi	s2,s1,-2
0x000000000001dd6c	46	  FP_ADD_Q (R, A, B);
=> 0x1dd6c <__addtf3+1464>:	seqz	s2,s2
0x000000000001dd70	46	  FP_ADD_Q (R, A, B);
=> 0x1dd70 <__addtf3+1468>:	li	a5,0
0x000000000001dd72	46	  FP_ADD_Q (R, A, B);
=> 0x1dd72 <__addtf3+1470>:	li	a0,0
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x0000000000010758 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10758 <SolveCubic+244>:	lui	a2,0x20
0x000000000001075c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1075c <SolveCubic+248>:	addiw	a2,a2,17
0x0000000000010760	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10760 <SolveCubic+252>:	slli	a2,a2,0x2d
0x0000000000010764	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10764 <SolveCubic+256>:	ld	a3,-200(s0)
0x0000000000010768	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10768 <SolveCubic+260>:	sd	a2,-224(s0)
0x000000000001076c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1076c <SolveCubic+264>:	mv	a2,a3
0x0000000000010770	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10770 <SolveCubic+268>:	ld	a3,-224(s0)
0x0000000000010774	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10774 <SolveCubic+272>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=9) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010778 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10778 <SolveCubic+276>:	sd	a1,-120(s0)
0x000000000001077c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1077c <SolveCubic+280>:	sd	a0,-128(s0)
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10780 <SolveCubic+284>:	ld	a0,-80(s0)
0x0000000000010784	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10784 <SolveCubic+288>:	ld	a1,-72(s0)
0x0000000000010788	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10788 <SolveCubic+292>:	sd	a0,-232(s0)
0x000000000001078c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1078c <SolveCubic+296>:	sd	a1,-240(s0)
0x0000000000010790	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10790 <SolveCubic+300>:	ld	a2,-232(s0)
0x0000000000010794	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10794 <SolveCubic+304>:	ld	a3,-240(s0)
0x0000000000010798	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10798 <SolveCubic+308>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
0x000000000001d812	46	  FP_ADD_Q (R, A, B);
=> 0x1d812 <__addtf3+94>:	blez	a2,0x1d90c <__addtf3+344>
0x000000000001d90c	46	  FP_ADD_Q (R, A, B);
=> 0x1d90c <__addtf3+344>:	beqz	a2,0x1d9e8 <__addtf3+564>
0x000000000001d9e8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9e8 <__addtf3+564>:	addi	a7,s0,1
0x000000000001d9ec	46	  FP_ADD_Q (R, A, B);
=> 0x1d9ec <__addtf3+568>:	addi	a3,t1,-2
0x000000000001d9f0	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f0 <__addtf3+572>:	and	t1,a7,a3
0x000000000001d9f4	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f4 <__addtf3+576>:	bnez	t1,0x1dafe <__addtf3+842>
0x000000000001d9f8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f8 <__addtf3+580>:	or	a7,a5,a0
0x000000000001d9fc	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fc <__addtf3+584>:	bnez	s0,0x1da42 <__addtf3+654>
0x000000000001d9fe	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fe <__addtf3+586>:	beqz	a7,0x1df34 <__addtf3+1920>
0x000000000001df34	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1df34 <__addtf3+1920>:	mv	a5,a4
0x000000000001df36	46	  FP_ADD_Q (R, A, B);
=> 0x1df36 <__addtf3+1922>:	mv	a0,a6
0x000000000001df38	46	  FP_ADD_Q (R, A, B);
=> 0x1df38 <__addtf3+1924>:	j	0x1dd74 <__addtf3+1472>
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x000000000001079c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1079c <SolveCubic+312>:	ld	a2,-232(s0)
0x00000000000107a0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a0 <SolveCubic+316>:	ld	a3,-240(s0)
0x00000000000107a4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a4 <SolveCubic+320>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107a8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a8 <SolveCubic+324>:	ld	a2,-232(s0)
0x00000000000107ac	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107ac <SolveCubic+328>:	ld	a3,-240(s0)
0x00000000000107b0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b0 <SolveCubic+332>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107b4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b4 <SolveCubic+336>:	ld	a2,-232(s0)
0x00000000000107b8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b8 <SolveCubic+340>:	sd	a0,-248(s0)
0x00000000000107bc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107bc <SolveCubic+344>:	mv	a0,a2
0x00000000000107c0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c0 <SolveCubic+348>:	ld	a3,-240(s0)
0x00000000000107c4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c4 <SolveCubic+352>:	sd	a1,-256(s0)
0x00000000000107c8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c8 <SolveCubic+356>:	mv	a1,a3
0x00000000000107cc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107cc <SolveCubic+360>:	ld	a2,-200(s0)
0x00000000000107d0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d0 <SolveCubic+364>:	ld	a3,-224(s0)
0x00000000000107d4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d4 <SolveCubic+368>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=9) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107d8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d8 <SolveCubic+372>:	ld	a2,-96(s0)
0x00000000000107dc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107dc <SolveCubic+376>:	ld	a3,-88(s0)
0x00000000000107e0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e0 <SolveCubic+380>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107e4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e4 <SolveCubic+384>:	ld	a2,-248(s0)
0x00000000000107e8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e8 <SolveCubic+388>:	sd	a0,-264(s0)
0x00000000000107ec	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107ec <SolveCubic+392>:	mv	a0,a2
0x00000000000107f0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f0 <SolveCubic+396>:	ld	a3,-256(s0)
0x00000000000107f4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f4 <SolveCubic+400>:	sd	a1,-272(s0)
0x00000000000107f8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f8 <SolveCubic+404>:	mv	a1,a3
0x00000000000107fc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107fc <SolveCubic+408>:	ld	a2,-264(s0)
0x0000000000010800	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10800 <SolveCubic+412>:	ld	a3,-272(s0)
0x0000000000010804	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10804 <SolveCubic+416>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010808 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10808 <SolveCubic+420>:	ld	a2,-112(s0)
0x000000000001080c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1080c <SolveCubic+424>:	ld	a3,-104(s0)
0x0000000000010810	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10810 <SolveCubic+428>:	lui	a4,0x40
0x0000000000010814	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10814 <SolveCubic+432>:	addiw	a5,a4,59
0x0000000000010818	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10818 <SolveCubic+436>:	slli	a5,a5,0x2c
0x000000000001081c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1081c <SolveCubic+440>:	sd	a0,-280(s0)
0x0000000000010820	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10820 <SolveCubic+444>:	mv	a0,a2
0x0000000000010824	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10824 <SolveCubic+448>:	sd	a1,-288(s0)
0x0000000000010828	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10828 <SolveCubic+452>:	mv	a1,a3
0x000000000001082c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1082c <SolveCubic+456>:	ld	a2,-200(s0)
0x0000000000010830	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10830 <SolveCubic+460>:	mv	a3,a5
0x0000000000010834	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10834 <SolveCubic+464>:	sd	a4,-296(s0)
0x0000000000010838	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10838 <SolveCubic+468>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=27) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x000000000001083c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1083c <SolveCubic+472>:	ld	a2,-280(s0)
0x0000000000010840	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10840 <SolveCubic+476>:	sd	a0,-304(s0)
0x0000000000010844	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10844 <SolveCubic+480>:	mv	a0,a2
0x0000000000010848	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10848 <SolveCubic+484>:	ld	a3,-288(s0)
0x000000000001084c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1084c <SolveCubic+488>:	sd	a1,-312(s0)
0x0000000000010850	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10850 <SolveCubic+492>:	mv	a1,a3
0x0000000000010854	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10854 <SolveCubic+496>:	ld	a2,-304(s0)
0x0000000000010858	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10858 <SolveCubic+500>:	ld	a3,-312(s0)
0x000000000001085c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1085c <SolveCubic+504>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
0x000000000001d812	46	  FP_ADD_Q (R, A, B);
=> 0x1d812 <__addtf3+94>:	blez	a2,0x1d90c <__addtf3+344>
0x000000000001d90c	46	  FP_ADD_Q (R, A, B);
=> 0x1d90c <__addtf3+344>:	beqz	a2,0x1d9e8 <__addtf3+564>
0x000000000001d9e8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9e8 <__addtf3+564>:	addi	a7,s0,1
0x000000000001d9ec	46	  FP_ADD_Q (R, A, B);
=> 0x1d9ec <__addtf3+568>:	addi	a3,t1,-2
0x000000000001d9f0	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f0 <__addtf3+572>:	and	t1,a7,a3
0x000000000001d9f4	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f4 <__addtf3+576>:	bnez	t1,0x1dafe <__addtf3+842>
0x000000000001d9f8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f8 <__addtf3+580>:	or	a7,a5,a0
0x000000000001d9fc	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fc <__addtf3+584>:	bnez	s0,0x1da42 <__addtf3+654>
0x000000000001d9fe	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fe <__addtf3+586>:	beqz	a7,0x1df34 <__addtf3+1920>
0x000000000001df34	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1df34 <__addtf3+1920>:	mv	a5,a4
0x000000000001df36	46	  FP_ADD_Q (R, A, B);
=> 0x1df36 <__addtf3+1922>:	mv	a0,a6
0x000000000001df38	46	  FP_ADD_Q (R, A, B);
=> 0x1df38 <__addtf3+1924>:	j	0x1dd74 <__addtf3+1472>
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x0000000000010860 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10860 <SolveCubic+508>:	ld	a2,-296(s0)
0x0000000000010864	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10864 <SolveCubic+512>:	addiw	a3,a2,75
0x0000000000010868	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10868 <SolveCubic+516>:	slli	a3,a3,0x2c
0x000000000001086c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1086c <SolveCubic+520>:	ld	a2,-200(s0)
0x0000000000010870	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10870 <SolveCubic+524>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=54) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010874 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10874 <SolveCubic+528>:	sd	a1,-136(s0)
0x0000000000010878	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10878 <SolveCubic+532>:	sd	a0,-144(s0)
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1087c <SolveCubic+536>:	ld	a0,-144(s0)
0x0000000000010880	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10880 <SolveCubic+540>:	ld	a1,-136(s0)
0x0000000000010884	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10884 <SolveCubic+544>:	sd	a0,-320(s0)
0x0000000000010888	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10888 <SolveCubic+548>:	sd	a1,-328(s0)
0x000000000001088c	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1088c <SolveCubic+552>:	ld	a2,-320(s0)
0x0000000000010890	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10890 <SolveCubic+556>:	ld	a3,-328(s0)
0x0000000000010894	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10894 <SolveCubic+560>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010898 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10898 <SolveCubic+564>:	ld	a2,-128(s0)
0x000000000001089c	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1089c <SolveCubic+568>:	ld	a3,-120(s0)
0x00000000000108a0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a0 <SolveCubic+572>:	sd	a0,-336(s0)
0x00000000000108a4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a4 <SolveCubic+576>:	mv	a0,a2
0x00000000000108a8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a8 <SolveCubic+580>:	sd	a1,-344(s0)
0x00000000000108ac	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108ac <SolveCubic+584>:	mv	a1,a3
0x00000000000108b0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b0 <SolveCubic+588>:	sd	a2,-352(s0)
0x00000000000108b4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b4 <SolveCubic+592>:	sd	a3,-360(s0)
0x00000000000108b8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b8 <SolveCubic+596>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000108bc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108bc <SolveCubic+600>:	ld	a2,-352(s0)
0x00000000000108c0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c0 <SolveCubic+604>:	ld	a3,-360(s0)
0x00000000000108c4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c4 <SolveCubic+608>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000108c8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c8 <SolveCubic+612>:	ld	a2,-336(s0)
0x00000000000108cc	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108cc <SolveCubic+616>:	sd	a0,-368(s0)
0x00000000000108d0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d0 <SolveCubic+620>:	mv	a0,a2
0x00000000000108d4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d4 <SolveCubic+624>:	ld	a3,-344(s0)
0x00000000000108d8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d8 <SolveCubic+628>:	sd	a1,-376(s0)
0x00000000000108dc	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108dc <SolveCubic+632>:	mv	a1,a3
0x00000000000108e0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e0 <SolveCubic+636>:	ld	a2,-368(s0)
0x00000000000108e4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e4 <SolveCubic+640>:	ld	a3,-376(s0)
0x00000000000108e8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e8 <SolveCubic+644>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x00000000000108ec in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108ec <SolveCubic+648>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x00000000000108f0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108f0 <SolveCubic+652>:	fsd	fa0,-152(s0)
45	   if (R2_Q3 <= 0)
=> 0x108f4 <SolveCubic+656>:	fld	ft0,-152(s0)
0x00000000000108f8	45	   if (R2_Q3 <= 0)
=> 0x108f8 <SolveCubic+660>:	fmv.d.x	ft1,zero
0x00000000000108fc	45	   if (R2_Q3 <= 0)
=> 0x108fc <SolveCubic+664>:	fle.d	a0,ft0,ft1
0x0000000000010900	45	   if (R2_Q3 <= 0)
=> 0x10900 <SolveCubic+668>:	xori	a0,a0,1
0x0000000000010904	45	   if (R2_Q3 <= 0)
=> 0x10904 <SolveCubic+672>:	bnez	a0,0x10ba0 <SolveCubic+1340>
0x0000000000010908	45	   if (R2_Q3 <= 0)
=> 0x10908 <SolveCubic+676>:	j	0x1090c <SolveCubic+680>
47	      *solutions = 3;
=> 0x1090c <SolveCubic+680>:	ld	a0,-56(s0)
0x0000000000010910	47	      *solutions = 3;
=> 0x10910 <SolveCubic+684>:	li	a1,3
0x0000000000010914	47	      *solutions = 3;
=> 0x10914 <SolveCubic+688>:	sw	a1,0(a0)
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10918 <SolveCubic+692>:	ld	a1,-136(s0)
0x000000000001091c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1091c <SolveCubic+696>:	ld	a0,-144(s0)
0x0000000000010920	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10920 <SolveCubic+700>:	ld	a2,-128(s0)
0x0000000000010924	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10924 <SolveCubic+704>:	ld	a3,-120(s0)
0x0000000000010928	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10928 <SolveCubic+708>:	sd	a0,-384(s0)
0x000000000001092c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1092c <SolveCubic+712>:	mv	a0,a2
0x0000000000010930	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10930 <SolveCubic+716>:	sd	a1,-392(s0)
0x0000000000010934	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10934 <SolveCubic+720>:	mv	a1,a3
0x0000000000010938	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10938 <SolveCubic+724>:	sd	a2,-400(s0)
0x000000000001093c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1093c <SolveCubic+728>:	sd	a3,-408(s0)
0x0000000000010940	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10940 <SolveCubic+732>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010944 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10944 <SolveCubic+736>:	ld	a2,-400(s0)
0x0000000000010948	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10948 <SolveCubic+740>:	ld	a3,-408(s0)
0x000000000001094c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1094c <SolveCubic+744>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010950 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10950 <SolveCubic+748>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010954 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10954 <SolveCubic+752>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010958 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10958 <SolveCubic+756>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x000000000001095c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1095c <SolveCubic+760>:	ld	a2,-384(s0)
0x0000000000010960	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10960 <SolveCubic+764>:	sd	a0,-416(s0)
0x0000000000010964	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10964 <SolveCubic+768>:	mv	a0,a2
0x0000000000010968	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10968 <SolveCubic+772>:	ld	a3,-392(s0)
0x000000000001096c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1096c <SolveCubic+776>:	sd	a1,-424(s0)
0x0000000000010970	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10970 <SolveCubic+780>:	mv	a1,a3
0x0000000000010974	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10974 <SolveCubic+784>:	ld	a2,-416(s0)
0x0000000000010978	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10978 <SolveCubic+788>:	ld	a3,-424(s0)
0x000000000001097c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1097c <SolveCubic+792>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
45	  FP_UNPACK_Q (B, b);
=> 0x1e140 <__divtf3+342>:	or	a5,s9,s0
0x000000000001e144	45	  FP_UNPACK_Q (B, b);
=> 0x1e144 <__divtf3+346>:	beqz	a5,0x1e1b2 <__divtf3+456>
0x000000000001e1b2	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b2 <__divtf3+456>:	li	s0,0
0x000000000001e1b4	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b4 <__divtf3+458>:	li	a5,0
0x000000000001e1b6	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b6 <__divtf3+460>:	li	a0,0
0x000000000001e1b8	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b8 <__divtf3+462>:	li	a2,1
0x000000000001e1ba	45	  FP_UNPACK_Q (B, b);
=> 0x1e1ba <__divtf3+464>:	j	0x1e106 <__divtf3+284>
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e66e	47	  FP_PACK_Q (r, R);
=> 0x1e66e <__divtf3+1668>:	li	s0,1
0x000000000001e670	47	  FP_PACK_Q (r, R);
=> 0x1e670 <__divtf3+1670>:	lui	a4,0x8
0x000000000001e672	47	  FP_PACK_Q (r, R);
=> 0x1e672 <__divtf3+1672>:	slli	s0,s0,0x2f
0x000000000001e674	47	  FP_PACK_Q (r, R);
=> 0x1e674 <__divtf3+1674>:	li	a0,0
0x000000000001e676	47	  FP_PACK_Q (r, R);
=> 0x1e676 <__divtf3+1676>:	addi	a4,a4,-1
0x000000000001e678	47	  FP_PACK_Q (r, R);
=> 0x1e678 <__divtf3+1678>:	li	a1,0
0x000000000001e67a	46	  FP_DIV_Q (R, A, B);
=> 0x1e67a <__divtf3+1680>:	li	s2,16
0x000000000001e67c	46	  FP_DIV_Q (R, A, B);
=> 0x1e67c <__divtf3+1682>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
0x000000000001e4c6	48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c6 <__divtf3+1244>:	csrs	fflags,s2
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010980 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10980 <SolveCubic+796>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=nan(0x8000000000000000000000000000)) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa16 <__trunctfdf2+442>:	beqz	a5,0x1fa50 <__trunctfdf2+500>
0x000000000001fa18	38	  FP_DECL_EX;
=> 0x1fa18 <__trunctfdf2+444>:	li	a7,0
0x000000000001fa1a	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa1a <__trunctfdf2+446>:	bne	a2,t3,0x1fa28 <__trunctfdf2+460>
0x000000000001fa1e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa1e <__trunctfdf2+450>:	srli	a7,a4,0x32
0x000000000001fa22	38	  FP_DECL_EX;
=> 0x1fa22 <__trunctfdf2+454>:	seqz	a7,a7
0x000000000001fa26	38	  FP_DECL_EX;
=> 0x1fa26 <__trunctfdf2+458>:	slli	a7,a7,0x4
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa28 <__trunctfdf2+460>:	srli	a5,t4,0x3c
0x000000000001fa2c	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa2c <__trunctfdf2+464>:	slli	a4,a4,0x4
0x000000000001fa2e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa2e <__trunctfdf2+466>:	or	a4,a4,a5
0x000000000001fa30	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa30 <__trunctfdf2+468>:	li	a5,1
0x000000000001fa32	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa32 <__trunctfdf2+470>:	andi	a4,a4,-8
0x000000000001fa34	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa34 <__trunctfdf2+472>:	slli	a5,a5,0x36
0x000000000001fa36	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa36 <__trunctfdf2+474>:	or	a5,a5,a4
0x000000000001fa38	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa38 <__trunctfdf2+476>:	li	a2,2047
0x000000000001fa3c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa3c <__trunctfdf2+480>:	li	a4,0
0x000000000001fa3e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa3e <__trunctfdf2+482>:	j	0x1f9f8 <__trunctfdf2+412>
0x000000000001f9f8	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f9f8 <__trunctfdf2+412>:	andi	a1,a5,7
0x000000000001f9fc	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f9fc <__trunctfdf2+416>:	bnez	a1,0x1f8b6 <__trunctfdf2+90>
0x000000000001fa00	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa00 <__trunctfdf2+420>:	beqz	a4,0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f912	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f912 <__trunctfdf2+182>:	beqz	a5,0x1f91a <__trunctfdf2+190>
0x000000000001f914	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f914 <__trunctfdf2+184>:	li	a5,1
0x000000000001f916	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f916 <__trunctfdf2+186>:	slli	a5,a5,0x33
0x000000000001f918	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f918 <__trunctfdf2+188>:	li	a3,0
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010984 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10984 <SolveCubic+800>:	jal	ra,0x10f48 <acos>
0x0000000000010f48 in acos ()
=> 0x10f48 <acos>:	addi	sp,sp,-32
0x0000000000010f4a in acos ()
=> 0x10f4a <acos+2>:	fsd	fs0,8(sp)
0x0000000000010f4c in acos ()
=> 0x10f4c <acos+4>:	fmv.d	fs0,fa0
0x0000000000010f50 in acos ()
=> 0x10f50 <acos+8>:	fsd	fs1,0(sp)
0x0000000000010f52 in acos ()
=> 0x10f52 <acos+10>:	sd	ra,24(sp)
0x0000000000010f54 in acos ()
=> 0x10f54 <acos+12>:	jal	ra,0x11094 <__ieee754_acos>
0x0000000000011094 in __ieee754_acos ()
=> 0x11094 <__ieee754_acos>:	fmv.x.d	a5,fa0
0x0000000000011098 in __ieee754_acos ()
=> 0x11098 <__ieee754_acos+4>:	lui	a3,0x3ff00
0x000000000001109c in __ieee754_acos ()
=> 0x1109c <__ieee754_acos+8>:	srai	a2,a5,0x20
0x00000000000110a0 in __ieee754_acos ()
=> 0x110a0 <__ieee754_acos+12>:	slli	a4,a2,0x21
0x00000000000110a4 in __ieee754_acos ()
=> 0x110a4 <__ieee754_acos+16>:	srli	a4,a4,0x21
0x00000000000110a6 in __ieee754_acos ()
=> 0x110a6 <__ieee754_acos+18>:	blt	a4,a3,0x110c2 <__ieee754_acos+46>
0x00000000000110c2 in __ieee754_acos ()
=> 0x110c2 <__ieee754_acos+46>:	lui	a3,0x3fe00
0x00000000000110c6 in __ieee754_acos ()
=> 0x110c6 <__ieee754_acos+50>:	bge	a4,a3,0x110d8 <__ieee754_acos+68>
0x00000000000110ca in __ieee754_acos ()
=> 0x110ca <__ieee754_acos+54>:	lui	a3,0x3c600
0x00000000000110ce in __ieee754_acos ()
=> 0x110ce <__ieee754_acos+58>:	blt	a3,a4,0x1119c <__ieee754_acos+264>
0x00000000000110d2 in __ieee754_acos ()
=> 0x110d2 <__ieee754_acos+62>:	fld	fa0,976(gp)
0x00000000000110d6 in __ieee754_acos ()
=> 0x110d6 <__ieee754_acos+66>:	ret
0x0000000000010f58 in acos ()
=> 0x10f58 <acos+16>:	feq.d	a5,fs0,fs0
0x0000000000010f5c in acos ()
=> 0x10f5c <acos+20>:	fmv.d	fs1,fa0
0x0000000000010f60 in acos ()
=> 0x10f60 <acos+24>:	beqz	a5,0x10f74 <acos+44>
0x0000000000010f62 in acos ()
=> 0x10f62 <acos+26>:	fmv.d	fa0,fs0
0x0000000000010f66 in acos ()
=> 0x10f66 <acos+30>:	jal	ra,0x10f42 <fabs>
0x0000000000010f42 in fabs ()
=> 0x10f42 <fabs>:	fabs.d	fa0,fa0
0x0000000000010f46 in fabs ()
=> 0x10f46 <fabs+4>:	ret
0x0000000000010f6a in acos ()
=> 0x10f6a <acos+34>:	fld	fa5,1000(gp)
0x0000000000010f6e in acos ()
=> 0x10f6e <acos+38>:	flt.d	a5,fa5,fa0
0x0000000000010f72 in acos ()
=> 0x10f72 <acos+42>:	bnez	a5,0x10f82 <acos+58>
0x0000000000010f74 in acos ()
=> 0x10f74 <acos+44>:	ld	ra,24(sp)
0x0000000000010f76 in acos ()
=> 0x10f76 <acos+46>:	fmv.d	fa0,fs1
0x0000000000010f7a in acos ()
=> 0x10f7a <acos+50>:	fld	fs0,8(sp)
0x0000000000010f7c in acos ()
=> 0x10f7c <acos+52>:	fld	fs1,0(sp)
0x0000000000010f7e in acos ()
=> 0x10f7e <acos+54>:	addi	sp,sp,32
0x0000000000010f80 in acos ()
=> 0x10f80 <acos+56>:	ret
0x0000000000010988 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10988 <SolveCubic+804>:	fsd	fa0,-160(s0)
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x1098c <SolveCubic+808>:	ld	a0,-128(s0)
0x0000000000010990	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10990 <SolveCubic+812>:	ld	a1,-120(s0)
0x0000000000010994	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10994 <SolveCubic+816>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010998 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10998 <SolveCubic+820>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x000000000001099c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x1099c <SolveCubic+824>:	fld	ft0,1840(gp)
0x00000000000109a0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a0 <SolveCubic+828>:	fmul.d	ft1,fa0,ft0
0x00000000000109a4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a4 <SolveCubic+832>:	fld	ft2,-160(s0)
0x00000000000109a8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a8 <SolveCubic+836>:	fld	ft3,1848(gp)
0x00000000000109ac	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109ac <SolveCubic+840>:	fdiv.d	fa0,ft2,ft3
0x00000000000109b0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b0 <SolveCubic+844>:	fsd	ft0,-432(s0)
0x00000000000109b4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b4 <SolveCubic+848>:	fsd	ft1,-440(s0)
0x00000000000109b8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b8 <SolveCubic+852>:	fsd	ft3,-448(s0)
0x00000000000109bc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109bc <SolveCubic+856>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x00000000000109c0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c0 <SolveCubic+860>:	fld	ft0,-440(s0)
0x00000000000109c4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c4 <SolveCubic+864>:	fmul.d	fa0,ft0,fa0
0x00000000000109c8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c8 <SolveCubic+868>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000109cc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109cc <SolveCubic+872>:	ld	a2,-80(s0)
0x00000000000109d0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d0 <SolveCubic+876>:	ld	a3,-72(s0)
0x00000000000109d4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d4 <SolveCubic+880>:	lui	a4,0x8
0x00000000000109d8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d8 <SolveCubic+884>:	addiw	a4,a4,1
0x00000000000109dc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109dc <SolveCubic+888>:	slli	a4,a4,0x2f
0x00000000000109e0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e0 <SolveCubic+892>:	li	a5,0
0x00000000000109e4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e4 <SolveCubic+896>:	sd	a0,-456(s0)
0x00000000000109e8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e8 <SolveCubic+900>:	mv	a0,a2
0x00000000000109ec	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109ec <SolveCubic+904>:	sd	a1,-464(s0)
0x00000000000109f0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f0 <SolveCubic+908>:	mv	a1,a3
0x00000000000109f4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f4 <SolveCubic+912>:	mv	a2,a5
0x00000000000109f8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f8 <SolveCubic+916>:	mv	a3,a4
0x00000000000109fc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109fc <SolveCubic+920>:	sd	a4,-472(s0)
0x0000000000010a00	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a00 <SolveCubic+924>:	sd	a5,-480(s0)
0x0000000000010a04	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a04 <SolveCubic+928>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010a08 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a08 <SolveCubic+932>:	ld	a2,-456(s0)
0x0000000000010a0c	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a0c <SolveCubic+936>:	sd	a0,-488(s0)
0x0000000000010a10	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a10 <SolveCubic+940>:	mv	a0,a2
0x0000000000010a14	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a14 <SolveCubic+944>:	ld	a3,-464(s0)
0x0000000000010a18	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a18 <SolveCubic+948>:	sd	a1,-496(s0)
0x0000000000010a1c	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a1c <SolveCubic+952>:	mv	a1,a3
0x0000000000010a20	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a20 <SolveCubic+956>:	ld	a2,-488(s0)
0x0000000000010a24	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a24 <SolveCubic+960>:	ld	a3,-496(s0)
0x0000000000010a28	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a28 <SolveCubic+964>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010a2c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a2c <SolveCubic+968>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010a30 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a30 <SolveCubic+972>:	ld	a0,-64(s0)
0x0000000000010a34	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a34 <SolveCubic+976>:	fsd	fa0,0(a0)
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a38 <SolveCubic+980>:	ld	a0,-128(s0)
0x0000000000010a3c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a3c <SolveCubic+984>:	ld	a1,-120(s0)
0x0000000000010a40	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a40 <SolveCubic+988>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010a44 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a44 <SolveCubic+992>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010a48 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a48 <SolveCubic+996>:	fld	ft0,-432(s0)
0x0000000000010a4c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a4c <SolveCubic+1000>:	fmul.d	ft1,fa0,ft0
0x0000000000010a50	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a50 <SolveCubic+1004>:	fld	ft2,-160(s0)
0x0000000000010a54	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a54 <SolveCubic+1008>:	fld	ft3,1856(gp)
0x0000000000010a58	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a58 <SolveCubic+1012>:	fmv.d	fa0,ft3
0x0000000000010a5c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a5c <SolveCubic+1016>:	fsd	ft1,-504(s0)
0x0000000000010a60	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a60 <SolveCubic+1020>:	fsd	ft2,-512(s0)
0x0000000000010a64	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a64 <SolveCubic+1024>:	fsd	ft3,-520(s0)
0x0000000000010a68	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a68 <SolveCubic+1028>:	jal	ra,0x10d14 <atan>
0x0000000000010d14 in atan ()
=> 0x10d14 <atan>:	fmv.x.d	a5,fa0
0x0000000000010d18 in atan ()
=> 0x10d18 <atan+4>:	addi	sp,sp,-32
0x0000000000010d1a in atan ()
=> 0x10d1a <atan+6>:	sd	s1,8(sp)
0x0000000000010d1c in atan ()
=> 0x10d1c <atan+8>:	srai	s1,a5,0x20
0x0000000000010d20 in atan ()
=> 0x10d20 <atan+12>:	sd	s0,16(sp)
0x0000000000010d22 in atan ()
=> 0x10d22 <atan+14>:	slli	s0,s1,0x21
0x0000000000010d26 in atan ()
=> 0x10d26 <atan+18>:	sd	ra,24(sp)
0x0000000000010d28 in atan ()
=> 0x10d28 <atan+20>:	lui	a4,0x44100
0x0000000000010d2c in atan ()
=> 0x10d2c <atan+24>:	srli	s0,s0,0x21
0x0000000000010d2e in atan ()
=> 0x10d2e <atan+26>:	blt	s0,a4,0x10d68 <atan+84>
0x0000000000010d68 in atan ()
=> 0x10d68 <atan+84>:	lui	a4,0x3fdc0
0x0000000000010d6c in atan ()
=> 0x10d6c <atan+88>:	bge	s0,a4,0x10e42 <atan+302>
0x0000000000010d70 in atan ()
=> 0x10d70 <atan+92>:	lui	a4,0x3e200
0x0000000000010d74 in atan ()
=> 0x10d74 <atan+96>:	blt	s0,a4,0x10e20 <atan+268>
0x0000000000010e20 in atan ()
=> 0x10e20 <atan+268>:	fld	fa5,992(gp)
0x0000000000010e24 in atan ()
=> 0x10e24 <atan+272>:	fld	fa4,1000(gp)
0x0000000000010e28 in atan ()
=> 0x10e28 <atan+276>:	fadd.d	fa5,fa0,fa5
0x0000000000010e2c in atan ()
=> 0x10e2c <atan+280>:	flt.d	a4,fa4,fa5
0x0000000000010e30 in atan ()
=> 0x10e30 <atan+284>:	beqz	a4,0x10d78 <atan+100>
0x0000000000010d78 in atan ()
=> 0x10d78 <atan+100>:	li	a4,-1
0x0000000000010d7a in atan ()
=> 0x10d7a <atan+102>:	fmv.d.x	fa5,a5
0x0000000000010d7e in atan ()
=> 0x10d7e <atan+106>:	fmul.d	fa3,fa5,fa5
0x0000000000010d82 in atan ()
=> 0x10d82 <atan+110>:	fld	fa5,1032(gp)
0x0000000000010d86 in atan ()
=> 0x10d86 <atan+114>:	fld	fa2,1040(gp)
0x0000000000010d8a in atan ()
=> 0x10d8a <atan+118>:	fld	fa0,1080(gp)
0x0000000000010d8e in atan ()
=> 0x10d8e <atan+122>:	fmul.d	fa4,fa3,fa3
0x0000000000010d92 in atan ()
=> 0x10d92 <atan+126>:	fmadd.d	fa5,fa4,fa5,fa2
0x0000000000010d96 in atan ()
=> 0x10d96 <atan+130>:	fld	fa2,1088(gp)
0x0000000000010d9a in atan ()
=> 0x10d9a <atan+134>:	fmadd.d	fa0,fa4,fa0,fa2
0x0000000000010d9e in atan ()
=> 0x10d9e <atan+138>:	fld	fa2,1048(gp)
0x0000000000010da2 in atan ()
=> 0x10da2 <atan+142>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010da6 in atan ()
=> 0x10da6 <atan+146>:	fld	fa2,1096(gp)
0x0000000000010daa in atan ()
=> 0x10daa <atan+150>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dae in atan ()
=> 0x10dae <atan+154>:	fld	fa2,1056(gp)
0x0000000000010db2 in atan ()
=> 0x10db2 <atan+158>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010db6 in atan ()
=> 0x10db6 <atan+162>:	fld	fa2,1104(gp)
0x0000000000010dba in atan ()
=> 0x10dba <atan+166>:	li	a3,-1
0x0000000000010dbc in atan ()
=> 0x10dbc <atan+168>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dc0 in atan ()
=> 0x10dc0 <atan+172>:	fld	fa2,1064(gp)
0x0000000000010dc4 in atan ()
=> 0x10dc4 <atan+176>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dc8 in atan ()
=> 0x10dc8 <atan+180>:	fld	fa2,1112(gp)
0x0000000000010dcc in atan ()
=> 0x10dcc <atan+184>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dd0 in atan ()
=> 0x10dd0 <atan+188>:	fld	fa2,1072(gp)
0x0000000000010dd4 in atan ()
=> 0x10dd4 <atan+192>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dd8 in atan ()
=> 0x10dd8 <atan+196>:	fmul.d	fa0,fa0,fa4
0x0000000000010ddc in atan ()
=> 0x10ddc <atan+200>:	fmv.d.x	fa4,a5
0x0000000000010de0 in atan ()
=> 0x10de0 <atan+204>:	fmadd.d	fa5,fa5,fa3,fa0
0x0000000000010de4 in atan ()
=> 0x10de4 <atan+208>:	fmul.d	fa5,fa4,fa5
0x0000000000010de8 in atan ()
=> 0x10de8 <atan+212>:	beq	a4,a3,0x10e72 <atan+350>
0x0000000000010e72 in atan ()
=> 0x10e72 <atan+350>:	ld	ra,24(sp)
0x0000000000010e74 in atan ()
=> 0x10e74 <atan+352>:	ld	s0,16(sp)
0x0000000000010e76 in atan ()
=> 0x10e76 <atan+354>:	ld	s1,8(sp)
0x0000000000010e78 in atan ()
=> 0x10e78 <atan+356>:	fsub.d	fa0,fa4,fa5
0x0000000000010e7c in atan ()
=> 0x10e7c <atan+360>:	addi	sp,sp,32
0x0000000000010e7e in atan ()
=> 0x10e7e <atan+362>:	ret
0x0000000000010a6c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a6c <SolveCubic+1032>:	fld	ft0,1864(gp)
0x0000000000010a70	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a70 <SolveCubic+1036>:	fmul.d	ft1,fa0,ft0
0x0000000000010a74	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a74 <SolveCubic+1040>:	fadd.d	ft1,ft1,ft1
0x0000000000010a78	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a78 <SolveCubic+1044>:	fld	ft2,-512(s0)
0x0000000000010a7c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a7c <SolveCubic+1048>:	fadd.d	ft1,ft2,ft1
0x0000000000010a80	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a80 <SolveCubic+1052>:	fld	ft2,-448(s0)
0x0000000000010a84	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a84 <SolveCubic+1056>:	fdiv.d	fa0,ft1,ft2
0x0000000000010a88	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a88 <SolveCubic+1060>:	fsd	ft0,-528(s0)
0x0000000000010a8c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a8c <SolveCubic+1064>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x0000000000010a90 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a90 <SolveCubic+1068>:	fld	ft0,-504(s0)
0x0000000000010a94	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a94 <SolveCubic+1072>:	fmul.d	fa0,ft0,fa0
0x0000000000010a98	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a98 <SolveCubic+1076>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x0000000000010a9c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a9c <SolveCubic+1080>:	ld	a2,-80(s0)
0x0000000000010aa0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa0 <SolveCubic+1084>:	ld	a3,-72(s0)
0x0000000000010aa4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa4 <SolveCubic+1088>:	sd	a0,-536(s0)
0x0000000000010aa8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa8 <SolveCubic+1092>:	mv	a0,a2
0x0000000000010aac	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aac <SolveCubic+1096>:	sd	a1,-544(s0)
0x0000000000010ab0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab0 <SolveCubic+1100>:	mv	a1,a3
0x0000000000010ab4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab4 <SolveCubic+1104>:	ld	a2,-480(s0)
0x0000000000010ab8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab8 <SolveCubic+1108>:	ld	a3,-472(s0)
0x0000000000010abc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10abc <SolveCubic+1112>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010ac0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac0 <SolveCubic+1116>:	ld	a2,-536(s0)
0x0000000000010ac4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac4 <SolveCubic+1120>:	sd	a0,-552(s0)
0x0000000000010ac8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac8 <SolveCubic+1124>:	mv	a0,a2
0x0000000000010acc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10acc <SolveCubic+1128>:	ld	a3,-544(s0)
0x0000000000010ad0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad0 <SolveCubic+1132>:	sd	a1,-560(s0)
0x0000000000010ad4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad4 <SolveCubic+1136>:	mv	a1,a3
0x0000000000010ad8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad8 <SolveCubic+1140>:	ld	a2,-552(s0)
0x0000000000010adc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10adc <SolveCubic+1144>:	ld	a3,-560(s0)
0x0000000000010ae0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae0 <SolveCubic+1148>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010ae4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae4 <SolveCubic+1152>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010ae8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae8 <SolveCubic+1156>:	ld	a0,-64(s0)
0x0000000000010aec	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aec <SolveCubic+1160>:	fsd	fa0,8(a0)
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af0 <SolveCubic+1164>:	ld	a0,-128(s0)
0x0000000000010af4	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af4 <SolveCubic+1168>:	ld	a1,-120(s0)
0x0000000000010af8	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af8 <SolveCubic+1172>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010afc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10afc <SolveCubic+1176>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010b00 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b00 <SolveCubic+1180>:	fld	ft0,-432(s0)
0x0000000000010b04	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b04 <SolveCubic+1184>:	fmul.d	ft1,fa0,ft0
0x0000000000010b08	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b08 <SolveCubic+1188>:	fld	ft2,-160(s0)
0x0000000000010b0c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b0c <SolveCubic+1192>:	fld	fa0,-520(s0)
0x0000000000010b10	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b10 <SolveCubic+1196>:	fsd	ft1,-568(s0)
0x0000000000010b14	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b14 <SolveCubic+1200>:	fsd	ft2,-576(s0)
0x0000000000010b18	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b18 <SolveCubic+1204>:	jal	ra,0x10d14 <atan>
0x0000000000010d14 in atan ()
=> 0x10d14 <atan>:	fmv.x.d	a5,fa0
0x0000000000010d18 in atan ()
=> 0x10d18 <atan+4>:	addi	sp,sp,-32
0x0000000000010d1a in atan ()
=> 0x10d1a <atan+6>:	sd	s1,8(sp)
0x0000000000010d1c in atan ()
=> 0x10d1c <atan+8>:	srai	s1,a5,0x20
0x0000000000010d20 in atan ()
=> 0x10d20 <atan+12>:	sd	s0,16(sp)
0x0000000000010d22 in atan ()
=> 0x10d22 <atan+14>:	slli	s0,s1,0x21
0x0000000000010d26 in atan ()
=> 0x10d26 <atan+18>:	sd	ra,24(sp)
0x0000000000010d28 in atan ()
=> 0x10d28 <atan+20>:	lui	a4,0x44100
0x0000000000010d2c in atan ()
=> 0x10d2c <atan+24>:	srli	s0,s0,0x21
0x0000000000010d2e in atan ()
=> 0x10d2e <atan+26>:	blt	s0,a4,0x10d68 <atan+84>
0x0000000000010d68 in atan ()
=> 0x10d68 <atan+84>:	lui	a4,0x3fdc0
0x0000000000010d6c in atan ()
=> 0x10d6c <atan+88>:	bge	s0,a4,0x10e42 <atan+302>
0x0000000000010d70 in atan ()
=> 0x10d70 <atan+92>:	lui	a4,0x3e200
0x0000000000010d74 in atan ()
=> 0x10d74 <atan+96>:	blt	s0,a4,0x10e20 <atan+268>
0x0000000000010e20 in atan ()
=> 0x10e20 <atan+268>:	fld	fa5,992(gp)
0x0000000000010e24 in atan ()
=> 0x10e24 <atan+272>:	fld	fa4,1000(gp)
0x0000000000010e28 in atan ()
=> 0x10e28 <atan+276>:	fadd.d	fa5,fa0,fa5
0x0000000000010e2c in atan ()
=> 0x10e2c <atan+280>:	flt.d	a4,fa4,fa5
0x0000000000010e30 in atan ()
=> 0x10e30 <atan+284>:	beqz	a4,0x10d78 <atan+100>
0x0000000000010d78 in atan ()
=> 0x10d78 <atan+100>:	li	a4,-1
0x0000000000010d7a in atan ()
=> 0x10d7a <atan+102>:	fmv.d.x	fa5,a5
0x0000000000010d7e in atan ()
=> 0x10d7e <atan+106>:	fmul.d	fa3,fa5,fa5
0x0000000000010d82 in atan ()
=> 0x10d82 <atan+110>:	fld	fa5,1032(gp)
0x0000000000010d86 in atan ()
=> 0x10d86 <atan+114>:	fld	fa2,1040(gp)
0x0000000000010d8a in atan ()
=> 0x10d8a <atan+118>:	fld	fa0,1080(gp)
0x0000000000010d8e in atan ()
=> 0x10d8e <atan+122>:	fmul.d	fa4,fa3,fa3
0x0000000000010d92 in atan ()
=> 0x10d92 <atan+126>:	fmadd.d	fa5,fa4,fa5,fa2
0x0000000000010d96 in atan ()
=> 0x10d96 <atan+130>:	fld	fa2,1088(gp)
0x0000000000010d9a in atan ()
=> 0x10d9a <atan+134>:	fmadd.d	fa0,fa4,fa0,fa2
0x0000000000010d9e in atan ()
=> 0x10d9e <atan+138>:	fld	fa2,1048(gp)
0x0000000000010da2 in atan ()
=> 0x10da2 <atan+142>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010da6 in atan ()
=> 0x10da6 <atan+146>:	fld	fa2,1096(gp)
0x0000000000010daa in atan ()
=> 0x10daa <atan+150>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dae in atan ()
=> 0x10dae <atan+154>:	fld	fa2,1056(gp)
0x0000000000010db2 in atan ()
=> 0x10db2 <atan+158>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010db6 in atan ()
=> 0x10db6 <atan+162>:	fld	fa2,1104(gp)
0x0000000000010dba in atan ()
=> 0x10dba <atan+166>:	li	a3,-1
0x0000000000010dbc in atan ()
=> 0x10dbc <atan+168>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dc0 in atan ()
=> 0x10dc0 <atan+172>:	fld	fa2,1064(gp)
0x0000000000010dc4 in atan ()
=> 0x10dc4 <atan+176>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dc8 in atan ()
=> 0x10dc8 <atan+180>:	fld	fa2,1112(gp)
0x0000000000010dcc in atan ()
=> 0x10dcc <atan+184>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dd0 in atan ()
=> 0x10dd0 <atan+188>:	fld	fa2,1072(gp)
0x0000000000010dd4 in atan ()
=> 0x10dd4 <atan+192>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dd8 in atan ()
=> 0x10dd8 <atan+196>:	fmul.d	fa0,fa0,fa4
0x0000000000010ddc in atan ()
=> 0x10ddc <atan+200>:	fmv.d.x	fa4,a5
0x0000000000010de0 in atan ()
=> 0x10de0 <atan+204>:	fmadd.d	fa5,fa5,fa3,fa0
0x0000000000010de4 in atan ()
=> 0x10de4 <atan+208>:	fmul.d	fa5,fa4,fa5
0x0000000000010de8 in atan ()
=> 0x10de8 <atan+212>:	beq	a4,a3,0x10e72 <atan+350>
0x0000000000010e72 in atan ()
=> 0x10e72 <atan+350>:	ld	ra,24(sp)
0x0000000000010e74 in atan ()
=> 0x10e74 <atan+352>:	ld	s0,16(sp)
0x0000000000010e76 in atan ()
=> 0x10e76 <atan+354>:	ld	s1,8(sp)
0x0000000000010e78 in atan ()
=> 0x10e78 <atan+356>:	fsub.d	fa0,fa4,fa5
0x0000000000010e7c in atan ()
=> 0x10e7c <atan+360>:	addi	sp,sp,32
0x0000000000010e7e in atan ()
=> 0x10e7e <atan+362>:	ret
0x0000000000010b1c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b1c <SolveCubic+1208>:	fld	ft0,-528(s0)
0x0000000000010b20	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b20 <SolveCubic+1212>:	fmul.d	ft1,fa0,ft0
0x0000000000010b24	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b24 <SolveCubic+1216>:	fmul.d	ft1,ft1,ft0
0x0000000000010b28	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b28 <SolveCubic+1220>:	fld	ft2,-576(s0)
0x0000000000010b2c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b2c <SolveCubic+1224>:	fadd.d	ft1,ft2,ft1
0x0000000000010b30	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b30 <SolveCubic+1228>:	fld	ft2,-448(s0)
0x0000000000010b34	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b34 <SolveCubic+1232>:	fdiv.d	fa0,ft1,ft2
0x0000000000010b38	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b38 <SolveCubic+1236>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x0000000000010b3c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b3c <SolveCubic+1240>:	fld	ft0,-568(s0)
0x0000000000010b40	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b40 <SolveCubic+1244>:	fmul.d	fa0,ft0,fa0
0x0000000000010b44	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b44 <SolveCubic+1248>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x0000000000010b48 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b48 <SolveCubic+1252>:	ld	a2,-80(s0)
0x0000000000010b4c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b4c <SolveCubic+1256>:	ld	a3,-72(s0)
0x0000000000010b50	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b50 <SolveCubic+1260>:	sd	a0,-584(s0)
0x0000000000010b54	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b54 <SolveCubic+1264>:	mv	a0,a2
0x0000000000010b58	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b58 <SolveCubic+1268>:	sd	a1,-592(s0)
0x0000000000010b5c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b5c <SolveCubic+1272>:	mv	a1,a3
0x0000000000010b60	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b60 <SolveCubic+1276>:	ld	a2,-480(s0)
0x0000000000010b64	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b64 <SolveCubic+1280>:	ld	a3,-472(s0)
0x0000000000010b68	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b68 <SolveCubic+1284>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010b6c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b6c <SolveCubic+1288>:	ld	a2,-584(s0)
0x0000000000010b70	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b70 <SolveCubic+1292>:	sd	a0,-600(s0)
0x0000000000010b74	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b74 <SolveCubic+1296>:	mv	a0,a2
0x0000000000010b78	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b78 <SolveCubic+1300>:	ld	a3,-592(s0)
0x0000000000010b7c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b7c <SolveCubic+1304>:	sd	a1,-608(s0)
0x0000000000010b80	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b80 <SolveCubic+1308>:	mv	a1,a3
0x0000000000010b84	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b84 <SolveCubic+1312>:	ld	a2,-600(s0)
0x0000000000010b88	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b88 <SolveCubic+1316>:	ld	a3,-608(s0)
0x0000000000010b8c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b8c <SolveCubic+1320>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010b90 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b90 <SolveCubic+1324>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010b94 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b94 <SolveCubic+1328>:	ld	a0,-64(s0)
0x0000000000010b98	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b98 <SolveCubic+1332>:	fsd	fa0,16(a0)
52	   }
=> 0x10b9c <SolveCubic+1336>:	j	0x10cfc <SolveCubic+1688>
61	}
=> 0x10cfc <SolveCubic+1688>:	ld	s0,720(sp)
0x0000000000010d00 in SolveCubic (a=1, b=-10.5, c=32, d=-30, solutions=0x3ff0000000000000, x=0xc012000000000000) at libcubic.c:61
61	}
=> 0x10d00 <SolveCubic+1692>:	ld	ra,728(sp)
0x0000000000010d04	61	}
=> 0x10d04 <SolveCubic+1696>:	addi	sp,sp,736
0x0000000000010d08	61	}
=> 0x10d08 <SolveCubic+1700>:	ld	ra,0(t6)
0x0000000000010d0c	61	}
=> 0x10d0c <SolveCubic+1704>:	addi	t6,t6,16
0x0000000000010d10	61	}
=> 0x10d10 <SolveCubic+1708>:	ret
benchmark () at basicmath_small.c:63
63	   SolveCubic(a4, b4, c4, d4, &solutions, output);
=> 0x1050c <benchmark+364>:	fld	fa0,-120(s0)
0x0000000000010510	63	   SolveCubic(a4, b4, c4, d4, &solutions, output);
=> 0x10510 <benchmark+368>:	fld	fa1,-128(s0)
0x0000000000010514	63	   SolveCubic(a4, b4, c4, d4, &solutions, output);
=> 0x10514 <benchmark+372>:	fld	fa2,-136(s0)
0x0000000000010518	63	   SolveCubic(a4, b4, c4, d4, &solutions, output);
=> 0x10518 <benchmark+376>:	fld	fa3,-144(s0)
0x000000000001051c	63	   SolveCubic(a4, b4, c4, d4, &solutions, output);
=> 0x1051c <benchmark+380>:	ld	a0,-576(s0)
0x0000000000010520	63	   SolveCubic(a4, b4, c4, d4, &solutions, output);
=> 0x10520 <benchmark+384>:	ld	a1,-560(s0)
0x0000000000010524	63	   SolveCubic(a4, b4, c4, d4, &solutions, output);
=> 0x10524 <benchmark+388>:	jal	ra,0x10664 <SolveCubic>
SolveCubic (a=1, b=-10.5, c=32, d=-30, solutions=0x3ff0000000000000, x=0xc012000000000000) at libcubic.c:37
37	{
=> 0x10664 <SolveCubic>:	addi	t6,t6,-16
0x0000000000010668	37	{
=> 0x10668 <SolveCubic+4>:	sd	ra,0(t6)
0x000000000001066c	37	{
=> 0x1066c <SolveCubic+8>:	st	zero,0(t6)
0x0000000000010670	37	{
=> 0x10670 <SolveCubic+12>:	addi	sp,sp,-736
0x0000000000010674	37	{
=> 0x10674 <SolveCubic+16>:	sd	ra,728(sp)
0x0000000000010678	37	{
=> 0x10678 <SolveCubic+20>:	sd	s0,720(sp)
0x000000000001067c	37	{
=> 0x1067c <SolveCubic+24>:	addi	s0,sp,736
0x0000000000010680	37	{
=> 0x10680 <SolveCubic+28>:	fsd	fa0,-24(s0)
0x0000000000010684	37	{
=> 0x10684 <SolveCubic+32>:	fsd	fa1,-32(s0)
0x0000000000010688	37	{
=> 0x10688 <SolveCubic+36>:	fsd	fa2,-40(s0)
0x000000000001068c	37	{
=> 0x1068c <SolveCubic+40>:	fsd	fa3,-48(s0)
0x0000000000010690	37	{
=> 0x10690 <SolveCubic+44>:	sd	a0,-56(s0)
0x0000000000010694	37	{
=> 0x10694 <SolveCubic+48>:	sd	a1,-64(s0)
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x10698 <SolveCubic+52>:	fld	ft0,-32(s0)
0x000000000001069c	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x1069c <SolveCubic+56>:	fld	ft1,-24(s0)
0x00000000000106a0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a0 <SolveCubic+60>:	fdiv.d	fa0,ft0,ft1
0x00000000000106a4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a4 <SolveCubic+64>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106a8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106a8 <SolveCubic+68>:	sd	a1,-72(s0)
0x00000000000106ac	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106ac <SolveCubic+72>:	sd	a0,-80(s0)
0x00000000000106b0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b0 <SolveCubic+76>:	fld	ft0,-40(s0)
0x00000000000106b4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b4 <SolveCubic+80>:	fld	ft1,-24(s0)
0x00000000000106b8	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106b8 <SolveCubic+84>:	fdiv.d	fa0,ft0,ft1
0x00000000000106bc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106bc <SolveCubic+88>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106c0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c0 <SolveCubic+92>:	sd	a1,-88(s0)
0x00000000000106c4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c4 <SolveCubic+96>:	sd	a0,-96(s0)
0x00000000000106c8	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106c8 <SolveCubic+100>:	fld	ft0,-48(s0)
0x00000000000106cc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106cc <SolveCubic+104>:	fld	ft1,-24(s0)
0x00000000000106d0	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d0 <SolveCubic+108>:	fdiv.d	fa0,ft0,ft1
0x00000000000106d4	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d4 <SolveCubic+112>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000106d8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:38
38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106d8 <SolveCubic+116>:	sd	a1,-104(s0)
0x00000000000106dc	38	   long double    a1 = b/a, a2 = c/a, a3 = d/a;
=> 0x106dc <SolveCubic+120>:	sd	a0,-112(s0)
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e0 <SolveCubic+124>:	ld	a0,-80(s0)
0x00000000000106e4	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e4 <SolveCubic+128>:	ld	a1,-72(s0)
0x00000000000106e8	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106e8 <SolveCubic+132>:	sd	a0,-168(s0)
0x00000000000106ec	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106ec <SolveCubic+136>:	sd	a1,-176(s0)
0x00000000000106f0	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f0 <SolveCubic+140>:	ld	a2,-168(s0)
0x00000000000106f4	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f4 <SolveCubic+144>:	ld	a3,-176(s0)
0x00000000000106f8	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106f8 <SolveCubic+148>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000106fc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x106fc <SolveCubic+152>:	ld	a2,-96(s0)
0x0000000000010700	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10700 <SolveCubic+156>:	ld	a3,-88(s0)
0x0000000000010704	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10704 <SolveCubic+160>:	lui	a4,0xffff8
0x0000000000010708	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10708 <SolveCubic+164>:	addiw	a4,a4,1
0x000000000001070c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1070c <SolveCubic+168>:	slli	a4,a4,0x2f
0x0000000000010710	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10710 <SolveCubic+172>:	li	a5,0
0x0000000000010714	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10714 <SolveCubic+176>:	sd	a0,-184(s0)
0x0000000000010718	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10718 <SolveCubic+180>:	mv	a0,a2
0x000000000001071c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1071c <SolveCubic+184>:	sd	a1,-192(s0)
0x0000000000010720	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10720 <SolveCubic+188>:	mv	a1,a3
0x0000000000010724	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10724 <SolveCubic+192>:	mv	a2,a5
0x0000000000010728	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10728 <SolveCubic+196>:	mv	a3,a4
0x000000000001072c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1072c <SolveCubic+200>:	sd	a5,-200(s0)
0x0000000000010730	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10730 <SolveCubic+204>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=-3) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010734 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10734 <SolveCubic+208>:	ld	a2,-184(s0)
0x0000000000010738	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10738 <SolveCubic+212>:	sd	a0,-208(s0)
0x000000000001073c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1073c <SolveCubic+216>:	mv	a0,a2
0x0000000000010740	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10740 <SolveCubic+220>:	ld	a3,-192(s0)
0x0000000000010744	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10744 <SolveCubic+224>:	sd	a1,-216(s0)
0x0000000000010748	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10748 <SolveCubic+228>:	mv	a1,a3
0x000000000001074c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1074c <SolveCubic+232>:	ld	a2,-208(s0)
0x0000000000010750	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10750 <SolveCubic+236>:	ld	a3,-216(s0)
0x0000000000010754	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10754 <SolveCubic+240>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=-0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
46	  FP_ADD_Q (R, A, B);
=> 0x1db98 <__addtf3+996>:	blez	a2,0x1dc62 <__addtf3+1198>
0x000000000001dc62	46	  FP_ADD_Q (R, A, B);
=> 0x1dc62 <__addtf3+1198>:	beqz	a2,0x1dd48 <__addtf3+1428>
0x000000000001dd48	46	  FP_ADD_Q (R, A, B);
=> 0x1dd48 <__addtf3+1428>:	addi	t4,s0,1
0x000000000001dd4c	46	  FP_ADD_Q (R, A, B);
=> 0x1dd4c <__addtf3+1432>:	addi	a3,t1,-2
0x000000000001dd50	46	  FP_ADD_Q (R, A, B);
=> 0x1dd50 <__addtf3+1436>:	and	a3,t4,a3
0x000000000001dd54	46	  FP_ADD_Q (R, A, B);
=> 0x1dd54 <__addtf3+1440>:	bnez	a3,0x1de42 <__addtf3+1678>
0x000000000001dd56	46	  FP_ADD_Q (R, A, B);
=> 0x1dd56 <__addtf3+1442>:	or	t4,a5,a0
0x000000000001dd5a	46	  FP_ADD_Q (R, A, B);
=> 0x1dd5a <__addtf3+1446>:	or	t1,a4,a6
0x000000000001dd5e	46	  FP_ADD_Q (R, A, B);
=> 0x1dd5e <__addtf3+1450>:	bnez	s0,0x1ddfe <__addtf3+1610>
0x000000000001dd60	46	  FP_ADD_Q (R, A, B);
=> 0x1dd60 <__addtf3+1452>:	bnez	t4,0x1ddbc <__addtf3+1544>
0x000000000001dd64	46	  FP_ADD_Q (R, A, B);
=> 0x1dd64 <__addtf3+1456>:	bnez	t1,0x1df3a <__addtf3+1926>
0x000000000001dd68	46	  FP_ADD_Q (R, A, B);
=> 0x1dd68 <__addtf3+1460>:	addi	s2,s1,-2
0x000000000001dd6c	46	  FP_ADD_Q (R, A, B);
=> 0x1dd6c <__addtf3+1464>:	seqz	s2,s2
0x000000000001dd70	46	  FP_ADD_Q (R, A, B);
=> 0x1dd70 <__addtf3+1468>:	li	a5,0
0x000000000001dd72	46	  FP_ADD_Q (R, A, B);
=> 0x1dd72 <__addtf3+1470>:	li	a0,0
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x0000000000010758 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10758 <SolveCubic+244>:	lui	a2,0x20
0x000000000001075c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1075c <SolveCubic+248>:	addiw	a2,a2,17
0x0000000000010760	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10760 <SolveCubic+252>:	slli	a2,a2,0x2d
0x0000000000010764	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10764 <SolveCubic+256>:	ld	a3,-200(s0)
0x0000000000010768	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10768 <SolveCubic+260>:	sd	a2,-224(s0)
0x000000000001076c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1076c <SolveCubic+264>:	mv	a2,a3
0x0000000000010770	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10770 <SolveCubic+268>:	ld	a3,-224(s0)
0x0000000000010774	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10774 <SolveCubic+272>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=9) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010778 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:39
39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x10778 <SolveCubic+276>:	sd	a1,-120(s0)
0x000000000001077c	39	   long double    Q = (a1*a1 - 3.0*a2)/9.0;
=> 0x1077c <SolveCubic+280>:	sd	a0,-128(s0)
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10780 <SolveCubic+284>:	ld	a0,-80(s0)
0x0000000000010784	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10784 <SolveCubic+288>:	ld	a1,-72(s0)
0x0000000000010788	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10788 <SolveCubic+292>:	sd	a0,-232(s0)
0x000000000001078c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1078c <SolveCubic+296>:	sd	a1,-240(s0)
0x0000000000010790	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10790 <SolveCubic+300>:	ld	a2,-232(s0)
0x0000000000010794	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10794 <SolveCubic+304>:	ld	a3,-240(s0)
0x0000000000010798	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10798 <SolveCubic+308>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
0x000000000001d812	46	  FP_ADD_Q (R, A, B);
=> 0x1d812 <__addtf3+94>:	blez	a2,0x1d90c <__addtf3+344>
0x000000000001d90c	46	  FP_ADD_Q (R, A, B);
=> 0x1d90c <__addtf3+344>:	beqz	a2,0x1d9e8 <__addtf3+564>
0x000000000001d9e8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9e8 <__addtf3+564>:	addi	a7,s0,1
0x000000000001d9ec	46	  FP_ADD_Q (R, A, B);
=> 0x1d9ec <__addtf3+568>:	addi	a3,t1,-2
0x000000000001d9f0	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f0 <__addtf3+572>:	and	t1,a7,a3
0x000000000001d9f4	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f4 <__addtf3+576>:	bnez	t1,0x1dafe <__addtf3+842>
0x000000000001d9f8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f8 <__addtf3+580>:	or	a7,a5,a0
0x000000000001d9fc	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fc <__addtf3+584>:	bnez	s0,0x1da42 <__addtf3+654>
0x000000000001d9fe	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fe <__addtf3+586>:	beqz	a7,0x1df34 <__addtf3+1920>
0x000000000001df34	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1df34 <__addtf3+1920>:	mv	a5,a4
0x000000000001df36	46	  FP_ADD_Q (R, A, B);
=> 0x1df36 <__addtf3+1922>:	mv	a0,a6
0x000000000001df38	46	  FP_ADD_Q (R, A, B);
=> 0x1df38 <__addtf3+1924>:	j	0x1dd74 <__addtf3+1472>
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x000000000001079c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1079c <SolveCubic+312>:	ld	a2,-232(s0)
0x00000000000107a0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a0 <SolveCubic+316>:	ld	a3,-240(s0)
0x00000000000107a4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a4 <SolveCubic+320>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107a8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107a8 <SolveCubic+324>:	ld	a2,-232(s0)
0x00000000000107ac	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107ac <SolveCubic+328>:	ld	a3,-240(s0)
0x00000000000107b0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b0 <SolveCubic+332>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107b4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b4 <SolveCubic+336>:	ld	a2,-232(s0)
0x00000000000107b8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107b8 <SolveCubic+340>:	sd	a0,-248(s0)
0x00000000000107bc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107bc <SolveCubic+344>:	mv	a0,a2
0x00000000000107c0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c0 <SolveCubic+348>:	ld	a3,-240(s0)
0x00000000000107c4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c4 <SolveCubic+352>:	sd	a1,-256(s0)
0x00000000000107c8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107c8 <SolveCubic+356>:	mv	a1,a3
0x00000000000107cc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107cc <SolveCubic+360>:	ld	a2,-200(s0)
0x00000000000107d0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d0 <SolveCubic+364>:	ld	a3,-224(s0)
0x00000000000107d4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d4 <SolveCubic+368>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=9) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107d8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107d8 <SolveCubic+372>:	ld	a2,-96(s0)
0x00000000000107dc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107dc <SolveCubic+376>:	ld	a3,-88(s0)
0x00000000000107e0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e0 <SolveCubic+380>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000107e4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e4 <SolveCubic+384>:	ld	a2,-248(s0)
0x00000000000107e8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107e8 <SolveCubic+388>:	sd	a0,-264(s0)
0x00000000000107ec	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107ec <SolveCubic+392>:	mv	a0,a2
0x00000000000107f0	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f0 <SolveCubic+396>:	ld	a3,-256(s0)
0x00000000000107f4	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f4 <SolveCubic+400>:	sd	a1,-272(s0)
0x00000000000107f8	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107f8 <SolveCubic+404>:	mv	a1,a3
0x00000000000107fc	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x107fc <SolveCubic+408>:	ld	a2,-264(s0)
0x0000000000010800	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10800 <SolveCubic+412>:	ld	a3,-272(s0)
0x0000000000010804	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10804 <SolveCubic+416>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010808 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10808 <SolveCubic+420>:	ld	a2,-112(s0)
0x000000000001080c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1080c <SolveCubic+424>:	ld	a3,-104(s0)
0x0000000000010810	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10810 <SolveCubic+428>:	lui	a4,0x40
0x0000000000010814	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10814 <SolveCubic+432>:	addiw	a5,a4,59
0x0000000000010818	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10818 <SolveCubic+436>:	slli	a5,a5,0x2c
0x000000000001081c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1081c <SolveCubic+440>:	sd	a0,-280(s0)
0x0000000000010820	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10820 <SolveCubic+444>:	mv	a0,a2
0x0000000000010824	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10824 <SolveCubic+448>:	sd	a1,-288(s0)
0x0000000000010828	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10828 <SolveCubic+452>:	mv	a1,a3
0x000000000001082c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1082c <SolveCubic+456>:	ld	a2,-200(s0)
0x0000000000010830	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10830 <SolveCubic+460>:	mv	a3,a5
0x0000000000010834	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10834 <SolveCubic+464>:	sd	a4,-296(s0)
0x0000000000010838	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10838 <SolveCubic+468>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=27) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
0x000000000001e96e	45	  FP_UNPACK_Q (B, b);
=> 0x1e96e <__multf3+246>:	sext.w	a0,a4
0x000000000001e972	45	  FP_UNPACK_Q (B, b);
=> 0x1e972 <__multf3+250>:	beq	a4,a3,0x1ea26 <__multf3+430>
0x000000000001e976	45	  FP_UNPACK_Q (B, b);
=> 0x1e976 <__multf3+254>:	slli	s0,s0,0x3
0x000000000001e978	45	  FP_UNPACK_Q (B, b);
=> 0x1e978 <__multf3+256>:	srli	a3,s9,0x3d
0x000000000001e97c	45	  FP_UNPACK_Q (B, b);
=> 0x1e97c <__multf3+260>:	or	a3,a3,s0
0x000000000001e97e	45	  FP_UNPACK_Q (B, b);
=> 0x1e97e <__multf3+262>:	lui	a0,0xffffc
0x000000000001e980	45	  FP_UNPACK_Q (B, b);
=> 0x1e980 <__multf3+264>:	li	s0,1
0x000000000001e982	45	  FP_UNPACK_Q (B, b);
=> 0x1e982 <__multf3+266>:	slli	s0,s0,0x33
0x000000000001e984	45	  FP_UNPACK_Q (B, b);
=> 0x1e984 <__multf3+268>:	addi	a0,a0,1
0x000000000001e986	45	  FP_UNPACK_Q (B, b);
=> 0x1e986 <__multf3+270>:	or	s0,s0,a3
0x000000000001e988	45	  FP_UNPACK_Q (B, b);
=> 0x1e988 <__multf3+272>:	slli	a5,s9,0x3
0x000000000001e98c	45	  FP_UNPACK_Q (B, b);
=> 0x1e98c <__multf3+276>:	add	a0,a0,a4
0x000000000001e98e	45	  FP_UNPACK_Q (B, b);
=> 0x1e98e <__multf3+278>:	li	a4,0
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x000000000001083c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1083c <SolveCubic+472>:	ld	a2,-280(s0)
0x0000000000010840	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10840 <SolveCubic+476>:	sd	a0,-304(s0)
0x0000000000010844	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10844 <SolveCubic+480>:	mv	a0,a2
0x0000000000010848	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10848 <SolveCubic+484>:	ld	a3,-288(s0)
0x000000000001084c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1084c <SolveCubic+488>:	sd	a1,-312(s0)
0x0000000000010850	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10850 <SolveCubic+492>:	mv	a1,a3
0x0000000000010854	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10854 <SolveCubic+496>:	ld	a2,-304(s0)
0x0000000000010858	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10858 <SolveCubic+500>:	ld	a3,-312(s0)
0x000000000001085c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1085c <SolveCubic+504>:	jal	ra,0x1d7b4 <__addtf3>
__addtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/addtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1d7b4 <__addtf3>:	addi	sp,sp,-48
0x000000000001d7b6	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b6 <__addtf3+2>:	sd	ra,40(sp)
0x000000000001d7b8	43	  FP_INIT_ROUNDMODE;
=> 0x1d7b8 <__addtf3+4>:	sd	s0,32(sp)
0x000000000001d7ba	43	  FP_INIT_ROUNDMODE;
=> 0x1d7ba <__addtf3+6>:	sd	s1,24(sp)
0x000000000001d7bc	43	  FP_INIT_ROUNDMODE;
=> 0x1d7bc <__addtf3+8>:	sd	s2,16(sp)
0x000000000001d7be	43	  FP_INIT_ROUNDMODE;
=> 0x1d7be <__addtf3+10>:	sd	s3,8(sp)
0x000000000001d7c0	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c0 <__addtf3+12>:	sd	s4,0(sp)
0x000000000001d7c2	43	  FP_INIT_ROUNDMODE;
=> 0x1d7c2 <__addtf3+14>:	frrm	s1
0x000000000001d7c6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c6 <__addtf3+18>:	li	t4,-1
0x000000000001d7c8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7c8 <__addtf3+20>:	srli	a4,t4,0x10
0x000000000001d7cc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7cc <__addtf3+24>:	srli	s0,a1,0x30
0x000000000001d7d0	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d0 <__addtf3+28>:	srli	s2,a1,0x3f
0x000000000001d7d4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d4 <__addtf3+32>:	and	a1,a1,a4
0x000000000001d7d6	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d6 <__addtf3+34>:	slli	a1,a1,0x3
0x000000000001d7d8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7d8 <__addtf3+36>:	srli	a5,a0,0x3d
0x000000000001d7dc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7dc <__addtf3+40>:	lui	t1,0x8
0x000000000001d7de	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7de <__addtf3+42>:	addi	t3,t1,-1
0x000000000001d7e2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7e2 <__addtf3+46>:	or	a5,a5,a1
0x000000000001d7e4	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e4 <__addtf3+48>:	srli	a7,a3,0x3f
0x000000000001d7e8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7e8 <__addtf3+52>:	srli	a1,a3,0x30
0x000000000001d7ec	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ec <__addtf3+56>:	and	a3,a3,a4
0x000000000001d7ee	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7ee <__addtf3+58>:	slli	a3,a3,0x3
0x000000000001d7f0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f0 <__addtf3+60>:	srli	a4,a2,0x3d
0x000000000001d7f4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d7f4 <__addtf3+64>:	and	s0,s0,t3
0x000000000001d7f8	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7f8 <__addtf3+68>:	and	a1,a1,t3
0x000000000001d7fc	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fc <__addtf3+72>:	or	a4,a4,a3
0x000000000001d7fe	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d7fe <__addtf3+74>:	subw	a3,s0,a1
0x000000000001d802	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1d802 <__addtf3+78>:	slli	a6,a2,0x3
0x000000000001d806	43	  FP_INIT_ROUNDMODE;
=> 0x1d806 <__addtf3+82>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1d808 <__addtf3+84>:	slli	a0,a0,0x3
46	  FP_ADD_Q (R, A, B);
=> 0x1d80a <__addtf3+86>:	sext.w	a2,a3
0x000000000001d80e	46	  FP_ADD_Q (R, A, B);
=> 0x1d80e <__addtf3+90>:	bne	s2,a7,0x1db98 <__addtf3+996>
0x000000000001d812	46	  FP_ADD_Q (R, A, B);
=> 0x1d812 <__addtf3+94>:	blez	a2,0x1d90c <__addtf3+344>
0x000000000001d90c	46	  FP_ADD_Q (R, A, B);
=> 0x1d90c <__addtf3+344>:	beqz	a2,0x1d9e8 <__addtf3+564>
0x000000000001d9e8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9e8 <__addtf3+564>:	addi	a7,s0,1
0x000000000001d9ec	46	  FP_ADD_Q (R, A, B);
=> 0x1d9ec <__addtf3+568>:	addi	a3,t1,-2
0x000000000001d9f0	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f0 <__addtf3+572>:	and	t1,a7,a3
0x000000000001d9f4	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f4 <__addtf3+576>:	bnez	t1,0x1dafe <__addtf3+842>
0x000000000001d9f8	46	  FP_ADD_Q (R, A, B);
=> 0x1d9f8 <__addtf3+580>:	or	a7,a5,a0
0x000000000001d9fc	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fc <__addtf3+584>:	bnez	s0,0x1da42 <__addtf3+654>
0x000000000001d9fe	46	  FP_ADD_Q (R, A, B);
=> 0x1d9fe <__addtf3+586>:	beqz	a7,0x1df34 <__addtf3+1920>
0x000000000001df34	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1df34 <__addtf3+1920>:	mv	a5,a4
0x000000000001df36	46	  FP_ADD_Q (R, A, B);
=> 0x1df36 <__addtf3+1922>:	mv	a0,a6
0x000000000001df38	46	  FP_ADD_Q (R, A, B);
=> 0x1df38 <__addtf3+1924>:	j	0x1dd74 <__addtf3+1472>
0x000000000001dd74	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd74 <__addtf3+1472>:	or	a4,a0,a5
0x000000000001dd78	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dd78 <__addtf3+1476>:	beqz	a4,0x1df96 <__addtf3+2018>
0x000000000001df96	46	  FP_ADD_Q (R, A, B);
=> 0x1df96 <__addtf3+2018>:	li	a5,0
0x000000000001df98	46	  FP_ADD_Q (R, A, B);
=> 0x1df98 <__addtf3+2020>:	li	a0,0
0x000000000001df9a	46	  FP_ADD_Q (R, A, B);
=> 0x1df9a <__addtf3+2022>:	li	a1,0
0x000000000001df9c	46	  FP_ADD_Q (R, A, B);
=> 0x1df9c <__addtf3+2024>:	j	0x1df66 <__addtf3+1970>
0x000000000001df66	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df66 <__addtf3+1970>:	li	a3,0
0x000000000001df68	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1df68 <__addtf3+1972>:	j	0x1da92 <__addtf3+734>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da92 <__addtf3+734>:	srli	a4,a5,0x33
0x000000000001da96	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da96 <__addtf3+738>:	andi	a4,a4,1
0x000000000001da98	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1da98 <__addtf3+740>:	beqz	a4,0x1daae <__addtf3+762>
0x000000000001daae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daae <__addtf3+762>:	srli	a4,a0,0x3
0x000000000001dab2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab2 <__addtf3+766>:	slli	a0,a5,0x3d
0x000000000001dab6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab6 <__addtf3+770>:	or	a0,a0,a4
0x000000000001dab8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dab8 <__addtf3+772>:	lui	a4,0x8
0x000000000001daba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1daba <__addtf3+774>:	addi	a4,a4,-1
0x000000000001dabc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabc <__addtf3+776>:	srli	a5,a5,0x3
0x000000000001dabe	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dabe <__addtf3+778>:	bne	a1,a4,0x1dad0 <__addtf3+796>
0x000000000001dad0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad0 <__addtf3+796>:	slli	a1,a1,0x31
0x000000000001dad2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad2 <__addtf3+798>:	slli	s2,s2,0xf
0x000000000001dad4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad4 <__addtf3+800>:	srli	a1,a1,0x31
0x000000000001dad6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dad6 <__addtf3+802>:	or	a1,s2,a1
0x000000000001dada	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dada <__addtf3+806>:	slli	a5,a5,0x10
0x000000000001dadc	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dadc <__addtf3+808>:	slli	s2,a1,0x30
0x000000000001dae0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae0 <__addtf3+812>:	srli	a1,a5,0x10
0x000000000001dae4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1dae4 <__addtf3+816>:	or	a1,a1,s2
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1dae8 <__addtf3+820>:	beqz	a3,0x1daee <__addtf3+826>
50	  return r;
=> 0x1daee <__addtf3+826>:	ld	ra,40(sp)
0x000000000001daf0	50	  return r;
=> 0x1daf0 <__addtf3+828>:	ld	s0,32(sp)
0x000000000001daf2	50	  return r;
=> 0x1daf2 <__addtf3+830>:	ld	s1,24(sp)
0x000000000001daf4	50	  return r;
=> 0x1daf4 <__addtf3+832>:	ld	s2,16(sp)
0x000000000001daf6	50	  return r;
=> 0x1daf6 <__addtf3+834>:	ld	s3,8(sp)
0x000000000001daf8	50	  return r;
=> 0x1daf8 <__addtf3+836>:	ld	s4,0(sp)
0x000000000001dafa	50	  return r;
=> 0x1dafa <__addtf3+838>:	addi	sp,sp,48
0x000000000001dafc	50	  return r;
=> 0x1dafc <__addtf3+840>:	ret
0x0000000000010860 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10860 <SolveCubic+508>:	ld	a2,-296(s0)
0x0000000000010864	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10864 <SolveCubic+512>:	addiw	a3,a2,75
0x0000000000010868	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10868 <SolveCubic+516>:	slli	a3,a3,0x2c
0x000000000001086c	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x1086c <SolveCubic+520>:	ld	a2,-200(s0)
0x0000000000010870	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10870 <SolveCubic+524>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=54) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010874 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:40
40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10874 <SolveCubic+528>:	sd	a1,-136(s0)
0x0000000000010878	40	   long double R = (2.0*a1*a1*a1 - 9.0*a1*a2 + 27.0*a3)/54.0;
=> 0x10878 <SolveCubic+532>:	sd	a0,-144(s0)
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1087c <SolveCubic+536>:	ld	a0,-144(s0)
0x0000000000010880	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10880 <SolveCubic+540>:	ld	a1,-136(s0)
0x0000000000010884	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10884 <SolveCubic+544>:	sd	a0,-320(s0)
0x0000000000010888	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10888 <SolveCubic+548>:	sd	a1,-328(s0)
0x000000000001088c	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1088c <SolveCubic+552>:	ld	a2,-320(s0)
0x0000000000010890	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10890 <SolveCubic+556>:	ld	a3,-328(s0)
0x0000000000010894	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10894 <SolveCubic+560>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010898 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x10898 <SolveCubic+564>:	ld	a2,-128(s0)
0x000000000001089c	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x1089c <SolveCubic+568>:	ld	a3,-120(s0)
0x00000000000108a0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a0 <SolveCubic+572>:	sd	a0,-336(s0)
0x00000000000108a4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a4 <SolveCubic+576>:	mv	a0,a2
0x00000000000108a8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108a8 <SolveCubic+580>:	sd	a1,-344(s0)
0x00000000000108ac	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108ac <SolveCubic+584>:	mv	a1,a3
0x00000000000108b0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b0 <SolveCubic+588>:	sd	a2,-352(s0)
0x00000000000108b4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b4 <SolveCubic+592>:	sd	a3,-360(s0)
0x00000000000108b8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108b8 <SolveCubic+596>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000108bc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108bc <SolveCubic+600>:	ld	a2,-352(s0)
0x00000000000108c0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c0 <SolveCubic+604>:	ld	a3,-360(s0)
0x00000000000108c4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c4 <SolveCubic+608>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x00000000000108c8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108c8 <SolveCubic+612>:	ld	a2,-336(s0)
0x00000000000108cc	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108cc <SolveCubic+616>:	sd	a0,-368(s0)
0x00000000000108d0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d0 <SolveCubic+620>:	mv	a0,a2
0x00000000000108d4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d4 <SolveCubic+624>:	ld	a3,-344(s0)
0x00000000000108d8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108d8 <SolveCubic+628>:	sd	a1,-376(s0)
0x00000000000108dc	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108dc <SolveCubic+632>:	mv	a1,a3
0x00000000000108e0	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e0 <SolveCubic+636>:	ld	a2,-368(s0)
0x00000000000108e4	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e4 <SolveCubic+640>:	ld	a3,-376(s0)
0x00000000000108e8	41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108e8 <SolveCubic+644>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x00000000000108ec in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108ec <SolveCubic+648>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x00000000000108f0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:41
41	   double    R2_Q3 = R*R - Q*Q*Q;
=> 0x108f0 <SolveCubic+652>:	fsd	fa0,-152(s0)
45	   if (R2_Q3 <= 0)
=> 0x108f4 <SolveCubic+656>:	fld	ft0,-152(s0)
0x00000000000108f8	45	   if (R2_Q3 <= 0)
=> 0x108f8 <SolveCubic+660>:	fmv.d.x	ft1,zero
0x00000000000108fc	45	   if (R2_Q3 <= 0)
=> 0x108fc <SolveCubic+664>:	fle.d	a0,ft0,ft1
0x0000000000010900	45	   if (R2_Q3 <= 0)
=> 0x10900 <SolveCubic+668>:	xori	a0,a0,1
0x0000000000010904	45	   if (R2_Q3 <= 0)
=> 0x10904 <SolveCubic+672>:	bnez	a0,0x10ba0 <SolveCubic+1340>
0x0000000000010908	45	   if (R2_Q3 <= 0)
=> 0x10908 <SolveCubic+676>:	j	0x1090c <SolveCubic+680>
47	      *solutions = 3;
=> 0x1090c <SolveCubic+680>:	ld	a0,-56(s0)
0x0000000000010910	47	      *solutions = 3;
=> 0x10910 <SolveCubic+684>:	li	a1,3
0x0000000000010914	47	      *solutions = 3;
=> 0x10914 <SolveCubic+688>:	sw	a1,0(a0)
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10918 <SolveCubic+692>:	ld	a1,-136(s0)
0x000000000001091c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1091c <SolveCubic+696>:	ld	a0,-144(s0)
0x0000000000010920	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10920 <SolveCubic+700>:	ld	a2,-128(s0)
0x0000000000010924	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10924 <SolveCubic+704>:	ld	a3,-120(s0)
0x0000000000010928	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10928 <SolveCubic+708>:	sd	a0,-384(s0)
0x000000000001092c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1092c <SolveCubic+712>:	mv	a0,a2
0x0000000000010930	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10930 <SolveCubic+716>:	sd	a1,-392(s0)
0x0000000000010934	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10934 <SolveCubic+720>:	mv	a1,a3
0x0000000000010938	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10938 <SolveCubic+724>:	sd	a2,-400(s0)
0x000000000001093c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1093c <SolveCubic+728>:	sd	a3,-408(s0)
0x0000000000010940	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10940 <SolveCubic+732>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010944 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10944 <SolveCubic+736>:	ld	a2,-400(s0)
0x0000000000010948	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10948 <SolveCubic+740>:	ld	a3,-408(s0)
0x000000000001094c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1094c <SolveCubic+744>:	jal	ra,0x1e878 <__multf3>
__multf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/multf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1e878 <__multf3>:	addi	sp,sp,-96
0x000000000001e87a	43	  FP_INIT_ROUNDMODE;
=> 0x1e87a <__multf3+2>:	sd	s6,32(sp)
0x000000000001e87c	43	  FP_INIT_ROUNDMODE;
=> 0x1e87c <__multf3+4>:	sd	s9,8(sp)
0x000000000001e87e	43	  FP_INIT_ROUNDMODE;
=> 0x1e87e <__multf3+6>:	sd	ra,88(sp)
0x000000000001e880	43	  FP_INIT_ROUNDMODE;
=> 0x1e880 <__multf3+8>:	sd	s0,80(sp)
0x000000000001e882	43	  FP_INIT_ROUNDMODE;
=> 0x1e882 <__multf3+10>:	sd	s1,72(sp)
0x000000000001e884	43	  FP_INIT_ROUNDMODE;
=> 0x1e884 <__multf3+12>:	sd	s2,64(sp)
0x000000000001e886	43	  FP_INIT_ROUNDMODE;
=> 0x1e886 <__multf3+14>:	sd	s3,56(sp)
0x000000000001e888	43	  FP_INIT_ROUNDMODE;
=> 0x1e888 <__multf3+16>:	sd	s4,48(sp)
0x000000000001e88a	43	  FP_INIT_ROUNDMODE;
=> 0x1e88a <__multf3+18>:	sd	s5,40(sp)
0x000000000001e88c	43	  FP_INIT_ROUNDMODE;
=> 0x1e88c <__multf3+20>:	sd	s7,24(sp)
0x000000000001e88e	43	  FP_INIT_ROUNDMODE;
=> 0x1e88e <__multf3+22>:	sd	s8,16(sp)
0x000000000001e890	36	{
=> 0x1e890 <__multf3+24>:	mv	s9,a2
0x000000000001e892	36	{
=> 0x1e892 <__multf3+26>:	mv	s6,a3
0x000000000001e894	43	  FP_INIT_ROUNDMODE;
=> 0x1e894 <__multf3+28>:	frrm	s2
0x000000000001e898	44	  FP_UNPACK_Q (A, a);
=> 0x1e898 <__multf3+32>:	lui	a4,0x8
0x000000000001e89a	44	  FP_UNPACK_Q (A, a);
=> 0x1e89a <__multf3+34>:	srli	s5,a1,0x30
0x000000000001e89e	44	  FP_UNPACK_Q (A, a);
=> 0x1e89e <__multf3+38>:	addi	a4,a4,-1
0x000000000001e8a0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a0 <__multf3+40>:	slli	s3,a1,0x10
0x000000000001e8a4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8a4 <__multf3+44>:	and	a5,s5,a4
0x000000000001e8a8	43	  FP_INIT_ROUNDMODE;
=> 0x1e8a8 <__multf3+48>:	sext.w	s2,s2
44	  FP_UNPACK_Q (A, a);
=> 0x1e8aa <__multf3+50>:	srli	s3,s3,0x10
44	  FP_UNPACK_Q (A, a);
=> 0x1e8ae <__multf3+54>:	srli	s7,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e8b2 <__multf3+58>:	beqz	a5,0x1e8e0 <__multf3+104>
0x000000000001e8e0	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e0 <__multf3+104>:	or	a5,s3,a0
0x000000000001e8e4	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e4 <__multf3+108>:	mv	s0,a0
0x000000000001e8e6	44	  FP_UNPACK_Q (A, a);
=> 0x1e8e6 <__multf3+110>:	beqz	a5,0x1e9b8 <__multf3+320>
0x000000000001e9b8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b8 <__multf3+320>:	li	s3,0
0x000000000001e9ba	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ba <__multf3+322>:	li	s4,0
0x000000000001e9bc	46	  FP_MUL_Q (R, A, B);
=> 0x1e9bc <__multf3+324>:	li	s5,0
0x000000000001e9be	44	  FP_UNPACK_Q (A, a);
=> 0x1e9be <__multf3+326>:	li	s8,1
0x000000000001e9c0	44	  FP_UNPACK_Q (A, a);
=> 0x1e9c0 <__multf3+328>:	j	0x1e8dc <__multf3+100>
0x000000000001e8dc	37	  FP_DECL_EX;
=> 0x1e8dc <__multf3+100>:	li	s1,0
0x000000000001e8de	37	  FP_DECL_EX;
=> 0x1e8de <__multf3+102>:	j	0x1e954 <__multf3+220>
45	  FP_UNPACK_Q (B, b);
=> 0x1e954 <__multf3+220>:	lui	a3,0x8
0x000000000001e956	45	  FP_UNPACK_Q (B, b);
=> 0x1e956 <__multf3+222>:	srli	a0,s6,0x30
0x000000000001e95a	45	  FP_UNPACK_Q (B, b);
=> 0x1e95a <__multf3+226>:	addi	a3,a3,-1
0x000000000001e95c	45	  FP_UNPACK_Q (B, b);
=> 0x1e95c <__multf3+228>:	slli	s0,s6,0x10
0x000000000001e960	45	  FP_UNPACK_Q (B, b);
=> 0x1e960 <__multf3+232>:	and	a4,a0,a3
0x000000000001e964	45	  FP_UNPACK_Q (B, b);
=> 0x1e964 <__multf3+236>:	mv	a5,s9
0x000000000001e966	45	  FP_UNPACK_Q (B, b);
=> 0x1e966 <__multf3+238>:	srli	s0,s0,0x10
0x000000000001e968	45	  FP_UNPACK_Q (B, b);
=> 0x1e968 <__multf3+240>:	srli	s6,s6,0x3f
0x000000000001e96c	45	  FP_UNPACK_Q (B, b);
=> 0x1e96c <__multf3+244>:	beqz	a4,0x1e9ca <__multf3+338>
45	  FP_UNPACK_Q (B, b);
=> 0x1e9ca <__multf3+338>:	or	a5,s9,s0
0x000000000001e9ce	45	  FP_UNPACK_Q (B, b);
=> 0x1e9ce <__multf3+342>:	beqz	a5,0x1ea3a <__multf3+450>
0x000000000001ea3a	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3a <__multf3+450>:	li	s0,0
0x000000000001ea3c	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3c <__multf3+452>:	li	a5,0
0x000000000001ea3e	45	  FP_UNPACK_Q (B, b);
=> 0x1ea3e <__multf3+454>:	li	a0,0
0x000000000001ea40	45	  FP_UNPACK_Q (B, b);
=> 0x1ea40 <__multf3+456>:	li	a4,1
0x000000000001ea42	45	  FP_UNPACK_Q (B, b);
=> 0x1ea42 <__multf3+458>:	j	0x1e990 <__multf3+280>
46	  FP_MUL_Q (R, A, B);
=> 0x1e990 <__multf3+280>:	slli	a3,s8,0x2
0x000000000001e994	46	  FP_MUL_Q (R, A, B);
=> 0x1e994 <__multf3+284>:	or	a3,a3,a4
0x000000000001e996	46	  FP_MUL_Q (R, A, B);
=> 0x1e996 <__multf3+286>:	add	s5,s5,a0
0x000000000001e998	46	  FP_MUL_Q (R, A, B);
=> 0x1e998 <__multf3+288>:	addi	a3,a3,-1
0x000000000001e99a	46	  FP_MUL_Q (R, A, B);
=> 0x1e99a <__multf3+290>:	li	a1,14
0x000000000001e99c	46	  FP_MUL_Q (R, A, B);
=> 0x1e99c <__multf3+292>:	xor	a2,s7,s6
0x000000000001e9a0	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a0 <__multf3+296>:	addi	a6,s5,1
0x000000000001e9a4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a4 <__multf3+300>:	bltu	a1,a3,0x1ea90 <__multf3+536>
0x000000000001e9a8	46	  FP_MUL_Q (R, A, B);
=> 0x1e9a8 <__multf3+304>:	lui	a1,0x21
0x000000000001e9ac	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ac <__multf3+308>:	slli	a3,a3,0x2
0x000000000001e9ae	46	  FP_MUL_Q (R, A, B);
=> 0x1e9ae <__multf3+310>:	addi	a1,a1,-1524
0x000000000001e9b2	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b2 <__multf3+314>:	add	a3,a3,a1
0x000000000001e9b4	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b4 <__multf3+316>:	lw	a3,0(a3)
0x000000000001e9b6	46	  FP_MUL_Q (R, A, B);
=> 0x1e9b6 <__multf3+318>:	jr	a3
46	  FP_MUL_Q (R, A, B);
=> 0x1ec7c <__multf3+1028>:	mv	s0,s3
0x000000000001ec7e	46	  FP_MUL_Q (R, A, B);
=> 0x1ec7e <__multf3+1030>:	mv	a5,s4
0x000000000001ec80	46	  FP_MUL_Q (R, A, B);
=> 0x1ec80 <__multf3+1032>:	mv	a4,s8
47	  FP_PACK_Q (r, R);
=> 0x1ec82 <__multf3+1034>:	li	a3,2
0x000000000001ec84	47	  FP_PACK_Q (r, R);
=> 0x1ec84 <__multf3+1036>:	beq	a4,a3,0x1ee62 <__multf3+1514>
0x000000000001ec88	47	  FP_PACK_Q (r, R);
=> 0x1ec88 <__multf3+1040>:	li	a3,3
0x000000000001ec8a	47	  FP_PACK_Q (r, R);
=> 0x1ec8a <__multf3+1042>:	beq	a4,a3,0x1ee6c <__multf3+1524>
0x000000000001ec8e	47	  FP_PACK_Q (r, R);
=> 0x1ec8e <__multf3+1046>:	li	a3,1
0x000000000001ec90	47	  FP_PACK_Q (r, R);
=> 0x1ec90 <__multf3+1048>:	bne	a4,a3,0x1ec3e <__multf3+966>
0x000000000001ec94	47	  FP_PACK_Q (r, R);
=> 0x1ec94 <__multf3+1052>:	li	s0,0
0x000000000001ec96	47	  FP_PACK_Q (r, R);
=> 0x1ec96 <__multf3+1054>:	li	a0,0
0x000000000001ec98	47	  FP_PACK_Q (r, R);
=> 0x1ec98 <__multf3+1056>:	j	0x1ee50 <__multf3+1496>
0x000000000001ee50	47	  FP_PACK_Q (r, R);
=> 0x1ee50 <__multf3+1496>:	li	a4,0
0x000000000001ee52	47	  FP_PACK_Q (r, R);
=> 0x1ee52 <__multf3+1498>:	j	0x1ea5e <__multf3+486>
47	  FP_PACK_Q (r, R);
=> 0x1ea5e <__multf3+486>:	slli	a4,a4,0x31
0x000000000001ea60	47	  FP_PACK_Q (r, R);
=> 0x1ea60 <__multf3+488>:	srli	a4,a4,0x31
0x000000000001ea62	47	  FP_PACK_Q (r, R);
=> 0x1ea62 <__multf3+490>:	slli	a2,a2,0xf
0x000000000001ea64	47	  FP_PACK_Q (r, R);
=> 0x1ea64 <__multf3+492>:	slli	s0,s0,0x10
0x000000000001ea66	47	  FP_PACK_Q (r, R);
=> 0x1ea66 <__multf3+494>:	or	a4,a4,a2
0x000000000001ea68	47	  FP_PACK_Q (r, R);
=> 0x1ea68 <__multf3+496>:	slli	a4,a4,0x30
0x000000000001ea6a	47	  FP_PACK_Q (r, R);
=> 0x1ea6a <__multf3+498>:	srli	a1,s0,0x10
0x000000000001ea6e	47	  FP_PACK_Q (r, R);
=> 0x1ea6e <__multf3+502>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1ea70 <__multf3+504>:	beqz	s1,0x1ea76 <__multf3+510>
50	  return r;
=> 0x1ea76 <__multf3+510>:	ld	ra,88(sp)
0x000000000001ea78	50	  return r;
=> 0x1ea78 <__multf3+512>:	ld	s0,80(sp)
0x000000000001ea7a	50	  return r;
=> 0x1ea7a <__multf3+514>:	ld	s1,72(sp)
0x000000000001ea7c	50	  return r;
=> 0x1ea7c <__multf3+516>:	ld	s2,64(sp)
0x000000000001ea7e	50	  return r;
=> 0x1ea7e <__multf3+518>:	ld	s3,56(sp)
0x000000000001ea80	50	  return r;
=> 0x1ea80 <__multf3+520>:	ld	s4,48(sp)
0x000000000001ea82	50	  return r;
=> 0x1ea82 <__multf3+522>:	ld	s5,40(sp)
0x000000000001ea84	50	  return r;
=> 0x1ea84 <__multf3+524>:	ld	s6,32(sp)
0x000000000001ea86	50	  return r;
=> 0x1ea86 <__multf3+526>:	ld	s7,24(sp)
0x000000000001ea88	50	  return r;
=> 0x1ea88 <__multf3+528>:	ld	s8,16(sp)
0x000000000001ea8a	50	  return r;
=> 0x1ea8a <__multf3+530>:	ld	s9,8(sp)
0x000000000001ea8c	50	  return r;
=> 0x1ea8c <__multf3+532>:	addi	sp,sp,96
0x000000000001ea8e	50	  return r;
=> 0x1ea8e <__multf3+534>:	ret
0x0000000000010950 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10950 <SolveCubic+748>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010954 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10954 <SolveCubic+752>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010958 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10958 <SolveCubic+756>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x000000000001095c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1095c <SolveCubic+760>:	ld	a2,-384(s0)
0x0000000000010960	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10960 <SolveCubic+764>:	sd	a0,-416(s0)
0x0000000000010964	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10964 <SolveCubic+768>:	mv	a0,a2
0x0000000000010968	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10968 <SolveCubic+772>:	ld	a3,-392(s0)
0x000000000001096c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1096c <SolveCubic+776>:	sd	a1,-424(s0)
0x0000000000010970	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10970 <SolveCubic+780>:	mv	a1,a3
0x0000000000010974	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10974 <SolveCubic+784>:	ld	a2,-416(s0)
0x0000000000010978	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10978 <SolveCubic+788>:	ld	a3,-424(s0)
0x000000000001097c	48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x1097c <SolveCubic+792>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
45	  FP_UNPACK_Q (B, b);
=> 0x1e140 <__divtf3+342>:	or	a5,s9,s0
0x000000000001e144	45	  FP_UNPACK_Q (B, b);
=> 0x1e144 <__divtf3+346>:	beqz	a5,0x1e1b2 <__divtf3+456>
0x000000000001e1b2	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b2 <__divtf3+456>:	li	s0,0
0x000000000001e1b4	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b4 <__divtf3+458>:	li	a5,0
0x000000000001e1b6	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b6 <__divtf3+460>:	li	a0,0
0x000000000001e1b8	45	  FP_UNPACK_Q (B, b);
=> 0x1e1b8 <__divtf3+462>:	li	a2,1
0x000000000001e1ba	45	  FP_UNPACK_Q (B, b);
=> 0x1e1ba <__divtf3+464>:	j	0x1e106 <__divtf3+284>
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e66e	47	  FP_PACK_Q (r, R);
=> 0x1e66e <__divtf3+1668>:	li	s0,1
0x000000000001e670	47	  FP_PACK_Q (r, R);
=> 0x1e670 <__divtf3+1670>:	lui	a4,0x8
0x000000000001e672	47	  FP_PACK_Q (r, R);
=> 0x1e672 <__divtf3+1672>:	slli	s0,s0,0x2f
0x000000000001e674	47	  FP_PACK_Q (r, R);
=> 0x1e674 <__divtf3+1674>:	li	a0,0
0x000000000001e676	47	  FP_PACK_Q (r, R);
=> 0x1e676 <__divtf3+1676>:	addi	a4,a4,-1
0x000000000001e678	47	  FP_PACK_Q (r, R);
=> 0x1e678 <__divtf3+1678>:	li	a1,0
0x000000000001e67a	46	  FP_DIV_Q (R, A, B);
=> 0x1e67a <__divtf3+1680>:	li	s2,16
0x000000000001e67c	46	  FP_DIV_Q (R, A, B);
=> 0x1e67c <__divtf3+1682>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
0x000000000001e4c6	48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c6 <__divtf3+1244>:	csrs	fflags,s2
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010980 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10980 <SolveCubic+796>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=nan(0x8000000000000000000000000000)) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa16 <__trunctfdf2+442>:	beqz	a5,0x1fa50 <__trunctfdf2+500>
0x000000000001fa18	38	  FP_DECL_EX;
=> 0x1fa18 <__trunctfdf2+444>:	li	a7,0
0x000000000001fa1a	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa1a <__trunctfdf2+446>:	bne	a2,t3,0x1fa28 <__trunctfdf2+460>
0x000000000001fa1e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa1e <__trunctfdf2+450>:	srli	a7,a4,0x32
0x000000000001fa22	38	  FP_DECL_EX;
=> 0x1fa22 <__trunctfdf2+454>:	seqz	a7,a7
0x000000000001fa26	38	  FP_DECL_EX;
=> 0x1fa26 <__trunctfdf2+458>:	slli	a7,a7,0x4
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa28 <__trunctfdf2+460>:	srli	a5,t4,0x3c
0x000000000001fa2c	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa2c <__trunctfdf2+464>:	slli	a4,a4,0x4
0x000000000001fa2e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa2e <__trunctfdf2+466>:	or	a4,a4,a5
0x000000000001fa30	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa30 <__trunctfdf2+468>:	li	a5,1
0x000000000001fa32	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa32 <__trunctfdf2+470>:	andi	a4,a4,-8
0x000000000001fa34	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa34 <__trunctfdf2+472>:	slli	a5,a5,0x36
0x000000000001fa36	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa36 <__trunctfdf2+474>:	or	a5,a5,a4
0x000000000001fa38	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa38 <__trunctfdf2+476>:	li	a2,2047
0x000000000001fa3c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa3c <__trunctfdf2+480>:	li	a4,0
0x000000000001fa3e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa3e <__trunctfdf2+482>:	j	0x1f9f8 <__trunctfdf2+412>
0x000000000001f9f8	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f9f8 <__trunctfdf2+412>:	andi	a1,a5,7
0x000000000001f9fc	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f9fc <__trunctfdf2+416>:	bnez	a1,0x1f8b6 <__trunctfdf2+90>
0x000000000001fa00	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa00 <__trunctfdf2+420>:	beqz	a4,0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f912	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f912 <__trunctfdf2+182>:	beqz	a5,0x1f91a <__trunctfdf2+190>
0x000000000001f914	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f914 <__trunctfdf2+184>:	li	a5,1
0x000000000001f916	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f916 <__trunctfdf2+186>:	slli	a5,a5,0x33
0x000000000001f918	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f918 <__trunctfdf2+188>:	li	a3,0
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010984 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10984 <SolveCubic+800>:	jal	ra,0x10f48 <acos>
0x0000000000010f48 in acos ()
=> 0x10f48 <acos>:	addi	sp,sp,-32
0x0000000000010f4a in acos ()
=> 0x10f4a <acos+2>:	fsd	fs0,8(sp)
0x0000000000010f4c in acos ()
=> 0x10f4c <acos+4>:	fmv.d	fs0,fa0
0x0000000000010f50 in acos ()
=> 0x10f50 <acos+8>:	fsd	fs1,0(sp)
0x0000000000010f52 in acos ()
=> 0x10f52 <acos+10>:	sd	ra,24(sp)
0x0000000000010f54 in acos ()
=> 0x10f54 <acos+12>:	jal	ra,0x11094 <__ieee754_acos>
0x0000000000011094 in __ieee754_acos ()
=> 0x11094 <__ieee754_acos>:	fmv.x.d	a5,fa0
0x0000000000011098 in __ieee754_acos ()
=> 0x11098 <__ieee754_acos+4>:	lui	a3,0x3ff00
0x000000000001109c in __ieee754_acos ()
=> 0x1109c <__ieee754_acos+8>:	srai	a2,a5,0x20
0x00000000000110a0 in __ieee754_acos ()
=> 0x110a0 <__ieee754_acos+12>:	slli	a4,a2,0x21
0x00000000000110a4 in __ieee754_acos ()
=> 0x110a4 <__ieee754_acos+16>:	srli	a4,a4,0x21
0x00000000000110a6 in __ieee754_acos ()
=> 0x110a6 <__ieee754_acos+18>:	blt	a4,a3,0x110c2 <__ieee754_acos+46>
0x00000000000110c2 in __ieee754_acos ()
=> 0x110c2 <__ieee754_acos+46>:	lui	a3,0x3fe00
0x00000000000110c6 in __ieee754_acos ()
=> 0x110c6 <__ieee754_acos+50>:	bge	a4,a3,0x110d8 <__ieee754_acos+68>
0x00000000000110ca in __ieee754_acos ()
=> 0x110ca <__ieee754_acos+54>:	lui	a3,0x3c600
0x00000000000110ce in __ieee754_acos ()
=> 0x110ce <__ieee754_acos+58>:	blt	a3,a4,0x1119c <__ieee754_acos+264>
0x00000000000110d2 in __ieee754_acos ()
=> 0x110d2 <__ieee754_acos+62>:	fld	fa0,976(gp)
0x00000000000110d6 in __ieee754_acos ()
=> 0x110d6 <__ieee754_acos+66>:	ret
0x0000000000010f58 in acos ()
=> 0x10f58 <acos+16>:	feq.d	a5,fs0,fs0
0x0000000000010f5c in acos ()
=> 0x10f5c <acos+20>:	fmv.d	fs1,fa0
0x0000000000010f60 in acos ()
=> 0x10f60 <acos+24>:	beqz	a5,0x10f74 <acos+44>
0x0000000000010f62 in acos ()
=> 0x10f62 <acos+26>:	fmv.d	fa0,fs0
0x0000000000010f66 in acos ()
=> 0x10f66 <acos+30>:	jal	ra,0x10f42 <fabs>
0x0000000000010f42 in fabs ()
=> 0x10f42 <fabs>:	fabs.d	fa0,fa0
0x0000000000010f46 in fabs ()
=> 0x10f46 <fabs+4>:	ret
0x0000000000010f6a in acos ()
=> 0x10f6a <acos+34>:	fld	fa5,1000(gp)
0x0000000000010f6e in acos ()
=> 0x10f6e <acos+38>:	flt.d	a5,fa5,fa0
0x0000000000010f72 in acos ()
=> 0x10f72 <acos+42>:	bnez	a5,0x10f82 <acos+58>
0x0000000000010f74 in acos ()
=> 0x10f74 <acos+44>:	ld	ra,24(sp)
0x0000000000010f76 in acos ()
=> 0x10f76 <acos+46>:	fmv.d	fa0,fs1
0x0000000000010f7a in acos ()
=> 0x10f7a <acos+50>:	fld	fs0,8(sp)
0x0000000000010f7c in acos ()
=> 0x10f7c <acos+52>:	fld	fs1,0(sp)
0x0000000000010f7e in acos ()
=> 0x10f7e <acos+54>:	addi	sp,sp,32
0x0000000000010f80 in acos ()
=> 0x10f80 <acos+56>:	ret
0x0000000000010988 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:48
48	      theta = acos(R/sqrt(Q*Q*Q));
=> 0x10988 <SolveCubic+804>:	fsd	fa0,-160(s0)
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x1098c <SolveCubic+808>:	ld	a0,-128(s0)
0x0000000000010990	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10990 <SolveCubic+812>:	ld	a1,-120(s0)
0x0000000000010994	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10994 <SolveCubic+816>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010998 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10998 <SolveCubic+820>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x000000000001099c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x1099c <SolveCubic+824>:	fld	ft0,1840(gp)
0x00000000000109a0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a0 <SolveCubic+828>:	fmul.d	ft1,fa0,ft0
0x00000000000109a4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a4 <SolveCubic+832>:	fld	ft2,-160(s0)
0x00000000000109a8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109a8 <SolveCubic+836>:	fld	ft3,1848(gp)
0x00000000000109ac	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109ac <SolveCubic+840>:	fdiv.d	fa0,ft2,ft3
0x00000000000109b0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b0 <SolveCubic+844>:	fsd	ft0,-432(s0)
0x00000000000109b4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b4 <SolveCubic+848>:	fsd	ft1,-440(s0)
0x00000000000109b8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109b8 <SolveCubic+852>:	fsd	ft3,-448(s0)
0x00000000000109bc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109bc <SolveCubic+856>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x00000000000109c0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c0 <SolveCubic+860>:	fld	ft0,-440(s0)
0x00000000000109c4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c4 <SolveCubic+864>:	fmul.d	fa0,ft0,fa0
0x00000000000109c8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109c8 <SolveCubic+868>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x00000000000109cc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109cc <SolveCubic+872>:	ld	a2,-80(s0)
0x00000000000109d0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d0 <SolveCubic+876>:	ld	a3,-72(s0)
0x00000000000109d4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d4 <SolveCubic+880>:	lui	a4,0x8
0x00000000000109d8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109d8 <SolveCubic+884>:	addiw	a4,a4,1
0x00000000000109dc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109dc <SolveCubic+888>:	slli	a4,a4,0x2f
0x00000000000109e0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e0 <SolveCubic+892>:	li	a5,0
0x00000000000109e4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e4 <SolveCubic+896>:	sd	a0,-456(s0)
0x00000000000109e8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109e8 <SolveCubic+900>:	mv	a0,a2
0x00000000000109ec	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109ec <SolveCubic+904>:	sd	a1,-464(s0)
0x00000000000109f0	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f0 <SolveCubic+908>:	mv	a1,a3
0x00000000000109f4	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f4 <SolveCubic+912>:	mv	a2,a5
0x00000000000109f8	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109f8 <SolveCubic+916>:	mv	a3,a4
0x00000000000109fc	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x109fc <SolveCubic+920>:	sd	a4,-472(s0)
0x0000000000010a00	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a00 <SolveCubic+924>:	sd	a5,-480(s0)
0x0000000000010a04	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a04 <SolveCubic+928>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010a08 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a08 <SolveCubic+932>:	ld	a2,-456(s0)
0x0000000000010a0c	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a0c <SolveCubic+936>:	sd	a0,-488(s0)
0x0000000000010a10	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a10 <SolveCubic+940>:	mv	a0,a2
0x0000000000010a14	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a14 <SolveCubic+944>:	ld	a3,-464(s0)
0x0000000000010a18	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a18 <SolveCubic+948>:	sd	a1,-496(s0)
0x0000000000010a1c	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a1c <SolveCubic+952>:	mv	a1,a3
0x0000000000010a20	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a20 <SolveCubic+956>:	ld	a2,-488(s0)
0x0000000000010a24	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a24 <SolveCubic+960>:	ld	a3,-496(s0)
0x0000000000010a28	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a28 <SolveCubic+964>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010a2c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a2c <SolveCubic+968>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010a30 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:49
49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a30 <SolveCubic+972>:	ld	a0,-64(s0)
0x0000000000010a34	49	      x[0] = -2.0*sqrt(Q)*cos(theta/3.0) - a1/3.0;
=> 0x10a34 <SolveCubic+976>:	fsd	fa0,0(a0)
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a38 <SolveCubic+980>:	ld	a0,-128(s0)
0x0000000000010a3c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a3c <SolveCubic+984>:	ld	a1,-120(s0)
0x0000000000010a40	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a40 <SolveCubic+988>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010a44 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a44 <SolveCubic+992>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010a48 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a48 <SolveCubic+996>:	fld	ft0,-432(s0)
0x0000000000010a4c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a4c <SolveCubic+1000>:	fmul.d	ft1,fa0,ft0
0x0000000000010a50	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a50 <SolveCubic+1004>:	fld	ft2,-160(s0)
0x0000000000010a54	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a54 <SolveCubic+1008>:	fld	ft3,1856(gp)
0x0000000000010a58	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a58 <SolveCubic+1012>:	fmv.d	fa0,ft3
0x0000000000010a5c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a5c <SolveCubic+1016>:	fsd	ft1,-504(s0)
0x0000000000010a60	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a60 <SolveCubic+1020>:	fsd	ft2,-512(s0)
0x0000000000010a64	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a64 <SolveCubic+1024>:	fsd	ft3,-520(s0)
0x0000000000010a68	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a68 <SolveCubic+1028>:	jal	ra,0x10d14 <atan>
0x0000000000010d14 in atan ()
=> 0x10d14 <atan>:	fmv.x.d	a5,fa0
0x0000000000010d18 in atan ()
=> 0x10d18 <atan+4>:	addi	sp,sp,-32
0x0000000000010d1a in atan ()
=> 0x10d1a <atan+6>:	sd	s1,8(sp)
0x0000000000010d1c in atan ()
=> 0x10d1c <atan+8>:	srai	s1,a5,0x20
0x0000000000010d20 in atan ()
=> 0x10d20 <atan+12>:	sd	s0,16(sp)
0x0000000000010d22 in atan ()
=> 0x10d22 <atan+14>:	slli	s0,s1,0x21
0x0000000000010d26 in atan ()
=> 0x10d26 <atan+18>:	sd	ra,24(sp)
0x0000000000010d28 in atan ()
=> 0x10d28 <atan+20>:	lui	a4,0x44100
0x0000000000010d2c in atan ()
=> 0x10d2c <atan+24>:	srli	s0,s0,0x21
0x0000000000010d2e in atan ()
=> 0x10d2e <atan+26>:	blt	s0,a4,0x10d68 <atan+84>
0x0000000000010d68 in atan ()
=> 0x10d68 <atan+84>:	lui	a4,0x3fdc0
0x0000000000010d6c in atan ()
=> 0x10d6c <atan+88>:	bge	s0,a4,0x10e42 <atan+302>
0x0000000000010d70 in atan ()
=> 0x10d70 <atan+92>:	lui	a4,0x3e200
0x0000000000010d74 in atan ()
=> 0x10d74 <atan+96>:	blt	s0,a4,0x10e20 <atan+268>
0x0000000000010e20 in atan ()
=> 0x10e20 <atan+268>:	fld	fa5,992(gp)
0x0000000000010e24 in atan ()
=> 0x10e24 <atan+272>:	fld	fa4,1000(gp)
0x0000000000010e28 in atan ()
=> 0x10e28 <atan+276>:	fadd.d	fa5,fa0,fa5
0x0000000000010e2c in atan ()
=> 0x10e2c <atan+280>:	flt.d	a4,fa4,fa5
0x0000000000010e30 in atan ()
=> 0x10e30 <atan+284>:	beqz	a4,0x10d78 <atan+100>
0x0000000000010d78 in atan ()
=> 0x10d78 <atan+100>:	li	a4,-1
0x0000000000010d7a in atan ()
=> 0x10d7a <atan+102>:	fmv.d.x	fa5,a5
0x0000000000010d7e in atan ()
=> 0x10d7e <atan+106>:	fmul.d	fa3,fa5,fa5
0x0000000000010d82 in atan ()
=> 0x10d82 <atan+110>:	fld	fa5,1032(gp)
0x0000000000010d86 in atan ()
=> 0x10d86 <atan+114>:	fld	fa2,1040(gp)
0x0000000000010d8a in atan ()
=> 0x10d8a <atan+118>:	fld	fa0,1080(gp)
0x0000000000010d8e in atan ()
=> 0x10d8e <atan+122>:	fmul.d	fa4,fa3,fa3
0x0000000000010d92 in atan ()
=> 0x10d92 <atan+126>:	fmadd.d	fa5,fa4,fa5,fa2
0x0000000000010d96 in atan ()
=> 0x10d96 <atan+130>:	fld	fa2,1088(gp)
0x0000000000010d9a in atan ()
=> 0x10d9a <atan+134>:	fmadd.d	fa0,fa4,fa0,fa2
0x0000000000010d9e in atan ()
=> 0x10d9e <atan+138>:	fld	fa2,1048(gp)
0x0000000000010da2 in atan ()
=> 0x10da2 <atan+142>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010da6 in atan ()
=> 0x10da6 <atan+146>:	fld	fa2,1096(gp)
0x0000000000010daa in atan ()
=> 0x10daa <atan+150>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dae in atan ()
=> 0x10dae <atan+154>:	fld	fa2,1056(gp)
0x0000000000010db2 in atan ()
=> 0x10db2 <atan+158>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010db6 in atan ()
=> 0x10db6 <atan+162>:	fld	fa2,1104(gp)
0x0000000000010dba in atan ()
=> 0x10dba <atan+166>:	li	a3,-1
0x0000000000010dbc in atan ()
=> 0x10dbc <atan+168>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dc0 in atan ()
=> 0x10dc0 <atan+172>:	fld	fa2,1064(gp)
0x0000000000010dc4 in atan ()
=> 0x10dc4 <atan+176>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dc8 in atan ()
=> 0x10dc8 <atan+180>:	fld	fa2,1112(gp)
0x0000000000010dcc in atan ()
=> 0x10dcc <atan+184>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dd0 in atan ()
=> 0x10dd0 <atan+188>:	fld	fa2,1072(gp)
0x0000000000010dd4 in atan ()
=> 0x10dd4 <atan+192>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dd8 in atan ()
=> 0x10dd8 <atan+196>:	fmul.d	fa0,fa0,fa4
0x0000000000010ddc in atan ()
=> 0x10ddc <atan+200>:	fmv.d.x	fa4,a5
0x0000000000010de0 in atan ()
=> 0x10de0 <atan+204>:	fmadd.d	fa5,fa5,fa3,fa0
0x0000000000010de4 in atan ()
=> 0x10de4 <atan+208>:	fmul.d	fa5,fa4,fa5
0x0000000000010de8 in atan ()
=> 0x10de8 <atan+212>:	beq	a4,a3,0x10e72 <atan+350>
0x0000000000010e72 in atan ()
=> 0x10e72 <atan+350>:	ld	ra,24(sp)
0x0000000000010e74 in atan ()
=> 0x10e74 <atan+352>:	ld	s0,16(sp)
0x0000000000010e76 in atan ()
=> 0x10e76 <atan+354>:	ld	s1,8(sp)
0x0000000000010e78 in atan ()
=> 0x10e78 <atan+356>:	fsub.d	fa0,fa4,fa5
0x0000000000010e7c in atan ()
=> 0x10e7c <atan+360>:	addi	sp,sp,32
0x0000000000010e7e in atan ()
=> 0x10e7e <atan+362>:	ret
0x0000000000010a6c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a6c <SolveCubic+1032>:	fld	ft0,1864(gp)
0x0000000000010a70	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a70 <SolveCubic+1036>:	fmul.d	ft1,fa0,ft0
0x0000000000010a74	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a74 <SolveCubic+1040>:	fadd.d	ft1,ft1,ft1
0x0000000000010a78	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a78 <SolveCubic+1044>:	fld	ft2,-512(s0)
0x0000000000010a7c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a7c <SolveCubic+1048>:	fadd.d	ft1,ft2,ft1
0x0000000000010a80	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a80 <SolveCubic+1052>:	fld	ft2,-448(s0)
0x0000000000010a84	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a84 <SolveCubic+1056>:	fdiv.d	fa0,ft1,ft2
0x0000000000010a88	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a88 <SolveCubic+1060>:	fsd	ft0,-528(s0)
0x0000000000010a8c	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a8c <SolveCubic+1064>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x0000000000010a90 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a90 <SolveCubic+1068>:	fld	ft0,-504(s0)
0x0000000000010a94	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a94 <SolveCubic+1072>:	fmul.d	fa0,ft0,fa0
0x0000000000010a98	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a98 <SolveCubic+1076>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x0000000000010a9c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10a9c <SolveCubic+1080>:	ld	a2,-80(s0)
0x0000000000010aa0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa0 <SolveCubic+1084>:	ld	a3,-72(s0)
0x0000000000010aa4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa4 <SolveCubic+1088>:	sd	a0,-536(s0)
0x0000000000010aa8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aa8 <SolveCubic+1092>:	mv	a0,a2
0x0000000000010aac	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aac <SolveCubic+1096>:	sd	a1,-544(s0)
0x0000000000010ab0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab0 <SolveCubic+1100>:	mv	a1,a3
0x0000000000010ab4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab4 <SolveCubic+1104>:	ld	a2,-480(s0)
0x0000000000010ab8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ab8 <SolveCubic+1108>:	ld	a3,-472(s0)
0x0000000000010abc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10abc <SolveCubic+1112>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010ac0 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac0 <SolveCubic+1116>:	ld	a2,-536(s0)
0x0000000000010ac4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac4 <SolveCubic+1120>:	sd	a0,-552(s0)
0x0000000000010ac8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ac8 <SolveCubic+1124>:	mv	a0,a2
0x0000000000010acc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10acc <SolveCubic+1128>:	ld	a3,-544(s0)
0x0000000000010ad0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad0 <SolveCubic+1132>:	sd	a1,-560(s0)
0x0000000000010ad4	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad4 <SolveCubic+1136>:	mv	a1,a3
0x0000000000010ad8	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ad8 <SolveCubic+1140>:	ld	a2,-552(s0)
0x0000000000010adc	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10adc <SolveCubic+1144>:	ld	a3,-560(s0)
0x0000000000010ae0	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae0 <SolveCubic+1148>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010ae4 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae4 <SolveCubic+1152>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010ae8 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:50
50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10ae8 <SolveCubic+1156>:	ld	a0,-64(s0)
0x0000000000010aec	50	      x[1] = -2.0*sqrt(Q)*cos((theta+2.0*PI)/3.0) - a1/3.0;
=> 0x10aec <SolveCubic+1160>:	fsd	fa0,8(a0)
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af0 <SolveCubic+1164>:	ld	a0,-128(s0)
0x0000000000010af4	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af4 <SolveCubic+1168>:	ld	a1,-120(s0)
0x0000000000010af8	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10af8 <SolveCubic+1172>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010afc in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10afc <SolveCubic+1176>:	jal	ra,0x11052 <sqrt>
0x0000000000011052 in sqrt ()
=> 0x11052 <sqrt>:	addi	sp,sp,-32
0x0000000000011054 in sqrt ()
=> 0x11054 <sqrt+2>:	fsd	fs0,8(sp)
0x0000000000011056 in sqrt ()
=> 0x11056 <sqrt+4>:	fmv.d	fs0,fa0
0x000000000001105a in sqrt ()
=> 0x1105a <sqrt+8>:	sd	ra,24(sp)
0x000000000001105c in sqrt ()
=> 0x1105c <sqrt+10>:	fsd	fs1,0(sp)
0x000000000001105e in sqrt ()
=> 0x1105e <sqrt+12>:	jal	ra,0x11c08 <__ieee754_sqrt>
0x0000000000011c08 in __ieee754_sqrt ()
=> 0x11c08 <__ieee754_sqrt>:	fsqrt.d	fa0,fa0
0x0000000000011c0c in __ieee754_sqrt ()
=> 0x11c0c <__ieee754_sqrt+4>:	ret
0x0000000000011062 in sqrt ()
=> 0x11062 <sqrt+16>:	feq.d	a5,fs0,fs0
0x0000000000011066 in sqrt ()
=> 0x11066 <sqrt+20>:	beqz	a5,0x11072 <sqrt+32>
0x0000000000011068 in sqrt ()
=> 0x11068 <sqrt+22>:	fmv.d.x	fs1,zero
0x000000000001106c in sqrt ()
=> 0x1106c <sqrt+26>:	flt.d	a5,fs0,fs1
0x0000000000011070 in sqrt ()
=> 0x11070 <sqrt+30>:	bnez	a5,0x1107c <sqrt+42>
0x0000000000011072 in sqrt ()
=> 0x11072 <sqrt+32>:	ld	ra,24(sp)
0x0000000000011074 in sqrt ()
=> 0x11074 <sqrt+34>:	fld	fs0,8(sp)
0x0000000000011076 in sqrt ()
=> 0x11076 <sqrt+36>:	fld	fs1,0(sp)
0x0000000000011078 in sqrt ()
=> 0x11078 <sqrt+38>:	addi	sp,sp,32
0x000000000001107a in sqrt ()
=> 0x1107a <sqrt+40>:	ret
0x0000000000010b00 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b00 <SolveCubic+1180>:	fld	ft0,-432(s0)
0x0000000000010b04	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b04 <SolveCubic+1184>:	fmul.d	ft1,fa0,ft0
0x0000000000010b08	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b08 <SolveCubic+1188>:	fld	ft2,-160(s0)
0x0000000000010b0c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b0c <SolveCubic+1192>:	fld	fa0,-520(s0)
0x0000000000010b10	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b10 <SolveCubic+1196>:	fsd	ft1,-568(s0)
0x0000000000010b14	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b14 <SolveCubic+1200>:	fsd	ft2,-576(s0)
0x0000000000010b18	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b18 <SolveCubic+1204>:	jal	ra,0x10d14 <atan>
0x0000000000010d14 in atan ()
=> 0x10d14 <atan>:	fmv.x.d	a5,fa0
0x0000000000010d18 in atan ()
=> 0x10d18 <atan+4>:	addi	sp,sp,-32
0x0000000000010d1a in atan ()
=> 0x10d1a <atan+6>:	sd	s1,8(sp)
0x0000000000010d1c in atan ()
=> 0x10d1c <atan+8>:	srai	s1,a5,0x20
0x0000000000010d20 in atan ()
=> 0x10d20 <atan+12>:	sd	s0,16(sp)
0x0000000000010d22 in atan ()
=> 0x10d22 <atan+14>:	slli	s0,s1,0x21
0x0000000000010d26 in atan ()
=> 0x10d26 <atan+18>:	sd	ra,24(sp)
0x0000000000010d28 in atan ()
=> 0x10d28 <atan+20>:	lui	a4,0x44100
0x0000000000010d2c in atan ()
=> 0x10d2c <atan+24>:	srli	s0,s0,0x21
0x0000000000010d2e in atan ()
=> 0x10d2e <atan+26>:	blt	s0,a4,0x10d68 <atan+84>
0x0000000000010d68 in atan ()
=> 0x10d68 <atan+84>:	lui	a4,0x3fdc0
0x0000000000010d6c in atan ()
=> 0x10d6c <atan+88>:	bge	s0,a4,0x10e42 <atan+302>
0x0000000000010d70 in atan ()
=> 0x10d70 <atan+92>:	lui	a4,0x3e200
0x0000000000010d74 in atan ()
=> 0x10d74 <atan+96>:	blt	s0,a4,0x10e20 <atan+268>
0x0000000000010e20 in atan ()
=> 0x10e20 <atan+268>:	fld	fa5,992(gp)
0x0000000000010e24 in atan ()
=> 0x10e24 <atan+272>:	fld	fa4,1000(gp)
0x0000000000010e28 in atan ()
=> 0x10e28 <atan+276>:	fadd.d	fa5,fa0,fa5
0x0000000000010e2c in atan ()
=> 0x10e2c <atan+280>:	flt.d	a4,fa4,fa5
0x0000000000010e30 in atan ()
=> 0x10e30 <atan+284>:	beqz	a4,0x10d78 <atan+100>
0x0000000000010d78 in atan ()
=> 0x10d78 <atan+100>:	li	a4,-1
0x0000000000010d7a in atan ()
=> 0x10d7a <atan+102>:	fmv.d.x	fa5,a5
0x0000000000010d7e in atan ()
=> 0x10d7e <atan+106>:	fmul.d	fa3,fa5,fa5
0x0000000000010d82 in atan ()
=> 0x10d82 <atan+110>:	fld	fa5,1032(gp)
0x0000000000010d86 in atan ()
=> 0x10d86 <atan+114>:	fld	fa2,1040(gp)
0x0000000000010d8a in atan ()
=> 0x10d8a <atan+118>:	fld	fa0,1080(gp)
0x0000000000010d8e in atan ()
=> 0x10d8e <atan+122>:	fmul.d	fa4,fa3,fa3
0x0000000000010d92 in atan ()
=> 0x10d92 <atan+126>:	fmadd.d	fa5,fa4,fa5,fa2
0x0000000000010d96 in atan ()
=> 0x10d96 <atan+130>:	fld	fa2,1088(gp)
0x0000000000010d9a in atan ()
=> 0x10d9a <atan+134>:	fmadd.d	fa0,fa4,fa0,fa2
0x0000000000010d9e in atan ()
=> 0x10d9e <atan+138>:	fld	fa2,1048(gp)
0x0000000000010da2 in atan ()
=> 0x10da2 <atan+142>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010da6 in atan ()
=> 0x10da6 <atan+146>:	fld	fa2,1096(gp)
0x0000000000010daa in atan ()
=> 0x10daa <atan+150>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dae in atan ()
=> 0x10dae <atan+154>:	fld	fa2,1056(gp)
0x0000000000010db2 in atan ()
=> 0x10db2 <atan+158>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010db6 in atan ()
=> 0x10db6 <atan+162>:	fld	fa2,1104(gp)
0x0000000000010dba in atan ()
=> 0x10dba <atan+166>:	li	a3,-1
0x0000000000010dbc in atan ()
=> 0x10dbc <atan+168>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dc0 in atan ()
=> 0x10dc0 <atan+172>:	fld	fa2,1064(gp)
0x0000000000010dc4 in atan ()
=> 0x10dc4 <atan+176>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dc8 in atan ()
=> 0x10dc8 <atan+180>:	fld	fa2,1112(gp)
0x0000000000010dcc in atan ()
=> 0x10dcc <atan+184>:	fmadd.d	fa0,fa0,fa4,fa2
0x0000000000010dd0 in atan ()
=> 0x10dd0 <atan+188>:	fld	fa2,1072(gp)
0x0000000000010dd4 in atan ()
=> 0x10dd4 <atan+192>:	fmadd.d	fa5,fa5,fa4,fa2
0x0000000000010dd8 in atan ()
=> 0x10dd8 <atan+196>:	fmul.d	fa0,fa0,fa4
0x0000000000010ddc in atan ()
=> 0x10ddc <atan+200>:	fmv.d.x	fa4,a5
0x0000000000010de0 in atan ()
=> 0x10de0 <atan+204>:	fmadd.d	fa5,fa5,fa3,fa0
0x0000000000010de4 in atan ()
=> 0x10de4 <atan+208>:	fmul.d	fa5,fa4,fa5
0x0000000000010de8 in atan ()
=> 0x10de8 <atan+212>:	beq	a4,a3,0x10e72 <atan+350>
0x0000000000010e72 in atan ()
=> 0x10e72 <atan+350>:	ld	ra,24(sp)
0x0000000000010e74 in atan ()
=> 0x10e74 <atan+352>:	ld	s0,16(sp)
0x0000000000010e76 in atan ()
=> 0x10e76 <atan+354>:	ld	s1,8(sp)
0x0000000000010e78 in atan ()
=> 0x10e78 <atan+356>:	fsub.d	fa0,fa4,fa5
0x0000000000010e7c in atan ()
=> 0x10e7c <atan+360>:	addi	sp,sp,32
0x0000000000010e7e in atan ()
=> 0x10e7e <atan+362>:	ret
0x0000000000010b1c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b1c <SolveCubic+1208>:	fld	ft0,-528(s0)
0x0000000000010b20	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b20 <SolveCubic+1212>:	fmul.d	ft1,fa0,ft0
0x0000000000010b24	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b24 <SolveCubic+1216>:	fmul.d	ft1,ft1,ft0
0x0000000000010b28	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b28 <SolveCubic+1220>:	fld	ft2,-576(s0)
0x0000000000010b2c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b2c <SolveCubic+1224>:	fadd.d	ft1,ft2,ft1
0x0000000000010b30	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b30 <SolveCubic+1228>:	fld	ft2,-448(s0)
0x0000000000010b34	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b34 <SolveCubic+1232>:	fdiv.d	fa0,ft1,ft2
0x0000000000010b38	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b38 <SolveCubic+1236>:	jal	ra,0x10ecc <cos>
0x0000000000010ecc in cos ()
=> 0x10ecc <cos>:	fmv.x.d	a5,fa0
0x0000000000010ed0 in cos ()
=> 0x10ed0 <cos+4>:	lui	a3,0x3fe92
0x0000000000010ed4 in cos ()
=> 0x10ed4 <cos+8>:	addi	a3,a3,507
0x0000000000010ed8 in cos ()
=> 0x10ed8 <cos+12>:	slli	a4,a5,0x1
0x0000000000010edc in cos ()
=> 0x10edc <cos+16>:	srli	a4,a4,0x21
0x0000000000010ede in cos ()
=> 0x10ede <cos+18>:	bge	a3,a4,0x10f1a <cos+78>
0x0000000000010f1a in cos ()
=> 0x10f1a <cos+78>:	fmv.d.x	fa1,zero
0x0000000000010f1e in cos ()
=> 0x10f1e <cos+82>:	j	0x11c0e <__kernel_cos>
0x0000000000011c0e in __kernel_cos ()
=> 0x11c0e <__kernel_cos>:	fmv.x.d	a5,fa0
0x0000000000011c12 in __kernel_cos ()
=> 0x11c12 <__kernel_cos+4>:	lui	a3,0x3e400
0x0000000000011c16 in __kernel_cos ()
=> 0x11c16 <__kernel_cos+8>:	slli	a4,a5,0x1
0x0000000000011c1a in __kernel_cos ()
=> 0x11c1a <__kernel_cos+12>:	srli	a4,a4,0x21
0x0000000000011c1c in __kernel_cos ()
=> 0x11c1c <__kernel_cos+14>:	bge	a4,a3,0x11c7c <__kernel_cos+110>
0x0000000000011c20 in __kernel_cos ()
=> 0x11c20 <__kernel_cos+18>:	fcvt.w.d	a4,fa0,rtz
0x0000000000011c24 in __kernel_cos ()
=> 0x11c24 <__kernel_cos+22>:	sext.w	a4,a4
0x0000000000011c26 in __kernel_cos ()
=> 0x11c26 <__kernel_cos+24>:	beqz	a4,0x11d04 <__kernel_cos+246>
0x0000000000011d04 in __kernel_cos ()
=> 0x11d04 <__kernel_cos+246>:	fld	fa0,1000(gp)
0x0000000000011d08 in __kernel_cos ()
=> 0x11d08 <__kernel_cos+250>:	ret
0x0000000000010b3c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b3c <SolveCubic+1240>:	fld	ft0,-568(s0)
0x0000000000010b40	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b40 <SolveCubic+1244>:	fmul.d	fa0,ft0,fa0
0x0000000000010b44	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b44 <SolveCubic+1248>:	jal	ra,0x1f79a <__extenddftf2>
__extenddftf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/extenddftf2.c:44
44	  FP_INIT_EXCEPTIONS;
=> 0x1f79a <__extenddftf2>:	addi	sp,sp,-32
0x000000000001f79c	44	  FP_INIT_EXCEPTIONS;
=> 0x1f79c <__extenddftf2+2>:	fmv.x.d	a5,fa0
0x000000000001f7a0	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a0 <__extenddftf2+6>:	sd	ra,24(sp)
0x000000000001f7a2	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a2 <__extenddftf2+8>:	sd	s0,16(sp)
0x000000000001f7a4	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a4 <__extenddftf2+10>:	sd	s1,8(sp)
0x000000000001f7a6	44	  FP_INIT_EXCEPTIONS;
=> 0x1f7a6 <__extenddftf2+12>:	frrm	a4
45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7aa <__extenddftf2+16>:	srli	a0,a5,0x34
0x000000000001f7ae	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7ae <__extenddftf2+20>:	andi	a0,a0,2047
0x000000000001f7b2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b2 <__extenddftf2+24>:	slli	s0,a5,0xc
0x000000000001f7b6	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7b6 <__extenddftf2+28>:	srli	s1,a5,0x3f
0x000000000001f7ba	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7ba <__extenddftf2+32>:	addi	a5,a0,1
0x000000000001f7be	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7be <__extenddftf2+36>:	andi	a5,a5,2046
0x000000000001f7c2	45	  FP_UNPACK_RAW_D (A, a);
=> 0x1f7c2 <__extenddftf2+40>:	srli	s0,s0,0xc
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7c4 <__extenddftf2+42>:	beqz	a5,0x1f7d8 <__extenddftf2+62>
49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7d8 <__extenddftf2+62>:	bnez	a0,0x1f816 <__extenddftf2+124>
0x000000000001f7da	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7da <__extenddftf2+64>:	li	a1,0
0x000000000001f7dc	49	  FP_EXTEND (Q, D, 2, 1, R, A);
=> 0x1f7dc <__extenddftf2+66>:	beqz	s0,0x1f7d4 <__extenddftf2+58>
0x000000000001f7d4	39	  FP_DECL_EX;
=> 0x1f7d4 <__extenddftf2+58>:	li	a5,0
0x000000000001f7d6	39	  FP_DECL_EX;
=> 0x1f7d6 <__extenddftf2+60>:	j	0x1f834 <__extenddftf2+154>
51	  FP_PACK_RAW_Q (r, R);
=> 0x1f834 <__extenddftf2+154>:	slliw	s1,s1,0xf
0x000000000001f838	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f838 <__extenddftf2+158>:	slli	a1,a1,0x10
0x000000000001f83a	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83a <__extenddftf2+160>:	or	a0,a0,s1
0x000000000001f83c	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83c <__extenddftf2+162>:	slli	a0,a0,0x30
0x000000000001f83e	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f83e <__extenddftf2+164>:	srli	a1,a1,0x10
0x000000000001f840	51	  FP_PACK_RAW_Q (r, R);
=> 0x1f840 <__extenddftf2+166>:	or	a1,a1,a0
52	  FP_HANDLE_EXCEPTIONS;
=> 0x1f842 <__extenddftf2+168>:	beqz	a5,0x1f848 <__extenddftf2+174>
54	  return r;
=> 0x1f848 <__extenddftf2+174>:	ld	ra,24(sp)
0x000000000001f84a	54	  return r;
=> 0x1f84a <__extenddftf2+176>:	mv	a0,s0
0x000000000001f84c	54	  return r;
=> 0x1f84c <__extenddftf2+178>:	ld	s0,16(sp)
0x000000000001f84e	54	  return r;
=> 0x1f84e <__extenddftf2+180>:	ld	s1,8(sp)
0x000000000001f850	54	  return r;
=> 0x1f850 <__extenddftf2+182>:	addi	sp,sp,32
0x000000000001f852	54	  return r;
=> 0x1f852 <__extenddftf2+184>:	ret
0x0000000000010b48 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b48 <SolveCubic+1252>:	ld	a2,-80(s0)
0x0000000000010b4c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b4c <SolveCubic+1256>:	ld	a3,-72(s0)
0x0000000000010b50	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b50 <SolveCubic+1260>:	sd	a0,-584(s0)
0x0000000000010b54	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b54 <SolveCubic+1264>:	mv	a0,a2
0x0000000000010b58	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b58 <SolveCubic+1268>:	sd	a1,-592(s0)
0x0000000000010b5c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b5c <SolveCubic+1272>:	mv	a1,a3
0x0000000000010b60	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b60 <SolveCubic+1276>:	ld	a2,-480(s0)
0x0000000000010b64	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b64 <SolveCubic+1280>:	ld	a3,-472(s0)
0x0000000000010b68	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b68 <SolveCubic+1284>:	jal	ra,0x1dfea <__divtf3>
__divtf3 (a=0, b=3) at ../../../../riscv-gcc/libgcc/soft-fp/divtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1dfea <__divtf3>:	addi	sp,sp,-96
0x000000000001dfec	43	  FP_INIT_ROUNDMODE;
=> 0x1dfec <__divtf3+2>:	sd	s5,40(sp)
0x000000000001dfee	43	  FP_INIT_ROUNDMODE;
=> 0x1dfee <__divtf3+4>:	sd	s9,8(sp)
0x000000000001dff0	43	  FP_INIT_ROUNDMODE;
=> 0x1dff0 <__divtf3+6>:	sd	ra,88(sp)
0x000000000001dff2	43	  FP_INIT_ROUNDMODE;
=> 0x1dff2 <__divtf3+8>:	sd	s0,80(sp)
0x000000000001dff4	43	  FP_INIT_ROUNDMODE;
=> 0x1dff4 <__divtf3+10>:	sd	s1,72(sp)
0x000000000001dff6	43	  FP_INIT_ROUNDMODE;
=> 0x1dff6 <__divtf3+12>:	sd	s2,64(sp)
0x000000000001dff8	43	  FP_INIT_ROUNDMODE;
=> 0x1dff8 <__divtf3+14>:	sd	s3,56(sp)
0x000000000001dffa	43	  FP_INIT_ROUNDMODE;
=> 0x1dffa <__divtf3+16>:	sd	s4,48(sp)
0x000000000001dffc	43	  FP_INIT_ROUNDMODE;
=> 0x1dffc <__divtf3+18>:	sd	s6,32(sp)
0x000000000001dffe	43	  FP_INIT_ROUNDMODE;
=> 0x1dffe <__divtf3+20>:	sd	s7,24(sp)
0x000000000001e000	43	  FP_INIT_ROUNDMODE;
=> 0x1e000 <__divtf3+22>:	sd	s8,16(sp)
0x000000000001e002	36	{
=> 0x1e002 <__divtf3+24>:	mv	s9,a2
0x000000000001e004	36	{
=> 0x1e004 <__divtf3+26>:	mv	s5,a3
0x000000000001e006	43	  FP_INIT_ROUNDMODE;
=> 0x1e006 <__divtf3+28>:	frrm	s3
0x000000000001e00a	43	  FP_INIT_ROUNDMODE;
=> 0x1e00a <__divtf3+32>:	slli	a5,a1,0x10
0x000000000001e00e	43	  FP_INIT_ROUNDMODE;
=> 0x1e00e <__divtf3+36>:	srli	s6,a5,0x10
0x000000000001e012	44	  FP_UNPACK_Q (A, a);
=> 0x1e012 <__divtf3+40>:	lui	a5,0x8
0x000000000001e014	44	  FP_UNPACK_Q (A, a);
=> 0x1e014 <__divtf3+42>:	srli	s7,a1,0x30
0x000000000001e018	44	  FP_UNPACK_Q (A, a);
=> 0x1e018 <__divtf3+46>:	addi	a5,a5,-1
0x000000000001e01a	44	  FP_UNPACK_Q (A, a);
=> 0x1e01a <__divtf3+48>:	and	a4,s7,a5
0x000000000001e01e	43	  FP_INIT_ROUNDMODE;
=> 0x1e01e <__divtf3+52>:	sext.w	s3,s3
44	  FP_UNPACK_Q (A, a);
=> 0x1e020 <__divtf3+54>:	srli	s4,a1,0x3f
44	  FP_UNPACK_Q (A, a);
=> 0x1e024 <__divtf3+58>:	beqz	a4,0x1e054 <__divtf3+106>
0x000000000001e054	44	  FP_UNPACK_Q (A, a);
=> 0x1e054 <__divtf3+106>:	or	a5,a0,s6
0x000000000001e058	44	  FP_UNPACK_Q (A, a);
=> 0x1e058 <__divtf3+110>:	mv	s0,a0
0x000000000001e05a	44	  FP_UNPACK_Q (A, a);
=> 0x1e05a <__divtf3+112>:	beqz	a5,0x1e12c <__divtf3+322>
0x000000000001e12c	46	  FP_DIV_Q (R, A, B);
=> 0x1e12c <__divtf3+322>:	li	s6,0
0x000000000001e12e	46	  FP_DIV_Q (R, A, B);
=> 0x1e12e <__divtf3+324>:	li	s1,0
0x000000000001e130	46	  FP_DIV_Q (R, A, B);
=> 0x1e130 <__divtf3+326>:	li	s7,0
0x000000000001e132	44	  FP_UNPACK_Q (A, a);
=> 0x1e132 <__divtf3+328>:	li	s8,1
0x000000000001e134	44	  FP_UNPACK_Q (A, a);
=> 0x1e134 <__divtf3+330>:	j	0x1e050 <__divtf3+102>
0x000000000001e050	37	  FP_DECL_EX;
=> 0x1e050 <__divtf3+102>:	li	s2,0
0x000000000001e052	37	  FP_DECL_EX;
=> 0x1e052 <__divtf3+104>:	j	0x1e0ca <__divtf3+224>
45	  FP_UNPACK_Q (B, b);
=> 0x1e0ca <__divtf3+224>:	lui	a2,0x8
0x000000000001e0cc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0cc <__divtf3+226>:	srli	a0,s5,0x30
0x000000000001e0d0	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d0 <__divtf3+230>:	addi	a2,a2,-1
0x000000000001e0d2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d2 <__divtf3+232>:	slli	s0,s5,0x10
0x000000000001e0d6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0d6 <__divtf3+236>:	and	a4,a0,a2
0x000000000001e0da	45	  FP_UNPACK_Q (B, b);
=> 0x1e0da <__divtf3+240>:	mv	a5,s9
0x000000000001e0dc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0dc <__divtf3+242>:	srli	s0,s0,0x10
0x000000000001e0de	45	  FP_UNPACK_Q (B, b);
=> 0x1e0de <__divtf3+244>:	srli	s5,s5,0x3f
0x000000000001e0e2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e2 <__divtf3+248>:	beqz	a4,0x1e140 <__divtf3+342>
0x000000000001e0e4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e4 <__divtf3+250>:	sext.w	a3,a4
0x000000000001e0e8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0e8 <__divtf3+254>:	beq	a4,a2,0x1e19c <__divtf3+434>
0x000000000001e0ec	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ec <__divtf3+258>:	slli	s0,s0,0x3
0x000000000001e0ee	45	  FP_UNPACK_Q (B, b);
=> 0x1e0ee <__divtf3+260>:	srli	a3,s9,0x3d
0x000000000001e0f2	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f2 <__divtf3+264>:	or	a3,a3,s0
0x000000000001e0f4	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f4 <__divtf3+266>:	lui	a0,0xffffc
0x000000000001e0f6	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f6 <__divtf3+268>:	li	s0,1
0x000000000001e0f8	45	  FP_UNPACK_Q (B, b);
=> 0x1e0f8 <__divtf3+270>:	slli	s0,s0,0x33
0x000000000001e0fa	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fa <__divtf3+272>:	addi	a0,a0,1
0x000000000001e0fc	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fc <__divtf3+274>:	or	s0,s0,a3
0x000000000001e0fe	45	  FP_UNPACK_Q (B, b);
=> 0x1e0fe <__divtf3+276>:	slli	a5,s9,0x3
0x000000000001e102	45	  FP_UNPACK_Q (B, b);
=> 0x1e102 <__divtf3+280>:	add	a0,a0,a4
0x000000000001e104	45	  FP_UNPACK_Q (B, b);
=> 0x1e104 <__divtf3+282>:	li	a2,0
46	  FP_DIV_Q (R, A, B);
=> 0x1e106 <__divtf3+284>:	slli	a4,s8,0x2
0x000000000001e10a	46	  FP_DIV_Q (R, A, B);
=> 0x1e10a <__divtf3+288>:	or	a4,a4,a2
0x000000000001e10c	46	  FP_DIV_Q (R, A, B);
=> 0x1e10c <__divtf3+290>:	sub	a3,s7,a0
0x000000000001e110	46	  FP_DIV_Q (R, A, B);
=> 0x1e110 <__divtf3+294>:	addi	a4,a4,-1
0x000000000001e112	46	  FP_DIV_Q (R, A, B);
=> 0x1e112 <__divtf3+296>:	li	a0,14
0x000000000001e114	46	  FP_DIV_Q (R, A, B);
=> 0x1e114 <__divtf3+298>:	xor	a1,s4,s5
0x000000000001e118	46	  FP_DIV_Q (R, A, B);
=> 0x1e118 <__divtf3+302>:	bltu	a0,a4,0x1e1e6 <__divtf3+508>
0x000000000001e11c	46	  FP_DIV_Q (R, A, B);
=> 0x1e11c <__divtf3+306>:	lui	a0,0x21
0x000000000001e120	46	  FP_DIV_Q (R, A, B);
=> 0x1e120 <__divtf3+310>:	slli	a4,a4,0x2
0x000000000001e122	46	  FP_DIV_Q (R, A, B);
=> 0x1e122 <__divtf3+312>:	addi	a0,a0,-1584
0x000000000001e126	46	  FP_DIV_Q (R, A, B);
=> 0x1e126 <__divtf3+316>:	add	a4,a4,a0
0x000000000001e128	46	  FP_DIV_Q (R, A, B);
=> 0x1e128 <__divtf3+318>:	lw	a4,0(a4)
0x000000000001e12a	46	  FP_DIV_Q (R, A, B);
=> 0x1e12a <__divtf3+320>:	jr	a4
0x000000000001e67e	47	  FP_PACK_Q (r, R);
=> 0x1e67e <__divtf3+1684>:	li	s0,0
0x000000000001e680	47	  FP_PACK_Q (r, R);
=> 0x1e680 <__divtf3+1686>:	li	a0,0
0x000000000001e682	47	  FP_PACK_Q (r, R);
=> 0x1e682 <__divtf3+1688>:	j	0x1e65c <__divtf3+1650>
0x000000000001e65c	47	  FP_PACK_Q (r, R);
=> 0x1e65c <__divtf3+1650>:	li	a4,0
0x000000000001e65e	47	  FP_PACK_Q (r, R);
=> 0x1e65e <__divtf3+1652>:	j	0x1e4b0 <__divtf3+1222>
0x000000000001e4b0	47	  FP_PACK_Q (r, R);
=> 0x1e4b0 <__divtf3+1222>:	slli	a4,a4,0x31
0x000000000001e4b2	47	  FP_PACK_Q (r, R);
=> 0x1e4b2 <__divtf3+1224>:	slli	a1,a1,0xf
0x000000000001e4b4	47	  FP_PACK_Q (r, R);
=> 0x1e4b4 <__divtf3+1226>:	srli	a4,a4,0x31
0x000000000001e4b6	47	  FP_PACK_Q (r, R);
=> 0x1e4b6 <__divtf3+1228>:	or	a4,a4,a1
0x000000000001e4b8	47	  FP_PACK_Q (r, R);
=> 0x1e4b8 <__divtf3+1230>:	slli	s0,s0,0x10
0x000000000001e4ba	47	  FP_PACK_Q (r, R);
=> 0x1e4ba <__divtf3+1232>:	slli	a4,a4,0x30
0x000000000001e4bc	47	  FP_PACK_Q (r, R);
=> 0x1e4bc <__divtf3+1234>:	srli	a1,s0,0x10
0x000000000001e4c0	47	  FP_PACK_Q (r, R);
=> 0x1e4c0 <__divtf3+1238>:	or	a1,a1,a4
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1e4c2 <__divtf3+1240>:	beqz	s2,0x1e4ca <__divtf3+1248>
50	  return r;
=> 0x1e4ca <__divtf3+1248>:	ld	ra,88(sp)
0x000000000001e4cc	50	  return r;
=> 0x1e4cc <__divtf3+1250>:	ld	s0,80(sp)
0x000000000001e4ce	50	  return r;
=> 0x1e4ce <__divtf3+1252>:	ld	s1,72(sp)
0x000000000001e4d0	50	  return r;
=> 0x1e4d0 <__divtf3+1254>:	ld	s2,64(sp)
0x000000000001e4d2	50	  return r;
=> 0x1e4d2 <__divtf3+1256>:	ld	s3,56(sp)
0x000000000001e4d4	50	  return r;
=> 0x1e4d4 <__divtf3+1258>:	ld	s4,48(sp)
0x000000000001e4d6	50	  return r;
=> 0x1e4d6 <__divtf3+1260>:	ld	s5,40(sp)
0x000000000001e4d8	50	  return r;
=> 0x1e4d8 <__divtf3+1262>:	ld	s6,32(sp)
0x000000000001e4da	50	  return r;
=> 0x1e4da <__divtf3+1264>:	ld	s7,24(sp)
0x000000000001e4dc	50	  return r;
=> 0x1e4dc <__divtf3+1266>:	ld	s8,16(sp)
0x000000000001e4de	50	  return r;
=> 0x1e4de <__divtf3+1268>:	ld	s9,8(sp)
0x000000000001e4e0	50	  return r;
=> 0x1e4e0 <__divtf3+1270>:	addi	sp,sp,96
0x000000000001e4e2	50	  return r;
=> 0x1e4e2 <__divtf3+1272>:	ret
0x0000000000010b6c in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b6c <SolveCubic+1288>:	ld	a2,-584(s0)
0x0000000000010b70	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b70 <SolveCubic+1292>:	sd	a0,-600(s0)
0x0000000000010b74	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b74 <SolveCubic+1296>:	mv	a0,a2
0x0000000000010b78	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b78 <SolveCubic+1300>:	ld	a3,-592(s0)
0x0000000000010b7c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b7c <SolveCubic+1304>:	sd	a1,-608(s0)
0x0000000000010b80	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b80 <SolveCubic+1308>:	mv	a1,a3
0x0000000000010b84	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b84 <SolveCubic+1312>:	ld	a2,-600(s0)
0x0000000000010b88	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b88 <SolveCubic+1316>:	ld	a3,-608(s0)
0x0000000000010b8c	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b8c <SolveCubic+1320>:	jal	ra,0x1ee7a <__subtf3>
__subtf3 (a=0, b=0) at ../../../../riscv-gcc/libgcc/soft-fp/subtf3.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1ee7a <__subtf3>:	addi	sp,sp,-48
0x000000000001ee7c	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7c <__subtf3+2>:	sd	ra,40(sp)
0x000000000001ee7e	43	  FP_INIT_ROUNDMODE;
=> 0x1ee7e <__subtf3+4>:	sd	s0,32(sp)
0x000000000001ee80	43	  FP_INIT_ROUNDMODE;
=> 0x1ee80 <__subtf3+6>:	sd	s1,24(sp)
0x000000000001ee82	43	  FP_INIT_ROUNDMODE;
=> 0x1ee82 <__subtf3+8>:	sd	s2,16(sp)
0x000000000001ee84	43	  FP_INIT_ROUNDMODE;
=> 0x1ee84 <__subtf3+10>:	sd	s3,8(sp)
0x000000000001ee86	43	  FP_INIT_ROUNDMODE;
=> 0x1ee86 <__subtf3+12>:	sd	s4,0(sp)
0x000000000001ee88	43	  FP_INIT_ROUNDMODE;
=> 0x1ee88 <__subtf3+14>:	frrm	s1
0x000000000001ee8c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8c <__subtf3+18>:	li	a4,-1
0x000000000001ee8e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee8e <__subtf3+20>:	srli	a4,a4,0x10
0x000000000001ee90	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee90 <__subtf3+22>:	lui	a6,0x8
0x000000000001ee92	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee92 <__subtf3+24>:	srli	a7,a1,0x30
0x000000000001ee96	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee96 <__subtf3+28>:	addi	a6,a6,-1
0x000000000001ee98	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1ee98 <__subtf3+30>:	srli	t4,a3,0x30
0x000000000001ee9c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1ee9c <__subtf3+34>:	srli	s0,a1,0x3f
0x000000000001eea0	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea0 <__subtf3+38>:	srli	t1,a3,0x3f
0x000000000001eea4	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea4 <__subtf3+42>:	and	a1,a1,a4
0x000000000001eea6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eea6 <__subtf3+44>:	and	a3,a3,a4
0x000000000001eea8	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eea8 <__subtf3+46>:	slli	a1,a1,0x3
0x000000000001eeaa	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeaa <__subtf3+48>:	srli	a5,a0,0x3d
0x000000000001eeae	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeae <__subtf3+52>:	srli	a4,a2,0x3d
0x000000000001eeb2	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eeb2 <__subtf3+56>:	and	a7,a7,a6
0x000000000001eeb6	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeb6 <__subtf3+60>:	and	t4,t4,a6
0x000000000001eeba	45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eeba <__subtf3+64>:	slli	a3,a3,0x3
0x000000000001eebc	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eebc <__subtf3+66>:	or	a5,a5,a1
0x000000000001eebe	43	  FP_INIT_ROUNDMODE;
=> 0x1eebe <__subtf3+68>:	sext.w	s1,s1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec0 <__subtf3+70>:	mv	s3,a7
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1eec2 <__subtf3+72>:	slli	a0,a0,0x3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec4 <__subtf3+74>:	mv	a1,t4
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec6 <__subtf3+76>:	or	a4,a4,a3
45	  FP_UNPACK_SEMIRAW_Q (B, b);
=> 0x1eec8 <__subtf3+78>:	slli	a2,a2,0x3
46	  FP_SUB_Q (R, A, B);
=> 0x1eeca <__subtf3+80>:	bne	t4,a6,0x1eed4 <__subtf3+90>
0x000000000001eed4	46	  FP_SUB_Q (R, A, B);
=> 0x1eed4 <__subtf3+90>:	xori	t1,t1,1
0x000000000001eed8	46	  FP_SUB_Q (R, A, B);
=> 0x1eed8 <__subtf3+94>:	subw	a3,a7,t4
0x000000000001eedc	46	  FP_SUB_Q (R, A, B);
=> 0x1eedc <__subtf3+98>:	lui	t3,0x8
0x000000000001eede	46	  FP_SUB_Q (R, A, B);
=> 0x1eede <__subtf3+100>:	sext.w	a6,a3
0x000000000001eee2	46	  FP_SUB_Q (R, A, B);
=> 0x1eee2 <__subtf3+104>:	addi	t5,t3,-1
0x000000000001eee6	46	  FP_SUB_Q (R, A, B);
=> 0x1eee6 <__subtf3+108>:	bne	t1,s0,0x1f264 <__subtf3+1002>
0x000000000001f264	46	  FP_SUB_Q (R, A, B);
=> 0x1f264 <__subtf3+1002>:	blez	a6,0x1f31a <__subtf3+1184>
0x000000000001f31a	46	  FP_SUB_Q (R, A, B);
=> 0x1f31a <__subtf3+1184>:	beqz	a6,0x1f40a <__subtf3+1424>
0x000000000001f40a	46	  FP_SUB_Q (R, A, B);
=> 0x1f40a <__subtf3+1424>:	addi	a1,a7,1
0x000000000001f40e	46	  FP_SUB_Q (R, A, B);
=> 0x1f40e <__subtf3+1428>:	addi	a3,t3,-2
0x000000000001f412	46	  FP_SUB_Q (R, A, B);
=> 0x1f412 <__subtf3+1432>:	and	a3,a3,a1
0x000000000001f414	46	  FP_SUB_Q (R, A, B);
=> 0x1f414 <__subtf3+1434>:	bnez	a3,0x1f50c <__subtf3+1682>
0x000000000001f416	46	  FP_SUB_Q (R, A, B);
=> 0x1f416 <__subtf3+1436>:	or	t3,a5,a0
0x000000000001f41a	46	  FP_SUB_Q (R, A, B);
=> 0x1f41a <__subtf3+1440>:	or	a1,a4,a2
0x000000000001f41e	46	  FP_SUB_Q (R, A, B);
=> 0x1f41e <__subtf3+1444>:	bnez	a7,0x1f4c6 <__subtf3+1612>
0x000000000001f422	46	  FP_SUB_Q (R, A, B);
=> 0x1f422 <__subtf3+1448>:	bnez	t3,0x1f482 <__subtf3+1544>
0x000000000001f426	46	  FP_SUB_Q (R, A, B);
=> 0x1f426 <__subtf3+1452>:	bnez	a1,0x1f602 <__subtf3+1928>
0x000000000001f42a	46	  FP_SUB_Q (R, A, B);
=> 0x1f42a <__subtf3+1456>:	addi	s0,s1,-2
0x000000000001f42e	46	  FP_SUB_Q (R, A, B);
=> 0x1f42e <__subtf3+1460>:	seqz	s0,s0
0x000000000001f432	46	  FP_SUB_Q (R, A, B);
=> 0x1f432 <__subtf3+1464>:	li	a5,0
0x000000000001f434	46	  FP_SUB_Q (R, A, B);
=> 0x1f434 <__subtf3+1466>:	li	a0,0
0x000000000001f436	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f436 <__subtf3+1468>:	or	a4,a0,a5
0x000000000001f43a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f43a <__subtf3+1472>:	beqz	a4,0x1f65e <__subtf3+2020>
0x000000000001f65e	46	  FP_SUB_Q (R, A, B);
=> 0x1f65e <__subtf3+2020>:	li	a5,0
0x000000000001f660	46	  FP_SUB_Q (R, A, B);
=> 0x1f660 <__subtf3+2022>:	li	a0,0
0x000000000001f662	46	  FP_SUB_Q (R, A, B);
=> 0x1f662 <__subtf3+2024>:	li	a1,0
0x000000000001f664	46	  FP_SUB_Q (R, A, B);
=> 0x1f664 <__subtf3+2026>:	j	0x1f62e <__subtf3+1972>
0x000000000001f62e	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f62e <__subtf3+1972>:	li	a3,0
0x000000000001f630	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f630 <__subtf3+1974>:	j	0x1f170 <__subtf3+758>
47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f170 <__subtf3+758>:	srli	a4,a5,0x33
0x000000000001f174	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f174 <__subtf3+762>:	andi	a4,a4,1
0x000000000001f176	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f176 <__subtf3+764>:	beqz	a4,0x1f18c <__subtf3+786>
0x000000000001f18c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f18c <__subtf3+786>:	srli	a4,a0,0x3
0x000000000001f190	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f190 <__subtf3+790>:	slli	a0,a5,0x3d
0x000000000001f194	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f194 <__subtf3+794>:	or	a0,a0,a4
0x000000000001f196	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f196 <__subtf3+796>:	lui	a4,0x8
0x000000000001f198	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f198 <__subtf3+798>:	addi	a4,a4,-1
0x000000000001f19a	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19a <__subtf3+800>:	srli	a5,a5,0x3
0x000000000001f19c	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f19c <__subtf3+802>:	bne	a1,a4,0x1f1ae <__subtf3+820>
0x000000000001f1ae	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ae <__subtf3+820>:	slli	a1,a1,0x31
0x000000000001f1b0	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b0 <__subtf3+822>:	slliw	s0,s0,0xf
0x000000000001f1b4	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b4 <__subtf3+826>:	srli	a1,a1,0x31
0x000000000001f1b6	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b6 <__subtf3+828>:	or	a1,a1,s0
0x000000000001f1b8	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1b8 <__subtf3+830>:	slli	a5,a5,0x10
0x000000000001f1ba	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1ba <__subtf3+832>:	slli	s0,a1,0x30
0x000000000001f1be	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1be <__subtf3+836>:	srli	a1,a5,0x10
0x000000000001f1c2	47	  FP_PACK_SEMIRAW_Q (r, R);
=> 0x1f1c2 <__subtf3+840>:	or	a1,a1,s0
48	  FP_HANDLE_EXCEPTIONS;
=> 0x1f1c4 <__subtf3+842>:	beqz	a3,0x1f1ca <__subtf3+848>
50	  return r;
=> 0x1f1ca <__subtf3+848>:	ld	ra,40(sp)
0x000000000001f1cc	50	  return r;
=> 0x1f1cc <__subtf3+850>:	ld	s0,32(sp)
0x000000000001f1ce	50	  return r;
=> 0x1f1ce <__subtf3+852>:	ld	s1,24(sp)
0x000000000001f1d0	50	  return r;
=> 0x1f1d0 <__subtf3+854>:	ld	s2,16(sp)
0x000000000001f1d2	50	  return r;
=> 0x1f1d2 <__subtf3+856>:	ld	s3,8(sp)
0x000000000001f1d4	50	  return r;
=> 0x1f1d4 <__subtf3+858>:	ld	s4,0(sp)
0x000000000001f1d6	50	  return r;
=> 0x1f1d6 <__subtf3+860>:	addi	sp,sp,48
0x000000000001f1d8	50	  return r;
=> 0x1f1d8 <__subtf3+862>:	ret
0x0000000000010b90 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b90 <SolveCubic+1324>:	jal	ra,0x1f85c <__trunctfdf2>
__trunctfdf2 (a=0) at ../../../../riscv-gcc/libgcc/soft-fp/trunctfdf2.c:43
43	  FP_INIT_ROUNDMODE;
=> 0x1f85c <__trunctfdf2>:	frrm	a6
0x000000000001f860	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f860 <__trunctfdf2+4>:	lui	t1,0x8
0x000000000001f862	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f862 <__trunctfdf2+6>:	srli	a4,a1,0x30
0x000000000001f866	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f866 <__trunctfdf2+10>:	addi	t3,t1,-1
0x000000000001f86a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86a <__trunctfdf2+14>:	and	a2,a4,t3
0x000000000001f86e	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f86e <__trunctfdf2+18>:	srli	a3,a1,0x3f
0x000000000001f872	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f872 <__trunctfdf2+22>:	addi	a5,a2,1
0x000000000001f876	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f876 <__trunctfdf2+26>:	slli	a1,a1,0x10
0x000000000001f878	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f878 <__trunctfdf2+28>:	addi	t1,t1,-2
0x000000000001f87a	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87a <__trunctfdf2+30>:	srli	a1,a1,0xd
0x000000000001f87c	44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f87c <__trunctfdf2+32>:	srli	a4,a0,0x3d
0x000000000001f880	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f880 <__trunctfdf2+36>:	and	t1,a5,t1
0x000000000001f884	43	  FP_INIT_ROUNDMODE;
=> 0x1f884 <__trunctfdf2+40>:	sext.w	a6,a6
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f886 <__trunctfdf2+42>:	or	a4,a4,a1
44	  FP_UNPACK_SEMIRAW_Q (A, a);
=> 0x1f888 <__trunctfdf2+44>:	slli	t4,a0,0x3
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1f88c <__trunctfdf2+48>:	beqz	t1,0x1fa0a <__trunctfdf2+430>
48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0a <__trunctfdf2+430>:	or	a5,a4,t4
0x000000000001fa0e	48	  FP_TRUNC (D, Q, 1, 2, R, A);
=> 0x1fa0e <__trunctfdf2+434>:	bnez	a2,0x1fa16 <__trunctfdf2+442>
0x000000000001fa10	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa10 <__trunctfdf2+436>:	bnez	a5,0x1fa40 <__trunctfdf2+484>
0x000000000001fa12	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa12 <__trunctfdf2+438>:	li	a7,0
0x000000000001fa14	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1fa14 <__trunctfdf2+440>:	j	0x1f8ee <__trunctfdf2+146>
50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8ee <__trunctfdf2+146>:	srli	a4,a5,0x37
0x000000000001f8f2	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f2 <__trunctfdf2+150>:	andi	a4,a4,1
0x000000000001f8f4	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f8f4 <__trunctfdf2+152>:	beqz	a4,0x1f908 <__trunctfdf2+172>
0x000000000001f908	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f908 <__trunctfdf2+172>:	li	a4,2047
0x000000000001f90c	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90c <__trunctfdf2+176>:	srli	a5,a5,0x3
0x000000000001f90e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f90e <__trunctfdf2+178>:	bne	a2,a4,0x1f91a <__trunctfdf2+190>
0x000000000001f91a	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91a <__trunctfdf2+190>:	andi	a4,a2,2047
0x000000000001f91e	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f91e <__trunctfdf2+194>:	slli	a5,a5,0xc
0x000000000001f920	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f920 <__trunctfdf2+196>:	slli	a4,a4,0x34
0x000000000001f922	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f922 <__trunctfdf2+198>:	srli	a5,a5,0xc
0x000000000001f924	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f924 <__trunctfdf2+200>:	or	a5,a5,a4
0x000000000001f926	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f926 <__trunctfdf2+202>:	slli	a3,a3,0x3f
0x000000000001f928	50	  FP_PACK_SEMIRAW_D (r, R);
=> 0x1f928 <__trunctfdf2+204>:	or	a5,a5,a3
51	  FP_HANDLE_EXCEPTIONS;
=> 0x1f92a <__trunctfdf2+206>:	beqz	a7,0x1f932 <__trunctfdf2+214>
53	  return r;
=> 0x1f932 <__trunctfdf2+214>:	fmv.d.x	fa0,a5
0x000000000001f936	53	  return r;
=> 0x1f936 <__trunctfdf2+218>:	ret
0x0000000000010b94 in SolveCubic (a=0, b=0, c=0, d=0, solutions=0x3ffffffa5c, x=0x3ffffff8d8) at libcubic.c:51
51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b94 <SolveCubic+1328>:	ld	a0,-64(s0)
0x0000000000010b98	51	      x[2] = -2.0*sqrt(Q)*cos((theta+4.0*PI)/3.0) - a1/3.0;
=> 0x10b98 <SolveCubic+1332>:	fsd	fa0,16(a0)
52	   }
=> 0x10b9c <SolveCubic+1336>:	j	0x10cfc <SolveCubic+1688>
61	}
=> 0x10cfc <SolveCubic+1688>:	ld	s0,720(sp)
0x0000000000010d00 in SolveCubic (a=1, b=-10.5, c=32, d=-30, solutions=0x3ff0000000000000, x=0xc012000000000000) at libcubic.c:61
61	}
=> 0x10d00 <SolveCubic+1692>:	ld	ra,728(sp)
0x0000000000010d04	61	}
=> 0x10d04 <SolveCubic+1696>:	addi	sp,sp,736
0x0000000000010d08	61	}
=> 0x10d08 <SolveCubic+1700>:	ld	ra,0(t6)
0x0000000000010d0c	61	}
=> 0x10d0c <SolveCubic+1704>:	addi	t6,t6,16
0x0000000000010d10	61	}
=> 0x10d10 <SolveCubic+1708>:	ret
benchmark () at basicmath_small.c:65
65	   for(a1=1;a1<3;a1++) {
=> 0x10528 <benchmark+392>:	ld	a0,-552(s0)
0x000000000001052c	65	   for(a1=1;a1<3;a1++) {
=> 0x1052c <benchmark+396>:	sd	a0,-24(s0)
0x0000000000010530	65	   for(a1=1;a1<3;a1++) {
=> 0x10530 <benchmark+400>:	j	0x10534 <benchmark+404>
0x0000000000010534	65	   for(a1=1;a1<3;a1++) {
=> 0x10534 <benchmark+404>:	fld	ft0,-24(s0)
0x0000000000010538	65	   for(a1=1;a1<3;a1++) {
=> 0x10538 <benchmark+408>:	fld	ft1,1776(gp)
0x000000000001053c	65	   for(a1=1;a1<3;a1++) {
=> 0x1053c <benchmark+412>:	flt.d	a0,ft0,ft1
0x0000000000010540	65	   for(a1=1;a1<3;a1++) {
=> 0x10540 <benchmark+416>:	xori	a0,a0,1
0x0000000000010544	65	   for(a1=1;a1<3;a1++) {
=> 0x10544 <benchmark+420>:	bnez	a0,0x10648 <benchmark+680>
0x0000000000010648	65	   for(a1=1;a1<3;a1++) {
=> 0x10648 <benchmark+680>:	li	a0,0
75	   return 0;
=> 0x1064c <benchmark+684>:	ld	s0,560(sp)
0x0000000000010650 in benchmark () at basicmath_small.c:75
75	   return 0;
=> 0x10650 <benchmark+688>:	ld	ra,568(sp)
0x0000000000010654	75	   return 0;
=> 0x10654 <benchmark+692>:	addi	sp,sp,576
0x0000000000010658	75	   return 0;
=> 0x10658 <benchmark+696>:	ld	ra,0(t6)
0x000000000001065c	75	   return 0;
=> 0x1065c <benchmark+700>:	addi	t6,t6,16
0x0000000000010660	75	   return 0;
=> 0x10660 <benchmark+704>:	ret
0x0000000000010248 in main (argc=1, argv=0x3ffffffb78) at main.c:57
57	      result = benchmark ();
=> 0x10248 <main+184>:	sw	a0,-40(s0)
58	    }
=> 0x1024c <main+188>:	j	0x10250 <main+192>
54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10250 <main+192>:	lw	a0,-36(s0)
0x0000000000010254	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10254 <main+196>:	addi	a0,a0,1
0x0000000000010258	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10258 <main+200>:	sw	a0,-36(s0)
0x000000000001025c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1025c <main+204>:	j	0x1022c <main+156>
0x000000000001022c	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x1022c <main+156>:	lw	a0,-36(s0)
0x0000000000010230	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10230 <main+160>:	li	a1,0
0x0000000000010234	54	  for (i = 0; i < REPEAT_FACTOR; i++)
=> 0x10234 <main+164>:	blt	a1,a0,0x10260 <main+208>
60	  stop_trigger ();
=> 0x10260 <main+208>:	jal	ra,0x102f8 <stop_trigger>
stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:40
40	{
=> 0x102f8 <stop_trigger>:	addi	t6,t6,-16
0x00000000000102fc	40	{
=> 0x102fc <stop_trigger+4>:	sd	ra,0(t6)
0x0000000000010300	40	{
=> 0x10300 <stop_trigger+8>:	st	zero,0(t6)
0x0000000000010304	40	{
=> 0x10304 <stop_trigger+12>:	addi	sp,sp,-16
47	}
=> 0x10308 <stop_trigger+16>:	sd	ra,8(sp)
0x000000000001030c	47	}
=> 0x1030c <stop_trigger+20>:	sd	s0,0(sp)
0x0000000000010310	47	}
=> 0x10310 <stop_trigger+24>:	addi	s0,sp,16
0x0000000000010314	47	}
=> 0x10314 <stop_trigger+28>:	ld	s0,0(sp)
0x0000000000010318 in stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:47
47	}
=> 0x10318 <stop_trigger+32>:	ld	ra,8(sp)
0x000000000001031c	47	}
=> 0x1031c <stop_trigger+36>:	addi	sp,sp,16
0x0000000000010320	47	}
=> 0x10320 <stop_trigger+40>:	ld	ra,0(t6)
0x0000000000010324	47	}
=> 0x10324 <stop_trigger+44>:	addi	t6,t6,16
0x0000000000010328	47	}
=> 0x10328 <stop_trigger+48>:	ret
main (argc=1, argv=0x3ffffffb78) at main.c:64
64	  correct = verify_benchmark (result);
=> 0x10264 <main+212>:	lw	a0,-40(s0)
0x0000000000010268	64	  correct = verify_benchmark (result);
=> 0x10268 <main+216>:	jal	ra,0x1032c <verify_benchmark>
verify_benchmark (res=0) at basicmath_small.c:34
34	{
=> 0x1032c <verify_benchmark>:	addi	t6,t6,-16
0x0000000000010330	34	{
=> 0x10330 <verify_benchmark+4>:	sd	ra,0(t6)
0x0000000000010334	34	{
=> 0x10334 <verify_benchmark+8>:	st	zero,0(t6)
0x0000000000010338	34	{
=> 0x10338 <verify_benchmark+12>:	addi	sp,sp,-32
0x000000000001033c	34	{
=> 0x1033c <verify_benchmark+16>:	sd	ra,24(sp)
0x0000000000010340	34	{
=> 0x10340 <verify_benchmark+20>:	sd	s0,16(sp)
0x0000000000010344	34	{
=> 0x10344 <verify_benchmark+24>:	addi	s0,sp,32
0x0000000000010348	34	{
=> 0x10348 <verify_benchmark+28>:	mv	a1,a0
0x000000000001034c	34	{
=> 0x1034c <verify_benchmark+32>:	sw	a0,-20(s0)
0x0000000000010350	34	{
=> 0x10350 <verify_benchmark+36>:	li	a0,-1
35	  return -1;
=> 0x10354 <verify_benchmark+40>:	ld	s0,16(sp)
0x0000000000010358 in verify_benchmark (res=0) at basicmath_small.c:35
35	  return -1;
=> 0x10358 <verify_benchmark+44>:	ld	ra,24(sp)
0x000000000001035c	35	  return -1;
=> 0x1035c <verify_benchmark+48>:	addi	sp,sp,32
0x0000000000010360	35	  return -1;
=> 0x10360 <verify_benchmark+52>:	ld	ra,0(t6)
0x0000000000010364	35	  return -1;
=> 0x10364 <verify_benchmark+56>:	addi	t6,t6,16
0x0000000000010368	35	  return -1;
=> 0x10368 <verify_benchmark+60>:	ret
0x000000000001026c in main (argc=1, argv=0x3ffffffb78) at main.c:64
64	  correct = verify_benchmark (result);
=> 0x1026c <main+220>:	sw	a0,-44(s0)
66	  free(a);
=> 0x10270 <main+224>:	ld	a0,-56(s0)
0x0000000000010274	66	  free(a);
=> 0x10274 <main+228>:	jal	ra,0x12878 <free>
0x0000000000012878 in free ()
=> 0x12878 <free>:	mv	a1,a0
0x000000000001287a in free ()
=> 0x1287a <free+2>:	ld	a0,1872(gp)
0x000000000001287e in free ()
=> 0x1287e <free+6>:	j	0x1538e <_free_r>
0x000000000001538e in _free_r ()
=> 0x1538e <_free_r>:	beqz	a1,0x1547e <_free_r+240>
0x0000000000015390 in _free_r ()
=> 0x15390 <_free_r+2>:	addi	sp,sp,-32
0x0000000000015392 in _free_r ()
=> 0x15392 <_free_r+4>:	sd	s0,16(sp)
0x0000000000015394 in _free_r ()
=> 0x15394 <_free_r+6>:	sd	s1,8(sp)
0x0000000000015396 in _free_r ()
=> 0x15396 <_free_r+8>:	mv	s0,a1
0x0000000000015398 in _free_r ()
=> 0x15398 <_free_r+10>:	mv	s1,a0
0x000000000001539a in _free_r ()
=> 0x1539a <_free_r+12>:	sd	ra,24(sp)
0x000000000001539c in _free_r ()
=> 0x1539c <_free_r+14>:	jal	ra,0x12f4e <__malloc_lock>
0x0000000000012f4e in __malloc_lock ()
=> 0x12f4e <__malloc_lock>:	ret
0x00000000000153a0 in _free_r ()
=> 0x153a0 <_free_r+18>:	ld	a0,-8(s0)
0x00000000000153a4 in _free_r ()
=> 0x153a4 <_free_r+22>:	addi	a4,s0,-16
0x00000000000153a8 in _free_r ()
=> 0x153a8 <_free_r+26>:	lui	a1,0x21
0x00000000000153ac in _free_r ()
=> 0x153ac <_free_r+30>:	andi	a5,a0,-2
0x00000000000153b0 in _free_r ()
=> 0x153b0 <_free_r+34>:	add	a2,a4,a5
0x00000000000153b4 in _free_r ()
=> 0x153b4 <_free_r+38>:	addi	a1,a1,1896
0x00000000000153b8 in _free_r ()
=> 0x153b8 <_free_r+42>:	ld	a3,8(a2)
0x00000000000153ba in _free_r ()
=> 0x153ba <_free_r+44>:	ld	a6,16(a1)
0x00000000000153be in _free_r ()
=> 0x153be <_free_r+48>:	andi	a3,a3,-4
0x00000000000153c0 in _free_r ()
=> 0x153c0 <_free_r+50>:	beq	a6,a2,0x15504 <_free_r+374>
0x00000000000153c4 in _free_r ()
=> 0x153c4 <_free_r+54>:	sd	a3,8(a2)
0x00000000000153c6 in _free_r ()
=> 0x153c6 <_free_r+56>:	andi	a0,a0,1
0x00000000000153c8 in _free_r ()
=> 0x153c8 <_free_r+58>:	add	a6,a2,a3
0x00000000000153cc in _free_r ()
=> 0x153cc <_free_r+62>:	bnez	a0,0x1544e <_free_r+192>
0x000000000001544e in _free_r ()
=> 0x1544e <_free_r+192>:	ld	a0,8(a6)
0x0000000000015452 in _free_r ()
=> 0x15452 <_free_r+196>:	andi	a0,a0,1
0x0000000000015454 in _free_r ()
=> 0x15454 <_free_r+198>:	bnez	a0,0x15480 <_free_r+242>
0x0000000000015480 in _free_r ()
=> 0x15480 <_free_r+242>:	ori	a3,a5,1
0x0000000000015484 in _free_r ()
=> 0x15484 <_free_r+246>:	sd	a3,-8(s0)
0x0000000000015488 in _free_r ()
=> 0x15488 <_free_r+250>:	sd	a5,0(a2)
0x000000000001548a in _free_r ()
=> 0x1548a <_free_r+252>:	li	a3,511
0x000000000001548e in _free_r ()
=> 0x1548e <_free_r+256>:	bgeu	a3,a5,0x15410 <_free_r+130>
0x0000000000015492 in _free_r ()
=> 0x15492 <_free_r+260>:	srli	a3,a5,0x9
0x0000000000015496 in _free_r ()
=> 0x15496 <_free_r+264>:	li	a2,4
0x0000000000015498 in _free_r ()
=> 0x15498 <_free_r+266>:	bltu	a2,a3,0x15536 <_free_r+424>
0x0000000000015536 in _free_r ()
=> 0x15536 <_free_r+424>:	li	a2,20
0x0000000000015538 in _free_r ()
=> 0x15538 <_free_r+426>:	bgeu	a2,a3,0x1555c <_free_r+462>
0x000000000001553c in _free_r ()
=> 0x1553c <_free_r+430>:	li	a2,84
0x0000000000015540 in _free_r ()
=> 0x15540 <_free_r+434>:	bltu	a2,a3,0x15594 <_free_r+518>
0x0000000000015594 in _free_r ()
=> 0x15594 <_free_r+518>:	li	a2,340
0x0000000000015598 in _free_r ()
=> 0x15598 <_free_r+522>:	bltu	a2,a3,0x155b0 <_free_r+546>
0x00000000000155b0 in _free_r ()
=> 0x155b0 <_free_r+546>:	li	a2,1364
0x00000000000155b4 in _free_r ()
=> 0x155b4 <_free_r+550>:	bltu	a2,a3,0x155cc <_free_r+574>
0x00000000000155cc in _free_r ()
=> 0x155cc <_free_r+574>:	li	a0,2032
0x00000000000155d0 in _free_r ()
=> 0x155d0 <_free_r+578>:	li	a2,126
0x00000000000155d4 in _free_r ()
=> 0x155d4 <_free_r+582>:	j	0x154ae <_free_r+288>
0x00000000000154ae in _free_r ()
=> 0x154ae <_free_r+288>:	add	a0,a0,a1
0x00000000000154b0 in _free_r ()
=> 0x154b0 <_free_r+290>:	ld	a3,0(a0)
0x00000000000154b2 in _free_r ()
=> 0x154b2 <_free_r+292>:	addi	a0,a0,-16
0x00000000000154b4 in _free_r ()
=> 0x154b4 <_free_r+294>:	beq	a0,a3,0x1557e <_free_r+496>
0x000000000001557e in _free_r ()
=> 0x1557e <_free_r+496>:	ld	a6,8(a1)
0x0000000000015582 in _free_r ()
=> 0x15582 <_free_r+500>:	sraiw	a2,a2,0x2
0x0000000000015586 in _free_r ()
=> 0x15586 <_free_r+504>:	li	a5,1
0x0000000000015588 in _free_r ()
=> 0x15588 <_free_r+506>:	sll	a2,a5,a2
0x000000000001558c in _free_r ()
=> 0x1558c <_free_r+510>:	or	a2,a2,a6
0x0000000000015590 in _free_r ()
=> 0x15590 <_free_r+514>:	sd	a2,8(a1)
0x0000000000015592 in _free_r ()
=> 0x15592 <_free_r+516>:	j	0x154c8 <_free_r+314>
0x00000000000154c8 in _free_r ()
=> 0x154c8 <_free_r+314>:	sd	a0,24(a4)
0x00000000000154ca in _free_r ()
=> 0x154ca <_free_r+316>:	sd	a3,16(a4)
0x00000000000154cc in _free_r ()
=> 0x154cc <_free_r+318>:	ld	s0,16(sp)
0x00000000000154ce in _free_r ()
=> 0x154ce <_free_r+320>:	sd	a4,16(a0)
0x00000000000154d0 in _free_r ()
=> 0x154d0 <_free_r+322>:	ld	ra,24(sp)
0x00000000000154d2 in _free_r ()
=> 0x154d2 <_free_r+324>:	mv	a0,s1
0x00000000000154d4 in _free_r ()
=> 0x154d4 <_free_r+326>:	ld	s1,8(sp)
0x00000000000154d6 in _free_r ()
=> 0x154d6 <_free_r+328>:	sd	a4,24(a3)
0x00000000000154d8 in _free_r ()
=> 0x154d8 <_free_r+330>:	addi	sp,sp,32
0x00000000000154da in _free_r ()
=> 0x154da <_free_r+332>:	j	0x12f50 <__malloc_unlock>
0x0000000000012f50 in __malloc_unlock ()
=> 0x12f50 <__malloc_unlock>:	ret
main (argc=1, argv=0x3ffffffb78) at main.c:68
68	  return (!correct);
=> 0x10278 <main+232>:	lw	a0,-44(s0)
0x000000000001027c	68	  return (!correct);
=> 0x1027c <main+236>:	seqz	a0,a0
0x0000000000010280	68	  return (!correct);
=> 0x10280 <main+240>:	ld	s0,112(sp)
0x0000000000010284 in main (argc=<error reading variable: Cannot access memory at address 0x2aaabbdcc8>, argv=<error reading variable: Cannot access memory at address 0x2aaabbdcc0>) at main.c:68
68	  return (!correct);
=> 0x10284 <main+244>:	ld	ra,120(sp)
0x0000000000010288	68	  return (!correct);
=> 0x10288 <main+248>:	addi	sp,sp,128
0x000000000001028c	68	  return (!correct);
=> 0x1028c <main+252>:	ret
0x000000000001013a in _start ()
=> 0x1013a <_start+64>:	j	0x127e0 <exit>
0x00000000000127e0 in exit ()
=> 0x127e0 <exit>:	addi	sp,sp,-16
0x00000000000127e2 in exit ()
=> 0x127e2 <exit+2>:	li	a1,0
0x00000000000127e4 in exit ()
=> 0x127e4 <exit+4>:	sd	s0,0(sp)
0x00000000000127e6 in exit ()
=> 0x127e6 <exit+6>:	sd	ra,8(sp)
0x00000000000127e8 in exit ()
=> 0x127e8 <exit+8>:	mv	s0,a0
0x00000000000127ea in exit ()
=> 0x127ea <exit+10>:	jal	ra,0x14d28 <__call_exitprocs>
0x0000000000014d28 in __call_exitprocs ()
=> 0x14d28 <__call_exitprocs>:	addi	sp,sp,-80
0x0000000000014d2a in __call_exitprocs ()
=> 0x14d2a <__call_exitprocs+2>:	sd	s4,32(sp)
0x0000000000014d2c in __call_exitprocs ()
=> 0x14d2c <__call_exitprocs+4>:	ld	s4,1760(gp)
0x0000000000014d30 in __call_exitprocs ()
=> 0x14d30 <__call_exitprocs+8>:	sd	s2,48(sp)
0x0000000000014d32 in __call_exitprocs ()
=> 0x14d32 <__call_exitprocs+10>:	sd	ra,72(sp)
0x0000000000014d34 in __call_exitprocs ()
=> 0x14d34 <__call_exitprocs+12>:	ld	s2,504(s4)
0x0000000000014d38 in __call_exitprocs ()
=> 0x14d38 <__call_exitprocs+16>:	sd	s0,64(sp)
0x0000000000014d3a in __call_exitprocs ()
=> 0x14d3a <__call_exitprocs+18>:	sd	s1,56(sp)
0x0000000000014d3c in __call_exitprocs ()
=> 0x14d3c <__call_exitprocs+20>:	sd	s3,40(sp)
0x0000000000014d3e in __call_exitprocs ()
=> 0x14d3e <__call_exitprocs+22>:	sd	s5,24(sp)
0x0000000000014d40 in __call_exitprocs ()
=> 0x14d40 <__call_exitprocs+24>:	sd	s6,16(sp)
0x0000000000014d42 in __call_exitprocs ()
=> 0x14d42 <__call_exitprocs+26>:	sd	s7,8(sp)
0x0000000000014d44 in __call_exitprocs ()
=> 0x14d44 <__call_exitprocs+28>:	sd	s8,0(sp)
0x0000000000014d46 in __call_exitprocs ()
=> 0x14d46 <__call_exitprocs+30>:	beqz	s2,0x14d76 <__call_exitprocs+78>
0x0000000000014d4a in __call_exitprocs ()
=> 0x14d4a <__call_exitprocs+34>:	mv	s6,a0
0x0000000000014d4c in __call_exitprocs ()
=> 0x14d4c <__call_exitprocs+36>:	mv	s7,a1
0x0000000000014d4e in __call_exitprocs ()
=> 0x14d4e <__call_exitprocs+38>:	li	s5,1
0x0000000000014d50 in __call_exitprocs ()
=> 0x14d50 <__call_exitprocs+40>:	li	s3,-1
0x0000000000014d52 in __call_exitprocs ()
=> 0x14d52 <__call_exitprocs+42>:	lw	s1,8(s2)
0x0000000000014d56 in __call_exitprocs ()
=> 0x14d56 <__call_exitprocs+46>:	addiw	s0,s1,-1
0x0000000000014d5a in __call_exitprocs ()
=> 0x14d5a <__call_exitprocs+50>:	bltz	s0,0x14d76 <__call_exitprocs+78>
0x0000000000014d5e in __call_exitprocs ()
=> 0x14d5e <__call_exitprocs+54>:	slli	s1,s1,0x3
0x0000000000014d60 in __call_exitprocs ()
=> 0x14d60 <__call_exitprocs+56>:	add	s1,s1,s2
0x0000000000014d62 in __call_exitprocs ()
=> 0x14d62 <__call_exitprocs+58>:	beqz	s7,0x14d8e <__call_exitprocs+102>
0x0000000000014d8e in __call_exitprocs ()
=> 0x14d8e <__call_exitprocs+102>:	lw	a5,8(s2)
0x0000000000014d92 in __call_exitprocs ()
=> 0x14d92 <__call_exitprocs+106>:	ld	a4,8(s1)
0x0000000000014d94 in __call_exitprocs ()
=> 0x14d94 <__call_exitprocs+108>:	addiw	a5,a5,-1
0x0000000000014d96 in __call_exitprocs ()
=> 0x14d96 <__call_exitprocs+110>:	beq	a5,s0,0x14dde <__call_exitprocs+182>
0x0000000000014dde in __call_exitprocs ()
=> 0x14dde <__call_exitprocs+182>:	sw	s0,8(s2)
0x0000000000014de2 in __call_exitprocs ()
=> 0x14de2 <__call_exitprocs+186>:	j	0x14d9e <__call_exitprocs+118>
0x0000000000014d9e in __call_exitprocs ()
=> 0x14d9e <__call_exitprocs+118>:	beqz	a4,0x14d6e <__call_exitprocs+70>
0x0000000000014da0 in __call_exitprocs ()
=> 0x14da0 <__call_exitprocs+120>:	lw	a5,784(s2)
0x0000000000014da4 in __call_exitprocs ()
=> 0x14da4 <__call_exitprocs+124>:	sllw	a3,s5,s0
0x0000000000014da8 in __call_exitprocs ()
=> 0x14da8 <__call_exitprocs+128>:	lw	s8,8(s2)
0x0000000000014dac in __call_exitprocs ()
=> 0x14dac <__call_exitprocs+132>:	and	a5,a5,a3
0x0000000000014dae in __call_exitprocs ()
=> 0x14dae <__call_exitprocs+134>:	sext.w	a5,a5
0x0000000000014db0 in __call_exitprocs ()
=> 0x14db0 <__call_exitprocs+136>:	bnez	a5,0x14dca <__call_exitprocs+162>
0x0000000000014db2 in __call_exitprocs ()
=> 0x14db2 <__call_exitprocs+138>:	jalr	a4
0x0000000000015280 in __libc_fini_array ()
=> 0x15280 <__libc_fini_array>:	addi	sp,sp,-32
0x0000000000015282 in __libc_fini_array ()
=> 0x15282 <__libc_fini_array+2>:	sd	s0,16(sp)
0x0000000000015284 in __libc_fini_array ()
=> 0x15284 <__libc_fini_array+4>:	lui	a5,0x21
0x0000000000015288 in __libc_fini_array ()
=> 0x15288 <__libc_fini_array+8>:	lui	s0,0x21
0x000000000001528c in __libc_fini_array ()
=> 0x1528c <__libc_fini_array+12>:	addi	s0,s0,24
0x0000000000015290 in __libc_fini_array ()
=> 0x15290 <__libc_fini_array+16>:	addi	a5,a5,32
0x0000000000015294 in __libc_fini_array ()
=> 0x15294 <__libc_fini_array+20>:	sub	a5,a5,s0
0x0000000000015296 in __libc_fini_array ()
=> 0x15296 <__libc_fini_array+22>:	sd	s1,8(sp)
0x0000000000015298 in __libc_fini_array ()
=> 0x15298 <__libc_fini_array+24>:	sd	ra,24(sp)
0x000000000001529a in __libc_fini_array ()
=> 0x1529a <__libc_fini_array+26>:	srai	s1,a5,0x3
0x000000000001529e in __libc_fini_array ()
=> 0x1529e <__libc_fini_array+30>:	beqz	s1,0x152ae <__libc_fini_array+46>
0x00000000000152a0 in __libc_fini_array ()
=> 0x152a0 <__libc_fini_array+32>:	addi	a5,a5,-8
0x00000000000152a2 in __libc_fini_array ()
=> 0x152a2 <__libc_fini_array+34>:	add	s0,s0,a5
0x00000000000152a4 in __libc_fini_array ()
=> 0x152a4 <__libc_fini_array+36>:	ld	a5,0(s0)
0x00000000000152a6 in __libc_fini_array ()
=> 0x152a6 <__libc_fini_array+38>:	addi	s1,s1,-1
0x00000000000152a8 in __libc_fini_array ()
=> 0x152a8 <__libc_fini_array+40>:	addi	s0,s0,-8
0x00000000000152aa in __libc_fini_array ()
=> 0x152aa <__libc_fini_array+42>:	jalr	a5
0x000000000001013e in __do_global_dtors_aux ()
=> 0x1013e <__do_global_dtors_aux>:	lbu	a4,1952(gp)
0x0000000000010142 in __do_global_dtors_aux ()
=> 0x10142 <__do_global_dtors_aux+4>:	bnez	a4,0x10170 <__do_global_dtors_aux+50>
0x0000000000010144 in __do_global_dtors_aux ()
=> 0x10144 <__do_global_dtors_aux+6>:	addi	sp,sp,-16
0x0000000000010146 in __do_global_dtors_aux ()
=> 0x10146 <__do_global_dtors_aux+8>:	sd	s0,0(sp)
0x0000000000010148 in __do_global_dtors_aux ()
=> 0x10148 <__do_global_dtors_aux+10>:	mv	s0,a5
0x000000000001014a in __do_global_dtors_aux ()
=> 0x1014a <__do_global_dtors_aux+12>:	sd	ra,8(sp)
0x000000000001014c in __do_global_dtors_aux ()
=> 0x1014c <__do_global_dtors_aux+14>:	li	a5,0
0x0000000000010150 in __do_global_dtors_aux ()
=> 0x10150 <__do_global_dtors_aux+18>:	beqz	a5,0x10162 <__do_global_dtors_aux+36>
0x0000000000010162 in __do_global_dtors_aux ()
=> 0x10162 <__do_global_dtors_aux+36>:	li	a5,1
0x0000000000010164 in __do_global_dtors_aux ()
=> 0x10164 <__do_global_dtors_aux+38>:	ld	ra,8(sp)
0x0000000000010166 in __do_global_dtors_aux ()
=> 0x10166 <__do_global_dtors_aux+40>:	sb	a5,1952(gp)
0x000000000001016a in __do_global_dtors_aux ()
=> 0x1016a <__do_global_dtors_aux+44>:	ld	s0,0(sp)
0x000000000001016c in __do_global_dtors_aux ()
=> 0x1016c <__do_global_dtors_aux+46>:	addi	sp,sp,16
0x000000000001016e in __do_global_dtors_aux ()
=> 0x1016e <__do_global_dtors_aux+48>:	ret
0x00000000000152ac in __libc_fini_array ()
=> 0x152ac <__libc_fini_array+44>:	bnez	s1,0x152a4 <__libc_fini_array+36>
0x00000000000152ae in __libc_fini_array ()
=> 0x152ae <__libc_fini_array+46>:	ld	ra,24(sp)
0x00000000000152b0 in __libc_fini_array ()
=> 0x152b0 <__libc_fini_array+48>:	ld	s0,16(sp)
0x00000000000152b2 in __libc_fini_array ()
=> 0x152b2 <__libc_fini_array+50>:	ld	s1,8(sp)
0x00000000000152b4 in __libc_fini_array ()
=> 0x152b4 <__libc_fini_array+52>:	addi	sp,sp,32
0x00000000000152b6 in __libc_fini_array ()
=> 0x152b6 <__libc_fini_array+54>:	ret
0x0000000000014db4 in __call_exitprocs ()
=> 0x14db4 <__call_exitprocs+140>:	lw	a4,8(s2)
0x0000000000014db8 in __call_exitprocs ()
=> 0x14db8 <__call_exitprocs+144>:	ld	a5,504(s4)
0x0000000000014dbc in __call_exitprocs ()
=> 0x14dbc <__call_exitprocs+148>:	bne	a4,s8,0x14dc4 <__call_exitprocs+156>
0x0000000000014dc0 in __call_exitprocs ()
=> 0x14dc0 <__call_exitprocs+152>:	beq	a5,s2,0x14d6e <__call_exitprocs+70>
0x0000000000014d6e in __call_exitprocs ()
=> 0x14d6e <__call_exitprocs+70>:	addiw	s0,s0,-1
0x0000000000014d70 in __call_exitprocs ()
=> 0x14d70 <__call_exitprocs+72>:	addi	s1,s1,-8
0x0000000000014d72 in __call_exitprocs ()
=> 0x14d72 <__call_exitprocs+74>:	bne	s0,s3,0x14d62 <__call_exitprocs+58>
0x0000000000014d76 in __call_exitprocs ()
=> 0x14d76 <__call_exitprocs+78>:	ld	ra,72(sp)
0x0000000000014d78 in __call_exitprocs ()
=> 0x14d78 <__call_exitprocs+80>:	ld	s0,64(sp)
0x0000000000014d7a in __call_exitprocs ()
=> 0x14d7a <__call_exitprocs+82>:	ld	s1,56(sp)
0x0000000000014d7c in __call_exitprocs ()
=> 0x14d7c <__call_exitprocs+84>:	ld	s2,48(sp)
0x0000000000014d7e in __call_exitprocs ()
=> 0x14d7e <__call_exitprocs+86>:	ld	s3,40(sp)
0x0000000000014d80 in __call_exitprocs ()
=> 0x14d80 <__call_exitprocs+88>:	ld	s4,32(sp)
0x0000000000014d82 in __call_exitprocs ()
=> 0x14d82 <__call_exitprocs+90>:	ld	s5,24(sp)
0x0000000000014d84 in __call_exitprocs ()
=> 0x14d84 <__call_exitprocs+92>:	ld	s6,16(sp)
0x0000000000014d86 in __call_exitprocs ()
=> 0x14d86 <__call_exitprocs+94>:	ld	s7,8(sp)
0x0000000000014d88 in __call_exitprocs ()
=> 0x14d88 <__call_exitprocs+96>:	ld	s8,0(sp)
0x0000000000014d8a in __call_exitprocs ()
=> 0x14d8a <__call_exitprocs+98>:	addi	sp,sp,80
0x0000000000014d8c in __call_exitprocs ()
=> 0x14d8c <__call_exitprocs+100>:	ret
0x00000000000127ee in exit ()
=> 0x127ee <exit+14>:	ld	a0,1760(gp)
0x00000000000127f2 in exit ()
=> 0x127f2 <exit+18>:	ld	a5,88(a0)
0x00000000000127f4 in exit ()
=> 0x127f4 <exit+20>:	beqz	a5,0x127f8 <exit+24>
0x00000000000127f6 in exit ()
=> 0x127f6 <exit+22>:	jalr	a5
0x0000000000015000 in _cleanup_r ()
=> 0x15000 <_cleanup_r>:	lui	a1,0x1b
0x0000000000015002 in _cleanup_r ()
=> 0x15002 <_cleanup_r+2>:	addi	a1,a1,2046
0x0000000000015006 in _cleanup_r ()
=> 0x15006 <_cleanup_r+6>:	j	0x15662 <_fwalk_reent>
0x0000000000015662 in _fwalk_reent ()
=> 0x15662 <_fwalk_reent>:	addi	sp,sp,-80
0x0000000000015664 in _fwalk_reent ()
=> 0x15664 <_fwalk_reent+2>:	sd	s2,48(sp)
0x0000000000015666 in _fwalk_reent ()
=> 0x15666 <_fwalk_reent+4>:	sd	s3,40(sp)
0x0000000000015668 in _fwalk_reent ()
=> 0x15668 <_fwalk_reent+6>:	sd	s4,32(sp)
0x000000000001566a in _fwalk_reent ()
=> 0x1566a <_fwalk_reent+8>:	sd	s5,24(sp)
0x000000000001566c in _fwalk_reent ()
=> 0x1566c <_fwalk_reent+10>:	sd	s6,16(sp)
0x000000000001566e in _fwalk_reent ()
=> 0x1566e <_fwalk_reent+12>:	sd	s7,8(sp)
0x0000000000015670 in _fwalk_reent ()
=> 0x15670 <_fwalk_reent+14>:	sd	s8,0(sp)
0x0000000000015672 in _fwalk_reent ()
=> 0x15672 <_fwalk_reent+16>:	sd	ra,72(sp)
0x0000000000015674 in _fwalk_reent ()
=> 0x15674 <_fwalk_reent+18>:	sd	s0,64(sp)
0x0000000000015676 in _fwalk_reent ()
=> 0x15676 <_fwalk_reent+20>:	sd	s1,56(sp)
0x0000000000015678 in _fwalk_reent ()
=> 0x15678 <_fwalk_reent+22>:	mv	s8,a0
0x000000000001567a in _fwalk_reent ()
=> 0x1567a <_fwalk_reent+24>:	mv	s4,a1
0x000000000001567c in _fwalk_reent ()
=> 0x1567c <_fwalk_reent+26>:	addi	s2,a0,1312
0x0000000000015680 in _fwalk_reent ()
=> 0x15680 <_fwalk_reent+30>:	li	s6,0
0x0000000000015682 in _fwalk_reent ()
=> 0x15682 <_fwalk_reent+32>:	li	s5,176
0x0000000000015686 in _fwalk_reent ()
=> 0x15686 <_fwalk_reent+36>:	li	s7,1
0x0000000000015688 in _fwalk_reent ()
=> 0x15688 <_fwalk_reent+38>:	li	s3,-1
0x000000000001568a in _fwalk_reent ()
=> 0x1568a <_fwalk_reent+40>:	lw	a5,8(s2)
0x000000000001568e in _fwalk_reent ()
=> 0x1568e <_fwalk_reent+44>:	ld	s0,16(s2)
0x0000000000015692 in _fwalk_reent ()
=> 0x15692 <_fwalk_reent+48>:	blez	a5,0x156ca <_fwalk_reent+104>
0x0000000000015696 in _fwalk_reent ()
=> 0x15696 <_fwalk_reent+52>:	addiw	s1,a5,-1
0x000000000001569a in _fwalk_reent ()
=> 0x1569a <_fwalk_reent+56>:	slli	s1,s1,0x20
0x000000000001569c in _fwalk_reent ()
=> 0x1569c <_fwalk_reent+58>:	srli	s1,s1,0x20
0x000000000001569e in _fwalk_reent ()
=> 0x1569e <_fwalk_reent+60>:	addi	s1,s1,1
0x00000000000156a0 in _fwalk_reent ()
=> 0x156a0 <_fwalk_reent+62>:	mul	s1,s1,s5
0x00000000000156a4 in _fwalk_reent ()
=> 0x156a4 <_fwalk_reent+66>:	add	s1,s1,s0
0x00000000000156a6 in _fwalk_reent ()
=> 0x156a6 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x00000000000156aa in _fwalk_reent ()
=> 0x156aa <_fwalk_reent+72>:	bgeu	s7,a5,0x156c2 <_fwalk_reent+96>
0x00000000000156ae in _fwalk_reent ()
=> 0x156ae <_fwalk_reent+76>:	lh	a5,18(s0)
0x00000000000156b2 in _fwalk_reent ()
=> 0x156b2 <_fwalk_reent+80>:	mv	a1,s0
0x00000000000156b4 in _fwalk_reent ()
=> 0x156b4 <_fwalk_reent+82>:	mv	a0,s8
0x00000000000156b6 in _fwalk_reent ()
=> 0x156b6 <_fwalk_reent+84>:	beq	a5,s3,0x156c2 <_fwalk_reent+96>
0x00000000000156ba in _fwalk_reent ()
=> 0x156ba <_fwalk_reent+88>:	jalr	s4
0x000000000001b7fe in _fclose_r ()
=> 0x1b7fe <_fclose_r>:	beqz	a1,0x1b838 <_fclose_r+58>
0x000000000001b800 in _fclose_r ()
=> 0x1b800 <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001b802 in _fclose_r ()
=> 0x1b802 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001b804 in _fclose_r ()
=> 0x1b804 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001b806 in _fclose_r ()
=> 0x1b806 <_fclose_r+8>:	mv	s0,a0
0x000000000001b808 in _fclose_r ()
=> 0x1b808 <_fclose_r+10>:	beqz	a0,0x1b80e <_fclose_r+16>
0x000000000001b80a in _fclose_r ()
=> 0x1b80a <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001b80c in _fclose_r ()
=> 0x1b80c <_fclose_r+14>:	beqz	a5,0x1b828 <_fclose_r+42>
0x000000000001b80e in _fclose_r ()
=> 0x1b80e <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001b812 in _fclose_r ()
=> 0x1b812 <_fclose_r+20>:	bnez	a5,0x1b81e <_fclose_r+32>
0x000000000001b81e in _fclose_r ()
=> 0x1b81e <_fclose_r+32>:	mv	a0,s0
0x000000000001b820 in _fclose_r ()
=> 0x1b820 <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001b822 in _fclose_r ()
=> 0x1b822 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001b824 in _fclose_r ()
=> 0x1b824 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001b826 in _fclose_r ()
=> 0x1b826 <_fclose_r+40>:	j	0x1b77e <_fclose_r.part.0>
0x000000000001b77e in _fclose_r.part.0 ()
=> 0x1b77e <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001b780 in _fclose_r.part.0 ()
=> 0x1b780 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001b782 in _fclose_r.part.0 ()
=> 0x1b782 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001b784 in _fclose_r.part.0 ()
=> 0x1b784 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001b786 in _fclose_r.part.0 ()
=> 0x1b786 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001b788 in _fclose_r.part.0 ()
=> 0x1b788 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001b78a in _fclose_r.part.0 ()
=> 0x1b78a <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001b78c in _fclose_r.part.0 ()
=> 0x1b78c <_fclose_r.part.0+14>:	jal	ra,0x14dea <__sflush_r>
0x0000000000014dea in __sflush_r ()
=> 0x14dea <__sflush_r>:	lh	a5,16(a1)
0x0000000000014dee in __sflush_r ()
=> 0x14dee <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000014df0 in __sflush_r ()
=> 0x14df0 <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000014df2 in __sflush_r ()
=> 0x14df2 <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000014df4 in __sflush_r ()
=> 0x14df4 <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000014df6 in __sflush_r ()
=> 0x14df6 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000014df8 in __sflush_r ()
=> 0x14df8 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000014dfa in __sflush_r ()
=> 0x14dfa <__sflush_r+16>:	andi	a3,a5,8
0x0000000000014dfe in __sflush_r ()
=> 0x14dfe <__sflush_r+20>:	mv	s0,a1
0x0000000000014e00 in __sflush_r ()
=> 0x14e00 <__sflush_r+22>:	mv	s3,a0
0x0000000000014e02 in __sflush_r ()
=> 0x14e02 <__sflush_r+24>:	bnez	a3,0x14eb6 <__sflush_r+204>
0x0000000000014e04 in __sflush_r ()
=> 0x14e04 <__sflush_r+26>:	lui	a4,0x1
0x0000000000014e06 in __sflush_r ()
=> 0x14e06 <__sflush_r+28>:	addi	a4,a4,-2048
0x0000000000014e0a in __sflush_r ()
=> 0x14e0a <__sflush_r+32>:	lw	a3,8(a1)
0x0000000000014e0c in __sflush_r ()
=> 0x14e0c <__sflush_r+34>:	or	a5,a5,a4
0x0000000000014e0e in __sflush_r ()
=> 0x14e0e <__sflush_r+36>:	sh	a5,16(a1)
0x0000000000014e12 in __sflush_r ()
=> 0x14e12 <__sflush_r+40>:	blez	a3,0x14f12 <__sflush_r+296>
0x0000000000014f12 in __sflush_r ()
=> 0x14f12 <__sflush_r+296>:	lw	a4,112(a1)
0x0000000000014f14 in __sflush_r ()
=> 0x14f14 <__sflush_r+298>:	bgtz	a4,0x14e16 <__sflush_r+44>
0x0000000000014f18 in __sflush_r ()
=> 0x14f18 <__sflush_r+302>:	j	0x14ea6 <__sflush_r+188>
0x0000000000014ea6 in __sflush_r ()
=> 0x14ea6 <__sflush_r+188>:	li	a0,0
0x0000000000014ea8 in __sflush_r ()
=> 0x14ea8 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000014eaa in __sflush_r ()
=> 0x14eaa <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000014eac in __sflush_r ()
=> 0x14eac <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000014eae in __sflush_r ()
=> 0x14eae <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000014eb0 in __sflush_r ()
=> 0x14eb0 <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000014eb2 in __sflush_r ()
=> 0x14eb2 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000014eb4 in __sflush_r ()
=> 0x14eb4 <__sflush_r+202>:	ret
0x000000000001b790 in _fclose_r.part.0 ()
=> 0x1b790 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001b792 in _fclose_r.part.0 ()
=> 0x1b792 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001b794 in _fclose_r.part.0 ()
=> 0x1b794 <_fclose_r.part.0+22>:	beqz	a5,0x1b7a0 <_fclose_r.part.0+34>
0x000000000001b796 in _fclose_r.part.0 ()
=> 0x1b796 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001b798 in _fclose_r.part.0 ()
=> 0x1b798 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001b79a in _fclose_r.part.0 ()
=> 0x1b79a <_fclose_r.part.0+28>:	jalr	a5
0x0000000000018a4c in __sclose ()
=> 0x18a4c <__sclose>:	lh	a1,18(a1)
0x0000000000018a50 in __sclose ()
=> 0x18a50 <__sclose+4>:	j	0x1b748 <_close_r>
0x000000000001b748 in _close_r ()
=> 0x1b748 <_close_r>:	addi	sp,sp,-32
0x000000000001b74a in _close_r ()
=> 0x1b74a <_close_r+2>:	sd	s0,16(sp)
0x000000000001b74c in _close_r ()
=> 0x1b74c <_close_r+4>:	sd	s1,8(sp)
0x000000000001b74e in _close_r ()
=> 0x1b74e <_close_r+6>:	mv	s0,a0
0x000000000001b750 in _close_r ()
=> 0x1b750 <_close_r+8>:	mv	a0,a1
0x000000000001b752 in _close_r ()
=> 0x1b752 <_close_r+10>:	sd	ra,24(sp)
0x000000000001b754 in _close_r ()
=> 0x1b754 <_close_r+12>:	sw	zero,1936(gp)
0x000000000001b758 in _close_r ()
=> 0x1b758 <_close_r+16>:	jal	ra,0x1d5b0 <_close>
0x000000000001d5b0 in _close ()
=> 0x1d5b0 <_close>:	addi	sp,sp,-16
0x000000000001d5b2 in _close ()
=> 0x1d5b2 <_close+2>:	sd	ra,8(sp)
0x000000000001d5b4 in _close ()
=> 0x1d5b4 <_close+4>:	sd	s0,0(sp)
0x000000000001d5b6 in _close ()
=> 0x1d5b6 <_close+6>:	li	a7,57
0x000000000001d5ba in _close ()
=> 0x1d5ba <_close+10>:	ecall
0x000000000001d5be in _close ()
=> 0x1d5be <_close+14>:	mv	s0,a0
0x000000000001d5c0 in _close ()
=> 0x1d5c0 <_close+16>:	bltz	a0,0x1d5ce <_close+30>
0x000000000001d5c4 in _close ()
=> 0x1d5c4 <_close+20>:	sext.w	a0,a0
0x000000000001d5c6 in _close ()
=> 0x1d5c6 <_close+22>:	ld	ra,8(sp)
0x000000000001d5c8 in _close ()
=> 0x1d5c8 <_close+24>:	ld	s0,0(sp)
0x000000000001d5ca in _close ()
=> 0x1d5ca <_close+26>:	addi	sp,sp,16
0x000000000001d5cc in _close ()
=> 0x1d5cc <_close+28>:	ret
0x000000000001b75c in _close_r ()
=> 0x1b75c <_close_r+20>:	li	a5,-1
0x000000000001b75e in _close_r ()
=> 0x1b75e <_close_r+22>:	beq	a0,a5,0x1b76c <_close_r+36>
0x000000000001b762 in _close_r ()
=> 0x1b762 <_close_r+26>:	ld	ra,24(sp)
0x000000000001b764 in _close_r ()
=> 0x1b764 <_close_r+28>:	ld	s0,16(sp)
0x000000000001b766 in _close_r ()
=> 0x1b766 <_close_r+30>:	ld	s1,8(sp)
0x000000000001b768 in _close_r ()
=> 0x1b768 <_close_r+32>:	addi	sp,sp,32
0x000000000001b76a in _close_r ()
=> 0x1b76a <_close_r+34>:	ret
0x000000000001b79c in _fclose_r.part.0 ()
=> 0x1b79c <_fclose_r.part.0+30>:	bltz	a0,0x1b7e8 <_fclose_r.part.0+106>
0x000000000001b7a0 in _fclose_r.part.0 ()
=> 0x1b7a0 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001b7a4 in _fclose_r.part.0 ()
=> 0x1b7a4 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001b7a8 in _fclose_r.part.0 ()
=> 0x1b7a8 <_fclose_r.part.0+42>:	bnez	a5,0x1b7f4 <_fclose_r.part.0+118>
0x000000000001b7aa in _fclose_r.part.0 ()
=> 0x1b7aa <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001b7ac in _fclose_r.part.0 ()
=> 0x1b7ac <_fclose_r.part.0+46>:	beqz	a1,0x1b7c0 <_fclose_r.part.0+66>
0x000000000001b7c0 in _fclose_r.part.0 ()
=> 0x1b7c0 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001b7c2 in _fclose_r.part.0 ()
=> 0x1b7c2 <_fclose_r.part.0+68>:	beqz	a1,0x1b7ce <_fclose_r.part.0+80>
0x000000000001b7ce in _fclose_r.part.0 ()
=> 0x1b7ce <_fclose_r.part.0+80>:	jal	ra,0x15260 <__sfp_lock_acquire>
0x0000000000015260 in __sfp_lock_acquire ()
=> 0x15260 <__sfp_lock_acquire>:	ret
0x000000000001b7d2 in _fclose_r.part.0 ()
=> 0x1b7d2 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001b7d6 in _fclose_r.part.0 ()
=> 0x1b7d6 <_fclose_r.part.0+88>:	jal	ra,0x15262 <__sfp_lock_release>
0x0000000000015262 in __sfp_lock_release ()
=> 0x15262 <__sfp_lock_release>:	ret
0x000000000001b7da in _fclose_r.part.0 ()
=> 0x1b7da <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001b7dc in _fclose_r.part.0 ()
=> 0x1b7dc <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001b7de in _fclose_r.part.0 ()
=> 0x1b7de <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001b7e0 in _fclose_r.part.0 ()
=> 0x1b7e0 <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001b7e2 in _fclose_r.part.0 ()
=> 0x1b7e2 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001b7e4 in _fclose_r.part.0 ()
=> 0x1b7e4 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001b7e6 in _fclose_r.part.0 ()
=> 0x1b7e6 <_fclose_r.part.0+104>:	ret
0x00000000000156bc in _fwalk_reent ()
=> 0x156bc <_fwalk_reent+90>:	or	s6,a0,s6
0x00000000000156c0 in _fwalk_reent ()
=> 0x156c0 <_fwalk_reent+94>:	sext.w	s6,s6
0x00000000000156c2 in _fwalk_reent ()
=> 0x156c2 <_fwalk_reent+96>:	addi	s0,s0,176
0x00000000000156c6 in _fwalk_reent ()
=> 0x156c6 <_fwalk_reent+100>:	bne	s1,s0,0x156a6 <_fwalk_reent+68>
0x00000000000156a6 in _fwalk_reent ()
=> 0x156a6 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x00000000000156aa in _fwalk_reent ()
=> 0x156aa <_fwalk_reent+72>:	bgeu	s7,a5,0x156c2 <_fwalk_reent+96>
0x00000000000156ae in _fwalk_reent ()
=> 0x156ae <_fwalk_reent+76>:	lh	a5,18(s0)
0x00000000000156b2 in _fwalk_reent ()
=> 0x156b2 <_fwalk_reent+80>:	mv	a1,s0
0x00000000000156b4 in _fwalk_reent ()
=> 0x156b4 <_fwalk_reent+82>:	mv	a0,s8
0x00000000000156b6 in _fwalk_reent ()
=> 0x156b6 <_fwalk_reent+84>:	beq	a5,s3,0x156c2 <_fwalk_reent+96>
0x00000000000156ba in _fwalk_reent ()
=> 0x156ba <_fwalk_reent+88>:	jalr	s4
0x000000000001b7fe in _fclose_r ()
=> 0x1b7fe <_fclose_r>:	beqz	a1,0x1b838 <_fclose_r+58>
0x000000000001b800 in _fclose_r ()
=> 0x1b800 <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001b802 in _fclose_r ()
=> 0x1b802 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001b804 in _fclose_r ()
=> 0x1b804 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001b806 in _fclose_r ()
=> 0x1b806 <_fclose_r+8>:	mv	s0,a0
0x000000000001b808 in _fclose_r ()
=> 0x1b808 <_fclose_r+10>:	beqz	a0,0x1b80e <_fclose_r+16>
0x000000000001b80a in _fclose_r ()
=> 0x1b80a <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001b80c in _fclose_r ()
=> 0x1b80c <_fclose_r+14>:	beqz	a5,0x1b828 <_fclose_r+42>
0x000000000001b80e in _fclose_r ()
=> 0x1b80e <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001b812 in _fclose_r ()
=> 0x1b812 <_fclose_r+20>:	bnez	a5,0x1b81e <_fclose_r+32>
0x000000000001b81e in _fclose_r ()
=> 0x1b81e <_fclose_r+32>:	mv	a0,s0
0x000000000001b820 in _fclose_r ()
=> 0x1b820 <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001b822 in _fclose_r ()
=> 0x1b822 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001b824 in _fclose_r ()
=> 0x1b824 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001b826 in _fclose_r ()
=> 0x1b826 <_fclose_r+40>:	j	0x1b77e <_fclose_r.part.0>
0x000000000001b77e in _fclose_r.part.0 ()
=> 0x1b77e <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001b780 in _fclose_r.part.0 ()
=> 0x1b780 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001b782 in _fclose_r.part.0 ()
=> 0x1b782 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001b784 in _fclose_r.part.0 ()
=> 0x1b784 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001b786 in _fclose_r.part.0 ()
=> 0x1b786 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001b788 in _fclose_r.part.0 ()
=> 0x1b788 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001b78a in _fclose_r.part.0 ()
=> 0x1b78a <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001b78c in _fclose_r.part.0 ()
=> 0x1b78c <_fclose_r.part.0+14>:	jal	ra,0x14dea <__sflush_r>
0x0000000000014dea in __sflush_r ()
=> 0x14dea <__sflush_r>:	lh	a5,16(a1)
0x0000000000014dee in __sflush_r ()
=> 0x14dee <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000014df0 in __sflush_r ()
=> 0x14df0 <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000014df2 in __sflush_r ()
=> 0x14df2 <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000014df4 in __sflush_r ()
=> 0x14df4 <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000014df6 in __sflush_r ()
=> 0x14df6 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000014df8 in __sflush_r ()
=> 0x14df8 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000014dfa in __sflush_r ()
=> 0x14dfa <__sflush_r+16>:	andi	a3,a5,8
0x0000000000014dfe in __sflush_r ()
=> 0x14dfe <__sflush_r+20>:	mv	s0,a1
0x0000000000014e00 in __sflush_r ()
=> 0x14e00 <__sflush_r+22>:	mv	s3,a0
0x0000000000014e02 in __sflush_r ()
=> 0x14e02 <__sflush_r+24>:	bnez	a3,0x14eb6 <__sflush_r+204>
0x0000000000014eb6 in __sflush_r ()
=> 0x14eb6 <__sflush_r+204>:	ld	s2,24(a1)
0x0000000000014eba in __sflush_r ()
=> 0x14eba <__sflush_r+208>:	beqz	s2,0x14ea6 <__sflush_r+188>
0x0000000000014ebe in __sflush_r ()
=> 0x14ebe <__sflush_r+212>:	ld	s1,0(a1)
0x0000000000014ec0 in __sflush_r ()
=> 0x14ec0 <__sflush_r+214>:	slli	a4,a5,0x30
0x0000000000014ec4 in __sflush_r ()
=> 0x14ec4 <__sflush_r+218>:	srli	a4,a4,0x30
0x0000000000014ec6 in __sflush_r ()
=> 0x14ec6 <__sflush_r+220>:	andi	a4,a4,3
0x0000000000014ec8 in __sflush_r ()
=> 0x14ec8 <__sflush_r+222>:	sd	s2,0(a1)
0x0000000000014ecc in __sflush_r ()
=> 0x14ecc <__sflush_r+226>:	subw	s1,s1,s2
0x0000000000014ed0 in __sflush_r ()
=> 0x14ed0 <__sflush_r+230>:	li	a5,0
0x0000000000014ed2 in __sflush_r ()
=> 0x14ed2 <__sflush_r+232>:	bnez	a4,0x14ed6 <__sflush_r+236>
0x0000000000014ed6 in __sflush_r ()
=> 0x14ed6 <__sflush_r+236>:	sw	a5,12(s0)
0x0000000000014ed8 in __sflush_r ()
=> 0x14ed8 <__sflush_r+238>:	bgtz	s1,0x14ee4 <__sflush_r+250>
0x0000000000014edc in __sflush_r ()
=> 0x14edc <__sflush_r+242>:	j	0x14ea6 <__sflush_r+188>
0x0000000000014ea6 in __sflush_r ()
=> 0x14ea6 <__sflush_r+188>:	li	a0,0
0x0000000000014ea8 in __sflush_r ()
=> 0x14ea8 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000014eaa in __sflush_r ()
=> 0x14eaa <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000014eac in __sflush_r ()
=> 0x14eac <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000014eae in __sflush_r ()
=> 0x14eae <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000014eb0 in __sflush_r ()
=> 0x14eb0 <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000014eb2 in __sflush_r ()
=> 0x14eb2 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000014eb4 in __sflush_r ()
=> 0x14eb4 <__sflush_r+202>:	ret
0x000000000001b790 in _fclose_r.part.0 ()
=> 0x1b790 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001b792 in _fclose_r.part.0 ()
=> 0x1b792 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001b794 in _fclose_r.part.0 ()
=> 0x1b794 <_fclose_r.part.0+22>:	beqz	a5,0x1b7a0 <_fclose_r.part.0+34>
0x000000000001b796 in _fclose_r.part.0 ()
=> 0x1b796 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001b798 in _fclose_r.part.0 ()
=> 0x1b798 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001b79a in _fclose_r.part.0 ()
=> 0x1b79a <_fclose_r.part.0+28>:	jalr	a5
0x0000000000018a4c in __sclose ()
=> 0x18a4c <__sclose>:	lh	a1,18(a1)
0x0000000000018a50 in __sclose ()
=> 0x18a50 <__sclose+4>:	j	0x1b748 <_close_r>
0x000000000001b748 in _close_r ()
=> 0x1b748 <_close_r>:	addi	sp,sp,-32
0x000000000001b74a in _close_r ()
=> 0x1b74a <_close_r+2>:	sd	s0,16(sp)
0x000000000001b74c in _close_r ()
=> 0x1b74c <_close_r+4>:	sd	s1,8(sp)
0x000000000001b74e in _close_r ()
=> 0x1b74e <_close_r+6>:	mv	s0,a0
0x000000000001b750 in _close_r ()
=> 0x1b750 <_close_r+8>:	mv	a0,a1
0x000000000001b752 in _close_r ()
=> 0x1b752 <_close_r+10>:	sd	ra,24(sp)
0x000000000001b754 in _close_r ()
=> 0x1b754 <_close_r+12>:	sw	zero,1936(gp)
0x000000000001b758 in _close_r ()
=> 0x1b758 <_close_r+16>:	jal	ra,0x1d5b0 <_close>
0x000000000001d5b0 in _close ()
=> 0x1d5b0 <_close>:	addi	sp,sp,-16
0x000000000001d5b2 in _close ()
=> 0x1d5b2 <_close+2>:	sd	ra,8(sp)
0x000000000001d5b4 in _close ()
=> 0x1d5b4 <_close+4>:	sd	s0,0(sp)
0x000000000001d5b6 in _close ()
=> 0x1d5b6 <_close+6>:	li	a7,57
0x000000000001d5ba in _close ()
=> 0x1d5ba <_close+10>:	ecall
0x000000000001d5be in _close ()
=> 0x1d5be <_close+14>:	mv	s0,a0
0x000000000001d5c0 in _close ()
=> 0x1d5c0 <_close+16>:	bltz	a0,0x1d5ce <_close+30>
0x000000000001d5c4 in _close ()
=> 0x1d5c4 <_close+20>:	sext.w	a0,a0
0x000000000001d5c6 in _close ()
=> 0x1d5c6 <_close+22>:	ld	ra,8(sp)
0x000000000001d5c8 in _close ()
=> 0x1d5c8 <_close+24>:	ld	s0,0(sp)
0x000000000001d5ca in _close ()
=> 0x1d5ca <_close+26>:	addi	sp,sp,16
0x000000000001d5cc in _close ()
=> 0x1d5cc <_close+28>:	ret
0x000000000001b75c in _close_r ()
=> 0x1b75c <_close_r+20>:	li	a5,-1
0x000000000001b75e in _close_r ()
=> 0x1b75e <_close_r+22>:	beq	a0,a5,0x1b76c <_close_r+36>
0x000000000001b762 in _close_r ()
=> 0x1b762 <_close_r+26>:	ld	ra,24(sp)
0x000000000001b764 in _close_r ()
=> 0x1b764 <_close_r+28>:	ld	s0,16(sp)
0x000000000001b766 in _close_r ()
=> 0x1b766 <_close_r+30>:	ld	s1,8(sp)
0x000000000001b768 in _close_r ()
=> 0x1b768 <_close_r+32>:	addi	sp,sp,32
0x000000000001b76a in _close_r ()
=> 0x1b76a <_close_r+34>:	ret
0x000000000001b79c in _fclose_r.part.0 ()
=> 0x1b79c <_fclose_r.part.0+30>:	bltz	a0,0x1b7e8 <_fclose_r.part.0+106>
0x000000000001b7a0 in _fclose_r.part.0 ()
=> 0x1b7a0 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001b7a4 in _fclose_r.part.0 ()
=> 0x1b7a4 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001b7a8 in _fclose_r.part.0 ()
=> 0x1b7a8 <_fclose_r.part.0+42>:	bnez	a5,0x1b7f4 <_fclose_r.part.0+118>
0x000000000001b7f4 in _fclose_r.part.0 ()
=> 0x1b7f4 <_fclose_r.part.0+118>:	ld	a1,24(s0)
0x000000000001b7f6 in _fclose_r.part.0 ()
=> 0x1b7f6 <_fclose_r.part.0+120>:	mv	a0,s1
0x000000000001b7f8 in _fclose_r.part.0 ()
=> 0x1b7f8 <_fclose_r.part.0+122>:	jal	ra,0x1538e <_free_r>
0x000000000001538e in _free_r ()
=> 0x1538e <_free_r>:	beqz	a1,0x1547e <_free_r+240>
0x0000000000015390 in _free_r ()
=> 0x15390 <_free_r+2>:	addi	sp,sp,-32
0x0000000000015392 in _free_r ()
=> 0x15392 <_free_r+4>:	sd	s0,16(sp)
0x0000000000015394 in _free_r ()
=> 0x15394 <_free_r+6>:	sd	s1,8(sp)
0x0000000000015396 in _free_r ()
=> 0x15396 <_free_r+8>:	mv	s0,a1
0x0000000000015398 in _free_r ()
=> 0x15398 <_free_r+10>:	mv	s1,a0
0x000000000001539a in _free_r ()
=> 0x1539a <_free_r+12>:	sd	ra,24(sp)
0x000000000001539c in _free_r ()
=> 0x1539c <_free_r+14>:	jal	ra,0x12f4e <__malloc_lock>
0x0000000000012f4e in __malloc_lock ()
=> 0x12f4e <__malloc_lock>:	ret
0x00000000000153a0 in _free_r ()
=> 0x153a0 <_free_r+18>:	ld	a0,-8(s0)
0x00000000000153a4 in _free_r ()
=> 0x153a4 <_free_r+22>:	addi	a4,s0,-16
0x00000000000153a8 in _free_r ()
=> 0x153a8 <_free_r+26>:	lui	a1,0x21
0x00000000000153ac in _free_r ()
=> 0x153ac <_free_r+30>:	andi	a5,a0,-2
0x00000000000153b0 in _free_r ()
=> 0x153b0 <_free_r+34>:	add	a2,a4,a5
0x00000000000153b4 in _free_r ()
=> 0x153b4 <_free_r+38>:	addi	a1,a1,1896
0x00000000000153b8 in _free_r ()
=> 0x153b8 <_free_r+42>:	ld	a3,8(a2)
0x00000000000153ba in _free_r ()
=> 0x153ba <_free_r+44>:	ld	a6,16(a1)
0x00000000000153be in _free_r ()
=> 0x153be <_free_r+48>:	andi	a3,a3,-4
0x00000000000153c0 in _free_r ()
=> 0x153c0 <_free_r+50>:	beq	a6,a2,0x15504 <_free_r+374>
0x0000000000015504 in _free_r ()
=> 0x15504 <_free_r+374>:	andi	a0,a0,1
0x0000000000015506 in _free_r ()
=> 0x15506 <_free_r+376>:	add	a5,a5,a3
0x0000000000015508 in _free_r ()
=> 0x15508 <_free_r+378>:	bnez	a0,0x1551a <_free_r+396>
0x000000000001550a in _free_r ()
=> 0x1550a <_free_r+380>:	ld	a0,-16(s0)
0x000000000001550e in _free_r ()
=> 0x1550e <_free_r+384>:	sub	a4,a4,a0
0x0000000000015510 in _free_r ()
=> 0x15510 <_free_r+386>:	ld	a3,24(a4)
0x0000000000015512 in _free_r ()
=> 0x15512 <_free_r+388>:	ld	a2,16(a4)
0x0000000000015514 in _free_r ()
=> 0x15514 <_free_r+390>:	add	a5,a5,a0
0x0000000000015516 in _free_r ()
=> 0x15516 <_free_r+392>:	sd	a3,24(a2)
0x0000000000015518 in _free_r ()
=> 0x15518 <_free_r+394>:	sd	a2,16(a3)
0x000000000001551a in _free_r ()
=> 0x1551a <_free_r+396>:	ori	a2,a5,1
0x000000000001551e in _free_r ()
=> 0x1551e <_free_r+400>:	ld	a3,1888(gp)
0x0000000000015522 in _free_r ()
=> 0x15522 <_free_r+404>:	sd	a2,8(a4)
0x0000000000015524 in _free_r ()
=> 0x15524 <_free_r+406>:	sd	a4,16(a1)
0x0000000000015526 in _free_r ()
=> 0x15526 <_free_r+408>:	bltu	a5,a3,0x15440 <_free_r+178>
0x000000000001552a in _free_r ()
=> 0x1552a <_free_r+412>:	ld	a1,1920(gp)
0x000000000001552e in _free_r ()
=> 0x1552e <_free_r+416>:	mv	a0,s1
0x0000000000015530 in _free_r ()
=> 0x15530 <_free_r+418>:	jal	ra,0x152b8 <_malloc_trim_r>
0x00000000000152b8 in _malloc_trim_r ()
=> 0x152b8 <_malloc_trim_r>:	addi	sp,sp,-48
0x00000000000152ba in _malloc_trim_r ()
=> 0x152ba <_malloc_trim_r+2>:	sd	s3,8(sp)
0x00000000000152bc in _malloc_trim_r ()
=> 0x152bc <_malloc_trim_r+4>:	lui	s3,0x21
0x00000000000152c0 in _malloc_trim_r ()
=> 0x152c0 <_malloc_trim_r+8>:	sd	s0,32(sp)
0x00000000000152c2 in _malloc_trim_r ()
=> 0x152c2 <_malloc_trim_r+10>:	sd	s1,24(sp)
0x00000000000152c4 in _malloc_trim_r ()
=> 0x152c4 <_malloc_trim_r+12>:	sd	s2,16(sp)
0x00000000000152c6 in _malloc_trim_r ()
=> 0x152c6 <_malloc_trim_r+14>:	sd	s4,0(sp)
0x00000000000152c8 in _malloc_trim_r ()
=> 0x152c8 <_malloc_trim_r+16>:	sd	ra,40(sp)
0x00000000000152ca in _malloc_trim_r ()
=> 0x152ca <_malloc_trim_r+18>:	mv	s4,a1
0x00000000000152cc in _malloc_trim_r ()
=> 0x152cc <_malloc_trim_r+20>:	mv	s2,a0
0x00000000000152ce in _malloc_trim_r ()
=> 0x152ce <_malloc_trim_r+22>:	addi	s3,s3,1896
0x00000000000152d2 in _malloc_trim_r ()
=> 0x152d2 <_malloc_trim_r+26>:	jal	ra,0x12f4e <__malloc_lock>
0x0000000000012f4e in __malloc_lock ()
=> 0x12f4e <__malloc_lock>:	ret
0x00000000000152d6 in _malloc_trim_r ()
=> 0x152d6 <_malloc_trim_r+30>:	ld	a4,16(s3)
0x00000000000152da in _malloc_trim_r ()
=> 0x152da <_malloc_trim_r+34>:	lui	a5,0x1
0x00000000000152dc in _malloc_trim_r ()
=> 0x152dc <_malloc_trim_r+36>:	addi	s0,a5,-33
0x00000000000152e0 in _malloc_trim_r ()
=> 0x152e0 <_malloc_trim_r+40>:	ld	s1,8(a4)
0x00000000000152e2 in _malloc_trim_r ()
=> 0x152e2 <_malloc_trim_r+42>:	sub	s0,s0,s4
0x00000000000152e6 in _malloc_trim_r ()
=> 0x152e6 <_malloc_trim_r+46>:	andi	s1,s1,-4
0x00000000000152e8 in _malloc_trim_r ()
=> 0x152e8 <_malloc_trim_r+48>:	add	s0,s0,s1
0x00000000000152ea in _malloc_trim_r ()
=> 0x152ea <_malloc_trim_r+50>:	srli	s0,s0,0xc
0x00000000000152ec in _malloc_trim_r ()
=> 0x152ec <_malloc_trim_r+52>:	addi	s0,s0,-1
0x00000000000152ee in _malloc_trim_r ()
=> 0x152ee <_malloc_trim_r+54>:	slli	s0,s0,0xc
0x00000000000152f0 in _malloc_trim_r ()
=> 0x152f0 <_malloc_trim_r+56>:	blt	s0,a5,0x15306 <_malloc_trim_r+78>
0x00000000000152f4 in _malloc_trim_r ()
=> 0x152f4 <_malloc_trim_r+60>:	li	a1,0
0x00000000000152f6 in _malloc_trim_r ()
=> 0x152f6 <_malloc_trim_r+62>:	mv	a0,s2
0x00000000000152f8 in _malloc_trim_r ()
=> 0x152f8 <_malloc_trim_r+64>:	jal	ra,0x12fa0 <_sbrk_r>
0x0000000000012fa0 in _sbrk_r ()
=> 0x12fa0 <_sbrk_r>:	addi	sp,sp,-32
0x0000000000012fa2 in _sbrk_r ()
=> 0x12fa2 <_sbrk_r+2>:	sd	s0,16(sp)
0x0000000000012fa4 in _sbrk_r ()
=> 0x12fa4 <_sbrk_r+4>:	sd	s1,8(sp)
0x0000000000012fa6 in _sbrk_r ()
=> 0x12fa6 <_sbrk_r+6>:	mv	s0,a0
0x0000000000012fa8 in _sbrk_r ()
=> 0x12fa8 <_sbrk_r+8>:	mv	a0,a1
0x0000000000012faa in _sbrk_r ()
=> 0x12faa <_sbrk_r+10>:	sd	ra,24(sp)
0x0000000000012fac in _sbrk_r ()
=> 0x12fac <_sbrk_r+12>:	sw	zero,1936(gp)
0x0000000000012fb0 in _sbrk_r ()
=> 0x12fb0 <_sbrk_r+16>:	jal	ra,0x1d6d4 <_sbrk>
0x000000000001d6d4 in _sbrk ()
=> 0x1d6d4 <_sbrk>:	ld	a4,1944(gp)
0x000000000001d6d8 in _sbrk ()
=> 0x1d6d8 <_sbrk+4>:	addi	sp,sp,-16
0x000000000001d6da in _sbrk ()
=> 0x1d6da <_sbrk+6>:	sd	ra,8(sp)
0x000000000001d6dc in _sbrk ()
=> 0x1d6dc <_sbrk+8>:	mv	a5,a0
0x000000000001d6de in _sbrk ()
=> 0x1d6de <_sbrk+10>:	bnez	a4,0x1d6f6 <_sbrk+34>
0x000000000001d6f6 in _sbrk ()
=> 0x1d6f6 <_sbrk+34>:	li	a7,214
0x000000000001d6fa in _sbrk ()
=> 0x1d6fa <_sbrk+38>:	add	a0,a5,a4
0x000000000001d6fe in _sbrk ()
=> 0x1d6fe <_sbrk+42>:	ecall
0x000000000001d702 in _sbrk ()
=> 0x1d702 <_sbrk+46>:	ld	a4,1944(gp)
0x000000000001d706 in _sbrk ()
=> 0x1d706 <_sbrk+50>:	add	a5,a5,a4
0x000000000001d708 in _sbrk ()
=> 0x1d708 <_sbrk+52>:	bne	a0,a5,0x1d718 <_sbrk+68>
0x000000000001d70c in _sbrk ()
=> 0x1d70c <_sbrk+56>:	ld	ra,8(sp)
0x000000000001d70e in _sbrk ()
=> 0x1d70e <_sbrk+58>:	sd	a0,1944(gp)
0x000000000001d712 in _sbrk ()
=> 0x1d712 <_sbrk+62>:	mv	a0,a4
0x000000000001d714 in _sbrk ()
=> 0x1d714 <_sbrk+64>:	addi	sp,sp,16
0x000000000001d716 in _sbrk ()
=> 0x1d716 <_sbrk+66>:	ret
0x0000000000012fb4 in _sbrk_r ()
=> 0x12fb4 <_sbrk_r+20>:	li	a5,-1
0x0000000000012fb6 in _sbrk_r ()
=> 0x12fb6 <_sbrk_r+22>:	beq	a0,a5,0x12fc4 <_sbrk_r+36>
0x0000000000012fba in _sbrk_r ()
=> 0x12fba <_sbrk_r+26>:	ld	ra,24(sp)
0x0000000000012fbc in _sbrk_r ()
=> 0x12fbc <_sbrk_r+28>:	ld	s0,16(sp)
0x0000000000012fbe in _sbrk_r ()
=> 0x12fbe <_sbrk_r+30>:	ld	s1,8(sp)
0x0000000000012fc0 in _sbrk_r ()
=> 0x12fc0 <_sbrk_r+32>:	addi	sp,sp,32
0x0000000000012fc2 in _sbrk_r ()
=> 0x12fc2 <_sbrk_r+34>:	ret
0x00000000000152fc in _malloc_trim_r ()
=> 0x152fc <_malloc_trim_r+68>:	ld	a5,16(s3)
0x0000000000015300 in _malloc_trim_r ()
=> 0x15300 <_malloc_trim_r+72>:	add	a5,a5,s1
0x0000000000015302 in _malloc_trim_r ()
=> 0x15302 <_malloc_trim_r+74>:	beq	a0,a5,0x1531e <_malloc_trim_r+102>
0x000000000001531e in _malloc_trim_r ()
=> 0x1531e <_malloc_trim_r+102>:	neg	a1,s0
0x0000000000015322 in _malloc_trim_r ()
=> 0x15322 <_malloc_trim_r+106>:	mv	a0,s2
0x0000000000015324 in _malloc_trim_r ()
=> 0x15324 <_malloc_trim_r+108>:	jal	ra,0x12fa0 <_sbrk_r>
0x0000000000012fa0 in _sbrk_r ()
=> 0x12fa0 <_sbrk_r>:	addi	sp,sp,-32
0x0000000000012fa2 in _sbrk_r ()
=> 0x12fa2 <_sbrk_r+2>:	sd	s0,16(sp)
0x0000000000012fa4 in _sbrk_r ()
=> 0x12fa4 <_sbrk_r+4>:	sd	s1,8(sp)
0x0000000000012fa6 in _sbrk_r ()
=> 0x12fa6 <_sbrk_r+6>:	mv	s0,a0
0x0000000000012fa8 in _sbrk_r ()
=> 0x12fa8 <_sbrk_r+8>:	mv	a0,a1
0x0000000000012faa in _sbrk_r ()
=> 0x12faa <_sbrk_r+10>:	sd	ra,24(sp)
0x0000000000012fac in _sbrk_r ()
=> 0x12fac <_sbrk_r+12>:	sw	zero,1936(gp)
0x0000000000012fb0 in _sbrk_r ()
=> 0x12fb0 <_sbrk_r+16>:	jal	ra,0x1d6d4 <_sbrk>
0x000000000001d6d4 in _sbrk ()
=> 0x1d6d4 <_sbrk>:	ld	a4,1944(gp)
0x000000000001d6d8 in _sbrk ()
=> 0x1d6d8 <_sbrk+4>:	addi	sp,sp,-16
0x000000000001d6da in _sbrk ()
=> 0x1d6da <_sbrk+6>:	sd	ra,8(sp)
0x000000000001d6dc in _sbrk ()
=> 0x1d6dc <_sbrk+8>:	mv	a5,a0
0x000000000001d6de in _sbrk ()
=> 0x1d6de <_sbrk+10>:	bnez	a4,0x1d6f6 <_sbrk+34>
0x000000000001d6f6 in _sbrk ()
=> 0x1d6f6 <_sbrk+34>:	li	a7,214
0x000000000001d6fa in _sbrk ()
=> 0x1d6fa <_sbrk+38>:	add	a0,a5,a4
0x000000000001d6fe in _sbrk ()
=> 0x1d6fe <_sbrk+42>:	ecall
0x000000000001d702 in _sbrk ()
=> 0x1d702 <_sbrk+46>:	ld	a4,1944(gp)
0x000000000001d706 in _sbrk ()
=> 0x1d706 <_sbrk+50>:	add	a5,a5,a4
0x000000000001d708 in _sbrk ()
=> 0x1d708 <_sbrk+52>:	bne	a0,a5,0x1d718 <_sbrk+68>
0x000000000001d70c in _sbrk ()
=> 0x1d70c <_sbrk+56>:	ld	ra,8(sp)
0x000000000001d70e in _sbrk ()
=> 0x1d70e <_sbrk+58>:	sd	a0,1944(gp)
0x000000000001d712 in _sbrk ()
=> 0x1d712 <_sbrk+62>:	mv	a0,a4
0x000000000001d714 in _sbrk ()
=> 0x1d714 <_sbrk+64>:	addi	sp,sp,16
0x000000000001d716 in _sbrk ()
=> 0x1d716 <_sbrk+66>:	ret
0x0000000000012fb4 in _sbrk_r ()
=> 0x12fb4 <_sbrk_r+20>:	li	a5,-1
0x0000000000012fb6 in _sbrk_r ()
=> 0x12fb6 <_sbrk_r+22>:	beq	a0,a5,0x12fc4 <_sbrk_r+36>
0x0000000000012fba in _sbrk_r ()
=> 0x12fba <_sbrk_r+26>:	ld	ra,24(sp)
0x0000000000012fbc in _sbrk_r ()
=> 0x12fbc <_sbrk_r+28>:	ld	s0,16(sp)
0x0000000000012fbe in _sbrk_r ()
=> 0x12fbe <_sbrk_r+30>:	ld	s1,8(sp)
0x0000000000012fc0 in _sbrk_r ()
=> 0x12fc0 <_sbrk_r+32>:	addi	sp,sp,32
0x0000000000012fc2 in _sbrk_r ()
=> 0x12fc2 <_sbrk_r+34>:	ret
0x0000000000015328 in _malloc_trim_r ()
=> 0x15328 <_malloc_trim_r+112>:	li	a5,-1
0x000000000001532a in _malloc_trim_r ()
=> 0x1532a <_malloc_trim_r+114>:	beq	a0,a5,0x15362 <_malloc_trim_r+170>
0x000000000001532e in _malloc_trim_r ()
=> 0x1532e <_malloc_trim_r+118>:	lui	a5,0x22
0x0000000000015332 in _malloc_trim_r ()
=> 0x15332 <_malloc_trim_r+122>:	addi	a5,a5,1320
0x0000000000015336 in _malloc_trim_r ()
=> 0x15336 <_malloc_trim_r+126>:	lw	a4,0(a5)
0x0000000000015338 in _malloc_trim_r ()
=> 0x15338 <_malloc_trim_r+128>:	ld	a3,16(s3)
0x000000000001533c in _malloc_trim_r ()
=> 0x1533c <_malloc_trim_r+132>:	sub	s1,s1,s0
0x000000000001533e in _malloc_trim_r ()
=> 0x1533e <_malloc_trim_r+134>:	ori	s1,s1,1
0x0000000000015342 in _malloc_trim_r ()
=> 0x15342 <_malloc_trim_r+138>:	subw	s0,a4,s0
0x0000000000015346 in _malloc_trim_r ()
=> 0x15346 <_malloc_trim_r+142>:	mv	a0,s2
0x0000000000015348 in _malloc_trim_r ()
=> 0x15348 <_malloc_trim_r+144>:	sd	s1,8(a3)
0x000000000001534a in _malloc_trim_r ()
=> 0x1534a <_malloc_trim_r+146>:	sw	s0,0(a5)
0x000000000001534c in _malloc_trim_r ()
=> 0x1534c <_malloc_trim_r+148>:	jal	ra,0x12f50 <__malloc_unlock>
0x0000000000012f50 in __malloc_unlock ()
=> 0x12f50 <__malloc_unlock>:	ret
0x0000000000015350 in _malloc_trim_r ()
=> 0x15350 <_malloc_trim_r+152>:	ld	ra,40(sp)
0x0000000000015352 in _malloc_trim_r ()
=> 0x15352 <_malloc_trim_r+154>:	ld	s0,32(sp)
0x0000000000015354 in _malloc_trim_r ()
=> 0x15354 <_malloc_trim_r+156>:	ld	s1,24(sp)
0x0000000000015356 in _malloc_trim_r ()
=> 0x15356 <_malloc_trim_r+158>:	ld	s2,16(sp)
0x0000000000015358 in _malloc_trim_r ()
=> 0x15358 <_malloc_trim_r+160>:	ld	s3,8(sp)
0x000000000001535a in _malloc_trim_r ()
=> 0x1535a <_malloc_trim_r+162>:	ld	s4,0(sp)
0x000000000001535c in _malloc_trim_r ()
=> 0x1535c <_malloc_trim_r+164>:	li	a0,1
0x000000000001535e in _malloc_trim_r ()
=> 0x1535e <_malloc_trim_r+166>:	addi	sp,sp,48
0x0000000000015360 in _malloc_trim_r ()
=> 0x15360 <_malloc_trim_r+168>:	ret
0x0000000000015534 in _free_r ()
=> 0x15534 <_free_r+422>:	j	0x15440 <_free_r+178>
0x0000000000015440 in _free_r ()
=> 0x15440 <_free_r+178>:	ld	s0,16(sp)
0x0000000000015442 in _free_r ()
=> 0x15442 <_free_r+180>:	ld	ra,24(sp)
0x0000000000015444 in _free_r ()
=> 0x15444 <_free_r+182>:	mv	a0,s1
0x0000000000015446 in _free_r ()
=> 0x15446 <_free_r+184>:	ld	s1,8(sp)
0x0000000000015448 in _free_r ()
=> 0x15448 <_free_r+186>:	addi	sp,sp,32
0x000000000001544a in _free_r ()
=> 0x1544a <_free_r+188>:	j	0x12f50 <__malloc_unlock>
0x0000000000012f50 in __malloc_unlock ()
=> 0x12f50 <__malloc_unlock>:	ret
0x000000000001b7fc in _fclose_r.part.0 ()
=> 0x1b7fc <_fclose_r.part.0+126>:	j	0x1b7aa <_fclose_r.part.0+44>
0x000000000001b7aa in _fclose_r.part.0 ()
=> 0x1b7aa <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001b7ac in _fclose_r.part.0 ()
=> 0x1b7ac <_fclose_r.part.0+46>:	beqz	a1,0x1b7c0 <_fclose_r.part.0+66>
0x000000000001b7c0 in _fclose_r.part.0 ()
=> 0x1b7c0 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001b7c2 in _fclose_r.part.0 ()
=> 0x1b7c2 <_fclose_r.part.0+68>:	beqz	a1,0x1b7ce <_fclose_r.part.0+80>
0x000000000001b7ce in _fclose_r.part.0 ()
=> 0x1b7ce <_fclose_r.part.0+80>:	jal	ra,0x15260 <__sfp_lock_acquire>
0x0000000000015260 in __sfp_lock_acquire ()
=> 0x15260 <__sfp_lock_acquire>:	ret
0x000000000001b7d2 in _fclose_r.part.0 ()
=> 0x1b7d2 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001b7d6 in _fclose_r.part.0 ()
=> 0x1b7d6 <_fclose_r.part.0+88>:	jal	ra,0x15262 <__sfp_lock_release>
0x0000000000015262 in __sfp_lock_release ()
=> 0x15262 <__sfp_lock_release>:	ret
0x000000000001b7da in _fclose_r.part.0 ()
=> 0x1b7da <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001b7dc in _fclose_r.part.0 ()
=> 0x1b7dc <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001b7de in _fclose_r.part.0 ()
=> 0x1b7de <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001b7e0 in _fclose_r.part.0 ()
=> 0x1b7e0 <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001b7e2 in _fclose_r.part.0 ()
=> 0x1b7e2 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001b7e4 in _fclose_r.part.0 ()
=> 0x1b7e4 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001b7e6 in _fclose_r.part.0 ()
=> 0x1b7e6 <_fclose_r.part.0+104>:	ret
0x00000000000156bc in _fwalk_reent ()
=> 0x156bc <_fwalk_reent+90>:	or	s6,a0,s6
0x00000000000156c0 in _fwalk_reent ()
=> 0x156c0 <_fwalk_reent+94>:	sext.w	s6,s6
0x00000000000156c2 in _fwalk_reent ()
=> 0x156c2 <_fwalk_reent+96>:	addi	s0,s0,176
0x00000000000156c6 in _fwalk_reent ()
=> 0x156c6 <_fwalk_reent+100>:	bne	s1,s0,0x156a6 <_fwalk_reent+68>
0x00000000000156a6 in _fwalk_reent ()
=> 0x156a6 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x00000000000156aa in _fwalk_reent ()
=> 0x156aa <_fwalk_reent+72>:	bgeu	s7,a5,0x156c2 <_fwalk_reent+96>
0x00000000000156ae in _fwalk_reent ()
=> 0x156ae <_fwalk_reent+76>:	lh	a5,18(s0)
0x00000000000156b2 in _fwalk_reent ()
=> 0x156b2 <_fwalk_reent+80>:	mv	a1,s0
0x00000000000156b4 in _fwalk_reent ()
=> 0x156b4 <_fwalk_reent+82>:	mv	a0,s8
0x00000000000156b6 in _fwalk_reent ()
=> 0x156b6 <_fwalk_reent+84>:	beq	a5,s3,0x156c2 <_fwalk_reent+96>
0x00000000000156ba in _fwalk_reent ()
=> 0x156ba <_fwalk_reent+88>:	jalr	s4
0x000000000001b7fe in _fclose_r ()
=> 0x1b7fe <_fclose_r>:	beqz	a1,0x1b838 <_fclose_r+58>
0x000000000001b800 in _fclose_r ()
=> 0x1b800 <_fclose_r+2>:	addi	sp,sp,-32
0x000000000001b802 in _fclose_r ()
=> 0x1b802 <_fclose_r+4>:	sd	s0,16(sp)
0x000000000001b804 in _fclose_r ()
=> 0x1b804 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001b806 in _fclose_r ()
=> 0x1b806 <_fclose_r+8>:	mv	s0,a0
0x000000000001b808 in _fclose_r ()
=> 0x1b808 <_fclose_r+10>:	beqz	a0,0x1b80e <_fclose_r+16>
0x000000000001b80a in _fclose_r ()
=> 0x1b80a <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001b80c in _fclose_r ()
=> 0x1b80c <_fclose_r+14>:	beqz	a5,0x1b828 <_fclose_r+42>
0x000000000001b80e in _fclose_r ()
=> 0x1b80e <_fclose_r+16>:	lh	a5,16(a1)
0x000000000001b812 in _fclose_r ()
=> 0x1b812 <_fclose_r+20>:	bnez	a5,0x1b81e <_fclose_r+32>
0x000000000001b81e in _fclose_r ()
=> 0x1b81e <_fclose_r+32>:	mv	a0,s0
0x000000000001b820 in _fclose_r ()
=> 0x1b820 <_fclose_r+34>:	ld	s0,16(sp)
0x000000000001b822 in _fclose_r ()
=> 0x1b822 <_fclose_r+36>:	ld	ra,24(sp)
0x000000000001b824 in _fclose_r ()
=> 0x1b824 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001b826 in _fclose_r ()
=> 0x1b826 <_fclose_r+40>:	j	0x1b77e <_fclose_r.part.0>
0x000000000001b77e in _fclose_r.part.0 ()
=> 0x1b77e <_fclose_r.part.0>:	addi	sp,sp,-32
0x000000000001b780 in _fclose_r.part.0 ()
=> 0x1b780 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x000000000001b782 in _fclose_r.part.0 ()
=> 0x1b782 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x000000000001b784 in _fclose_r.part.0 ()
=> 0x1b784 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001b786 in _fclose_r.part.0 ()
=> 0x1b786 <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001b788 in _fclose_r.part.0 ()
=> 0x1b788 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001b78a in _fclose_r.part.0 ()
=> 0x1b78a <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001b78c in _fclose_r.part.0 ()
=> 0x1b78c <_fclose_r.part.0+14>:	jal	ra,0x14dea <__sflush_r>
0x0000000000014dea in __sflush_r ()
=> 0x14dea <__sflush_r>:	lh	a5,16(a1)
0x0000000000014dee in __sflush_r ()
=> 0x14dee <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000014df0 in __sflush_r ()
=> 0x14df0 <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000014df2 in __sflush_r ()
=> 0x14df2 <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000014df4 in __sflush_r ()
=> 0x14df4 <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000014df6 in __sflush_r ()
=> 0x14df6 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000014df8 in __sflush_r ()
=> 0x14df8 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000014dfa in __sflush_r ()
=> 0x14dfa <__sflush_r+16>:	andi	a3,a5,8
0x0000000000014dfe in __sflush_r ()
=> 0x14dfe <__sflush_r+20>:	mv	s0,a1
0x0000000000014e00 in __sflush_r ()
=> 0x14e00 <__sflush_r+22>:	mv	s3,a0
0x0000000000014e02 in __sflush_r ()
=> 0x14e02 <__sflush_r+24>:	bnez	a3,0x14eb6 <__sflush_r+204>
0x0000000000014e04 in __sflush_r ()
=> 0x14e04 <__sflush_r+26>:	lui	a4,0x1
0x0000000000014e06 in __sflush_r ()
=> 0x14e06 <__sflush_r+28>:	addi	a4,a4,-2048
0x0000000000014e0a in __sflush_r ()
=> 0x14e0a <__sflush_r+32>:	lw	a3,8(a1)
0x0000000000014e0c in __sflush_r ()
=> 0x14e0c <__sflush_r+34>:	or	a5,a5,a4
0x0000000000014e0e in __sflush_r ()
=> 0x14e0e <__sflush_r+36>:	sh	a5,16(a1)
0x0000000000014e12 in __sflush_r ()
=> 0x14e12 <__sflush_r+40>:	blez	a3,0x14f12 <__sflush_r+296>
0x0000000000014f12 in __sflush_r ()
=> 0x14f12 <__sflush_r+296>:	lw	a4,112(a1)
0x0000000000014f14 in __sflush_r ()
=> 0x14f14 <__sflush_r+298>:	bgtz	a4,0x14e16 <__sflush_r+44>
0x0000000000014f18 in __sflush_r ()
=> 0x14f18 <__sflush_r+302>:	j	0x14ea6 <__sflush_r+188>
0x0000000000014ea6 in __sflush_r ()
=> 0x14ea6 <__sflush_r+188>:	li	a0,0
0x0000000000014ea8 in __sflush_r ()
=> 0x14ea8 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000014eaa in __sflush_r ()
=> 0x14eaa <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000014eac in __sflush_r ()
=> 0x14eac <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000014eae in __sflush_r ()
=> 0x14eae <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000014eb0 in __sflush_r ()
=> 0x14eb0 <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000014eb2 in __sflush_r ()
=> 0x14eb2 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000014eb4 in __sflush_r ()
=> 0x14eb4 <__sflush_r+202>:	ret
0x000000000001b790 in _fclose_r.part.0 ()
=> 0x1b790 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x000000000001b792 in _fclose_r.part.0 ()
=> 0x1b792 <_fclose_r.part.0+20>:	mv	s2,a0
0x000000000001b794 in _fclose_r.part.0 ()
=> 0x1b794 <_fclose_r.part.0+22>:	beqz	a5,0x1b7a0 <_fclose_r.part.0+34>
0x000000000001b796 in _fclose_r.part.0 ()
=> 0x1b796 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001b798 in _fclose_r.part.0 ()
=> 0x1b798 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001b79a in _fclose_r.part.0 ()
=> 0x1b79a <_fclose_r.part.0+28>:	jalr	a5
0x0000000000018a4c in __sclose ()
=> 0x18a4c <__sclose>:	lh	a1,18(a1)
0x0000000000018a50 in __sclose ()
=> 0x18a50 <__sclose+4>:	j	0x1b748 <_close_r>
0x000000000001b748 in _close_r ()
=> 0x1b748 <_close_r>:	addi	sp,sp,-32
0x000000000001b74a in _close_r ()
=> 0x1b74a <_close_r+2>:	sd	s0,16(sp)
0x000000000001b74c in _close_r ()
=> 0x1b74c <_close_r+4>:	sd	s1,8(sp)
0x000000000001b74e in _close_r ()
=> 0x1b74e <_close_r+6>:	mv	s0,a0
0x000000000001b750 in _close_r ()
=> 0x1b750 <_close_r+8>:	mv	a0,a1
0x000000000001b752 in _close_r ()
=> 0x1b752 <_close_r+10>:	sd	ra,24(sp)
0x000000000001b754 in _close_r ()
=> 0x1b754 <_close_r+12>:	sw	zero,1936(gp)
0x000000000001b758 in _close_r ()
=> 0x1b758 <_close_r+16>:	jal	ra,0x1d5b0 <_close>
0x000000000001d5b0 in _close ()
=> 0x1d5b0 <_close>:	addi	sp,sp,-16
0x000000000001d5b2 in _close ()
=> 0x1d5b2 <_close+2>:	sd	ra,8(sp)
0x000000000001d5b4 in _close ()
=> 0x1d5b4 <_close+4>:	sd	s0,0(sp)
0x000000000001d5b6 in _close ()
=> 0x1d5b6 <_close+6>:	li	a7,57
0x000000000001d5ba in _close ()
=> 0x1d5ba <_close+10>:	ecall
0x000000000001d5be in _close ()
=> 0x1d5be <_close+14>:	mv	s0,a0
0x000000000001d5c0 in _close ()
=> 0x1d5c0 <_close+16>:	bltz	a0,0x1d5ce <_close+30>
0x000000000001d5c4 in _close ()
=> 0x1d5c4 <_close+20>:	sext.w	a0,a0
0x000000000001d5c6 in _close ()
=> 0x1d5c6 <_close+22>:	ld	ra,8(sp)
0x000000000001d5c8 in _close ()
=> 0x1d5c8 <_close+24>:	ld	s0,0(sp)
0x000000000001d5ca in _close ()
=> 0x1d5ca <_close+26>:	addi	sp,sp,16
0x000000000001d5cc in _close ()
=> 0x1d5cc <_close+28>:	ret
0x000000000001b75c in _close_r ()
=> 0x1b75c <_close_r+20>:	li	a5,-1
0x000000000001b75e in _close_r ()
=> 0x1b75e <_close_r+22>:	beq	a0,a5,0x1b76c <_close_r+36>
0x000000000001b762 in _close_r ()
=> 0x1b762 <_close_r+26>:	ld	ra,24(sp)
0x000000000001b764 in _close_r ()
=> 0x1b764 <_close_r+28>:	ld	s0,16(sp)
0x000000000001b766 in _close_r ()
=> 0x1b766 <_close_r+30>:	ld	s1,8(sp)
0x000000000001b768 in _close_r ()
=> 0x1b768 <_close_r+32>:	addi	sp,sp,32
0x000000000001b76a in _close_r ()
=> 0x1b76a <_close_r+34>:	ret
0x000000000001b79c in _fclose_r.part.0 ()
=> 0x1b79c <_fclose_r.part.0+30>:	bltz	a0,0x1b7e8 <_fclose_r.part.0+106>
0x000000000001b7a0 in _fclose_r.part.0 ()
=> 0x1b7a0 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x000000000001b7a4 in _fclose_r.part.0 ()
=> 0x1b7a4 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x000000000001b7a8 in _fclose_r.part.0 ()
=> 0x1b7a8 <_fclose_r.part.0+42>:	bnez	a5,0x1b7f4 <_fclose_r.part.0+118>
0x000000000001b7aa in _fclose_r.part.0 ()
=> 0x1b7aa <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x000000000001b7ac in _fclose_r.part.0 ()
=> 0x1b7ac <_fclose_r.part.0+46>:	beqz	a1,0x1b7c0 <_fclose_r.part.0+66>
0x000000000001b7c0 in _fclose_r.part.0 ()
=> 0x1b7c0 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x000000000001b7c2 in _fclose_r.part.0 ()
=> 0x1b7c2 <_fclose_r.part.0+68>:	beqz	a1,0x1b7ce <_fclose_r.part.0+80>
0x000000000001b7ce in _fclose_r.part.0 ()
=> 0x1b7ce <_fclose_r.part.0+80>:	jal	ra,0x15260 <__sfp_lock_acquire>
0x0000000000015260 in __sfp_lock_acquire ()
=> 0x15260 <__sfp_lock_acquire>:	ret
0x000000000001b7d2 in _fclose_r.part.0 ()
=> 0x1b7d2 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x000000000001b7d6 in _fclose_r.part.0 ()
=> 0x1b7d6 <_fclose_r.part.0+88>:	jal	ra,0x15262 <__sfp_lock_release>
0x0000000000015262 in __sfp_lock_release ()
=> 0x15262 <__sfp_lock_release>:	ret
0x000000000001b7da in _fclose_r.part.0 ()
=> 0x1b7da <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x000000000001b7dc in _fclose_r.part.0 ()
=> 0x1b7dc <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x000000000001b7de in _fclose_r.part.0 ()
=> 0x1b7de <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x000000000001b7e0 in _fclose_r.part.0 ()
=> 0x1b7e0 <_fclose_r.part.0+98>:	mv	a0,s2
0x000000000001b7e2 in _fclose_r.part.0 ()
=> 0x1b7e2 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x000000000001b7e4 in _fclose_r.part.0 ()
=> 0x1b7e4 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x000000000001b7e6 in _fclose_r.part.0 ()
=> 0x1b7e6 <_fclose_r.part.0+104>:	ret
0x00000000000156bc in _fwalk_reent ()
=> 0x156bc <_fwalk_reent+90>:	or	s6,a0,s6
0x00000000000156c0 in _fwalk_reent ()
=> 0x156c0 <_fwalk_reent+94>:	sext.w	s6,s6
0x00000000000156c2 in _fwalk_reent ()
=> 0x156c2 <_fwalk_reent+96>:	addi	s0,s0,176
0x00000000000156c6 in _fwalk_reent ()
=> 0x156c6 <_fwalk_reent+100>:	bne	s1,s0,0x156a6 <_fwalk_reent+68>
0x00000000000156ca in _fwalk_reent ()
=> 0x156ca <_fwalk_reent+104>:	ld	s2,0(s2)
0x00000000000156ce in _fwalk_reent ()
=> 0x156ce <_fwalk_reent+108>:	bnez	s2,0x1568a <_fwalk_reent+40>
0x00000000000156d2 in _fwalk_reent ()
=> 0x156d2 <_fwalk_reent+112>:	ld	ra,72(sp)
0x00000000000156d4 in _fwalk_reent ()
=> 0x156d4 <_fwalk_reent+114>:	ld	s0,64(sp)
0x00000000000156d6 in _fwalk_reent ()
=> 0x156d6 <_fwalk_reent+116>:	ld	s1,56(sp)
0x00000000000156d8 in _fwalk_reent ()
=> 0x156d8 <_fwalk_reent+118>:	ld	s2,48(sp)
0x00000000000156da in _fwalk_reent ()
=> 0x156da <_fwalk_reent+120>:	ld	s3,40(sp)
0x00000000000156dc in _fwalk_reent ()
=> 0x156dc <_fwalk_reent+122>:	ld	s4,32(sp)
0x00000000000156de in _fwalk_reent ()
=> 0x156de <_fwalk_reent+124>:	ld	s5,24(sp)
0x00000000000156e0 in _fwalk_reent ()
=> 0x156e0 <_fwalk_reent+126>:	ld	s7,8(sp)
0x00000000000156e2 in _fwalk_reent ()
=> 0x156e2 <_fwalk_reent+128>:	ld	s8,0(sp)
0x00000000000156e4 in _fwalk_reent ()
=> 0x156e4 <_fwalk_reent+130>:	mv	a0,s6
0x00000000000156e6 in _fwalk_reent ()
=> 0x156e6 <_fwalk_reent+132>:	ld	s6,16(sp)
0x00000000000156e8 in _fwalk_reent ()
=> 0x156e8 <_fwalk_reent+134>:	addi	sp,sp,80
0x00000000000156ea in _fwalk_reent ()
=> 0x156ea <_fwalk_reent+136>:	ret
0x00000000000127f8 in exit ()
=> 0x127f8 <exit+24>:	mv	a0,s0
0x00000000000127fa in exit ()
=> 0x127fa <exit+26>:	jal	ra,0x1d5dc <_exit>
0x000000000001d5dc in _exit ()
=> 0x1d5dc <_exit>:	li	a7,93
0x000000000001d5e0 in _exit ()
=> 0x1d5e0 <_exit+4>:	ecall
[Inferior 1 (process 793) exited normally]
script_remote.gdb:25: Error in sourced command file:
No registers.
