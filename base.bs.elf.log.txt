=> 0x102ac <start_trigger+4>:	sd	ra,24(sp)
0x00000000000102b0	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102b0 <start_trigger+8>:	sd	s0,16(sp)
0x00000000000102b4	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102b4 <start_trigger+12>:	addi	s0,sp,32
0x00000000000102b8	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102b8 <start_trigger+16>:	rdcycle	a0
0x00000000000102bc	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102bc <start_trigger+20>:	sd	a0,-24(s0)
0x00000000000102c0	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102c0 <start_trigger+24>:	ld	a0,-24(s0)
0x00000000000102c4	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102c4 <start_trigger+28>:	sd	a0,-32(s0)
0x00000000000102c8	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102c8 <start_trigger+32>:	ld	a0,-32(s0)
0x00000000000102cc	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102cc <start_trigger+36>:	sd	a0,1896(gp)
37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102d0 <start_trigger+40>:	ld	s0,16(sp)
0x00000000000102d4 in start_trigger () at ../config/riscv64/boards/generic/boardsupport.c:37
37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102d4 <start_trigger+44>:	ld	ra,24(sp)
0x00000000000102d8	37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102d8 <start_trigger+48>:	addi	sp,sp,32
0x00000000000102dc	37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102dc <start_trigger+52>:	ret
main (argc=1, argv=0x3ffffffb58) at main.c:53
53	main.c: No such file or directory.
=> 0x10218 <main+144>:	ld	a0,-88(s0)
0x000000000001021c	53	in main.c
=> 0x1021c <main+148>:	sw	a0,-36(s0)
0x0000000000010220	53	in main.c
=> 0x10220 <main+152>:	j	0x10224 <main+156>
0x0000000000010224	53	in main.c
=> 0x10224 <main+156>:	lw	a0,-36(s0)
0x0000000000010228	53	in main.c
=> 0x10228 <main+160>:	li	a1,0
0x000000000001022c	53	in main.c
=> 0x1022c <main+164>:	blt	a1,a0,0x10258 <main+208>
0x0000000000010230	53	in main.c
=> 0x10230 <main+168>:	j	0x10234 <main+172>
54	in main.c
=> 0x10234 <main+172>:	jal	ra,0x1046c <initialise_benchmark>
initialise_benchmark () at libbs.c:125
125	libbs.c: No such file or directory.
=> 0x1046c <initialise_benchmark>:	addi	sp,sp,-16
126	in libbs.c
=> 0x10470 <initialise_benchmark+4>:	sd	ra,8(sp)
0x0000000000010474	126	in libbs.c
=> 0x10474 <initialise_benchmark+8>:	sd	s0,0(sp)
0x0000000000010478	126	in libbs.c
=> 0x10478 <initialise_benchmark+12>:	addi	s0,sp,16
0x000000000001047c	126	in libbs.c
=> 0x1047c <initialise_benchmark+16>:	ld	s0,0(sp)
0x0000000000010480 in initialise_benchmark () at libbs.c:126
126	in libbs.c
=> 0x10480 <initialise_benchmark+20>:	ld	ra,8(sp)
0x0000000000010484	126	in libbs.c
=> 0x10484 <initialise_benchmark+24>:	addi	sp,sp,16
0x0000000000010488	126	in libbs.c
=> 0x10488 <initialise_benchmark+28>:	ret
main (argc=1, argv=0x3ffffffb58) at main.c:55
55	main.c: No such file or directory.
=> 0x10238 <main+176>:	sd	a0,-120(s0)
0x000000000001023c	55	in main.c
=> 0x1023c <main+180>:	jal	ra,0x1048c <benchmark>
benchmark () at libbs.c:131
131	libbs.c: No such file or directory.
=> 0x1048c <benchmark>:	addi	sp,sp,-32
0x0000000000010490	131	in libbs.c
=> 0x10490 <benchmark+4>:	sd	ra,24(sp)
0x0000000000010494	131	in libbs.c
=> 0x10494 <benchmark+8>:	sd	s0,16(sp)
0x0000000000010498	131	in libbs.c
=> 0x10498 <benchmark+12>:	addi	s0,sp,32
0x000000000001049c	131	in libbs.c
=> 0x1049c <benchmark+16>:	li	a0,8
132	in libbs.c
=> 0x104a0 <benchmark+20>:	jal	ra,0x10330 <binary_search>
binary_search (x=220302) at libbs.c:90
90	in libbs.c
=> 0x10330 <binary_search>:	addi	sp,sp,-48
0x0000000000010334	90	in libbs.c
=> 0x10334 <binary_search+4>:	sd	ra,40(sp)
0x0000000000010338	90	in libbs.c
=> 0x10338 <binary_search+8>:	sd	s0,32(sp)
0x000000000001033c	90	in libbs.c
=> 0x1033c <binary_search+12>:	addi	s0,sp,48
0x0000000000010340	90	in libbs.c
=> 0x10340 <binary_search+16>:	mv	a1,a0
0x0000000000010344	90	in libbs.c
=> 0x10344 <binary_search+20>:	sw	a0,-20(s0)
0x0000000000010348	90	in libbs.c
=> 0x10348 <binary_search+24>:	li	a0,0
93	in libbs.c
=> 0x1034c <binary_search+28>:	sw	a0,-36(s0)
0x0000000000010350	93	in libbs.c
=> 0x10350 <binary_search+32>:	li	a0,14
94	in libbs.c
=> 0x10354 <binary_search+36>:	sw	a0,-32(s0)
0x0000000000010358	94	in libbs.c
=> 0x10358 <binary_search+40>:	li	a0,1
0x000000000001035c	94	in libbs.c
=> 0x1035c <binary_search+44>:	slli	a0,a0,0x20
0x0000000000010360	94	in libbs.c
=> 0x10360 <binary_search+48>:	addi	a0,a0,-1
95	in libbs.c
=> 0x10364 <binary_search+52>:	sw	a0,-24(s0)
96	in libbs.c
=> 0x10368 <binary_search+56>:	j	0x1036c <binary_search+60>
0x000000000001036c	96	in libbs.c
=> 0x1036c <binary_search+60>:	lw	a0,-36(s0)
0x0000000000010370	96	in libbs.c
=> 0x10370 <binary_search+64>:	lw	a1,-32(s0)
0x0000000000010374	96	in libbs.c
=> 0x10374 <binary_search+68>:	blt	a1,a0,0x1042c <binary_search+252>
0x0000000000010378	96	in libbs.c
=> 0x10378 <binary_search+72>:	j	0x1037c <binary_search+76>
97	in libbs.c
=> 0x1037c <binary_search+76>:	lw	a0,-36(s0)
0x0000000000010380	97	in libbs.c
=> 0x10380 <binary_search+80>:	lw	a1,-32(s0)
0x0000000000010384	97	in libbs.c
=> 0x10384 <binary_search+84>:	addw	a0,a0,a1
0x0000000000010388	97	in libbs.c
=> 0x10388 <binary_search+88>:	srli	a0,a0,0x1
0x000000000001038c	97	in libbs.c
=> 0x1038c <binary_search+92>:	sw	a0,-28(s0)
98	in libbs.c
=> 0x10390 <binary_search+96>:	lw	a0,-28(s0)
0x0000000000010394	98	in libbs.c
=> 0x10394 <binary_search+100>:	lui	a1,0x1e
0x0000000000010398	98	in libbs.c
=> 0x10398 <binary_search+104>:	addi	a1,a1,1600
0x000000000001039c	98	in libbs.c
=> 0x1039c <binary_search+108>:	slli	a0,a0,0x3
0x00000000000103a0	98	in libbs.c
=> 0x103a0 <binary_search+112>:	add	a0,a0,a1
0x00000000000103a4	98	in libbs.c
=> 0x103a4 <binary_search+116>:	lw	a0,0(a0)
0x00000000000103a8	98	in libbs.c
=> 0x103a8 <binary_search+120>:	lw	a1,-20(s0)
0x00000000000103ac	98	in libbs.c
=> 0x103ac <binary_search+124>:	bne	a0,a1,0x103e0 <binary_search+176>
103	in libbs.c
=> 0x103e0 <binary_search+176>:	lw	a0,-28(s0)
0x00000000000103e4	103	in libbs.c
=> 0x103e4 <binary_search+180>:	lui	a1,0x1e
0x00000000000103e8	103	in libbs.c
=> 0x103e8 <binary_search+184>:	addi	a1,a1,1600
0x00000000000103ec	103	in libbs.c
=> 0x103ec <binary_search+188>:	slli	a0,a0,0x3
0x00000000000103f0	103	in libbs.c
=> 0x103f0 <binary_search+192>:	add	a0,a0,a1
0x00000000000103f4	103	in libbs.c
=> 0x103f4 <binary_search+196>:	lw	a0,0(a0)
0x00000000000103f8	103	in libbs.c
=> 0x103f8 <binary_search+200>:	lw	a1,-20(s0)
0x00000000000103fc	103	in libbs.c
=> 0x103fc <binary_search+204>:	bge	a1,a0,0x10414 <binary_search+228>
0x0000000000010400	103	in libbs.c
=> 0x10400 <binary_search+208>:	j	0x10404 <binary_search+212>
104	in libbs.c
=> 0x10404 <binary_search+212>:	lw	a0,-28(s0)
0x0000000000010408	104	in libbs.c
=> 0x10408 <binary_search+216>:	addi	a0,a0,-1
0x000000000001040c	104	in libbs.c
=> 0x1040c <binary_search+220>:	sw	a0,-32(s0)
105	in libbs.c
=> 0x10410 <binary_search+224>:	j	0x10424 <binary_search+244>
0x0000000000010424	107	in libbs.c
=> 0x10424 <binary_search+244>:	j	0x10428 <binary_search+248>
96	in libbs.c
=> 0x10428 <binary_search+248>:	j	0x1036c <binary_search+60>
0x000000000001036c	96	in libbs.c
=> 0x1036c <binary_search+60>:	lw	a0,-36(s0)
0x0000000000010370	96	in libbs.c
=> 0x10370 <binary_search+64>:	lw	a1,-32(s0)
0x0000000000010374	96	in libbs.c
=> 0x10374 <binary_search+68>:	blt	a1,a0,0x1042c <binary_search+252>
0x0000000000010378	96	in libbs.c
=> 0x10378 <binary_search+72>:	j	0x1037c <binary_search+76>
97	in libbs.c
=> 0x1037c <binary_search+76>:	lw	a0,-36(s0)
0x0000000000010380	97	in libbs.c
=> 0x10380 <binary_search+80>:	lw	a1,-32(s0)
0x0000000000010384	97	in libbs.c
=> 0x10384 <binary_search+84>:	addw	a0,a0,a1
0x0000000000010388	97	in libbs.c
=> 0x10388 <binary_search+88>:	srli	a0,a0,0x1
0x000000000001038c	97	in libbs.c
=> 0x1038c <binary_search+92>:	sw	a0,-28(s0)
98	in libbs.c
=> 0x10390 <binary_search+96>:	lw	a0,-28(s0)
0x0000000000010394	98	in libbs.c
=> 0x10394 <binary_search+100>:	lui	a1,0x1e
0x0000000000010398	98	in libbs.c
=> 0x10398 <binary_search+104>:	addi	a1,a1,1600
0x000000000001039c	98	in libbs.c
=> 0x1039c <binary_search+108>:	slli	a0,a0,0x3
0x00000000000103a0	98	in libbs.c
=> 0x103a0 <binary_search+112>:	add	a0,a0,a1
0x00000000000103a4	98	in libbs.c
=> 0x103a4 <binary_search+116>:	lw	a0,0(a0)
0x00000000000103a8	98	in libbs.c
=> 0x103a8 <binary_search+120>:	lw	a1,-20(s0)
0x00000000000103ac	98	in libbs.c
=> 0x103ac <binary_search+124>:	bne	a0,a1,0x103e0 <binary_search+176>
103	in libbs.c
=> 0x103e0 <binary_search+176>:	lw	a0,-28(s0)
0x00000000000103e4	103	in libbs.c
=> 0x103e4 <binary_search+180>:	lui	a1,0x1e
0x00000000000103e8	103	in libbs.c
=> 0x103e8 <binary_search+184>:	addi	a1,a1,1600
0x00000000000103ec	103	in libbs.c
=> 0x103ec <binary_search+188>:	slli	a0,a0,0x3
0x00000000000103f0	103	in libbs.c
=> 0x103f0 <binary_search+192>:	add	a0,a0,a1
0x00000000000103f4	103	in libbs.c
=> 0x103f4 <binary_search+196>:	lw	a0,0(a0)
0x00000000000103f8	103	in libbs.c
=> 0x103f8 <binary_search+200>:	lw	a1,-20(s0)
0x00000000000103fc	103	in libbs.c
=> 0x103fc <binary_search+204>:	bge	a1,a0,0x10414 <binary_search+228>
107	in libbs.c
=> 0x10414 <binary_search+228>:	lw	a0,-28(s0)
0x0000000000010418	107	in libbs.c
=> 0x10418 <binary_search+232>:	addi	a0,a0,1
0x000000000001041c	107	in libbs.c
=> 0x1041c <binary_search+236>:	sw	a0,-36(s0)
0x0000000000010420	107	in libbs.c
=> 0x10420 <binary_search+240>:	j	0x10424 <binary_search+244>
0x0000000000010424	107	in libbs.c
=> 0x10424 <binary_search+244>:	j	0x10428 <binary_search+248>
96	in libbs.c
=> 0x10428 <binary_search+248>:	j	0x1036c <binary_search+60>
0x000000000001036c	96	in libbs.c
=> 0x1036c <binary_search+60>:	lw	a0,-36(s0)
0x0000000000010370	96	in libbs.c
=> 0x10370 <binary_search+64>:	lw	a1,-32(s0)
0x0000000000010374	96	in libbs.c
=> 0x10374 <binary_search+68>:	blt	a1,a0,0x1042c <binary_search+252>
0x0000000000010378	96	in libbs.c
=> 0x10378 <binary_search+72>:	j	0x1037c <binary_search+76>
97	in libbs.c
=> 0x1037c <binary_search+76>:	lw	a0,-36(s0)
0x0000000000010380	97	in libbs.c
=> 0x10380 <binary_search+80>:	lw	a1,-32(s0)
0x0000000000010384	97	in libbs.c
=> 0x10384 <binary_search+84>:	addw	a0,a0,a1
0x0000000000010388	97	in libbs.c
=> 0x10388 <binary_search+88>:	srli	a0,a0,0x1
0x000000000001038c	97	in libbs.c
=> 0x1038c <binary_search+92>:	sw	a0,-28(s0)
98	in libbs.c
=> 0x10390 <binary_search+96>:	lw	a0,-28(s0)
0x0000000000010394	98	in libbs.c
=> 0x10394 <binary_search+100>:	lui	a1,0x1e
0x0000000000010398	98	in libbs.c
=> 0x10398 <binary_search+104>:	addi	a1,a1,1600
0x000000000001039c	98	in libbs.c
=> 0x1039c <binary_search+108>:	slli	a0,a0,0x3
0x00000000000103a0	98	in libbs.c
=> 0x103a0 <binary_search+112>:	add	a0,a0,a1
0x00000000000103a4	98	in libbs.c
=> 0x103a4 <binary_search+116>:	lw	a0,0(a0)
0x00000000000103a8	98	in libbs.c
=> 0x103a8 <binary_search+120>:	lw	a1,-20(s0)
0x00000000000103ac	98	in libbs.c
=> 0x103ac <binary_search+124>:	bne	a0,a1,0x103e0 <binary_search+176>
103	in libbs.c
=> 0x103e0 <binary_search+176>:	lw	a0,-28(s0)
0x00000000000103e4	103	in libbs.c
=> 0x103e4 <binary_search+180>:	lui	a1,0x1e
0x00000000000103e8	103	in libbs.c
=> 0x103e8 <binary_search+184>:	addi	a1,a1,1600
0x00000000000103ec	103	in libbs.c
=> 0x103ec <binary_search+188>:	slli	a0,a0,0x3
0x00000000000103f0	103	in libbs.c
=> 0x103f0 <binary_search+192>:	add	a0,a0,a1
0x00000000000103f4	103	in libbs.c
=> 0x103f4 <binary_search+196>:	lw	a0,0(a0)
0x00000000000103f8	103	in libbs.c
=> 0x103f8 <binary_search+200>:	lw	a1,-20(s0)
0x00000000000103fc	103	in libbs.c
=> 0x103fc <binary_search+204>:	bge	a1,a0,0x10414 <binary_search+228>
0x0000000000010400	103	in libbs.c
=> 0x10400 <binary_search+208>:	j	0x10404 <binary_search+212>
104	in libbs.c
=> 0x10404 <binary_search+212>:	lw	a0,-28(s0)
0x0000000000010408	104	in libbs.c
=> 0x10408 <binary_search+216>:	addi	a0,a0,-1
0x000000000001040c	104	in libbs.c
=> 0x1040c <binary_search+220>:	sw	a0,-32(s0)
105	in libbs.c
=> 0x10410 <binary_search+224>:	j	0x10424 <binary_search+244>
0x0000000000010424	107	in libbs.c
=> 0x10424 <binary_search+244>:	j	0x10428 <binary_search+248>
96	in libbs.c
=> 0x10428 <binary_search+248>:	j	0x1036c <binary_search+60>
0x000000000001036c	96	in libbs.c
=> 0x1036c <binary_search+60>:	lw	a0,-36(s0)
0x0000000000010370	96	in libbs.c
=> 0x10370 <binary_search+64>:	lw	a1,-32(s0)
0x0000000000010374	96	in libbs.c
=> 0x10374 <binary_search+68>:	blt	a1,a0,0x1042c <binary_search+252>
0x0000000000010378	96	in libbs.c
=> 0x10378 <binary_search+72>:	j	0x1037c <binary_search+76>
97	in libbs.c
=> 0x1037c <binary_search+76>:	lw	a0,-36(s0)
0x0000000000010380	97	in libbs.c
=> 0x10380 <binary_search+80>:	lw	a1,-32(s0)
0x0000000000010384	97	in libbs.c
=> 0x10384 <binary_search+84>:	addw	a0,a0,a1
0x0000000000010388	97	in libbs.c
=> 0x10388 <binary_search+88>:	srli	a0,a0,0x1
0x000000000001038c	97	in libbs.c
=> 0x1038c <binary_search+92>:	sw	a0,-28(s0)
98	in libbs.c
=> 0x10390 <binary_search+96>:	lw	a0,-28(s0)
0x0000000000010394	98	in libbs.c
=> 0x10394 <binary_search+100>:	lui	a1,0x1e
0x0000000000010398	98	in libbs.c
=> 0x10398 <binary_search+104>:	addi	a1,a1,1600
0x000000000001039c	98	in libbs.c
=> 0x1039c <binary_search+108>:	slli	a0,a0,0x3
0x00000000000103a0	98	in libbs.c
=> 0x103a0 <binary_search+112>:	add	a0,a0,a1
0x00000000000103a4	98	in libbs.c
=> 0x103a4 <binary_search+116>:	lw	a0,0(a0)
0x00000000000103a8	98	in libbs.c
=> 0x103a8 <binary_search+120>:	lw	a1,-20(s0)
0x00000000000103ac	98	in libbs.c
=> 0x103ac <binary_search+124>:	bne	a0,a1,0x103e0 <binary_search+176>
0x00000000000103b0	98	in libbs.c
=> 0x103b0 <binary_search+128>:	j	0x103b4 <binary_search+132>
99	in libbs.c
=> 0x103b4 <binary_search+132>:	lw	a0,-36(s0)
0x00000000000103b8	99	in libbs.c
=> 0x103b8 <binary_search+136>:	addi	a0,a0,-1
0x00000000000103bc	99	in libbs.c
=> 0x103bc <binary_search+140>:	sw	a0,-32(s0)
100	in libbs.c
=> 0x103c0 <binary_search+144>:	lw	a0,-28(s0)
0x00000000000103c4	100	in libbs.c
=> 0x103c4 <binary_search+148>:	slli	a0,a0,0x3
0x00000000000103c8	100	in libbs.c
=> 0x103c8 <binary_search+152>:	lui	a1,0x1e
0x00000000000103cc	100	in libbs.c
=> 0x103cc <binary_search+156>:	addi	a1,a1,1600
0x00000000000103d0	100	in libbs.c
=> 0x103d0 <binary_search+160>:	add	a0,a1,a0
0x00000000000103d4	100	in libbs.c
=> 0x103d4 <binary_search+164>:	lw	a0,4(a0)
0x00000000000103d8	100	in libbs.c
=> 0x103d8 <binary_search+168>:	sw	a0,-24(s0)
101	in libbs.c
=> 0x103dc <binary_search+172>:	j	0x10428 <binary_search+248>
96	in libbs.c
=> 0x10428 <binary_search+248>:	j	0x1036c <binary_search+60>
0x000000000001036c	96	in libbs.c
=> 0x1036c <binary_search+60>:	lw	a0,-36(s0)
0x0000000000010370	96	in libbs.c
=> 0x10370 <binary_search+64>:	lw	a1,-32(s0)
0x0000000000010374	96	in libbs.c
=> 0x10374 <binary_search+68>:	blt	a1,a0,0x1042c <binary_search+252>
110	in libbs.c
=> 0x1042c <binary_search+252>:	lw	a0,-24(s0)
0x0000000000010430	110	in libbs.c
=> 0x10430 <binary_search+256>:	ld	s0,32(sp)
0x0000000000010434 in binary_search (x=220302) at libbs.c:110
110	in libbs.c
=> 0x10434 <binary_search+260>:	ld	ra,40(sp)
0x0000000000010438	110	in libbs.c
=> 0x10438 <binary_search+264>:	addi	sp,sp,48
0x000000000001043c	110	in libbs.c
=> 0x1043c <binary_search+268>:	ret
0x00000000000104a4 in benchmark () at libbs.c:132
132	in libbs.c
=> 0x104a4 <benchmark+24>:	li	a1,0
133	in libbs.c
=> 0x104a8 <benchmark+28>:	sd	a0,-24(s0)
0x00000000000104ac	133	in libbs.c
=> 0x104ac <benchmark+32>:	mv	a0,a1
0x00000000000104b0	133	in libbs.c
=> 0x104b0 <benchmark+36>:	ld	s0,16(sp)
0x00000000000104b4 in benchmark () at libbs.c:133
133	in libbs.c
=> 0x104b4 <benchmark+40>:	ld	ra,24(sp)
0x00000000000104b8	133	in libbs.c
=> 0x104b8 <benchmark+44>:	addi	sp,sp,32
0x00000000000104bc	133	in libbs.c
=> 0x104bc <benchmark+48>:	ret
0x0000000000010240 in main (argc=1, argv=0x3ffffffb58) at main.c:55
55	main.c: No such file or directory.
=> 0x10240 <main+184>:	sw	a0,-40(s0)
56	in main.c
=> 0x10244 <main+188>:	j	0x10248 <main+192>
53	in main.c
=> 0x10248 <main+192>:	lw	a0,-36(s0)
0x000000000001024c	53	in main.c
=> 0x1024c <main+196>:	addi	a0,a0,1
0x0000000000010250	53	in main.c
=> 0x10250 <main+200>:	sw	a0,-36(s0)
0x0000000000010254	53	in main.c
=> 0x10254 <main+204>:	j	0x10224 <main+156>
0x0000000000010224	53	in main.c
=> 0x10224 <main+156>:	lw	a0,-36(s0)
0x0000000000010228	53	in main.c
=> 0x10228 <main+160>:	li	a1,0
0x000000000001022c	53	in main.c
=> 0x1022c <main+164>:	blt	a1,a0,0x10258 <main+208>
58	in main.c
=> 0x10258 <main+208>:	jal	ra,0x102e0 <stop_trigger>
stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:40
40	../config/riscv64/boards/generic/boardsupport.c: No such file or directory.
=> 0x102e0 <stop_trigger>:	addi	sp,sp,-48
48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102e4 <stop_trigger+4>:	sd	ra,40(sp)
0x00000000000102e8	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102e8 <stop_trigger+8>:	sd	s0,32(sp)
0x00000000000102ec	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102ec <stop_trigger+12>:	addi	s0,sp,48
0x00000000000102f0	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102f0 <stop_trigger+16>:	rdcycle	a0
0x00000000000102f4	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102f4 <stop_trigger+20>:	sd	a0,-32(s0)
0x00000000000102f8	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102f8 <stop_trigger+24>:	ld	a0,-32(s0)
0x00000000000102fc	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102fc <stop_trigger+28>:	sd	a0,-40(s0)
0x0000000000010300	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10300 <stop_trigger+32>:	ld	a0,-40(s0)
0x0000000000010304	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10304 <stop_trigger+36>:	sd	a0,-24(s0)
49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10308 <stop_trigger+40>:	ld	a0,-24(s0)
0x000000000001030c	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1030c <stop_trigger+44>:	ld	a1,1896(gp)
0x0000000000010310	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10310 <stop_trigger+48>:	sub	a1,a0,a1
0x0000000000010314	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10314 <stop_trigger+52>:	lui	a0,0x1c
0x0000000000010318	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10318 <stop_trigger+56>:	addi	a0,a0,2020
0x000000000001031c	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1031c <stop_trigger+60>:	jal	ra,0x10c4c <printf>
0x0000000000010c4c in printf ()
=> 0x10c4c <printf>:	ld	t1,1872(gp)
0x0000000000010c50 in printf ()
=> 0x10c50 <printf+4>:	addi	sp,sp,-96
0x0000000000010c52 in printf ()
=> 0x10c52 <printf+6>:	sd	a2,48(sp)
0x0000000000010c54 in printf ()
=> 0x10c54 <printf+8>:	sd	a3,56(sp)
0x0000000000010c56 in printf ()
=> 0x10c56 <printf+10>:	sd	a1,40(sp)
0x0000000000010c58 in printf ()
=> 0x10c58 <printf+12>:	sd	a4,64(sp)
0x0000000000010c5a in printf ()
=> 0x10c5a <printf+14>:	sd	a5,72(sp)
0x0000000000010c5c in printf ()
=> 0x10c5c <printf+16>:	sd	a6,80(sp)
0x0000000000010c5e in printf ()
=> 0x10c5e <printf+18>:	sd	a7,88(sp)
0x0000000000010c60 in printf ()
=> 0x10c60 <printf+20>:	ld	a1,16(t1)
0x0000000000010c64 in printf ()
=> 0x10c64 <printf+24>:	addi	a3,sp,40
0x0000000000010c66 in printf ()
=> 0x10c66 <printf+26>:	mv	a2,a0
0x0000000000010c68 in printf ()
=> 0x10c68 <printf+28>:	mv	a0,t1
0x0000000000010c6a in printf ()
=> 0x10c6a <printf+30>:	sd	ra,24(sp)
0x0000000000010c6c in printf ()
=> 0x10c6c <printf+32>:	sd	a3,8(sp)
0x0000000000010c6e in printf ()
=> 0x10c6e <printf+34>:	jal	ra,0x10cae <_vfprintf_r>
0x0000000000010cae in _vfprintf_r ()
=> 0x10cae <_vfprintf_r>:	addi	sp,sp,-640
0x0000000000010cb2 in _vfprintf_r ()
=> 0x10cb2 <_vfprintf_r+4>:	sd	ra,632(sp)
0x0000000000010cb6 in _vfprintf_r ()
=> 0x10cb6 <_vfprintf_r+8>:	sd	s2,608(sp)
0x0000000000010cba in _vfprintf_r ()
=> 0x10cba <_vfprintf_r+12>:	sd	s4,592(sp)
0x0000000000010cbe in _vfprintf_r ()
=> 0x10cbe <_vfprintf_r+16>:	sd	s9,552(sp)
0x0000000000010cc2 in _vfprintf_r ()
=> 0x10cc2 <_vfprintf_r+20>:	mv	s2,a1
0x0000000000010cc4 in _vfprintf_r ()
=> 0x10cc4 <_vfprintf_r+22>:	mv	s9,a2
0x0000000000010cc6 in _vfprintf_r ()
=> 0x10cc6 <_vfprintf_r+24>:	sd	a3,16(sp)
0x0000000000010cc8 in _vfprintf_r ()
=> 0x10cc8 <_vfprintf_r+26>:	sd	s0,624(sp)
0x0000000000010ccc in _vfprintf_r ()
=> 0x10ccc <_vfprintf_r+30>:	sd	s1,616(sp)
0x0000000000010cd0 in _vfprintf_r ()
=> 0x10cd0 <_vfprintf_r+34>:	sd	s3,600(sp)
0x0000000000010cd4 in _vfprintf_r ()
=> 0x10cd4 <_vfprintf_r+38>:	sd	s5,584(sp)
0x0000000000010cd8 in _vfprintf_r ()
=> 0x10cd8 <_vfprintf_r+42>:	sd	s6,576(sp)
0x0000000000010cdc in _vfprintf_r ()
=> 0x10cdc <_vfprintf_r+46>:	sd	s7,568(sp)
0x0000000000010ce0 in _vfprintf_r ()
=> 0x10ce0 <_vfprintf_r+50>:	sd	s8,560(sp)
0x0000000000010ce4 in _vfprintf_r ()
=> 0x10ce4 <_vfprintf_r+54>:	sd	s10,544(sp)
0x0000000000010ce8 in _vfprintf_r ()
=> 0x10ce8 <_vfprintf_r+58>:	sd	s11,536(sp)
0x0000000000010cec in _vfprintf_r ()
=> 0x10cec <_vfprintf_r+62>:	mv	s4,a0
0x0000000000010cee in _vfprintf_r ()
=> 0x10cee <_vfprintf_r+64>:	jal	ra,0x15406 <_localeconv_r>
0x0000000000015406 in _localeconv_r ()
=> 0x15406 <_localeconv_r>:	addi	a0,gp,1640
0x000000000001540a in _localeconv_r ()
=> 0x1540a <_localeconv_r+4>:	ret
0x0000000000010cf2 in _vfprintf_r ()
=> 0x10cf2 <_vfprintf_r+68>:	ld	a5,0(a0)
0x0000000000010cf4 in _vfprintf_r ()
=> 0x10cf4 <_vfprintf_r+70>:	mv	a0,a5
0x0000000000010cf6 in _vfprintf_r ()
=> 0x10cf6 <_vfprintf_r+72>:	sd	a5,112(sp)
0x0000000000010cf8 in _vfprintf_r ()
=> 0x10cf8 <_vfprintf_r+74>:	jal	ra,0x16826 <strlen>
0x0000000000016826 in strlen ()
=> 0x16826 <strlen>:	andi	a5,a0,7
0x000000000001682a in strlen ()
=> 0x1682a <strlen+4>:	mv	a4,a0
0x000000000001682c in strlen ()
=> 0x1682c <strlen+6>:	bnez	a5,0x1687e <strlen+88>
0x000000000001682e in strlen ()
=> 0x1682e <strlen+8>:	ld	a3,1848(gp)
0x0000000000016832 in strlen ()
=> 0x16832 <strlen+12>:	li	a1,-1
0x0000000000016834 in strlen ()
=> 0x16834 <strlen+14>:	ld	a2,0(a4)
0x0000000000016836 in strlen ()
=> 0x16836 <strlen+16>:	addi	a4,a4,8
0x0000000000016838 in strlen ()
=> 0x16838 <strlen+18>:	and	a5,a2,a3
0x000000000001683c in strlen ()
=> 0x1683c <strlen+22>:	add	a5,a5,a3
0x000000000001683e in strlen ()
=> 0x1683e <strlen+24>:	or	a5,a5,a2
0x0000000000016840 in strlen ()
=> 0x16840 <strlen+26>:	or	a5,a5,a3
0x0000000000016842 in strlen ()
=> 0x16842 <strlen+28>:	beq	a5,a1,0x16834 <strlen+14>
0x0000000000016846 in strlen ()
=> 0x16846 <strlen+32>:	lbu	a3,-8(a4)
0x000000000001684a in strlen ()
=> 0x1684a <strlen+36>:	sub	a5,a4,a0
0x000000000001684e in strlen ()
=> 0x1684e <strlen+40>:	beqz	a3,0x16898 <strlen+114>
0x0000000000016850 in strlen ()
=> 0x16850 <strlen+42>:	lbu	a3,-7(a4)
0x0000000000016854 in strlen ()
=> 0x16854 <strlen+46>:	beqz	a3,0x16892 <strlen+108>
0x0000000000016892 in strlen ()
=> 0x16892 <strlen+108>:	addi	a0,a5,-7
0x0000000000016896 in strlen ()
=> 0x16896 <strlen+112>:	ret
0x0000000000010cfc in _vfprintf_r ()
=> 0x10cfc <_vfprintf_r+78>:	sd	a0,104(sp)
0x0000000000010cfe in _vfprintf_r ()
=> 0x10cfe <_vfprintf_r+80>:	sd	zero,256(sp)
0x0000000000010d00 in _vfprintf_r ()
=> 0x10d00 <_vfprintf_r+82>:	sd	zero,264(sp)
0x0000000000010d02 in _vfprintf_r ()
=> 0x10d02 <_vfprintf_r+84>:	beqz	s4,0x10d0e <_vfprintf_r+96>
0x0000000000010d06 in _vfprintf_r ()
=> 0x10d06 <_vfprintf_r+88>:	lw	a5,80(s4)
0x0000000000010d0a in _vfprintf_r ()
=> 0x10d0a <_vfprintf_r+92>:	beqz	a5,0x1143c <_vfprintf_r+1934>
0x0000000000010d0e in _vfprintf_r ()
=> 0x10d0e <_vfprintf_r+96>:	lh	a4,16(s2)
0x0000000000010d12 in _vfprintf_r ()
=> 0x10d12 <_vfprintf_r+100>:	lui	a3,0x2
0x0000000000010d14 in _vfprintf_r ()
=> 0x10d14 <_vfprintf_r+102>:	slli	a5,a4,0x30
0x0000000000010d18 in _vfprintf_r ()
=> 0x10d18 <_vfprintf_r+106>:	srli	a5,a5,0x30
0x0000000000010d1a in _vfprintf_r ()
=> 0x10d1a <_vfprintf_r+108>:	and	a2,a5,a3
0x0000000000010d1e in _vfprintf_r ()
=> 0x10d1e <_vfprintf_r+112>:	bnez	a2,0x10d42 <_vfprintf_r+148>
0x0000000000010d42 in _vfprintf_r ()
=> 0x10d42 <_vfprintf_r+148>:	andi	a4,a5,8
0x0000000000010d46 in _vfprintf_r ()
=> 0x10d46 <_vfprintf_r+152>:	beqz	a4,0x10fba <_vfprintf_r+780>
0x0000000000010d4a in _vfprintf_r ()
=> 0x10d4a <_vfprintf_r+156>:	ld	a4,24(s2)
0x0000000000010d4e in _vfprintf_r ()
=> 0x10d4e <_vfprintf_r+160>:	beqz	a4,0x10fba <_vfprintf_r+780>
0x0000000000010d52 in _vfprintf_r ()
=> 0x10d52 <_vfprintf_r+164>:	andi	a5,a5,26
0x0000000000010d54 in _vfprintf_r ()
=> 0x10d54 <_vfprintf_r+166>:	li	a4,10
0x0000000000010d56 in _vfprintf_r ()
=> 0x10d56 <_vfprintf_r+168>:	beq	a5,a4,0x10fd4 <_vfprintf_r+806>
0x0000000000010d5a in _vfprintf_r ()
=> 0x10d5a <_vfprintf_r+172>:	lui	a5,0x1d
0x0000000000010d5c in _vfprintf_r ()
=> 0x10d5c <_vfprintf_r+174>:	ld	a5,-1512(a5)
0x0000000000010d60 in _vfprintf_r ()
=> 0x10d60 <_vfprintf_r+178>:	addi	s6,sp,400
0x0000000000010d64 in _vfprintf_r ()
=> 0x10d64 <_vfprintf_r+182>:	sd	s6,272(sp)
0x0000000000010d66 in _vfprintf_r ()
=> 0x10d66 <_vfprintf_r+184>:	sd	a5,152(sp)
0x0000000000010d68 in _vfprintf_r ()
=> 0x10d68 <_vfprintf_r+186>:	lui	a5,0x1d
0x0000000000010d6a in _vfprintf_r ()
=> 0x10d6a <_vfprintf_r+188>:	ld	a5,-1544(a5)
0x0000000000010d6e in _vfprintf_r ()
=> 0x10d6e <_vfprintf_r+192>:	sd	zero,288(sp)
0x0000000000010d70 in _vfprintf_r ()
=> 0x10d70 <_vfprintf_r+194>:	sw	zero,280(sp)
0x0000000000010d74 in _vfprintf_r ()
=> 0x10d74 <_vfprintf_r+198>:	sd	a5,144(sp)
0x0000000000010d76 in _vfprintf_r ()
=> 0x10d76 <_vfprintf_r+200>:	lui	a5,0x1d
0x0000000000010d78 in _vfprintf_r ()
=> 0x10d78 <_vfprintf_r+202>:	ld	a5,-1528(a5)
0x0000000000010d7c in _vfprintf_r ()
=> 0x10d7c <_vfprintf_r+206>:	sd	zero,32(sp)
0x0000000000010d7e in _vfprintf_r ()
=> 0x10d7e <_vfprintf_r+208>:	sd	zero,40(sp)
0x0000000000010d80 in _vfprintf_r ()
=> 0x10d80 <_vfprintf_r+210>:	sd	a5,160(sp)
0x0000000000010d82 in _vfprintf_r ()
=> 0x10d82 <_vfprintf_r+212>:	lbu	a5,0(s9)
0x0000000000010d86 in _vfprintf_r ()
=> 0x10d86 <_vfprintf_r+216>:	sd	zero,120(sp)
0x0000000000010d88 in _vfprintf_r ()
=> 0x10d88 <_vfprintf_r+218>:	sd	zero,96(sp)
0x0000000000010d8a in _vfprintf_r ()
=> 0x10d8a <_vfprintf_r+220>:	sd	zero,128(sp)
0x0000000000010d8c in _vfprintf_r ()
=> 0x10d8c <_vfprintf_r+222>:	sd	zero,136(sp)
0x0000000000010d8e in _vfprintf_r ()
=> 0x10d8e <_vfprintf_r+224>:	sd	zero,8(sp)
0x0000000000010d90 in _vfprintf_r ()
=> 0x10d90 <_vfprintf_r+226>:	mv	t1,s6
0x0000000000010d92 in _vfprintf_r ()
=> 0x10d92 <_vfprintf_r+228>:	beqz	a5,0x10f5c <_vfprintf_r+686>
0x0000000000010d96 in _vfprintf_r ()
=> 0x10d96 <_vfprintf_r+232>:	mv	s0,s9
0x0000000000010d98 in _vfprintf_r ()
=> 0x10d98 <_vfprintf_r+234>:	li	a4,37
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x00000000000110a2 in _vfprintf_r ()
=> 0x110a2 <_vfprintf_r+1012>:	subw	s1,s0,s9
0x00000000000110a6 in _vfprintf_r ()
=> 0x110a6 <_vfprintf_r+1016>:	bnez	s1,0x10db0 <_vfprintf_r+258>
0x0000000000010db0 in _vfprintf_r ()
=> 0x10db0 <_vfprintf_r+258>:	ld	a4,288(sp)
0x0000000000010db2 in _vfprintf_r ()
=> 0x10db2 <_vfprintf_r+260>:	lw	a5,280(sp)
0x0000000000010db6 in _vfprintf_r ()
=> 0x10db6 <_vfprintf_r+264>:	sd	s9,0(t1)
0x0000000000010dba in _vfprintf_r ()
=> 0x10dba <_vfprintf_r+268>:	add	a4,a4,s1
0x0000000000010dbc in _vfprintf_r ()
=> 0x10dbc <_vfprintf_r+270>:	addiw	a5,a5,1
0x0000000000010dbe in _vfprintf_r ()
=> 0x10dbe <_vfprintf_r+272>:	sd	s1,8(t1)
0x0000000000010dc2 in _vfprintf_r ()
=> 0x10dc2 <_vfprintf_r+276>:	sd	a4,288(sp)
0x0000000000010dc4 in _vfprintf_r ()
=> 0x10dc4 <_vfprintf_r+278>:	sw	a5,280(sp)
0x0000000000010dc8 in _vfprintf_r ()
=> 0x10dc8 <_vfprintf_r+282>:	sext.w	a4,a5
0x0000000000010dcc in _vfprintf_r ()
=> 0x10dcc <_vfprintf_r+286>:	li	a5,7
0x0000000000010dce in _vfprintf_r ()
=> 0x10dce <_vfprintf_r+288>:	addi	t1,t1,16
0x0000000000010dd0 in _vfprintf_r ()
=> 0x10dd0 <_vfprintf_r+290>:	blt	a5,a4,0x110b0 <_vfprintf_r+1026>
0x0000000000010dd4 in _vfprintf_r ()
=> 0x10dd4 <_vfprintf_r+294>:	ld	a4,8(sp)
0x0000000000010dd6 in _vfprintf_r ()
=> 0x10dd6 <_vfprintf_r+296>:	lbu	a5,0(s0)
0x0000000000010dda in _vfprintf_r ()
=> 0x10dda <_vfprintf_r+300>:	addw	a4,a4,s1
0x0000000000010ddc in _vfprintf_r ()
=> 0x10ddc <_vfprintf_r+302>:	sd	a4,8(sp)
0x0000000000010dde in _vfprintf_r ()
=> 0x10dde <_vfprintf_r+304>:	beqz	a5,0x10f5c <_vfprintf_r+686>
0x0000000000010de2 in _vfprintf_r ()
=> 0x10de2 <_vfprintf_r+308>:	lui	a5,0x1d
0x0000000000010de4 in _vfprintf_r ()
=> 0x10de4 <_vfprintf_r+310>:	lbu	t3,1(s0)
0x0000000000010de8 in _vfprintf_r ()
=> 0x10de8 <_vfprintf_r+314>:	sb	zero,223(sp)
0x0000000000010dec in _vfprintf_r ()
=> 0x10dec <_vfprintf_r+318>:	addi	s0,s0,1
0x0000000000010dee in _vfprintf_r ()
=> 0x10dee <_vfprintf_r+320>:	li	s8,-1
0x0000000000010df0 in _vfprintf_r ()
=> 0x10df0 <_vfprintf_r+322>:	li	s5,0
0x0000000000010df2 in _vfprintf_r ()
=> 0x10df2 <_vfprintf_r+324>:	li	s1,0
0x0000000000010df4 in _vfprintf_r ()
=> 0x10df4 <_vfprintf_r+326>:	li	s3,90
0x0000000000010df8 in _vfprintf_r ()
=> 0x10df8 <_vfprintf_r+330>:	addi	s7,a5,-1960
0x0000000000010dfc in _vfprintf_r ()
=> 0x10dfc <_vfprintf_r+334>:	li	s11,9
0x0000000000010dfe in _vfprintf_r ()
=> 0x10dfe <_vfprintf_r+336>:	addi	s0,s0,1
0x0000000000010e00 in _vfprintf_r ()
=> 0x10e00 <_vfprintf_r+338>:	sext.w	s10,t3
0x0000000000010e04 in _vfprintf_r ()
=> 0x10e04 <_vfprintf_r+342>:	li	a2,42
0x0000000000010e08 in _vfprintf_r ()
=> 0x10e08 <_vfprintf_r+346>:	addiw	a5,s10,-32
0x0000000000010e0c in _vfprintf_r ()
=> 0x10e0c <_vfprintf_r+350>:	sext.w	a4,a5
0x0000000000010e10 in _vfprintf_r ()
=> 0x10e10 <_vfprintf_r+354>:	bltu	s3,a4,0x10e56 <_vfprintf_r+424>
0x0000000000010e14 in _vfprintf_r ()
=> 0x10e14 <_vfprintf_r+358>:	slli	a4,a5,0x20
0x0000000000010e18 in _vfprintf_r ()
=> 0x10e18 <_vfprintf_r+362>:	srli	a5,a4,0x1e
0x0000000000010e1c in _vfprintf_r ()
=> 0x10e1c <_vfprintf_r+366>:	add	a5,a5,s7
0x0000000000010e1e in _vfprintf_r ()
=> 0x10e1e <_vfprintf_r+368>:	lw	a5,0(a5)
0x0000000000010e20 in _vfprintf_r ()
=> 0x10e20 <_vfprintf_r+370>:	jr	a5
0x000000000001162c in _vfprintf_r ()
=> 0x1162c <_vfprintf_r+2430>:	lbu	t3,0(s0)
0x0000000000011630 in _vfprintf_r ()
=> 0x11630 <_vfprintf_r+2434>:	li	a5,108
0x0000000000011634 in _vfprintf_r ()
=> 0x11634 <_vfprintf_r+2438>:	beq	t3,a5,0x11d30 <_vfprintf_r+4226>
0x0000000000011638 in _vfprintf_r ()
=> 0x11638 <_vfprintf_r+2442>:	ori	s1,s1,16
0x000000000001163c in _vfprintf_r ()
=> 0x1163c <_vfprintf_r+2446>:	sext.w	s1,s1
0x000000000001163e in _vfprintf_r ()
=> 0x1163e <_vfprintf_r+2448>:	j	0x10dfe <_vfprintf_r+336>
0x0000000000010dfe in _vfprintf_r ()
=> 0x10dfe <_vfprintf_r+336>:	addi	s0,s0,1
0x0000000000010e00 in _vfprintf_r ()
=> 0x10e00 <_vfprintf_r+338>:	sext.w	s10,t3
0x0000000000010e04 in _vfprintf_r ()
=> 0x10e04 <_vfprintf_r+342>:	li	a2,42
0x0000000000010e08 in _vfprintf_r ()
=> 0x10e08 <_vfprintf_r+346>:	addiw	a5,s10,-32
0x0000000000010e0c in _vfprintf_r ()
=> 0x10e0c <_vfprintf_r+350>:	sext.w	a4,a5
0x0000000000010e10 in _vfprintf_r ()
=> 0x10e10 <_vfprintf_r+354>:	bltu	s3,a4,0x10e56 <_vfprintf_r+424>
0x0000000000010e14 in _vfprintf_r ()
=> 0x10e14 <_vfprintf_r+358>:	slli	a4,a5,0x20
0x0000000000010e18 in _vfprintf_r ()
=> 0x10e18 <_vfprintf_r+362>:	srli	a5,a4,0x1e
0x0000000000010e1c in _vfprintf_r ()
=> 0x10e1c <_vfprintf_r+366>:	add	a5,a5,s7
0x0000000000010e1e in _vfprintf_r ()
=> 0x10e1e <_vfprintf_r+368>:	lw	a5,0(a5)
0x0000000000010e20 in _vfprintf_r ()
=> 0x10e20 <_vfprintf_r+370>:	jr	a5
0x0000000000010ff2 in _vfprintf_r ()
=> 0x10ff2 <_vfprintf_r+836>:	ld	a3,16(sp)
0x0000000000010ff4 in _vfprintf_r ()
=> 0x10ff4 <_vfprintf_r+838>:	andi	a5,s1,32
0x0000000000010ff8 in _vfprintf_r ()
=> 0x10ff8 <_vfprintf_r+842>:	addi	a4,a3,8
0x0000000000010ffc in _vfprintf_r ()
=> 0x10ffc <_vfprintf_r+846>:	beqz	a5,0x113be <_vfprintf_r+1808>
0x00000000000113be in _vfprintf_r ()
=> 0x113be <_vfprintf_r+1808>:	andi	a5,s1,16
0x00000000000113c2 in _vfprintf_r ()
=> 0x113c2 <_vfprintf_r+1812>:	bnez	a5,0x11bb8 <_vfprintf_r+3850>
0x0000000000011bb8 in _vfprintf_r ()
=> 0x11bb8 <_vfprintf_r+3850>:	ld	a5,16(sp)
0x0000000000011bba in _vfprintf_r ()
=> 0x11bba <_vfprintf_r+3852>:	ld	a5,0(a5)
0x0000000000011bbc in _vfprintf_r ()
=> 0x11bbc <_vfprintf_r+3854>:	mv	s3,a5
0x0000000000011bbe in _vfprintf_r ()
=> 0x11bbe <_vfprintf_r+3856>:	j	0x11004 <_vfprintf_r+854>
0x0000000000011004 in _vfprintf_r ()
=> 0x11004 <_vfprintf_r+854>:	bltz	a5,0x113da <_vfprintf_r+1836>
0x0000000000011008 in _vfprintf_r ()
=> 0x11008 <_vfprintf_r+858>:	li	a5,-1
0x000000000001100a in _vfprintf_r ()
=> 0x1100a <_vfprintf_r+860>:	beq	s8,a5,0x11bf0 <_vfprintf_r+3906>
0x0000000000011bf0 in _vfprintf_r ()
=> 0x11bf0 <_vfprintf_r+3906>:	sd	a4,16(sp)
0x0000000000011bf2 in _vfprintf_r ()
=> 0x11bf2 <_vfprintf_r+3908>:	li	a5,9
0x0000000000011bf4 in _vfprintf_r ()
=> 0x11bf4 <_vfprintf_r+3910>:	mv	s11,s1
0x0000000000011bf6 in _vfprintf_r ()
=> 0x11bf6 <_vfprintf_r+3912>:	bgeu	a5,s3,0x118a0 <_vfprintf_r+3058>
0x0000000000011bfa in _vfprintf_r ()
=> 0x11bfa <_vfprintf_r+3916>:	addi	s7,sp,396
0x0000000000011bfe in _vfprintf_r ()
=> 0x11bfe <_vfprintf_r+3920>:	andi	a5,s11,1024
0x0000000000011c02 in _vfprintf_r ()
=> 0x11c02 <_vfprintf_r+3924>:	sd	zero,32(sp)
0x0000000000011c04 in _vfprintf_r ()
=> 0x11c04 <_vfprintf_r+3926>:	mv	a1,s7
0x0000000000011c06 in _vfprintf_r ()
=> 0x11c06 <_vfprintf_r+3928>:	li	s1,10
0x0000000000011c08 in _vfprintf_r ()
=> 0x11c08 <_vfprintf_r+3930>:	li	a4,9
0x0000000000011c0a in _vfprintf_r ()
=> 0x11c0a <_vfprintf_r+3932>:	li	a3,255
0x0000000000011c0e in _vfprintf_r ()
=> 0x11c0e <_vfprintf_r+3936>:	j	0x11c1c <_vfprintf_r+3950>
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x0000000000011c18 in _vfprintf_r ()
=> 0x11c18 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011c1a in _vfprintf_r ()
=> 0x11c1a <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011c1c in _vfprintf_r ()
=> 0x11c1c <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011c1e in _vfprintf_r ()
=> 0x11c1e <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011c22 in _vfprintf_r ()
=> 0x11c22 <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011c24 in _vfprintf_r ()
=> 0x11c24 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011c26 in _vfprintf_r ()
=> 0x11c26 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011c2a in _vfprintf_r ()
=> 0x11c2a <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011c2e in _vfprintf_r ()
=> 0x11c2e <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011c32 in _vfprintf_r ()
=> 0x11c32 <_vfprintf_r+3972>:	beqz	a5,0x11c10 <_vfprintf_r+3938>
0x0000000000011c10 in _vfprintf_r ()
=> 0x11c10 <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011c14 in _vfprintf_r ()
=> 0x11c14 <_vfprintf_r+3942>:	bgeu	a4,s3,0x1168a <_vfprintf_r+2524>
0x000000000001168a in _vfprintf_r ()
=> 0x1168a <_vfprintf_r+2524>:	subw	s7,s7,s9
0x000000000001168e in _vfprintf_r ()
=> 0x1168e <_vfprintf_r+2528>:	mv	s1,s11
0x0000000000011690 in _vfprintf_r ()
=> 0x11690 <_vfprintf_r+2530>:	j	0x1102a <_vfprintf_r+892>
0x000000000001102a in _vfprintf_r ()
=> 0x1102a <_vfprintf_r+892>:	lbu	a5,223(sp)
0x000000000001102e in _vfprintf_r ()
=> 0x1102e <_vfprintf_r+896>:	sext.w	s3,s7
0x0000000000011032 in _vfprintf_r ()
=> 0x11032 <_vfprintf_r+900>:	bge	s7,s8,0x1103a <_vfprintf_r+908>
0x000000000001103a in _vfprintf_r ()
=> 0x1103a <_vfprintf_r+908>:	sd	zero,24(sp)
0x000000000001103c in _vfprintf_r ()
=> 0x1103c <_vfprintf_r+910>:	sd	zero,72(sp)
0x000000000001103e in _vfprintf_r ()
=> 0x1103e <_vfprintf_r+912>:	sd	zero,88(sp)
0x0000000000011040 in _vfprintf_r ()
=> 0x11040 <_vfprintf_r+914>:	sd	zero,80(sp)
0x0000000000011042 in _vfprintf_r ()
=> 0x11042 <_vfprintf_r+916>:	beqz	a5,0x10e74 <_vfprintf_r+454>
0x0000000000010e74 in _vfprintf_r ()
=> 0x10e74 <_vfprintf_r+454>:	andi	t0,s1,2
0x0000000000010e78 in _vfprintf_r ()
=> 0x10e78 <_vfprintf_r+458>:	beqz	t0,0x10e7e <_vfprintf_r+464>
0x0000000000010e7e in _vfprintf_r ()
=> 0x10e7e <_vfprintf_r+464>:	andi	s11,s1,132
0x0000000000010e82 in _vfprintf_r ()
=> 0x10e82 <_vfprintf_r+468>:	ld	a5,288(sp)
0x0000000000010e84 in _vfprintf_r ()
=> 0x10e84 <_vfprintf_r+470>:	bnez	s11,0x10e90 <_vfprintf_r+482>
0x0000000000010e88 in _vfprintf_r ()
=> 0x10e88 <_vfprintf_r+474>:	subw	a4,s5,s3
0x0000000000010e8c in _vfprintf_r ()
=> 0x10e8c <_vfprintf_r+478>:	bgtz	a4,0x118b4 <_vfprintf_r+3078>
0x0000000000010e90 in _vfprintf_r ()
=> 0x10e90 <_vfprintf_r+482>:	lbu	a4,223(sp)
0x0000000000010e94 in _vfprintf_r ()
=> 0x10e94 <_vfprintf_r+486>:	beqz	a4,0x10ebe <_vfprintf_r+528>
0x0000000000010ebe in _vfprintf_r ()
=> 0x10ebe <_vfprintf_r+528>:	beqz	t0,0x10ee8 <_vfprintf_r+570>
0x0000000000010ee8 in _vfprintf_r ()
=> 0x10ee8 <_vfprintf_r+570>:	li	a4,128
0x0000000000010eec in _vfprintf_r ()
=> 0x10eec <_vfprintf_r+574>:	beq	s11,a4,0x11760 <_vfprintf_r+2738>
0x0000000000010ef0 in _vfprintf_r ()
=> 0x10ef0 <_vfprintf_r+578>:	subw	s8,s8,s7
0x0000000000010ef4 in _vfprintf_r ()
=> 0x10ef4 <_vfprintf_r+582>:	bgtz	s8,0x117f0 <_vfprintf_r+2882>
0x0000000000010ef8 in _vfprintf_r ()
=> 0x10ef8 <_vfprintf_r+586>:	andi	a4,s1,256
0x0000000000010efc in _vfprintf_r ()
=> 0x10efc <_vfprintf_r+590>:	bnez	a4,0x11692 <_vfprintf_r+2532>
0x0000000000010f00 in _vfprintf_r ()
=> 0x10f00 <_vfprintf_r+594>:	lw	a4,280(sp)
0x0000000000010f04 in _vfprintf_r ()
=> 0x10f04 <_vfprintf_r+598>:	add	a5,a5,s7
0x0000000000010f06 in _vfprintf_r ()
=> 0x10f06 <_vfprintf_r+600>:	sd	s9,0(t1)
0x0000000000010f0a in _vfprintf_r ()
=> 0x10f0a <_vfprintf_r+604>:	addiw	a3,a4,1
0x0000000000010f0e in _vfprintf_r ()
=> 0x10f0e <_vfprintf_r+608>:	mv	a4,a3
0x0000000000010f10 in _vfprintf_r ()
=> 0x10f10 <_vfprintf_r+610>:	sd	s7,8(t1)
0x0000000000010f14 in _vfprintf_r ()
=> 0x10f14 <_vfprintf_r+614>:	sw	a4,280(sp)
0x0000000000010f18 in _vfprintf_r ()
=> 0x10f18 <_vfprintf_r+618>:	sd	a5,288(sp)
0x0000000000010f1a in _vfprintf_r ()
=> 0x10f1a <_vfprintf_r+620>:	li	a4,7
0x0000000000010f1c in _vfprintf_r ()
=> 0x10f1c <_vfprintf_r+622>:	blt	a4,a3,0x1138c <_vfprintf_r+1758>
0x0000000000010f20 in _vfprintf_r ()
=> 0x10f20 <_vfprintf_r+626>:	addi	t1,t1,16
0x0000000000010f22 in _vfprintf_r ()
=> 0x10f22 <_vfprintf_r+628>:	andi	s1,s1,4
0x0000000000010f24 in _vfprintf_r ()
=> 0x10f24 <_vfprintf_r+630>:	beqz	s1,0x10f2e <_vfprintf_r+640>
0x0000000000010f2e in _vfprintf_r ()
=> 0x10f2e <_vfprintf_r+640>:	mv	a4,s5
0x0000000000010f30 in _vfprintf_r ()
=> 0x10f30 <_vfprintf_r+642>:	bge	s5,s3,0x10f36 <_vfprintf_r+648>
0x0000000000010f34 in _vfprintf_r ()
=> 0x10f34 <_vfprintf_r+646>:	mv	a4,s3
0x0000000000010f36 in _vfprintf_r ()
=> 0x10f36 <_vfprintf_r+648>:	ld	a3,8(sp)
0x0000000000010f38 in _vfprintf_r ()
=> 0x10f38 <_vfprintf_r+650>:	addw	a4,a4,a3
0x0000000000010f3a in _vfprintf_r ()
=> 0x10f3a <_vfprintf_r+652>:	sd	a4,8(sp)
0x0000000000010f3c in _vfprintf_r ()
=> 0x10f3c <_vfprintf_r+654>:	bnez	a5,0x11872 <_vfprintf_r+3012>
0x0000000000011872 in _vfprintf_r ()
=> 0x11872 <_vfprintf_r+3012>:	addi	a2,sp,272
0x0000000000011874 in _vfprintf_r ()
=> 0x11874 <_vfprintf_r+3014>:	mv	a1,s2
0x0000000000011876 in _vfprintf_r ()
=> 0x11876 <_vfprintf_r+3016>:	mv	a0,s4
0x0000000000011878 in _vfprintf_r ()
=> 0x11878 <_vfprintf_r+3018>:	jal	ra,0x18502 <__sprint_r>
0x0000000000018502 in __sprint_r ()
=> 0x18502 <__sprint_r>:	ld	a4,16(a2)
0x0000000000018504 in __sprint_r ()
=> 0x18504 <__sprint_r+2>:	beqz	a4,0x18508 <__sprint_r+6>
0x0000000000018506 in __sprint_r ()
=> 0x18506 <__sprint_r+4>:	j	0x1845e <__sprint_r.part.0>
0x000000000001845e in __sprint_r.part.0 ()
=> 0x1845e <__sprint_r.part.0>:	lw	a5,172(a1)
0x0000000000018462 in __sprint_r.part.0 ()
=> 0x18462 <__sprint_r.part.0+4>:	addi	sp,sp,-80
0x0000000000018464 in __sprint_r.part.0 ()
=> 0x18464 <__sprint_r.part.0+6>:	lui	a4,0x2
0x0000000000018466 in __sprint_r.part.0 ()
=> 0x18466 <__sprint_r.part.0+8>:	sd	s5,24(sp)
0x0000000000018468 in __sprint_r.part.0 ()
=> 0x18468 <__sprint_r.part.0+10>:	sd	ra,72(sp)
0x000000000001846a in __sprint_r.part.0 ()
=> 0x1846a <__sprint_r.part.0+12>:	sd	s0,64(sp)
0x000000000001846c in __sprint_r.part.0 ()
=> 0x1846c <__sprint_r.part.0+14>:	sd	s1,56(sp)
0x000000000001846e in __sprint_r.part.0 ()
=> 0x1846e <__sprint_r.part.0+16>:	sd	s2,48(sp)
0x0000000000018470 in __sprint_r.part.0 ()
=> 0x18470 <__sprint_r.part.0+18>:	sd	s3,40(sp)
0x0000000000018472 in __sprint_r.part.0 ()
=> 0x18472 <__sprint_r.part.0+20>:	sd	s4,32(sp)
0x0000000000018474 in __sprint_r.part.0 ()
=> 0x18474 <__sprint_r.part.0+22>:	sd	s6,16(sp)
0x0000000000018476 in __sprint_r.part.0 ()
=> 0x18476 <__sprint_r.part.0+24>:	sd	s7,8(sp)
0x0000000000018478 in __sprint_r.part.0 ()
=> 0x18478 <__sprint_r.part.0+26>:	and	a5,a5,a4
0x000000000001847a in __sprint_r.part.0 ()
=> 0x1847a <__sprint_r.part.0+28>:	mv	s5,a2
0x000000000001847c in __sprint_r.part.0 ()
=> 0x1847c <__sprint_r.part.0+30>:	beqz	a5,0x184fc <__sprint_r.part.0+158>
0x00000000000184fc in __sprint_r.part.0 ()
=> 0x184fc <__sprint_r.part.0+158>:	jal	ra,0x1963e <__sfvwrite_r>
0x000000000001963e in __sfvwrite_r ()
=> 0x1963e <__sfvwrite_r>:	ld	a5,16(a2)
0x0000000000019640 in __sfvwrite_r ()
=> 0x19640 <__sfvwrite_r+2>:	beqz	a5,0x197f8 <__sfvwrite_r+442>
0x0000000000019644 in __sfvwrite_r ()
=> 0x19644 <__sfvwrite_r+6>:	lhu	a5,16(a1)
0x0000000000019648 in __sfvwrite_r ()
=> 0x19648 <__sfvwrite_r+10>:	addi	sp,sp,-96
0x000000000001964a in __sfvwrite_r ()
=> 0x1964a <__sfvwrite_r+12>:	sd	s0,80(sp)
0x000000000001964c in __sfvwrite_r ()
=> 0x1964c <__sfvwrite_r+14>:	sd	s4,48(sp)
0x000000000001964e in __sfvwrite_r ()
=> 0x1964e <__sfvwrite_r+16>:	sd	s5,40(sp)
0x0000000000019650 in __sfvwrite_r ()
=> 0x19650 <__sfvwrite_r+18>:	sd	ra,88(sp)
0x0000000000019652 in __sfvwrite_r ()
=> 0x19652 <__sfvwrite_r+20>:	sd	s1,72(sp)
0x0000000000019654 in __sfvwrite_r ()
=> 0x19654 <__sfvwrite_r+22>:	sd	s2,64(sp)
0x0000000000019656 in __sfvwrite_r ()
=> 0x19656 <__sfvwrite_r+24>:	sd	s3,56(sp)
0x0000000000019658 in __sfvwrite_r ()
=> 0x19658 <__sfvwrite_r+26>:	sd	s6,32(sp)
0x000000000001965a in __sfvwrite_r ()
=> 0x1965a <__sfvwrite_r+28>:	sd	s7,24(sp)
0x000000000001965c in __sfvwrite_r ()
=> 0x1965c <__sfvwrite_r+30>:	sd	s8,16(sp)
0x000000000001965e in __sfvwrite_r ()
=> 0x1965e <__sfvwrite_r+32>:	sd	s9,8(sp)
0x0000000000019660 in __sfvwrite_r ()
=> 0x19660 <__sfvwrite_r+34>:	sd	s10,0(sp)
0x0000000000019662 in __sfvwrite_r ()
=> 0x19662 <__sfvwrite_r+36>:	andi	a4,a5,8
0x0000000000019666 in __sfvwrite_r ()
=> 0x19666 <__sfvwrite_r+40>:	mv	s4,a2
0x0000000000019668 in __sfvwrite_r ()
=> 0x19668 <__sfvwrite_r+42>:	mv	s5,a0
0x000000000001966a in __sfvwrite_r ()
=> 0x1966a <__sfvwrite_r+44>:	mv	s0,a1
0x000000000001966c in __sfvwrite_r ()
=> 0x1966c <__sfvwrite_r+46>:	beqz	a4,0x196cc <__sfvwrite_r+142>
0x000000000001966e in __sfvwrite_r ()
=> 0x1966e <__sfvwrite_r+48>:	ld	a4,24(a1)
0x0000000000019670 in __sfvwrite_r ()
=> 0x19670 <__sfvwrite_r+50>:	beqz	a4,0x196cc <__sfvwrite_r+142>
0x0000000000019672 in __sfvwrite_r ()
=> 0x19672 <__sfvwrite_r+52>:	andi	a4,a5,2
0x0000000000019676 in __sfvwrite_r ()
=> 0x19676 <__sfvwrite_r+56>:	ld	s2,0(s4)
0x000000000001967a in __sfvwrite_r ()
=> 0x1967a <__sfvwrite_r+60>:	beqz	a4,0x196e6 <__sfvwrite_r+168>
0x00000000000196e6 in __sfvwrite_r ()
=> 0x196e6 <__sfvwrite_r+168>:	andi	a4,a5,1
0x00000000000196ea in __sfvwrite_r ()
=> 0x196ea <__sfvwrite_r+172>:	bnez	a4,0x1975e <__sfvwrite_r+288>
0x000000000001975e in __sfvwrite_r ()
=> 0x1975e <__sfvwrite_r+288>:	li	s3,0
0x0000000000019760 in __sfvwrite_r ()
=> 0x19760 <__sfvwrite_r+290>:	li	a0,0
0x0000000000019762 in __sfvwrite_r ()
=> 0x19762 <__sfvwrite_r+292>:	li	s9,0
0x0000000000019764 in __sfvwrite_r ()
=> 0x19764 <__sfvwrite_r+294>:	li	s8,0
0x0000000000019766 in __sfvwrite_r ()
=> 0x19766 <__sfvwrite_r+296>:	beqz	s8,0x197fc <__sfvwrite_r+446>
0x00000000000197fc in __sfvwrite_r ()
=> 0x197fc <__sfvwrite_r+446>:	ld	s8,8(s2)
0x0000000000019800 in __sfvwrite_r ()
=> 0x19800 <__sfvwrite_r+450>:	ld	s9,0(s2)
0x0000000000019804 in __sfvwrite_r ()
=> 0x19804 <__sfvwrite_r+454>:	addi	s2,s2,16
0x0000000000019806 in __sfvwrite_r ()
=> 0x19806 <__sfvwrite_r+456>:	beqz	s8,0x197fc <__sfvwrite_r+446>
0x000000000001980a in __sfvwrite_r ()
=> 0x1980a <__sfvwrite_r+460>:	mv	a2,s8
0x000000000001980c in __sfvwrite_r ()
=> 0x1980c <__sfvwrite_r+462>:	li	a1,10
0x000000000001980e in __sfvwrite_r ()
=> 0x1980e <__sfvwrite_r+464>:	mv	a0,s9
0x0000000000019810 in __sfvwrite_r ()
=> 0x19810 <__sfvwrite_r+466>:	jal	ra,0x1568c <memchr>
0x000000000001568c in memchr ()
=> 0x1568c <memchr>:	andi	a5,a0,7
0x0000000000015690 in memchr ()
=> 0x15690 <memchr+4>:	andi	a3,a1,255
0x0000000000015694 in memchr ()
=> 0x15694 <memchr+8>:	beqz	a5,0x156b8 <memchr+44>
0x0000000000015696 in memchr ()
=> 0x15696 <memchr+10>:	addi	a5,a2,-1
0x000000000001569a in memchr ()
=> 0x1569a <memchr+14>:	beqz	a2,0x156c2 <memchr+54>
0x000000000001569c in memchr ()
=> 0x1569c <memchr+16>:	li	a2,-1
0x000000000001569e in memchr ()
=> 0x1569e <memchr+18>:	j	0x156ae <memchr+34>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156ba in memchr ()
=> 0x156ba <memchr+46>:	li	a4,7
0x00000000000156bc in memchr ()
=> 0x156bc <memchr+48>:	bltu	a4,a5,0x156da <memchr+78>
0x00000000000156c0 in memchr ()
=> 0x156c0 <memchr+52>:	bnez	a5,0x156c6 <memchr+58>
0x00000000000156c6 in memchr ()
=> 0x156c6 <memchr+58>:	add	a5,a5,a0
0x00000000000156c8 in memchr ()
=> 0x156c8 <memchr+60>:	j	0x156d0 <memchr+68>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156c2 in memchr ()
=> 0x156c2 <memchr+54>:	li	a0,0
0x00000000000156c4 in memchr ()
=> 0x156c4 <memchr+56>:	ret
0x0000000000019814 in __sfvwrite_r ()
=> 0x19814 <__sfvwrite_r+470>:	beqz	a0,0x19952 <__sfvwrite_r+788>
0x0000000000019952 in __sfvwrite_r ()
=> 0x19952 <__sfvwrite_r+788>:	addiw	s3,s8,1
0x0000000000019956 in __sfvwrite_r ()
=> 0x19956 <__sfvwrite_r+792>:	j	0x1976c <__sfvwrite_r+302>
0x000000000001976c in __sfvwrite_r ()
=> 0x1976c <__sfvwrite_r+302>:	mv	s7,s3
0x000000000001976e in __sfvwrite_r ()
=> 0x1976e <__sfvwrite_r+304>:	bgeu	s8,s3,0x19774 <__sfvwrite_r+310>
0x0000000000019772 in __sfvwrite_r ()
=> 0x19772 <__sfvwrite_r+308>:	mv	s7,s8
0x0000000000019774 in __sfvwrite_r ()
=> 0x19774 <__sfvwrite_r+310>:	ld	a0,0(s0)
0x0000000000019776 in __sfvwrite_r ()
=> 0x19776 <__sfvwrite_r+312>:	ld	a5,24(s0)
0x0000000000019778 in __sfvwrite_r ()
=> 0x19778 <__sfvwrite_r+314>:	lw	a3,32(s0)
0x000000000001977a in __sfvwrite_r ()
=> 0x1977a <__sfvwrite_r+316>:	mv	s1,s7
0x000000000001977c in __sfvwrite_r ()
=> 0x1977c <__sfvwrite_r+318>:	bgeu	a5,a0,0x1978a <__sfvwrite_r+332>
0x000000000001978a in __sfvwrite_r ()
=> 0x1978a <__sfvwrite_r+332>:	blt	s7,a3,0x19912 <__sfvwrite_r+724>
0x0000000000019912 in __sfvwrite_r ()
=> 0x19912 <__sfvwrite_r+724>:	mv	a2,s7
0x0000000000019914 in __sfvwrite_r ()
=> 0x19914 <__sfvwrite_r+726>:	mv	a1,s9
0x0000000000019916 in __sfvwrite_r ()
=> 0x19916 <__sfvwrite_r+728>:	jal	ra,0x19ac2 <memmove>
0x0000000000019ac2 in memmove ()
=> 0x19ac2 <memmove>:	bgeu	a1,a0,0x19ae6 <memmove+36>
0x0000000000019ac6 in memmove ()
=> 0x19ac6 <memmove+4>:	add	a5,a1,a2
0x0000000000019aca in memmove ()
=> 0x19aca <memmove+8>:	bgeu	a0,a5,0x19ae6 <memmove+36>
0x0000000000019ae6 in memmove ()
=> 0x19ae6 <memmove+36>:	li	a5,31
0x0000000000019ae8 in memmove ()
=> 0x19ae8 <memmove+38>:	bltu	a5,a2,0x19b0a <memmove+72>
0x0000000000019aec in memmove ()
=> 0x19aec <memmove+42>:	mv	a5,a0
0x0000000000019aee in memmove ()
=> 0x19aee <memmove+44>:	addi	a3,a2,-1
0x0000000000019af2 in memmove ()
=> 0x19af2 <memmove+48>:	beqz	a2,0x19b92 <memmove+208>
0x0000000000019af4 in memmove ()
=> 0x19af4 <memmove+50>:	addi	a3,a3,1
0x0000000000019af6 in memmove ()
=> 0x19af6 <memmove+52>:	add	a3,a3,a5
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019b08 in memmove ()
=> 0x19b08 <memmove+70>:	ret
0x000000000001991a in __sfvwrite_r ()
=> 0x1991a <__sfvwrite_r+732>:	lw	a3,12(s0)
0x000000000001991c in __sfvwrite_r ()
=> 0x1991c <__sfvwrite_r+734>:	ld	a4,0(s0)
0x000000000001991e in __sfvwrite_r ()
=> 0x1991e <__sfvwrite_r+736>:	sext.w	a5,s7
0x0000000000019922 in __sfvwrite_r ()
=> 0x19922 <__sfvwrite_r+740>:	subw	a3,a3,s7
0x0000000000019926 in __sfvwrite_r ()
=> 0x19926 <__sfvwrite_r+744>:	add	a4,a4,s7
0x0000000000019928 in __sfvwrite_r ()
=> 0x19928 <__sfvwrite_r+746>:	sw	a3,12(s0)
0x000000000001992a in __sfvwrite_r ()
=> 0x1992a <__sfvwrite_r+748>:	sd	a4,0(s0)
0x000000000001992c in __sfvwrite_r ()
=> 0x1992c <__sfvwrite_r+750>:	j	0x197a2 <__sfvwrite_r+356>
0x00000000000197a2 in __sfvwrite_r ()
=> 0x197a2 <__sfvwrite_r+356>:	subw	s3,s3,a5
0x00000000000197a6 in __sfvwrite_r ()
=> 0x197a6 <__sfvwrite_r+360>:	li	a0,1
0x00000000000197a8 in __sfvwrite_r ()
=> 0x197a8 <__sfvwrite_r+362>:	beqz	s3,0x197de <__sfvwrite_r+416>
0x00000000000197ac in __sfvwrite_r ()
=> 0x197ac <__sfvwrite_r+366>:	ld	a5,16(s4)
0x00000000000197b0 in __sfvwrite_r ()
=> 0x197b0 <__sfvwrite_r+370>:	add	s9,s9,s1
0x00000000000197b2 in __sfvwrite_r ()
=> 0x197b2 <__sfvwrite_r+372>:	sub	s8,s8,s1
0x00000000000197b6 in __sfvwrite_r ()
=> 0x197b6 <__sfvwrite_r+376>:	sub	s1,a5,s1
0x00000000000197ba in __sfvwrite_r ()
=> 0x197ba <__sfvwrite_r+380>:	sd	s1,16(s4)
0x00000000000197be in __sfvwrite_r ()
=> 0x197be <__sfvwrite_r+384>:	bnez	s1,0x19766 <__sfvwrite_r+296>
0x0000000000019766 in __sfvwrite_r ()
=> 0x19766 <__sfvwrite_r+296>:	beqz	s8,0x197fc <__sfvwrite_r+446>
0x00000000000197fc in __sfvwrite_r ()
=> 0x197fc <__sfvwrite_r+446>:	ld	s8,8(s2)
0x0000000000019800 in __sfvwrite_r ()
=> 0x19800 <__sfvwrite_r+450>:	ld	s9,0(s2)
0x0000000000019804 in __sfvwrite_r ()
=> 0x19804 <__sfvwrite_r+454>:	addi	s2,s2,16
0x0000000000019806 in __sfvwrite_r ()
=> 0x19806 <__sfvwrite_r+456>:	beqz	s8,0x197fc <__sfvwrite_r+446>
0x000000000001980a in __sfvwrite_r ()
=> 0x1980a <__sfvwrite_r+460>:	mv	a2,s8
0x000000000001980c in __sfvwrite_r ()
=> 0x1980c <__sfvwrite_r+462>:	li	a1,10
0x000000000001980e in __sfvwrite_r ()
=> 0x1980e <__sfvwrite_r+464>:	mv	a0,s9
0x0000000000019810 in __sfvwrite_r ()
=> 0x19810 <__sfvwrite_r+466>:	jal	ra,0x1568c <memchr>
0x000000000001568c in memchr ()
=> 0x1568c <memchr>:	andi	a5,a0,7
0x0000000000015690 in memchr ()
=> 0x15690 <memchr+4>:	andi	a3,a1,255
0x0000000000015694 in memchr ()
=> 0x15694 <memchr+8>:	beqz	a5,0x156b8 <memchr+44>
0x0000000000015696 in memchr ()
=> 0x15696 <memchr+10>:	addi	a5,a2,-1
0x000000000001569a in memchr ()
=> 0x1569a <memchr+14>:	beqz	a2,0x156c2 <memchr+54>
0x000000000001569c in memchr ()
=> 0x1569c <memchr+16>:	li	a2,-1
0x000000000001569e in memchr ()
=> 0x1569e <memchr+18>:	j	0x156ae <memchr+34>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156a8 in memchr ()
=> 0x156a8 <memchr+28>:	addi	a5,a5,-1
0x00000000000156aa in memchr ()
=> 0x156aa <memchr+30>:	beq	a5,a2,0x156c2 <memchr+54>
0x00000000000156ae in memchr ()
=> 0x156ae <memchr+34>:	lbu	a4,0(a0)
0x00000000000156b2 in memchr ()
=> 0x156b2 <memchr+38>:	bne	a4,a3,0x156a0 <memchr+20>
0x00000000000156a0 in memchr ()
=> 0x156a0 <memchr+20>:	addi	a0,a0,1
0x00000000000156a2 in memchr ()
=> 0x156a2 <memchr+22>:	andi	a4,a0,7
0x00000000000156a6 in memchr ()
=> 0x156a6 <memchr+26>:	beqz	a4,0x156ba <memchr+46>
0x00000000000156ba in memchr ()
=> 0x156ba <memchr+46>:	li	a4,7
0x00000000000156bc in memchr ()
=> 0x156bc <memchr+48>:	bltu	a4,a5,0x156da <memchr+78>
0x00000000000156c0 in memchr ()
=> 0x156c0 <memchr+52>:	bnez	a5,0x156c6 <memchr+58>
0x00000000000156c6 in memchr ()
=> 0x156c6 <memchr+58>:	add	a5,a5,a0
0x00000000000156c8 in memchr ()
=> 0x156c8 <memchr+60>:	j	0x156d0 <memchr+68>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156ca in memchr ()
=> 0x156ca <memchr+62>:	addi	a0,a0,1
0x00000000000156cc in memchr ()
=> 0x156cc <memchr+64>:	beq	a5,a0,0x156c2 <memchr+54>
0x00000000000156c2 in memchr ()
=> 0x156c2 <memchr+54>:	li	a0,0
0x00000000000156c4 in memchr ()
=> 0x156c4 <memchr+56>:	ret
0x0000000000019814 in __sfvwrite_r ()
=> 0x19814 <__sfvwrite_r+470>:	beqz	a0,0x19952 <__sfvwrite_r+788>
0x0000000000019952 in __sfvwrite_r ()
=> 0x19952 <__sfvwrite_r+788>:	addiw	s3,s8,1
0x0000000000019956 in __sfvwrite_r ()
=> 0x19956 <__sfvwrite_r+792>:	j	0x1976c <__sfvwrite_r+302>
0x000000000001976c in __sfvwrite_r ()
=> 0x1976c <__sfvwrite_r+302>:	mv	s7,s3
0x000000000001976e in __sfvwrite_r ()
=> 0x1976e <__sfvwrite_r+304>:	bgeu	s8,s3,0x19774 <__sfvwrite_r+310>
0x0000000000019772 in __sfvwrite_r ()
=> 0x19772 <__sfvwrite_r+308>:	mv	s7,s8
0x0000000000019774 in __sfvwrite_r ()
=> 0x19774 <__sfvwrite_r+310>:	ld	a0,0(s0)
0x0000000000019776 in __sfvwrite_r ()
=> 0x19776 <__sfvwrite_r+312>:	ld	a5,24(s0)
0x0000000000019778 in __sfvwrite_r ()
=> 0x19778 <__sfvwrite_r+314>:	lw	a3,32(s0)
0x000000000001977a in __sfvwrite_r ()
=> 0x1977a <__sfvwrite_r+316>:	mv	s1,s7
0x000000000001977c in __sfvwrite_r ()
=> 0x1977c <__sfvwrite_r+318>:	bgeu	a5,a0,0x1978a <__sfvwrite_r+332>
0x0000000000019780 in __sfvwrite_r ()
=> 0x19780 <__sfvwrite_r+322>:	lw	a5,12(s0)
0x0000000000019782 in __sfvwrite_r ()
=> 0x19782 <__sfvwrite_r+324>:	addw	s6,a5,a3
0x0000000000019786 in __sfvwrite_r ()
=> 0x19786 <__sfvwrite_r+328>:	blt	s6,s7,0x19820 <__sfvwrite_r+482>
0x000000000001978a in __sfvwrite_r ()
=> 0x1978a <__sfvwrite_r+332>:	blt	s7,a3,0x19912 <__sfvwrite_r+724>
0x0000000000019912 in __sfvwrite_r ()
=> 0x19912 <__sfvwrite_r+724>:	mv	a2,s7
0x0000000000019914 in __sfvwrite_r ()
=> 0x19914 <__sfvwrite_r+726>:	mv	a1,s9
0x0000000000019916 in __sfvwrite_r ()
=> 0x19916 <__sfvwrite_r+728>:	jal	ra,0x19ac2 <memmove>
0x0000000000019ac2 in memmove ()
=> 0x19ac2 <memmove>:	bgeu	a1,a0,0x19ae6 <memmove+36>
0x0000000000019ae6 in memmove ()
=> 0x19ae6 <memmove+36>:	li	a5,31
0x0000000000019ae8 in memmove ()
=> 0x19ae8 <memmove+38>:	bltu	a5,a2,0x19b0a <memmove+72>
0x0000000000019aec in memmove ()
=> 0x19aec <memmove+42>:	mv	a5,a0
0x0000000000019aee in memmove ()
=> 0x19aee <memmove+44>:	addi	a3,a2,-1
0x0000000000019af2 in memmove ()
=> 0x19af2 <memmove+48>:	beqz	a2,0x19b92 <memmove+208>
0x0000000000019af4 in memmove ()
=> 0x19af4 <memmove+50>:	addi	a3,a3,1
0x0000000000019af6 in memmove ()
=> 0x19af6 <memmove+52>:	add	a3,a3,a5
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019b08 in memmove ()
=> 0x19b08 <memmove+70>:	ret
0x000000000001991a in __sfvwrite_r ()
=> 0x1991a <__sfvwrite_r+732>:	lw	a3,12(s0)
0x000000000001991c in __sfvwrite_r ()
=> 0x1991c <__sfvwrite_r+734>:	ld	a4,0(s0)
0x000000000001991e in __sfvwrite_r ()
=> 0x1991e <__sfvwrite_r+736>:	sext.w	a5,s7
0x0000000000019922 in __sfvwrite_r ()
=> 0x19922 <__sfvwrite_r+740>:	subw	a3,a3,s7
0x0000000000019926 in __sfvwrite_r ()
=> 0x19926 <__sfvwrite_r+744>:	add	a4,a4,s7
0x0000000000019928 in __sfvwrite_r ()
=> 0x19928 <__sfvwrite_r+746>:	sw	a3,12(s0)
0x000000000001992a in __sfvwrite_r ()
=> 0x1992a <__sfvwrite_r+748>:	sd	a4,0(s0)
0x000000000001992c in __sfvwrite_r ()
=> 0x1992c <__sfvwrite_r+750>:	j	0x197a2 <__sfvwrite_r+356>
0x00000000000197a2 in __sfvwrite_r ()
=> 0x197a2 <__sfvwrite_r+356>:	subw	s3,s3,a5
0x00000000000197a6 in __sfvwrite_r ()
=> 0x197a6 <__sfvwrite_r+360>:	li	a0,1
0x00000000000197a8 in __sfvwrite_r ()
=> 0x197a8 <__sfvwrite_r+362>:	beqz	s3,0x197de <__sfvwrite_r+416>
0x00000000000197ac in __sfvwrite_r ()
=> 0x197ac <__sfvwrite_r+366>:	ld	a5,16(s4)
0x00000000000197b0 in __sfvwrite_r ()
=> 0x197b0 <__sfvwrite_r+370>:	add	s9,s9,s1
0x00000000000197b2 in __sfvwrite_r ()
=> 0x197b2 <__sfvwrite_r+372>:	sub	s8,s8,s1
0x00000000000197b6 in __sfvwrite_r ()
=> 0x197b6 <__sfvwrite_r+376>:	sub	s1,a5,s1
0x00000000000197ba in __sfvwrite_r ()
=> 0x197ba <__sfvwrite_r+380>:	sd	s1,16(s4)
0x00000000000197be in __sfvwrite_r ()
=> 0x197be <__sfvwrite_r+384>:	bnez	s1,0x19766 <__sfvwrite_r+296>
0x00000000000197c0 in __sfvwrite_r ()
=> 0x197c0 <__sfvwrite_r+386>:	li	a0,0
0x00000000000197c2 in __sfvwrite_r ()
=> 0x197c2 <__sfvwrite_r+388>:	ld	ra,88(sp)
0x00000000000197c4 in __sfvwrite_r ()
=> 0x197c4 <__sfvwrite_r+390>:	ld	s0,80(sp)
0x00000000000197c6 in __sfvwrite_r ()
=> 0x197c6 <__sfvwrite_r+392>:	ld	s1,72(sp)
0x00000000000197c8 in __sfvwrite_r ()
=> 0x197c8 <__sfvwrite_r+394>:	ld	s2,64(sp)
0x00000000000197ca in __sfvwrite_r ()
=> 0x197ca <__sfvwrite_r+396>:	ld	s3,56(sp)
0x00000000000197cc in __sfvwrite_r ()
=> 0x197cc <__sfvwrite_r+398>:	ld	s4,48(sp)
0x00000000000197ce in __sfvwrite_r ()
=> 0x197ce <__sfvwrite_r+400>:	ld	s5,40(sp)
0x00000000000197d0 in __sfvwrite_r ()
=> 0x197d0 <__sfvwrite_r+402>:	ld	s6,32(sp)
0x00000000000197d2 in __sfvwrite_r ()
=> 0x197d2 <__sfvwrite_r+404>:	ld	s7,24(sp)
0x00000000000197d4 in __sfvwrite_r ()
=> 0x197d4 <__sfvwrite_r+406>:	ld	s8,16(sp)
0x00000000000197d6 in __sfvwrite_r ()
=> 0x197d6 <__sfvwrite_r+408>:	ld	s9,8(sp)
0x00000000000197d8 in __sfvwrite_r ()
=> 0x197d8 <__sfvwrite_r+410>:	ld	s10,0(sp)
0x00000000000197da in __sfvwrite_r ()
=> 0x197da <__sfvwrite_r+412>:	addi	sp,sp,96
0x00000000000197dc in __sfvwrite_r ()
=> 0x197dc <__sfvwrite_r+414>:	ret
0x0000000000018500 in __sprint_r.part.0 ()
=> 0x18500 <__sprint_r.part.0+162>:	j	0x184c8 <__sprint_r.part.0+106>
0x00000000000184c8 in __sprint_r.part.0 ()
=> 0x184c8 <__sprint_r.part.0+106>:	ld	ra,72(sp)
0x00000000000184ca in __sprint_r.part.0 ()
=> 0x184ca <__sprint_r.part.0+108>:	ld	s0,64(sp)
0x00000000000184cc in __sprint_r.part.0 ()
=> 0x184cc <__sprint_r.part.0+110>:	sd	zero,16(s5)
0x00000000000184d0 in __sprint_r.part.0 ()
=> 0x184d0 <__sprint_r.part.0+114>:	sw	zero,8(s5)
0x00000000000184d4 in __sprint_r.part.0 ()
=> 0x184d4 <__sprint_r.part.0+118>:	ld	s1,56(sp)
0x00000000000184d6 in __sprint_r.part.0 ()
=> 0x184d6 <__sprint_r.part.0+120>:	ld	s2,48(sp)
0x00000000000184d8 in __sprint_r.part.0 ()
=> 0x184d8 <__sprint_r.part.0+122>:	ld	s3,40(sp)
0x00000000000184da in __sprint_r.part.0 ()
=> 0x184da <__sprint_r.part.0+124>:	ld	s4,32(sp)
0x00000000000184dc in __sprint_r.part.0 ()
=> 0x184dc <__sprint_r.part.0+126>:	ld	s5,24(sp)
0x00000000000184de in __sprint_r.part.0 ()
=> 0x184de <__sprint_r.part.0+128>:	ld	s6,16(sp)
0x00000000000184e0 in __sprint_r.part.0 ()
=> 0x184e0 <__sprint_r.part.0+130>:	ld	s7,8(sp)
0x00000000000184e2 in __sprint_r.part.0 ()
=> 0x184e2 <__sprint_r.part.0+132>:	addi	sp,sp,80
0x00000000000184e4 in __sprint_r.part.0 ()
=> 0x184e4 <__sprint_r.part.0+134>:	ret
0x000000000001187c in _vfprintf_r ()
=> 0x1187c <_vfprintf_r+3022>:	beqz	a0,0x10f40 <_vfprintf_r+658>
0x0000000000010f40 in _vfprintf_r ()
=> 0x10f40 <_vfprintf_r+658>:	ld	a5,24(sp)
0x0000000000010f42 in _vfprintf_r ()
=> 0x10f42 <_vfprintf_r+660>:	sw	zero,280(sp)
0x0000000000010f46 in _vfprintf_r ()
=> 0x10f46 <_vfprintf_r+664>:	beqz	a5,0x10f50 <_vfprintf_r+674>
0x0000000000010f50 in _vfprintf_r ()
=> 0x10f50 <_vfprintf_r+674>:	mv	t1,s6
0x0000000000010f52 in _vfprintf_r ()
=> 0x10f52 <_vfprintf_r+676>:	mv	s9,s0
0x0000000000010f54 in _vfprintf_r ()
=> 0x10f54 <_vfprintf_r+678>:	lbu	a5,0(s9)
0x0000000000010f58 in _vfprintf_r ()
=> 0x10f58 <_vfprintf_r+682>:	bnez	a5,0x10d96 <_vfprintf_r+232>
0x0000000000010d96 in _vfprintf_r ()
=> 0x10d96 <_vfprintf_r+232>:	mv	s0,s9
0x0000000000010d98 in _vfprintf_r ()
=> 0x10d98 <_vfprintf_r+234>:	li	a4,37
0x0000000000010d9c in _vfprintf_r ()
=> 0x10d9c <_vfprintf_r+238>:	beq	a5,a4,0x110a2 <_vfprintf_r+1012>
0x0000000000010da0 in _vfprintf_r ()
=> 0x10da0 <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010da4 in _vfprintf_r ()
=> 0x10da4 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010da6 in _vfprintf_r ()
=> 0x10da6 <_vfprintf_r+248>:	bnez	a5,0x10d9c <_vfprintf_r+238>
0x0000000000010da8 in _vfprintf_r ()
=> 0x10da8 <_vfprintf_r+250>:	subw	s1,s0,s9
0x0000000000010dac in _vfprintf_r ()
=> 0x10dac <_vfprintf_r+254>:	beqz	s1,0x10f5c <_vfprintf_r+686>
0x0000000000010db0 in _vfprintf_r ()
=> 0x10db0 <_vfprintf_r+258>:	ld	a4,288(sp)
0x0000000000010db2 in _vfprintf_r ()
=> 0x10db2 <_vfprintf_r+260>:	lw	a5,280(sp)
0x0000000000010db6 in _vfprintf_r ()
=> 0x10db6 <_vfprintf_r+264>:	sd	s9,0(t1)
0x0000000000010dba in _vfprintf_r ()
=> 0x10dba <_vfprintf_r+268>:	add	a4,a4,s1
0x0000000000010dbc in _vfprintf_r ()
=> 0x10dbc <_vfprintf_r+270>:	addiw	a5,a5,1
0x0000000000010dbe in _vfprintf_r ()
=> 0x10dbe <_vfprintf_r+272>:	sd	s1,8(t1)
0x0000000000010dc2 in _vfprintf_r ()
=> 0x10dc2 <_vfprintf_r+276>:	sd	a4,288(sp)
0x0000000000010dc4 in _vfprintf_r ()
=> 0x10dc4 <_vfprintf_r+278>:	sw	a5,280(sp)
0x0000000000010dc8 in _vfprintf_r ()
=> 0x10dc8 <_vfprintf_r+282>:	sext.w	a4,a5
0x0000000000010dcc in _vfprintf_r ()
=> 0x10dcc <_vfprintf_r+286>:	li	a5,7
0x0000000000010dce in _vfprintf_r ()
=> 0x10dce <_vfprintf_r+288>:	addi	t1,t1,16
0x0000000000010dd0 in _vfprintf_r ()
=> 0x10dd0 <_vfprintf_r+290>:	blt	a5,a4,0x110b0 <_vfprintf_r+1026>
0x0000000000010dd4 in _vfprintf_r ()
=> 0x10dd4 <_vfprintf_r+294>:	ld	a4,8(sp)
0x0000000000010dd6 in _vfprintf_r ()
=> 0x10dd6 <_vfprintf_r+296>:	lbu	a5,0(s0)
0x0000000000010dda in _vfprintf_r ()
=> 0x10dda <_vfprintf_r+300>:	addw	a4,a4,s1
0x0000000000010ddc in _vfprintf_r ()
=> 0x10ddc <_vfprintf_r+302>:	sd	a4,8(sp)
0x0000000000010dde in _vfprintf_r ()
=> 0x10dde <_vfprintf_r+304>:	beqz	a5,0x10f5c <_vfprintf_r+686>
0x0000000000010f5c in _vfprintf_r ()
=> 0x10f5c <_vfprintf_r+686>:	ld	a5,288(sp)
0x0000000000010f5e in _vfprintf_r ()
=> 0x10f5e <_vfprintf_r+688>:	beqz	a5,0x10f64 <_vfprintf_r+694>
0x0000000000010f60 in _vfprintf_r ()
=> 0x10f60 <_vfprintf_r+690>:	j	0x121d4 <_vfprintf_r+5414>
0x00000000000121d4 in _vfprintf_r ()
=> 0x121d4 <_vfprintf_r+5414>:	addi	a2,sp,272
0x00000000000121d6 in _vfprintf_r ()
=> 0x121d6 <_vfprintf_r+5416>:	mv	a1,s2
0x00000000000121d8 in _vfprintf_r ()
=> 0x121d8 <_vfprintf_r+5418>:	mv	a0,s4
0x00000000000121da in _vfprintf_r ()
=> 0x121da <_vfprintf_r+5420>:	jal	ra,0x18502 <__sprint_r>
0x0000000000018502 in __sprint_r ()
=> 0x18502 <__sprint_r>:	ld	a4,16(a2)
0x0000000000018504 in __sprint_r ()
=> 0x18504 <__sprint_r+2>:	beqz	a4,0x18508 <__sprint_r+6>
0x0000000000018506 in __sprint_r ()
=> 0x18506 <__sprint_r+4>:	j	0x1845e <__sprint_r.part.0>
0x000000000001845e in __sprint_r.part.0 ()
=> 0x1845e <__sprint_r.part.0>:	lw	a5,172(a1)
0x0000000000018462 in __sprint_r.part.0 ()
=> 0x18462 <__sprint_r.part.0+4>:	addi	sp,sp,-80
0x0000000000018464 in __sprint_r.part.0 ()
=> 0x18464 <__sprint_r.part.0+6>:	lui	a4,0x2
0x0000000000018466 in __sprint_r.part.0 ()
=> 0x18466 <__sprint_r.part.0+8>:	sd	s5,24(sp)
0x0000000000018468 in __sprint_r.part.0 ()
=> 0x18468 <__sprint_r.part.0+10>:	sd	ra,72(sp)
0x000000000001846a in __sprint_r.part.0 ()
=> 0x1846a <__sprint_r.part.0+12>:	sd	s0,64(sp)
0x000000000001846c in __sprint_r.part.0 ()
=> 0x1846c <__sprint_r.part.0+14>:	sd	s1,56(sp)
0x000000000001846e in __sprint_r.part.0 ()
=> 0x1846e <__sprint_r.part.0+16>:	sd	s2,48(sp)
0x0000000000018470 in __sprint_r.part.0 ()
=> 0x18470 <__sprint_r.part.0+18>:	sd	s3,40(sp)
0x0000000000018472 in __sprint_r.part.0 ()
=> 0x18472 <__sprint_r.part.0+20>:	sd	s4,32(sp)
0x0000000000018474 in __sprint_r.part.0 ()
=> 0x18474 <__sprint_r.part.0+22>:	sd	s6,16(sp)
0x0000000000018476 in __sprint_r.part.0 ()
=> 0x18476 <__sprint_r.part.0+24>:	sd	s7,8(sp)
0x0000000000018478 in __sprint_r.part.0 ()
=> 0x18478 <__sprint_r.part.0+26>:	and	a5,a5,a4
0x000000000001847a in __sprint_r.part.0 ()
=> 0x1847a <__sprint_r.part.0+28>:	mv	s5,a2
0x000000000001847c in __sprint_r.part.0 ()
=> 0x1847c <__sprint_r.part.0+30>:	beqz	a5,0x184fc <__sprint_r.part.0+158>
0x00000000000184fc in __sprint_r.part.0 ()
=> 0x184fc <__sprint_r.part.0+158>:	jal	ra,0x1963e <__sfvwrite_r>
0x000000000001963e in __sfvwrite_r ()
=> 0x1963e <__sfvwrite_r>:	ld	a5,16(a2)
0x0000000000019640 in __sfvwrite_r ()
=> 0x19640 <__sfvwrite_r+2>:	beqz	a5,0x197f8 <__sfvwrite_r+442>
0x0000000000019644 in __sfvwrite_r ()
=> 0x19644 <__sfvwrite_r+6>:	lhu	a5,16(a1)
0x0000000000019648 in __sfvwrite_r ()
=> 0x19648 <__sfvwrite_r+10>:	addi	sp,sp,-96
0x000000000001964a in __sfvwrite_r ()
=> 0x1964a <__sfvwrite_r+12>:	sd	s0,80(sp)
0x000000000001964c in __sfvwrite_r ()
=> 0x1964c <__sfvwrite_r+14>:	sd	s4,48(sp)
0x000000000001964e in __sfvwrite_r ()
=> 0x1964e <__sfvwrite_r+16>:	sd	s5,40(sp)
0x0000000000019650 in __sfvwrite_r ()
=> 0x19650 <__sfvwrite_r+18>:	sd	ra,88(sp)
0x0000000000019652 in __sfvwrite_r ()
=> 0x19652 <__sfvwrite_r+20>:	sd	s1,72(sp)
0x0000000000019654 in __sfvwrite_r ()
=> 0x19654 <__sfvwrite_r+22>:	sd	s2,64(sp)
0x0000000000019656 in __sfvwrite_r ()
=> 0x19656 <__sfvwrite_r+24>:	sd	s3,56(sp)
0x0000000000019658 in __sfvwrite_r ()
=> 0x19658 <__sfvwrite_r+26>:	sd	s6,32(sp)
0x000000000001965a in __sfvwrite_r ()
=> 0x1965a <__sfvwrite_r+28>:	sd	s7,24(sp)
0x000000000001965c in __sfvwrite_r ()
=> 0x1965c <__sfvwrite_r+30>:	sd	s8,16(sp)
0x000000000001965e in __sfvwrite_r ()
=> 0x1965e <__sfvwrite_r+32>:	sd	s9,8(sp)
0x0000000000019660 in __sfvwrite_r ()
=> 0x19660 <__sfvwrite_r+34>:	sd	s10,0(sp)
0x0000000000019662 in __sfvwrite_r ()
=> 0x19662 <__sfvwrite_r+36>:	andi	a4,a5,8
0x0000000000019666 in __sfvwrite_r ()
=> 0x19666 <__sfvwrite_r+40>:	mv	s4,a2
0x0000000000019668 in __sfvwrite_r ()
=> 0x19668 <__sfvwrite_r+42>:	mv	s5,a0
0x000000000001966a in __sfvwrite_r ()
=> 0x1966a <__sfvwrite_r+44>:	mv	s0,a1
0x000000000001966c in __sfvwrite_r ()
=> 0x1966c <__sfvwrite_r+46>:	beqz	a4,0x196cc <__sfvwrite_r+142>
0x000000000001966e in __sfvwrite_r ()
=> 0x1966e <__sfvwrite_r+48>:	ld	a4,24(a1)
0x0000000000019670 in __sfvwrite_r ()
=> 0x19670 <__sfvwrite_r+50>:	beqz	a4,0x196cc <__sfvwrite_r+142>
0x0000000000019672 in __sfvwrite_r ()
=> 0x19672 <__sfvwrite_r+52>:	andi	a4,a5,2
0x0000000000019676 in __sfvwrite_r ()
=> 0x19676 <__sfvwrite_r+56>:	ld	s2,0(s4)
0x000000000001967a in __sfvwrite_r ()
=> 0x1967a <__sfvwrite_r+60>:	beqz	a4,0x196e6 <__sfvwrite_r+168>
0x00000000000196e6 in __sfvwrite_r ()
=> 0x196e6 <__sfvwrite_r+168>:	andi	a4,a5,1
0x00000000000196ea in __sfvwrite_r ()
=> 0x196ea <__sfvwrite_r+172>:	bnez	a4,0x1975e <__sfvwrite_r+288>
0x000000000001975e in __sfvwrite_r ()
=> 0x1975e <__sfvwrite_r+288>:	li	s3,0
0x0000000000019760 in __sfvwrite_r ()
=> 0x19760 <__sfvwrite_r+290>:	li	a0,0
0x0000000000019762 in __sfvwrite_r ()
=> 0x19762 <__sfvwrite_r+292>:	li	s9,0
0x0000000000019764 in __sfvwrite_r ()
=> 0x19764 <__sfvwrite_r+294>:	li	s8,0
0x0000000000019766 in __sfvwrite_r ()
=> 0x19766 <__sfvwrite_r+296>:	beqz	s8,0x197fc <__sfvwrite_r+446>
0x00000000000197fc in __sfvwrite_r ()
=> 0x197fc <__sfvwrite_r+446>:	ld	s8,8(s2)
0x0000000000019800 in __sfvwrite_r ()
=> 0x19800 <__sfvwrite_r+450>:	ld	s9,0(s2)
0x0000000000019804 in __sfvwrite_r ()
=> 0x19804 <__sfvwrite_r+454>:	addi	s2,s2,16
0x0000000000019806 in __sfvwrite_r ()
=> 0x19806 <__sfvwrite_r+456>:	beqz	s8,0x197fc <__sfvwrite_r+446>
0x000000000001980a in __sfvwrite_r ()
=> 0x1980a <__sfvwrite_r+460>:	mv	a2,s8
0x000000000001980c in __sfvwrite_r ()
=> 0x1980c <__sfvwrite_r+462>:	li	a1,10
0x000000000001980e in __sfvwrite_r ()
=> 0x1980e <__sfvwrite_r+464>:	mv	a0,s9
0x0000000000019810 in __sfvwrite_r ()
=> 0x19810 <__sfvwrite_r+466>:	jal	ra,0x1568c <memchr>
0x000000000001568c in memchr ()
=> 0x1568c <memchr>:	andi	a5,a0,7
0x0000000000015690 in memchr ()
=> 0x15690 <memchr+4>:	andi	a3,a1,255
0x0000000000015694 in memchr ()
=> 0x15694 <memchr+8>:	beqz	a5,0x156b8 <memchr+44>
0x00000000000156b8 in memchr ()
=> 0x156b8 <memchr+44>:	mv	a5,a2
0x00000000000156ba in memchr ()
=> 0x156ba <memchr+46>:	li	a4,7
0x00000000000156bc in memchr ()
=> 0x156bc <memchr+48>:	bltu	a4,a5,0x156da <memchr+78>
0x00000000000156c0 in memchr ()
=> 0x156c0 <memchr+52>:	bnez	a5,0x156c6 <memchr+58>
0x00000000000156c6 in memchr ()
=> 0x156c6 <memchr+58>:	add	a5,a5,a0
0x00000000000156c8 in memchr ()
=> 0x156c8 <memchr+60>:	j	0x156d0 <memchr+68>
0x00000000000156d0 in memchr ()
=> 0x156d0 <memchr+68>:	lbu	a4,0(a0)
0x00000000000156d4 in memchr ()
=> 0x156d4 <memchr+72>:	bne	a4,a3,0x156ca <memchr+62>
0x00000000000156d8 in memchr ()
=> 0x156d8 <memchr+76>:	ret
0x0000000000019814 in __sfvwrite_r ()
=> 0x19814 <__sfvwrite_r+470>:	beqz	a0,0x19952 <__sfvwrite_r+788>
0x0000000000019818 in __sfvwrite_r ()
=> 0x19818 <__sfvwrite_r+474>:	addi	a0,a0,1
0x000000000001981a in __sfvwrite_r ()
=> 0x1981a <__sfvwrite_r+476>:	subw	s3,a0,s9
0x000000000001981e in __sfvwrite_r ()
=> 0x1981e <__sfvwrite_r+480>:	j	0x1976c <__sfvwrite_r+302>
0x000000000001976c in __sfvwrite_r ()
=> 0x1976c <__sfvwrite_r+302>:	mv	s7,s3
0x000000000001976e in __sfvwrite_r ()
=> 0x1976e <__sfvwrite_r+304>:	bgeu	s8,s3,0x19774 <__sfvwrite_r+310>
0x0000000000019774 in __sfvwrite_r ()
=> 0x19774 <__sfvwrite_r+310>:	ld	a0,0(s0)
0x0000000000019776 in __sfvwrite_r ()
=> 0x19776 <__sfvwrite_r+312>:	ld	a5,24(s0)
0x0000000000019778 in __sfvwrite_r ()
=> 0x19778 <__sfvwrite_r+314>:	lw	a3,32(s0)
0x000000000001977a in __sfvwrite_r ()
=> 0x1977a <__sfvwrite_r+316>:	mv	s1,s7
0x000000000001977c in __sfvwrite_r ()
=> 0x1977c <__sfvwrite_r+318>:	bgeu	a5,a0,0x1978a <__sfvwrite_r+332>
0x0000000000019780 in __sfvwrite_r ()
=> 0x19780 <__sfvwrite_r+322>:	lw	a5,12(s0)
0x0000000000019782 in __sfvwrite_r ()
=> 0x19782 <__sfvwrite_r+324>:	addw	s6,a5,a3
0x0000000000019786 in __sfvwrite_r ()
=> 0x19786 <__sfvwrite_r+328>:	blt	s6,s7,0x19820 <__sfvwrite_r+482>
0x000000000001978a in __sfvwrite_r ()
=> 0x1978a <__sfvwrite_r+332>:	blt	s7,a3,0x19912 <__sfvwrite_r+724>
0x0000000000019912 in __sfvwrite_r ()
=> 0x19912 <__sfvwrite_r+724>:	mv	a2,s7
0x0000000000019914 in __sfvwrite_r ()
=> 0x19914 <__sfvwrite_r+726>:	mv	a1,s9
0x0000000000019916 in __sfvwrite_r ()
=> 0x19916 <__sfvwrite_r+728>:	jal	ra,0x19ac2 <memmove>
0x0000000000019ac2 in memmove ()
=> 0x19ac2 <memmove>:	bgeu	a1,a0,0x19ae6 <memmove+36>
0x0000000000019ac6 in memmove ()
=> 0x19ac6 <memmove+4>:	add	a5,a1,a2
0x0000000000019aca in memmove ()
=> 0x19aca <memmove+8>:	bgeu	a0,a5,0x19ae6 <memmove+36>
0x0000000000019ae6 in memmove ()
=> 0x19ae6 <memmove+36>:	li	a5,31
0x0000000000019ae8 in memmove ()
=> 0x19ae8 <memmove+38>:	bltu	a5,a2,0x19b0a <memmove+72>
0x0000000000019aec in memmove ()
=> 0x19aec <memmove+42>:	mv	a5,a0
0x0000000000019aee in memmove ()
=> 0x19aee <memmove+44>:	addi	a3,a2,-1
0x0000000000019af2 in memmove ()
=> 0x19af2 <memmove+48>:	beqz	a2,0x19b92 <memmove+208>
0x0000000000019af4 in memmove ()
=> 0x19af4 <memmove+50>:	addi	a3,a3,1
0x0000000000019af6 in memmove ()
=> 0x19af6 <memmove+52>:	add	a3,a3,a5
0x0000000000019af8 in memmove ()
=> 0x19af8 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019afc in memmove ()
=> 0x19afc <memmove+58>:	addi	a5,a5,1
0x0000000000019afe in memmove ()
=> 0x19afe <memmove+60>:	addi	a1,a1,1
0x0000000000019b00 in memmove ()
=> 0x19b00 <memmove+62>:	sb	a4,-1(a5)
0x0000000000019b04 in memmove ()
=> 0x19b04 <memmove+66>:	bne	a5,a3,0x19af8 <memmove+54>
0x0000000000019b08 in memmove ()
=> 0x19b08 <memmove+70>:	ret
0x000000000001991a in __sfvwrite_r ()
=> 0x1991a <__sfvwrite_r+732>:	lw	a3,12(s0)
0x000000000001991c in __sfvwrite_r ()
=> 0x1991c <__sfvwrite_r+734>:	ld	a4,0(s0)
0x000000000001991e in __sfvwrite_r ()
=> 0x1991e <__sfvwrite_r+736>:	sext.w	a5,s7
0x0000000000019922 in __sfvwrite_r ()
=> 0x19922 <__sfvwrite_r+740>:	subw	a3,a3,s7
0x0000000000019926 in __sfvwrite_r ()
=> 0x19926 <__sfvwrite_r+744>:	add	a4,a4,s7
0x0000000000019928 in __sfvwrite_r ()
=> 0x19928 <__sfvwrite_r+746>:	sw	a3,12(s0)
0x000000000001992a in __sfvwrite_r ()
=> 0x1992a <__sfvwrite_r+748>:	sd	a4,0(s0)
0x000000000001992c in __sfvwrite_r ()
=> 0x1992c <__sfvwrite_r+750>:	j	0x197a2 <__sfvwrite_r+356>
0x00000000000197a2 in __sfvwrite_r ()
=> 0x197a2 <__sfvwrite_r+356>:	subw	s3,s3,a5
0x00000000000197a6 in __sfvwrite_r ()
=> 0x197a6 <__sfvwrite_r+360>:	li	a0,1
0x00000000000197a8 in __sfvwrite_r ()
=> 0x197a8 <__sfvwrite_r+362>:	beqz	s3,0x197de <__sfvwrite_r+416>
0x00000000000197de in __sfvwrite_r ()
=> 0x197de <__sfvwrite_r+416>:	mv	a1,s0
0x00000000000197e0 in __sfvwrite_r ()
=> 0x197e0 <__sfvwrite_r+418>:	mv	a0,s5
0x00000000000197e2 in __sfvwrite_r ()
=> 0x197e2 <__sfvwrite_r+420>:	jal	ra,0x12c1a <_fflush_r>
0x0000000000012c1a in _fflush_r ()
=> 0x12c1a <_fflush_r>:	addi	sp,sp,-32
0x0000000000012c1c in _fflush_r ()
=> 0x12c1c <_fflush_r+2>:	sd	s0,16(sp)
0x0000000000012c1e in _fflush_r ()
=> 0x12c1e <_fflush_r+4>:	sd	ra,24(sp)
0x0000000000012c20 in _fflush_r ()
=> 0x12c20 <_fflush_r+6>:	mv	s0,a0
0x0000000000012c22 in _fflush_r ()
=> 0x12c22 <_fflush_r+8>:	beqz	a0,0x12c28 <_fflush_r+14>
0x0000000000012c24 in _fflush_r ()
=> 0x12c24 <_fflush_r+10>:	lw	a5,80(a0)
0x0000000000012c26 in _fflush_r ()
=> 0x12c26 <_fflush_r+12>:	beqz	a5,0x12c38 <_fflush_r+30>
0x0000000000012c28 in _fflush_r ()
=> 0x12c28 <_fflush_r+14>:	lh	a5,16(a1)
0x0000000000012c2c in _fflush_r ()
=> 0x12c2c <_fflush_r+18>:	bnez	a5,0x12c46 <_fflush_r+44>
0x0000000000012c46 in _fflush_r ()
=> 0x12c46 <_fflush_r+44>:	mv	a0,s0
0x0000000000012c48 in _fflush_r ()
=> 0x12c48 <_fflush_r+46>:	ld	s0,16(sp)
0x0000000000012c4a in _fflush_r ()
=> 0x12c4a <_fflush_r+48>:	ld	ra,24(sp)
0x0000000000012c4c in _fflush_r ()
=> 0x12c4c <_fflush_r+50>:	addi	sp,sp,32
0x0000000000012c4e in _fflush_r ()
=> 0x12c4e <_fflush_r+52>:	j	0x12a88 <__sflush_r>
0x0000000000012a88 in __sflush_r ()
=> 0x12a88 <__sflush_r>:	lh	a5,16(a1)
0x0000000000012a8c in __sflush_r ()
=> 0x12a8c <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000012a8e in __sflush_r ()
=> 0x12a8e <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000012a90 in __sflush_r ()
=> 0x12a90 <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000012a92 in __sflush_r ()
=> 0x12a92 <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000012a94 in __sflush_r ()
=> 0x12a94 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000012a96 in __sflush_r ()
=> 0x12a96 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000012a98 in __sflush_r ()
=> 0x12a98 <__sflush_r+16>:	andi	a3,a5,8
0x0000000000012a9c in __sflush_r ()
=> 0x12a9c <__sflush_r+20>:	mv	s0,a1
0x0000000000012a9e in __sflush_r ()
=> 0x12a9e <__sflush_r+22>:	mv	s3,a0
0x0000000000012aa0 in __sflush_r ()
=> 0x12aa0 <__sflush_r+24>:	bnez	a3,0x12b54 <__sflush_r+204>
0x0000000000012b54 in __sflush_r ()
=> 0x12b54 <__sflush_r+204>:	ld	s2,24(a1)
0x0000000000012b58 in __sflush_r ()
=> 0x12b58 <__sflush_r+208>:	beqz	s2,0x12b44 <__sflush_r+188>
0x0000000000012b5c in __sflush_r ()
=> 0x12b5c <__sflush_r+212>:	ld	s1,0(a1)
0x0000000000012b5e in __sflush_r ()
=> 0x12b5e <__sflush_r+214>:	slli	a4,a5,0x30
0x0000000000012b62 in __sflush_r ()
=> 0x12b62 <__sflush_r+218>:	srli	a4,a4,0x30
0x0000000000012b64 in __sflush_r ()
=> 0x12b64 <__sflush_r+220>:	andi	a4,a4,3
0x0000000000012b66 in __sflush_r ()
=> 0x12b66 <__sflush_r+222>:	sd	s2,0(a1)
0x0000000000012b6a in __sflush_r ()
=> 0x12b6a <__sflush_r+226>:	subw	s1,s1,s2
0x0000000000012b6e in __sflush_r ()
=> 0x12b6e <__sflush_r+230>:	li	a5,0
0x0000000000012b70 in __sflush_r ()
=> 0x12b70 <__sflush_r+232>:	bnez	a4,0x12b74 <__sflush_r+236>
0x0000000000012b74 in __sflush_r ()
=> 0x12b74 <__sflush_r+236>:	sw	a5,12(s0)
0x0000000000012b76 in __sflush_r ()
=> 0x12b76 <__sflush_r+238>:	bgtz	s1,0x12b82 <__sflush_r+250>
0x0000000000012b82 in __sflush_r ()
=> 0x12b82 <__sflush_r+250>:	ld	a5,64(s0)
0x0000000000012b84 in __sflush_r ()
=> 0x12b84 <__sflush_r+252>:	ld	a1,48(s0)
0x0000000000012b86 in __sflush_r ()
=> 0x12b86 <__sflush_r+254>:	mv	a3,s1
0x0000000000012b88 in __sflush_r ()
=> 0x12b88 <__sflush_r+256>:	mv	a2,s2
0x0000000000012b8a in __sflush_r ()
=> 0x12b8a <__sflush_r+258>:	mv	a0,s3
0x0000000000012b8c in __sflush_r ()
=> 0x12b8c <__sflush_r+260>:	jalr	a5
0x0000000000016602 in __swrite ()
=> 0x16602 <__swrite>:	lh	a5,16(a1)
0x0000000000016606 in __swrite ()
=> 0x16606 <__swrite+4>:	addi	sp,sp,-48
0x0000000000016608 in __swrite ()
=> 0x16608 <__swrite+6>:	sd	s0,32(sp)
0x000000000001660a in __swrite ()
=> 0x1660a <__swrite+8>:	sd	s1,24(sp)
0x000000000001660c in __swrite ()
=> 0x1660c <__swrite+10>:	sd	s2,16(sp)
0x000000000001660e in __swrite ()
=> 0x1660e <__swrite+12>:	sd	s3,8(sp)
0x0000000000016610 in __swrite ()
=> 0x16610 <__swrite+14>:	sd	ra,40(sp)
0x0000000000016612 in __swrite ()
=> 0x16612 <__swrite+16>:	andi	a4,a5,256
0x0000000000016616 in __swrite ()
=> 0x16616 <__swrite+20>:	mv	s0,a1
0x0000000000016618 in __swrite ()
=> 0x16618 <__swrite+22>:	mv	s1,a0
0x000000000001661a in __swrite ()
=> 0x1661a <__swrite+24>:	lh	a1,18(a1)
0x000000000001661e in __swrite ()
=> 0x1661e <__swrite+28>:	mv	s2,a2
0x0000000000016620 in __swrite ()
=> 0x16620 <__swrite+30>:	mv	s3,a3
0x0000000000016622 in __swrite ()
=> 0x16622 <__swrite+32>:	bnez	a4,0x16644 <__swrite+66>
0x0000000000016624 in __swrite ()
=> 0x16624 <__swrite+34>:	lui	a4,0xfffff
0x0000000000016626 in __swrite ()
=> 0x16626 <__swrite+36>:	addi	a4,a4,-1
0x0000000000016628 in __swrite ()
=> 0x16628 <__swrite+38>:	and	a5,a5,a4
0x000000000001662a in __swrite ()
=> 0x1662a <__swrite+40>:	sh	a5,16(s0)
0x000000000001662e in __swrite ()
=> 0x1662e <__swrite+44>:	ld	s0,32(sp)
0x0000000000016630 in __swrite ()
=> 0x16630 <__swrite+46>:	ld	ra,40(sp)
0x0000000000016632 in __swrite ()
=> 0x16632 <__swrite+48>:	mv	a3,s3
0x0000000000016634 in __swrite ()
=> 0x16634 <__swrite+50>:	mv	a2,s2
0x0000000000016636 in __swrite ()
=> 0x16636 <__swrite+52>:	ld	s3,8(sp)
0x0000000000016638 in __swrite ()
=> 0x16638 <__swrite+54>:	ld	s2,16(sp)
0x000000000001663a in __swrite ()
=> 0x1663a <__swrite+56>:	mv	a0,s1
0x000000000001663c in __swrite ()
=> 0x1663c <__swrite+58>:	ld	s1,24(sp)
0x000000000001663e in __swrite ()
=> 0x1663e <__swrite+60>:	addi	sp,sp,48
0x0000000000016640 in __swrite ()
=> 0x16640 <__swrite+62>:	j	0x1920a <_write_r>
0x000000000001920a in _write_r ()
=> 0x1920a <_write_r>:	addi	sp,sp,-32
0x000000000001920c in _write_r ()
=> 0x1920c <_write_r+2>:	mv	a4,a1
0x000000000001920e in _write_r ()
=> 0x1920e <_write_r+4>:	sd	s0,16(sp)
0x0000000000019210 in _write_r ()
=> 0x19210 <_write_r+6>:	sd	s1,8(sp)
0x0000000000019212 in _write_r ()
=> 0x19212 <_write_r+8>:	mv	a1,a2
0x0000000000019214 in _write_r ()
=> 0x19214 <_write_r+10>:	mv	s0,a0
0x0000000000019216 in _write_r ()
=> 0x19216 <_write_r+12>:	mv	a2,a3
0x0000000000019218 in _write_r ()
=> 0x19218 <_write_r+14>:	mv	a0,a4
0x000000000001921a in _write_r ()
=> 0x1921a <_write_r+16>:	sd	ra,24(sp)
0x000000000001921c in _write_r ()
=> 0x1921c <_write_r+18>:	sw	zero,1936(gp)
0x0000000000019220 in _write_r ()
=> 0x19220 <_write_r+22>:	jal	ra,0x1b31e <_write>
0x000000000001b31e in _write ()
=> 0x1b31e <_write>:	addi	sp,sp,-16
0x000000000001b320 in _write ()
=> 0x1b320 <_write+2>:	sd	ra,8(sp)
0x000000000001b322 in _write ()
=> 0x1b322 <_write+4>:	sd	s0,0(sp)
0x000000000001b324 in _write ()
=> 0x1b324 <_write+6>:	li	a7,64
0x000000000001b328 in _write ()
=> 0x1b328 <_write+10>:	ecall
0x000000000001b32c in _write ()
=> 0x1b32c <_write+14>:	mv	s0,a0
0x000000000001b32e in _write ()
=> 0x1b32e <_write+16>:	bltz	a0,0x1b33c <_write+30>
0x000000000001b332 in _write ()
=> 0x1b332 <_write+20>:	ld	ra,8(sp)
0x000000000001b334 in _write ()
=> 0x1b334 <_write+22>:	mv	a0,s0
0x000000000001b336 in _write ()
=> 0x1b336 <_write+24>:	ld	s0,0(sp)
0x000000000001b338 in _write ()
=> 0x1b338 <_write+26>:	addi	sp,sp,16
0x000000000001b33a in _write ()
=> 0x1b33a <_write+28>:	ret
0x0000000000019224 in _write_r ()
=> 0x19224 <_write_r+26>:	li	a5,-1
0x0000000000019226 in _write_r ()
=> 0x19226 <_write_r+28>:	beq	a0,a5,0x19234 <_write_r+42>
0x000000000001922a in _write_r ()
=> 0x1922a <_write_r+32>:	ld	ra,24(sp)
0x000000000001922c in _write_r ()
=> 0x1922c <_write_r+34>:	ld	s0,16(sp)
0x000000000001922e in _write_r ()
=> 0x1922e <_write_r+36>:	ld	s1,8(sp)
0x0000000000019230 in _write_r ()
=> 0x19230 <_write_r+38>:	addi	sp,sp,32
0x0000000000019232 in _write_r ()
=> 0x19232 <_write_r+40>:	ret
0x0000000000012b8e in __sflush_r ()
=> 0x12b8e <__sflush_r+262>:	subw	s1,s1,a0
0x0000000000012b90 in __sflush_r ()
=> 0x12b90 <__sflush_r+264>:	bgtz	a0,0x12b7c <__sflush_r+244>
0x0000000000012b7c in __sflush_r ()
=> 0x12b7c <__sflush_r+244>:	add	s2,s2,a0
0x0000000000012b7e in __sflush_r ()
=> 0x12b7e <__sflush_r+246>:	blez	s1,0x12b44 <__sflush_r+188>
0x0000000000012b44 in __sflush_r ()
=> 0x12b44 <__sflush_r+188>:	li	a0,0
0x0000000000012b46 in __sflush_r ()
=> 0x12b46 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000012b48 in __sflush_r ()
=> 0x12b48 <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000012b4a in __sflush_r ()
=> 0x12b4a <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000012b4c in __sflush_r ()
=> 0x12b4c <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000012b4e in __sflush_r ()
=> 0x12b4e <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000012b50 in __sflush_r ()
=> 0x12b50 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000012b52 in __sflush_r ()
=> 0x12b52 <__sflush_r+202>:	ret
0x00000000000197e6 in __sfvwrite_r ()
=> 0x197e6 <__sfvwrite_r+424>:	beqz	a0,0x197ac <__sfvwrite_r+366>
0x00000000000197ac in __sfvwrite_r ()
=> 0x197ac <__sfvwrite_r+366>:	ld	a5,16(s4)
0x00000000000197b0 in __sfvwrite_r ()
=> 0x197b0 <__sfvwrite_r+370>:	add	s9,s9,s1
0x00000000000197b2 in __sfvwrite_r ()
=> 0x197b2 <__sfvwrite_r+372>:	sub	s8,s8,s1
0x00000000000197b6 in __sfvwrite_r ()
=> 0x197b6 <__sfvwrite_r+376>:	sub	s1,a5,s1
0x00000000000197ba in __sfvwrite_r ()
=> 0x197ba <__sfvwrite_r+380>:	sd	s1,16(s4)
0x00000000000197be in __sfvwrite_r ()
=> 0x197be <__sfvwrite_r+384>:	bnez	s1,0x19766 <__sfvwrite_r+296>
0x00000000000197c0 in __sfvwrite_r ()
=> 0x197c0 <__sfvwrite_r+386>:	li	a0,0
0x00000000000197c2 in __sfvwrite_r ()
=> 0x197c2 <__sfvwrite_r+388>:	ld	ra,88(sp)
0x00000000000197c4 in __sfvwrite_r ()
=> 0x197c4 <__sfvwrite_r+390>:	ld	s0,80(sp)
0x00000000000197c6 in __sfvwrite_r ()
=> 0x197c6 <__sfvwrite_r+392>:	ld	s1,72(sp)
0x00000000000197c8 in __sfvwrite_r ()
=> 0x197c8 <__sfvwrite_r+394>:	ld	s2,64(sp)
0x00000000000197ca in __sfvwrite_r ()
=> 0x197ca <__sfvwrite_r+396>:	ld	s3,56(sp)
0x00000000000197cc in __sfvwrite_r ()
=> 0x197cc <__sfvwrite_r+398>:	ld	s4,48(sp)
0x00000000000197ce in __sfvwrite_r ()
=> 0x197ce <__sfvwrite_r+400>:	ld	s5,40(sp)
0x00000000000197d0 in __sfvwrite_r ()
=> 0x197d0 <__sfvwrite_r+402>:	ld	s6,32(sp)
0x00000000000197d2 in __sfvwrite_r ()
=> 0x197d2 <__sfvwrite_r+404>:	ld	s7,24(sp)
0x00000000000197d4 in __sfvwrite_r ()
=> 0x197d4 <__sfvwrite_r+406>:	ld	s8,16(sp)
0x00000000000197d6 in __sfvwrite_r ()
=> 0x197d6 <__sfvwrite_r+408>:	ld	s9,8(sp)
0x00000000000197d8 in __sfvwrite_r ()
=> 0x197d8 <__sfvwrite_r+410>:	ld	s10,0(sp)
0x00000000000197da in __sfvwrite_r ()
=> 0x197da <__sfvwrite_r+412>:	addi	sp,sp,96
0x00000000000197dc in __sfvwrite_r ()
=> 0x197dc <__sfvwrite_r+414>:	ret
0x0000000000018500 in __sprint_r.part.0 ()
=> 0x18500 <__sprint_r.part.0+162>:	j	0x184c8 <__sprint_r.part.0+106>
0x00000000000184c8 in __sprint_r.part.0 ()
=> 0x184c8 <__sprint_r.part.0+106>:	ld	ra,72(sp)
0x00000000000184ca in __sprint_r.part.0 ()
=> 0x184ca <__sprint_r.part.0+108>:	ld	s0,64(sp)
0x00000000000184cc in __sprint_r.part.0 ()
=> 0x184cc <__sprint_r.part.0+110>:	sd	zero,16(s5)
0x00000000000184d0 in __sprint_r.part.0 ()
=> 0x184d0 <__sprint_r.part.0+114>:	sw	zero,8(s5)
0x00000000000184d4 in __sprint_r.part.0 ()
=> 0x184d4 <__sprint_r.part.0+118>:	ld	s1,56(sp)
0x00000000000184d6 in __sprint_r.part.0 ()
=> 0x184d6 <__sprint_r.part.0+120>:	ld	s2,48(sp)
0x00000000000184d8 in __sprint_r.part.0 ()
=> 0x184d8 <__sprint_r.part.0+122>:	ld	s3,40(sp)
0x00000000000184da in __sprint_r.part.0 ()
=> 0x184da <__sprint_r.part.0+124>:	ld	s4,32(sp)
0x00000000000184dc in __sprint_r.part.0 ()
=> 0x184dc <__sprint_r.part.0+126>:	ld	s5,24(sp)
0x00000000000184de in __sprint_r.part.0 ()
=> 0x184de <__sprint_r.part.0+128>:	ld	s6,16(sp)
0x00000000000184e0 in __sprint_r.part.0 ()
=> 0x184e0 <__sprint_r.part.0+130>:	ld	s7,8(sp)
0x00000000000184e2 in __sprint_r.part.0 ()
=> 0x184e2 <__sprint_r.part.0+132>:	addi	sp,sp,80
0x00000000000184e4 in __sprint_r.part.0 ()
=> 0x184e4 <__sprint_r.part.0+134>:	ret
0x00000000000121de in _vfprintf_r ()
=> 0x121de <_vfprintf_r+5424>:	j	0x10f64 <_vfprintf_r+694>
0x0000000000010f64 in _vfprintf_r ()
=> 0x10f64 <_vfprintf_r+694>:	lhu	a5,16(s2)
0x0000000000010f68 in _vfprintf_r ()
=> 0x10f68 <_vfprintf_r+698>:	andi	a5,a5,64
0x0000000000010f6c in _vfprintf_r ()
=> 0x10f6c <_vfprintf_r+702>:	beqz	a5,0x10f72 <_vfprintf_r+708>
0x0000000000010f72 in _vfprintf_r ()
=> 0x10f72 <_vfprintf_r+708>:	ld	ra,632(sp)
0x0000000000010f76 in _vfprintf_r ()
=> 0x10f76 <_vfprintf_r+712>:	ld	s0,624(sp)
0x0000000000010f7a in _vfprintf_r ()
=> 0x10f7a <_vfprintf_r+716>:	ld	a0,8(sp)
0x0000000000010f7c in _vfprintf_r ()
=> 0x10f7c <_vfprintf_r+718>:	ld	s1,616(sp)
0x0000000000010f80 in _vfprintf_r ()
=> 0x10f80 <_vfprintf_r+722>:	ld	s2,608(sp)
0x0000000000010f84 in _vfprintf_r ()
=> 0x10f84 <_vfprintf_r+726>:	ld	s3,600(sp)
0x0000000000010f88 in _vfprintf_r ()
=> 0x10f88 <_vfprintf_r+730>:	ld	s4,592(sp)
0x0000000000010f8c in _vfprintf_r ()
=> 0x10f8c <_vfprintf_r+734>:	ld	s5,584(sp)
0x0000000000010f90 in _vfprintf_r ()
=> 0x10f90 <_vfprintf_r+738>:	ld	s6,576(sp)
0x0000000000010f94 in _vfprintf_r ()
=> 0x10f94 <_vfprintf_r+742>:	ld	s7,568(sp)
0x0000000000010f98 in _vfprintf_r ()
=> 0x10f98 <_vfprintf_r+746>:	ld	s8,560(sp)
0x0000000000010f9c in _vfprintf_r ()
=> 0x10f9c <_vfprintf_r+750>:	ld	s9,552(sp)
0x0000000000010fa0 in _vfprintf_r ()
=> 0x10fa0 <_vfprintf_r+754>:	ld	s10,544(sp)
0x0000000000010fa4 in _vfprintf_r ()
=> 0x10fa4 <_vfprintf_r+758>:	ld	s11,536(sp)
0x0000000000010fa8 in _vfprintf_r ()
=> 0x10fa8 <_vfprintf_r+762>:	addi	sp,sp,640
0x0000000000010fac in _vfprintf_r ()
=> 0x10fac <_vfprintf_r+766>:	ret
0x0000000000010c72 in printf ()
=> 0x10c72 <printf+38>:	ld	ra,24(sp)
0x0000000000010c74 in printf ()
=> 0x10c74 <printf+40>:	addi	sp,sp,96
0x0000000000010c76 in printf ()
=> 0x10c76 <printf+42>:	ret
stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:50
50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10320 <stop_trigger+64>:	ld	s0,32(sp)
0x0000000000010324 in stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:50
50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10324 <stop_trigger+68>:	ld	ra,40(sp)
0x0000000000010328	50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10328 <stop_trigger+72>:	addi	sp,sp,48
0x000000000001032c	50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1032c <stop_trigger+76>:	ret
main (argc=1, argv=0x3ffffffb58) at main.c:63
63	main.c: No such file or directory.
=> 0x1025c <main+212>:	lw	a0,-40(s0)
0x0000000000010260	63	in main.c
=> 0x10260 <main+216>:	jal	ra,0x10440 <verify_benchmark>
verify_benchmark (res=0) at libbs.c:118
118	libbs.c: No such file or directory.
=> 0x10440 <verify_benchmark>:	addi	sp,sp,-32
0x0000000000010444	118	in libbs.c
=> 0x10444 <verify_benchmark+4>:	sd	ra,24(sp)
0x0000000000010448	118	in libbs.c
=> 0x10448 <verify_benchmark+8>:	sd	s0,16(sp)
0x000000000001044c	118	in libbs.c
=> 0x1044c <verify_benchmark+12>:	addi	s0,sp,32
0x0000000000010450	118	in libbs.c
=> 0x10450 <verify_benchmark+16>:	mv	a1,a0
0x0000000000010454	118	in libbs.c
=> 0x10454 <verify_benchmark+20>:	sw	a0,-20(s0)
0x0000000000010458	118	in libbs.c
=> 0x10458 <verify_benchmark+24>:	li	a0,-1
119	in libbs.c
=> 0x1045c <verify_benchmark+28>:	ld	s0,16(sp)
0x0000000000010460 in verify_benchmark (res=0) at libbs.c:119
119	in libbs.c
=> 0x10460 <verify_benchmark+32>:	ld	ra,24(sp)
0x0000000000010464	119	in libbs.c
=> 0x10464 <verify_benchmark+36>:	addi	sp,sp,32
0x0000000000010468	119	in libbs.c
=> 0x10468 <verify_benchmark+40>:	ret
0x0000000000010264 in main (argc=1, argv=0x3ffffffb58) at main.c:63
63	main.c: No such file or directory.
=> 0x10264 <main+220>:	sw	a0,-44(s0)
65	in main.c
=> 0x10268 <main+224>:	ld	a0,-56(s0)
0x000000000001026c	65	in main.c
=> 0x1026c <main+228>:	jal	ra,0x10550 <free>
0x0000000000010550 in free ()
=> 0x10550 <free>:	mv	a1,a0
0x0000000000010552 in free ()
=> 0x10552 <free+2>:	ld	a0,1872(gp)
0x0000000000010556 in free ()
=> 0x10556 <free+6>:	j	0x13028 <_free_r>
0x0000000000013028 in _free_r ()
=> 0x13028 <_free_r>:	beqz	a1,0x13118 <_free_r+240>
0x000000000001302a in _free_r ()
=> 0x1302a <_free_r+2>:	addi	sp,sp,-32
0x000000000001302c in _free_r ()
=> 0x1302c <_free_r+4>:	sd	s0,16(sp)
0x000000000001302e in _free_r ()
=> 0x1302e <_free_r+6>:	sd	s1,8(sp)
0x0000000000013030 in _free_r ()
=> 0x13030 <_free_r+8>:	mv	s0,a1
0x0000000000013032 in _free_r ()
=> 0x13032 <_free_r+10>:	mv	s1,a0
0x0000000000013034 in _free_r ()
=> 0x13034 <_free_r+12>:	sd	ra,24(sp)
0x0000000000013036 in _free_r ()
=> 0x13036 <_free_r+14>:	jal	ra,0x10c26 <__malloc_lock>
0x0000000000010c26 in __malloc_lock ()
=> 0x10c26 <__malloc_lock>:	ret
0x000000000001303a in _free_r ()
=> 0x1303a <_free_r+18>:	ld	a0,-8(s0)
0x000000000001303e in _free_r ()
=> 0x1303e <_free_r+22>:	addi	a4,s0,-16
0x0000000000013042 in _free_r ()
=> 0x13042 <_free_r+26>:	lui	a1,0x1f
0x0000000000013046 in _free_r ()
=> 0x13046 <_free_r+30>:	andi	a5,a0,-2
0x000000000001304a in _free_r ()
=> 0x1304a <_free_r+34>:	add	a2,a4,a5
0x000000000001304e in _free_r ()
=> 0x1304e <_free_r+38>:	addi	a1,a1,-512
0x0000000000013052 in _free_r ()
=> 0x13052 <_free_r+42>:	ld	a3,8(a2)
0x0000000000013054 in _free_r ()
=> 0x13054 <_free_r+44>:	ld	a6,16(a1)
0x0000000000013058 in _free_r ()
=> 0x13058 <_free_r+48>:	andi	a3,a3,-4
0x000000000001305a in _free_r ()
=> 0x1305a <_free_r+50>:	beq	a6,a2,0x1319e <_free_r+374>
0x000000000001305e in _free_r ()
=> 0x1305e <_free_r+54>:	sd	a3,8(a2)
0x0000000000013060 in _free_r ()
=> 0x13060 <_free_r+56>:	andi	a0,a0,1
0x0000000000013062 in _free_r ()
=> 0x13062 <_free_r+58>:	add	a6,a2,a3
0x0000000000013066 in _free_r ()
=> 0x13066 <_free_r+62>:	bnez	a0,0x130e8 <_free_r+192>
0x00000000000130e8 in _free_r ()
=> 0x130e8 <_free_r+192>:	ld	a0,8(a6)
0x00000000000130ec in _free_r ()
=> 0x130ec <_free_r+196>:	andi	a0,a0,1
0x00000000000130ee in _free_r ()
=> 0x130ee <_free_r+198>:	bnez	a0,0x1311a <_free_r+242>
0x000000000001311a in _free_r ()
=> 0x1311a <_free_r+242>:	ori	a3,a5,1
0x000000000001311e in _free_r ()
=> 0x1311e <_free_r+246>:	sd	a3,-8(s0)
0x0000000000013122 in _free_r ()
=> 0x13122 <_free_r+250>:	sd	a5,0(a2)
0x0000000000013124 in _free_r ()
=> 0x13124 <_free_r+252>:	li	a3,511
0x0000000000013128 in _free_r ()
=> 0x13128 <_free_r+256>:	bgeu	a3,a5,0x130aa <_free_r+130>
0x000000000001312c in _free_r ()
=> 0x1312c <_free_r+260>:	srli	a3,a5,0x9
0x0000000000013130 in _free_r ()
=> 0x13130 <_free_r+264>:	li	a2,4
0x0000000000013132 in _free_r ()
=> 0x13132 <_free_r+266>:	bltu	a2,a3,0x131d0 <_free_r+424>
0x00000000000131d0 in _free_r ()
=> 0x131d0 <_free_r+424>:	li	a2,20
0x00000000000131d2 in _free_r ()
=> 0x131d2 <_free_r+426>:	bgeu	a2,a3,0x131f6 <_free_r+462>
0x00000000000131d6 in _free_r ()
=> 0x131d6 <_free_r+430>:	li	a2,84
0x00000000000131da in _free_r ()
=> 0x131da <_free_r+434>:	bltu	a2,a3,0x1322e <_free_r+518>
0x000000000001322e in _free_r ()
=> 0x1322e <_free_r+518>:	li	a2,340
0x0000000000013232 in _free_r ()
=> 0x13232 <_free_r+522>:	bltu	a2,a3,0x1324a <_free_r+546>
0x000000000001324a in _free_r ()
=> 0x1324a <_free_r+546>:	li	a2,1364
0x000000000001324e in _free_r ()
=> 0x1324e <_free_r+550>:	bltu	a2,a3,0x13266 <_free_r+574>
0x0000000000013266 in _free_r ()
=> 0x13266 <_free_r+574>:	li	a0,2032
0x000000000001326a in _free_r ()
=> 0x1326a <_free_r+578>:	li	a2,126
0x000000000001326e in _free_r ()
=> 0x1326e <_free_r+582>:	j	0x13148 <_free_r+288>
0x0000000000013148 in _free_r ()
=> 0x13148 <_free_r+288>:	add	a0,a0,a1
0x000000000001314a in _free_r ()
=> 0x1314a <_free_r+290>:	ld	a3,0(a0)
0x000000000001314c in _free_r ()
=> 0x1314c <_free_r+292>:	addi	a0,a0,-16
0x000000000001314e in _free_r ()
=> 0x1314e <_free_r+294>:	beq	a0,a3,0x13218 <_free_r+496>
0x0000000000013218 in _free_r ()
=> 0x13218 <_free_r+496>:	ld	a6,8(a1)
0x000000000001321c in _free_r ()
=> 0x1321c <_free_r+500>:	sraiw	a2,a2,0x2
0x0000000000013220 in _free_r ()
=> 0x13220 <_free_r+504>:	li	a5,1
0x0000000000013222 in _free_r ()
=> 0x13222 <_free_r+506>:	sll	a2,a5,a2
0x0000000000013226 in _free_r ()
=> 0x13226 <_free_r+510>:	or	a2,a2,a6
0x000000000001322a in _free_r ()
=> 0x1322a <_free_r+514>:	sd	a2,8(a1)
0x000000000001322c in _free_r ()
=> 0x1322c <_free_r+516>:	j	0x13162 <_free_r+314>
0x0000000000013162 in _free_r ()
=> 0x13162 <_free_r+314>:	sd	a0,24(a4)
0x0000000000013164 in _free_r ()
=> 0x13164 <_free_r+316>:	sd	a3,16(a4)
0x0000000000013166 in _free_r ()
=> 0x13166 <_free_r+318>:	ld	s0,16(sp)
0x0000000000013168 in _free_r ()
=> 0x13168 <_free_r+320>:	sd	a4,16(a0)
0x000000000001316a in _free_r ()
=> 0x1316a <_free_r+322>:	ld	ra,24(sp)
0x000000000001316c in _free_r ()
=> 0x1316c <_free_r+324>:	mv	a0,s1
0x000000000001316e in _free_r ()
=> 0x1316e <_free_r+326>:	ld	s1,8(sp)
0x0000000000013170 in _free_r ()
=> 0x13170 <_free_r+328>:	sd	a4,24(a3)
0x0000000000013172 in _free_r ()
=> 0x13172 <_free_r+330>:	addi	sp,sp,32
0x0000000000013174 in _free_r ()
=> 0x13174 <_free_r+332>:	j	0x10c28 <__malloc_unlock>
0x0000000000010c28 in __malloc_unlock ()
=> 0x10c28 <__malloc_unlock>:	ret
main (argc=1, argv=0x3ffffffb58) at main.c:67
67	in main.c
=> 0x10270 <main+232>:	lw	a0,-44(s0)
0x0000000000010274	67	in main.c
=> 0x10274 <main+236>:	seqz	a0,a0
0x0000000000010278	67	in main.c
=> 0x10278 <main+240>:	ld	s0,112(sp)
0x000000000001027c in main (argc=<error reading variable: Cannot access memory at address 0x2aaabbdd38>, argv=<error reading variable: Cannot access memory at address 0x2aaabbdd30>) at main.c:67
67	in main.c
=> 0x1027c <main+244>:	ld	ra,120(sp)
0x0000000000010280	67	in main.c
=> 0x10280 <main+248>:	addi	sp,sp,128
0x0000000000010284	67	in main.c
=> 0x10284 <main+252>:	ret
0x000000000001013a in _start ()
=> 0x1013a <_start+64>:	j	0x104c0 <exit>
0x00000000000104c0 in exit ()
=> 0x104c0 <exit>:	addi	sp,sp,-16
0x00000000000104c2 in exit ()
=> 0x104c2 <exit+2>:	li	a1,0
0x00000000000104c4 in exit ()
=> 0x104c4 <exit+4>:	sd	s0,0(sp)
0x00000000000104c6 in exit ()
=> 0x104c6 <exit+6>:	sd	ra,8(sp)
0x00000000000104c8 in exit ()
=> 0x104c8 <exit+8>:	mv	s0,a0
0x00000000000104ca in exit ()
=> 0x104ca <exit+10>:	jal	ra,0x129c6 <__call_exitprocs>
0x00000000000129c6 in __call_exitprocs ()
=> 0x129c6 <__call_exitprocs>:	addi	sp,sp,-80
0x00000000000129c8 in __call_exitprocs ()
=> 0x129c8 <__call_exitprocs+2>:	sd	s4,32(sp)
0x00000000000129ca in __call_exitprocs ()
=> 0x129ca <__call_exitprocs+4>:	ld	s4,1856(gp)
0x00000000000129ce in __call_exitprocs ()
=> 0x129ce <__call_exitprocs+8>:	sd	s2,48(sp)
0x00000000000129d0 in __call_exitprocs ()
=> 0x129d0 <__call_exitprocs+10>:	sd	ra,72(sp)
0x00000000000129d2 in __call_exitprocs ()
=> 0x129d2 <__call_exitprocs+12>:	ld	s2,504(s4)
0x00000000000129d6 in __call_exitprocs ()
=> 0x129d6 <__call_exitprocs+16>:	sd	s0,64(sp)
0x00000000000129d8 in __call_exitprocs ()
=> 0x129d8 <__call_exitprocs+18>:	sd	s1,56(sp)
0x00000000000129da in __call_exitprocs ()
=> 0x129da <__call_exitprocs+20>:	sd	s3,40(sp)
0x00000000000129dc in __call_exitprocs ()
=> 0x129dc <__call_exitprocs+22>:	sd	s5,24(sp)
0x00000000000129de in __call_exitprocs ()
=> 0x129de <__call_exitprocs+24>:	sd	s6,16(sp)
0x00000000000129e0 in __call_exitprocs ()
=> 0x129e0 <__call_exitprocs+26>:	sd	s7,8(sp)
0x00000000000129e2 in __call_exitprocs ()
=> 0x129e2 <__call_exitprocs+28>:	sd	s8,0(sp)
0x00000000000129e4 in __call_exitprocs ()
=> 0x129e4 <__call_exitprocs+30>:	beqz	s2,0x12a14 <__call_exitprocs+78>
0x00000000000129e8 in __call_exitprocs ()
=> 0x129e8 <__call_exitprocs+34>:	mv	s6,a0
0x00000000000129ea in __call_exitprocs ()
=> 0x129ea <__call_exitprocs+36>:	mv	s7,a1
0x00000000000129ec in __call_exitprocs ()
=> 0x129ec <__call_exitprocs+38>:	li	s5,1
0x00000000000129ee in __call_exitprocs ()
=> 0x129ee <__call_exitprocs+40>:	li	s3,-1
0x00000000000129f0 in __call_exitprocs ()
=> 0x129f0 <__call_exitprocs+42>:	lw	s1,8(s2)
0x00000000000129f4 in __call_exitprocs ()
=> 0x129f4 <__call_exitprocs+46>:	addiw	s0,s1,-1
0x00000000000129f8 in __call_exitprocs ()
=> 0x129f8 <__call_exitprocs+50>:	bltz	s0,0x12a14 <__call_exitprocs+78>
0x00000000000129fc in __call_exitprocs ()
=> 0x129fc <__call_exitprocs+54>:	slli	s1,s1,0x3
0x00000000000129fe in __call_exitprocs ()
=> 0x129fe <__call_exitprocs+56>:	add	s1,s1,s2
0x0000000000012a00 in __call_exitprocs ()
=> 0x12a00 <__call_exitprocs+58>:	beqz	s7,0x12a2c <__call_exitprocs+102>
0x0000000000012a2c in __call_exitprocs ()
=> 0x12a2c <__call_exitprocs+102>:	lw	a5,8(s2)
0x0000000000012a30 in __call_exitprocs ()
=> 0x12a30 <__call_exitprocs+106>:	ld	a4,8(s1)
0x0000000000012a32 in __call_exitprocs ()
=> 0x12a32 <__call_exitprocs+108>:	addiw	a5,a5,-1
0x0000000000012a34 in __call_exitprocs ()
=> 0x12a34 <__call_exitprocs+110>:	beq	a5,s0,0x12a7c <__call_exitprocs+182>
0x0000000000012a7c in __call_exitprocs ()
=> 0x12a7c <__call_exitprocs+182>:	sw	s0,8(s2)
0x0000000000012a80 in __call_exitprocs ()
=> 0x12a80 <__call_exitprocs+186>:	j	0x12a3c <__call_exitprocs+118>
0x0000000000012a3c in __call_exitprocs ()
=> 0x12a3c <__call_exitprocs+118>:	beqz	a4,0x12a0c <__call_exitprocs+70>
0x0000000000012a3e in __call_exitprocs ()
=> 0x12a3e <__call_exitprocs+120>:	lw	a5,784(s2)
0x0000000000012a42 in __call_exitprocs ()
=> 0x12a42 <__call_exitprocs+124>:	sllw	a3,s5,s0
0x0000000000012a46 in __call_exitprocs ()
=> 0x12a46 <__call_exitprocs+128>:	lw	s8,8(s2)
0x0000000000012a4a in __call_exitprocs ()
=> 0x12a4a <__call_exitprocs+132>:	and	a5,a5,a3
0x0000000000012a4c in __call_exitprocs ()
=> 0x12a4c <__call_exitprocs+134>:	sext.w	a5,a5
0x0000000000012a4e in __call_exitprocs ()
=> 0x12a4e <__call_exitprocs+136>:	bnez	a5,0x12a68 <__call_exitprocs+162>
0x0000000000012a50 in __call_exitprocs ()
=> 0x12a50 <__call_exitprocs+138>:	jalr	a4
0x0000000000012f1e in __libc_fini_array ()
=> 0x12f1e <__libc_fini_array>:	addi	sp,sp,-32
0x0000000000012f20 in __libc_fini_array ()
=> 0x12f20 <__libc_fini_array+2>:	sd	s0,16(sp)
0x0000000000012f22 in __libc_fini_array ()
=> 0x12f22 <__libc_fini_array+4>:	lui	a5,0x1e
0x0000000000012f24 in __libc_fini_array ()
=> 0x12f24 <__libc_fini_array+6>:	lui	s0,0x1e
0x0000000000012f26 in __libc_fini_array ()
=> 0x12f26 <__libc_fini_array+8>:	addi	s0,s0,1592
0x0000000000012f2a in __libc_fini_array ()
=> 0x12f2a <__libc_fini_array+12>:	addi	a5,a5,1600
0x0000000000012f2e in __libc_fini_array ()
=> 0x12f2e <__libc_fini_array+16>:	sub	a5,a5,s0
0x0000000000012f30 in __libc_fini_array ()
=> 0x12f30 <__libc_fini_array+18>:	sd	s1,8(sp)
0x0000000000012f32 in __libc_fini_array ()
=> 0x12f32 <__libc_fini_array+20>:	sd	ra,24(sp)
0x0000000000012f34 in __libc_fini_array ()
=> 0x12f34 <__libc_fini_array+22>:	srai	s1,a5,0x3
0x0000000000012f38 in __libc_fini_array ()
=> 0x12f38 <__libc_fini_array+26>:	beqz	s1,0x12f48 <__libc_fini_array+42>
0x0000000000012f3a in __libc_fini_array ()
=> 0x12f3a <__libc_fini_array+28>:	addi	a5,a5,-8
0x0000000000012f3c in __libc_fini_array ()
=> 0x12f3c <__libc_fini_array+30>:	add	s0,s0,a5
0x0000000000012f3e in __libc_fini_array ()
=> 0x12f3e <__libc_fini_array+32>:	ld	a5,0(s0)
0x0000000000012f40 in __libc_fini_array ()
=> 0x12f40 <__libc_fini_array+34>:	addi	s1,s1,-1
0x0000000000012f42 in __libc_fini_array ()
=> 0x12f42 <__libc_fini_array+36>:	addi	s0,s0,-8
0x0000000000012f44 in __libc_fini_array ()
=> 0x12f44 <__libc_fini_array+38>:	jalr	a5
0x000000000001013c in __do_global_dtors_aux ()
=> 0x1013c <__do_global_dtors_aux>:	lbu	a4,1952(gp)
0x0000000000010140 in __do_global_dtors_aux ()
=> 0x10140 <__do_global_dtors_aux+4>:	bnez	a4,0x1016c <__do_global_dtors_aux+48>
0x0000000000010142 in __do_global_dtors_aux ()
=> 0x10142 <__do_global_dtors_aux+6>:	addi	sp,sp,-16
0x0000000000010144 in __do_global_dtors_aux ()
=> 0x10144 <__do_global_dtors_aux+8>:	sd	s0,0(sp)
0x0000000000010146 in __do_global_dtors_aux ()
=> 0x10146 <__do_global_dtors_aux+10>:	mv	s0,a5
0x0000000000010148 in __do_global_dtors_aux ()
=> 0x10148 <__do_global_dtors_aux+12>:	sd	ra,8(sp)
0x000000000001014a in __do_global_dtors_aux ()
=> 0x1014a <__do_global_dtors_aux+14>:	li	a5,0
0x000000000001014e in __do_global_dtors_aux ()
=> 0x1014e <__do_global_dtors_aux+18>:	beqz	a5,0x1015e <__do_global_dtors_aux+34>
0x000000000001015e in __do_global_dtors_aux ()
=> 0x1015e <__do_global_dtors_aux+34>:	li	a5,1
0x0000000000010160 in __do_global_dtors_aux ()
=> 0x10160 <__do_global_dtors_aux+36>:	ld	ra,8(sp)
0x0000000000010162 in __do_global_dtors_aux ()
=> 0x10162 <__do_global_dtors_aux+38>:	sb	a5,1952(gp)
0x0000000000010166 in __do_global_dtors_aux ()
=> 0x10166 <__do_global_dtors_aux+42>:	ld	s0,0(sp)
0x0000000000010168 in __do_global_dtors_aux ()
=> 0x10168 <__do_global_dtors_aux+44>:	addi	sp,sp,16
0x000000000001016a in __do_global_dtors_aux ()
=> 0x1016a <__do_global_dtors_aux+46>:	ret
0x0000000000012f46 in __libc_fini_array ()
=> 0x12f46 <__libc_fini_array+40>:	bnez	s1,0x12f3e <__libc_fini_array+32>
0x0000000000012f48 in __libc_fini_array ()
=> 0x12f48 <__libc_fini_array+42>:	ld	ra,24(sp)
0x0000000000012f4a in __libc_fini_array ()
=> 0x12f4a <__libc_fini_array+44>:	ld	s0,16(sp)
0x0000000000012f4c in __libc_fini_array ()
=> 0x12f4c <__libc_fini_array+46>:	ld	s1,8(sp)
0x0000000000012f4e in __libc_fini_array ()
=> 0x12f4e <__libc_fini_array+48>:	addi	sp,sp,32
0x0000000000012f50 in __libc_fini_array ()
=> 0x12f50 <__libc_fini_array+50>:	ret
0x0000000000012a52 in __call_exitprocs ()
=> 0x12a52 <__call_exitprocs+140>:	lw	a4,8(s2)
0x0000000000012a56 in __call_exitprocs ()
=> 0x12a56 <__call_exitprocs+144>:	ld	a5,504(s4)
0x0000000000012a5a in __call_exitprocs ()
=> 0x12a5a <__call_exitprocs+148>:	bne	a4,s8,0x12a62 <__call_exitprocs+156>
0x0000000000012a5e in __call_exitprocs ()
=> 0x12a5e <__call_exitprocs+152>:	beq	a5,s2,0x12a0c <__call_exitprocs+70>
0x0000000000012a0c in __call_exitprocs ()
=> 0x12a0c <__call_exitprocs+70>:	addiw	s0,s0,-1
0x0000000000012a0e in __call_exitprocs ()
=> 0x12a0e <__call_exitprocs+72>:	addi	s1,s1,-8
0x0000000000012a10 in __call_exitprocs ()
=> 0x12a10 <__call_exitprocs+74>:	bne	s0,s3,0x12a00 <__call_exitprocs+58>
0x0000000000012a14 in __call_exitprocs ()
=> 0x12a14 <__call_exitprocs+78>:	ld	ra,72(sp)
0x0000000000012a16 in __call_exitprocs ()
=> 0x12a16 <__call_exitprocs+80>:	ld	s0,64(sp)
0x0000000000012a18 in __call_exitprocs ()
=> 0x12a18 <__call_exitprocs+82>:	ld	s1,56(sp)
0x0000000000012a1a in __call_exitprocs ()
=> 0x12a1a <__call_exitprocs+84>:	ld	s2,48(sp)
0x0000000000012a1c in __call_exitprocs ()
=> 0x12a1c <__call_exitprocs+86>:	ld	s3,40(sp)
0x0000000000012a1e in __call_exitprocs ()
=> 0x12a1e <__call_exitprocs+88>:	ld	s4,32(sp)
0x0000000000012a20 in __call_exitprocs ()
=> 0x12a20 <__call_exitprocs+90>:	ld	s5,24(sp)
0x0000000000012a22 in __call_exitprocs ()
=> 0x12a22 <__call_exitprocs+92>:	ld	s6,16(sp)
0x0000000000012a24 in __call_exitprocs ()
=> 0x12a24 <__call_exitprocs+94>:	ld	s7,8(sp)
0x0000000000012a26 in __call_exitprocs ()
=> 0x12a26 <__call_exitprocs+96>:	ld	s8,0(sp)
0x0000000000012a28 in __call_exitprocs ()
=> 0x12a28 <__call_exitprocs+98>:	addi	sp,sp,80
0x0000000000012a2a in __call_exitprocs ()
=> 0x12a2a <__call_exitprocs+100>:	ret
0x00000000000104ce in exit ()
=> 0x104ce <exit+14>:	ld	a0,1856(gp)
0x00000000000104d2 in exit ()
=> 0x104d2 <exit+18>:	ld	a5,88(a0)
0x00000000000104d4 in exit ()
=> 0x104d4 <exit+20>:	beqz	a5,0x104d8 <exit+24>
0x00000000000104d6 in exit ()
=> 0x104d6 <exit+22>:	jalr	a5
0x0000000000012c9e in _cleanup_r ()
=> 0x12c9e <_cleanup_r>:	lui	a1,0x19
0x0000000000012ca0 in _cleanup_r ()
=> 0x12ca0 <_cleanup_r+2>:	addi	a1,a1,1026
0x0000000000012ca4 in _cleanup_r ()
=> 0x12ca4 <_cleanup_r+6>:	j	0x132fc <_fwalk_reent>
0x00000000000132fc in _fwalk_reent ()
=> 0x132fc <_fwalk_reent>:	addi	sp,sp,-80
0x00000000000132fe in _fwalk_reent ()
=> 0x132fe <_fwalk_reent+2>:	sd	s2,48(sp)
0x0000000000013300 in _fwalk_reent ()
=> 0x13300 <_fwalk_reent+4>:	sd	s3,40(sp)
0x0000000000013302 in _fwalk_reent ()
=> 0x13302 <_fwalk_reent+6>:	sd	s4,32(sp)
0x0000000000013304 in _fwalk_reent ()
=> 0x13304 <_fwalk_reent+8>:	sd	s5,24(sp)
0x0000000000013306 in _fwalk_reent ()
=> 0x13306 <_fwalk_reent+10>:	sd	s6,16(sp)
0x0000000000013308 in _fwalk_reent ()
=> 0x13308 <_fwalk_reent+12>:	sd	s7,8(sp)
0x000000000001330a in _fwalk_reent ()
=> 0x1330a <_fwalk_reent+14>:	sd	s8,0(sp)
0x000000000001330c in _fwalk_reent ()
=> 0x1330c <_fwalk_reent+16>:	sd	ra,72(sp)
0x000000000001330e in _fwalk_reent ()
=> 0x1330e <_fwalk_reent+18>:	sd	s0,64(sp)
0x0000000000013310 in _fwalk_reent ()
=> 0x13310 <_fwalk_reent+20>:	sd	s1,56(sp)
0x0000000000013312 in _fwalk_reent ()
=> 0x13312 <_fwalk_reent+22>:	mv	s8,a0
0x0000000000013314 in _fwalk_reent ()
=> 0x13314 <_fwalk_reent+24>:	mv	s4,a1
0x0000000000013316 in _fwalk_reent ()
=> 0x13316 <_fwalk_reent+26>:	addi	s2,a0,1312
0x000000000001331a in _fwalk_reent ()
=> 0x1331a <_fwalk_reent+30>:	li	s6,0
0x000000000001331c in _fwalk_reent ()
=> 0x1331c <_fwalk_reent+32>:	li	s5,176
0x0000000000013320 in _fwalk_reent ()
=> 0x13320 <_fwalk_reent+36>:	li	s7,1
0x0000000000013322 in _fwalk_reent ()
=> 0x13322 <_fwalk_reent+38>:	li	s3,-1
0x0000000000013324 in _fwalk_reent ()
=> 0x13324 <_fwalk_reent+40>:	lw	a5,8(s2)
0x0000000000013328 in _fwalk_reent ()
=> 0x13328 <_fwalk_reent+44>:	ld	s0,16(s2)
0x000000000001332c in _fwalk_reent ()
=> 0x1332c <_fwalk_reent+48>:	blez	a5,0x13364 <_fwalk_reent+104>
0x0000000000013330 in _fwalk_reent ()
=> 0x13330 <_fwalk_reent+52>:	addiw	s1,a5,-1
0x0000000000013334 in _fwalk_reent ()
=> 0x13334 <_fwalk_reent+56>:	slli	s1,s1,0x20
0x0000000000013336 in _fwalk_reent ()
=> 0x13336 <_fwalk_reent+58>:	srli	s1,s1,0x20
0x0000000000013338 in _fwalk_reent ()
=> 0x13338 <_fwalk_reent+60>:	addi	s1,s1,1
0x000000000001333a in _fwalk_reent ()
=> 0x1333a <_fwalk_reent+62>:	mul	s1,s1,s5
0x000000000001333e in _fwalk_reent ()
=> 0x1333e <_fwalk_reent+66>:	add	s1,s1,s0
0x0000000000013340 in _fwalk_reent ()
=> 0x13340 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000013344 in _fwalk_reent ()
=> 0x13344 <_fwalk_reent+72>:	bgeu	s7,a5,0x1335c <_fwalk_reent+96>
0x0000000000013348 in _fwalk_reent ()
=> 0x13348 <_fwalk_reent+76>:	lh	a5,18(s0)
0x000000000001334c in _fwalk_reent ()
=> 0x1334c <_fwalk_reent+80>:	mv	a1,s0
0x000000000001334e in _fwalk_reent ()
=> 0x1334e <_fwalk_reent+82>:	mv	a0,s8
0x0000000000013350 in _fwalk_reent ()
=> 0x13350 <_fwalk_reent+84>:	beq	a5,s3,0x1335c <_fwalk_reent+96>
0x0000000000013354 in _fwalk_reent ()
=> 0x13354 <_fwalk_reent+88>:	jalr	s4
0x0000000000019402 in _fclose_r ()
=> 0x19402 <_fclose_r>:	beqz	a1,0x1943c <_fclose_r+58>
0x0000000000019404 in _fclose_r ()
=> 0x19404 <_fclose_r+2>:	addi	sp,sp,-32
0x0000000000019406 in _fclose_r ()
=> 0x19406 <_fclose_r+4>:	sd	s0,16(sp)
0x0000000000019408 in _fclose_r ()
=> 0x19408 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001940a in _fclose_r ()
=> 0x1940a <_fclose_r+8>:	mv	s0,a0
0x000000000001940c in _fclose_r ()
=> 0x1940c <_fclose_r+10>:	beqz	a0,0x19412 <_fclose_r+16>
0x000000000001940e in _fclose_r ()
=> 0x1940e <_fclose_r+12>:	lw	a5,80(a0)
0x0000000000019410 in _fclose_r ()
=> 0x19410 <_fclose_r+14>:	beqz	a5,0x1942c <_fclose_r+42>
0x0000000000019412 in _fclose_r ()
=> 0x19412 <_fclose_r+16>:	lh	a5,16(a1)
0x0000000000019416 in _fclose_r ()
=> 0x19416 <_fclose_r+20>:	bnez	a5,0x19422 <_fclose_r+32>
0x0000000000019422 in _fclose_r ()
=> 0x19422 <_fclose_r+32>:	mv	a0,s0
0x0000000000019424 in _fclose_r ()
=> 0x19424 <_fclose_r+34>:	ld	s0,16(sp)
0x0000000000019426 in _fclose_r ()
=> 0x19426 <_fclose_r+36>:	ld	ra,24(sp)
0x0000000000019428 in _fclose_r ()
=> 0x19428 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001942a in _fclose_r ()
=> 0x1942a <_fclose_r+40>:	j	0x19382 <_fclose_r.part.0>
0x0000000000019382 in _fclose_r.part.0 ()
=> 0x19382 <_fclose_r.part.0>:	addi	sp,sp,-32
0x0000000000019384 in _fclose_r.part.0 ()
=> 0x19384 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x0000000000019386 in _fclose_r.part.0 ()
=> 0x19386 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x0000000000019388 in _fclose_r.part.0 ()
=> 0x19388 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001938a in _fclose_r.part.0 ()
=> 0x1938a <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001938c in _fclose_r.part.0 ()
=> 0x1938c <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001938e in _fclose_r.part.0 ()
=> 0x1938e <_fclose_r.part.0+12>:	mv	s1,a0
0x0000000000019390 in _fclose_r.part.0 ()
=> 0x19390 <_fclose_r.part.0+14>:	jal	ra,0x12a88 <__sflush_r>
0x0000000000012a88 in __sflush_r ()
=> 0x12a88 <__sflush_r>:	lh	a5,16(a1)
0x0000000000012a8c in __sflush_r ()
=> 0x12a8c <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000012a8e in __sflush_r ()
=> 0x12a8e <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000012a90 in __sflush_r ()
=> 0x12a90 <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000012a92 in __sflush_r ()
=> 0x12a92 <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000012a94 in __sflush_r ()
=> 0x12a94 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000012a96 in __sflush_r ()
=> 0x12a96 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000012a98 in __sflush_r ()
=> 0x12a98 <__sflush_r+16>:	andi	a3,a5,8
0x0000000000012a9c in __sflush_r ()
=> 0x12a9c <__sflush_r+20>:	mv	s0,a1
0x0000000000012a9e in __sflush_r ()
=> 0x12a9e <__sflush_r+22>:	mv	s3,a0
0x0000000000012aa0 in __sflush_r ()
=> 0x12aa0 <__sflush_r+24>:	bnez	a3,0x12b54 <__sflush_r+204>
0x0000000000012aa2 in __sflush_r ()
=> 0x12aa2 <__sflush_r+26>:	lui	a4,0x1
0x0000000000012aa4 in __sflush_r ()
=> 0x12aa4 <__sflush_r+28>:	addi	a4,a4,-2048
0x0000000000012aa8 in __sflush_r ()
=> 0x12aa8 <__sflush_r+32>:	lw	a3,8(a1)
0x0000000000012aaa in __sflush_r ()
=> 0x12aaa <__sflush_r+34>:	or	a5,a5,a4
0x0000000000012aac in __sflush_r ()
=> 0x12aac <__sflush_r+36>:	sh	a5,16(a1)
0x0000000000012ab0 in __sflush_r ()
=> 0x12ab0 <__sflush_r+40>:	blez	a3,0x12bb0 <__sflush_r+296>
0x0000000000012bb0 in __sflush_r ()
=> 0x12bb0 <__sflush_r+296>:	lw	a4,112(a1)
0x0000000000012bb2 in __sflush_r ()
=> 0x12bb2 <__sflush_r+298>:	bgtz	a4,0x12ab4 <__sflush_r+44>
0x0000000000012bb6 in __sflush_r ()
=> 0x12bb6 <__sflush_r+302>:	j	0x12b44 <__sflush_r+188>
0x0000000000012b44 in __sflush_r ()
=> 0x12b44 <__sflush_r+188>:	li	a0,0
0x0000000000012b46 in __sflush_r ()
=> 0x12b46 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000012b48 in __sflush_r ()
=> 0x12b48 <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000012b4a in __sflush_r ()
=> 0x12b4a <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000012b4c in __sflush_r ()
=> 0x12b4c <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000012b4e in __sflush_r ()
=> 0x12b4e <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000012b50 in __sflush_r ()
=> 0x12b50 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000012b52 in __sflush_r ()
=> 0x12b52 <__sflush_r+202>:	ret
0x0000000000019394 in _fclose_r.part.0 ()
=> 0x19394 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x0000000000019396 in _fclose_r.part.0 ()
=> 0x19396 <_fclose_r.part.0+20>:	mv	s2,a0
0x0000000000019398 in _fclose_r.part.0 ()
=> 0x19398 <_fclose_r.part.0+22>:	beqz	a5,0x193a4 <_fclose_r.part.0+34>
0x000000000001939a in _fclose_r.part.0 ()
=> 0x1939a <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001939c in _fclose_r.part.0 ()
=> 0x1939c <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001939e in _fclose_r.part.0 ()
=> 0x1939e <_fclose_r.part.0+28>:	jalr	a5
0x0000000000016698 in __sclose ()
=> 0x16698 <__sclose>:	lh	a1,18(a1)
0x000000000001669c in __sclose ()
=> 0x1669c <__sclose+4>:	j	0x19346 <_close_r>
0x0000000000019346 in _close_r ()
=> 0x19346 <_close_r>:	addi	sp,sp,-32
0x0000000000019348 in _close_r ()
=> 0x19348 <_close_r+2>:	sd	s0,16(sp)
0x000000000001934a in _close_r ()
=> 0x1934a <_close_r+4>:	sd	s1,8(sp)
0x000000000001934c in _close_r ()
=> 0x1934c <_close_r+6>:	mv	s0,a0
0x000000000001934e in _close_r ()
=> 0x1934e <_close_r+8>:	mv	a0,a1
0x0000000000019350 in _close_r ()
=> 0x19350 <_close_r+10>:	sd	ra,24(sp)
0x0000000000019352 in _close_r ()
=> 0x19352 <_close_r+12>:	sw	zero,1936(gp)
0x0000000000019356 in _close_r ()
=> 0x19356 <_close_r+16>:	jal	ra,0x1b1a6 <_close>
0x000000000001b1a6 in _close ()
=> 0x1b1a6 <_close>:	addi	sp,sp,-16
0x000000000001b1a8 in _close ()
=> 0x1b1a8 <_close+2>:	sd	ra,8(sp)
0x000000000001b1aa in _close ()
=> 0x1b1aa <_close+4>:	sd	s0,0(sp)
0x000000000001b1ac in _close ()
=> 0x1b1ac <_close+6>:	li	a7,57
0x000000000001b1b0 in _close ()
=> 0x1b1b0 <_close+10>:	ecall
0x000000000001b1b4 in _close ()
=> 0x1b1b4 <_close+14>:	mv	s0,a0
0x000000000001b1b6 in _close ()
=> 0x1b1b6 <_close+16>:	bltz	a0,0x1b1c4 <_close+30>
0x000000000001b1ba in _close ()
=> 0x1b1ba <_close+20>:	sext.w	a0,a0
0x000000000001b1bc in _close ()
=> 0x1b1bc <_close+22>:	ld	ra,8(sp)
0x000000000001b1be in _close ()
=> 0x1b1be <_close+24>:	ld	s0,0(sp)
0x000000000001b1c0 in _close ()
=> 0x1b1c0 <_close+26>:	addi	sp,sp,16
0x000000000001b1c2 in _close ()
=> 0x1b1c2 <_close+28>:	ret
0x000000000001935a in _close_r ()
=> 0x1935a <_close_r+20>:	li	a5,-1
0x000000000001935c in _close_r ()
=> 0x1935c <_close_r+22>:	beq	a0,a5,0x1936a <_close_r+36>
0x0000000000019360 in _close_r ()
=> 0x19360 <_close_r+26>:	ld	ra,24(sp)
0x0000000000019362 in _close_r ()
=> 0x19362 <_close_r+28>:	ld	s0,16(sp)
0x0000000000019364 in _close_r ()
=> 0x19364 <_close_r+30>:	ld	s1,8(sp)
0x0000000000019366 in _close_r ()
=> 0x19366 <_close_r+32>:	addi	sp,sp,32
0x0000000000019368 in _close_r ()
=> 0x19368 <_close_r+34>:	ret
0x00000000000193a0 in _fclose_r.part.0 ()
=> 0x193a0 <_fclose_r.part.0+30>:	bltz	a0,0x193ec <_fclose_r.part.0+106>
0x00000000000193a4 in _fclose_r.part.0 ()
=> 0x193a4 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x00000000000193a8 in _fclose_r.part.0 ()
=> 0x193a8 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x00000000000193ac in _fclose_r.part.0 ()
=> 0x193ac <_fclose_r.part.0+42>:	bnez	a5,0x193f8 <_fclose_r.part.0+118>
0x00000000000193ae in _fclose_r.part.0 ()
=> 0x193ae <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x00000000000193b0 in _fclose_r.part.0 ()
=> 0x193b0 <_fclose_r.part.0+46>:	beqz	a1,0x193c4 <_fclose_r.part.0+66>
0x00000000000193c4 in _fclose_r.part.0 ()
=> 0x193c4 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x00000000000193c6 in _fclose_r.part.0 ()
=> 0x193c6 <_fclose_r.part.0+68>:	beqz	a1,0x193d2 <_fclose_r.part.0+80>
0x00000000000193d2 in _fclose_r.part.0 ()
=> 0x193d2 <_fclose_r.part.0+80>:	jal	ra,0x12efe <__sfp_lock_acquire>
0x0000000000012efe in __sfp_lock_acquire ()
=> 0x12efe <__sfp_lock_acquire>:	ret
0x00000000000193d6 in _fclose_r.part.0 ()
=> 0x193d6 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x00000000000193da in _fclose_r.part.0 ()
=> 0x193da <_fclose_r.part.0+88>:	jal	ra,0x12f00 <__sfp_lock_release>
0x0000000000012f00 in __sfp_lock_release ()
=> 0x12f00 <__sfp_lock_release>:	ret
0x00000000000193de in _fclose_r.part.0 ()
=> 0x193de <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x00000000000193e0 in _fclose_r.part.0 ()
=> 0x193e0 <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x00000000000193e2 in _fclose_r.part.0 ()
=> 0x193e2 <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x00000000000193e4 in _fclose_r.part.0 ()
=> 0x193e4 <_fclose_r.part.0+98>:	mv	a0,s2
0x00000000000193e6 in _fclose_r.part.0 ()
=> 0x193e6 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x00000000000193e8 in _fclose_r.part.0 ()
=> 0x193e8 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x00000000000193ea in _fclose_r.part.0 ()
=> 0x193ea <_fclose_r.part.0+104>:	ret
0x0000000000013356 in _fwalk_reent ()
=> 0x13356 <_fwalk_reent+90>:	or	s6,a0,s6
0x000000000001335a in _fwalk_reent ()
=> 0x1335a <_fwalk_reent+94>:	sext.w	s6,s6
0x000000000001335c in _fwalk_reent ()
=> 0x1335c <_fwalk_reent+96>:	addi	s0,s0,176
0x0000000000013360 in _fwalk_reent ()
=> 0x13360 <_fwalk_reent+100>:	bne	s1,s0,0x13340 <_fwalk_reent+68>
0x0000000000013340 in _fwalk_reent ()
=> 0x13340 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000013344 in _fwalk_reent ()
=> 0x13344 <_fwalk_reent+72>:	bgeu	s7,a5,0x1335c <_fwalk_reent+96>
0x0000000000013348 in _fwalk_reent ()
=> 0x13348 <_fwalk_reent+76>:	lh	a5,18(s0)
0x000000000001334c in _fwalk_reent ()
=> 0x1334c <_fwalk_reent+80>:	mv	a1,s0
0x000000000001334e in _fwalk_reent ()
=> 0x1334e <_fwalk_reent+82>:	mv	a0,s8
0x0000000000013350 in _fwalk_reent ()
=> 0x13350 <_fwalk_reent+84>:	beq	a5,s3,0x1335c <_fwalk_reent+96>
0x0000000000013354 in _fwalk_reent ()
=> 0x13354 <_fwalk_reent+88>:	jalr	s4
0x0000000000019402 in _fclose_r ()
=> 0x19402 <_fclose_r>:	beqz	a1,0x1943c <_fclose_r+58>
0x0000000000019404 in _fclose_r ()
=> 0x19404 <_fclose_r+2>:	addi	sp,sp,-32
0x0000000000019406 in _fclose_r ()
=> 0x19406 <_fclose_r+4>:	sd	s0,16(sp)
0x0000000000019408 in _fclose_r ()
=> 0x19408 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001940a in _fclose_r ()
=> 0x1940a <_fclose_r+8>:	mv	s0,a0
0x000000000001940c in _fclose_r ()
=> 0x1940c <_fclose_r+10>:	beqz	a0,0x19412 <_fclose_r+16>
0x000000000001940e in _fclose_r ()
=> 0x1940e <_fclose_r+12>:	lw	a5,80(a0)
0x0000000000019410 in _fclose_r ()
=> 0x19410 <_fclose_r+14>:	beqz	a5,0x1942c <_fclose_r+42>
0x0000000000019412 in _fclose_r ()
=> 0x19412 <_fclose_r+16>:	lh	a5,16(a1)
0x0000000000019416 in _fclose_r ()
=> 0x19416 <_fclose_r+20>:	bnez	a5,0x19422 <_fclose_r+32>
0x0000000000019422 in _fclose_r ()
=> 0x19422 <_fclose_r+32>:	mv	a0,s0
0x0000000000019424 in _fclose_r ()
=> 0x19424 <_fclose_r+34>:	ld	s0,16(sp)
0x0000000000019426 in _fclose_r ()
=> 0x19426 <_fclose_r+36>:	ld	ra,24(sp)
0x0000000000019428 in _fclose_r ()
=> 0x19428 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001942a in _fclose_r ()
=> 0x1942a <_fclose_r+40>:	j	0x19382 <_fclose_r.part.0>
0x0000000000019382 in _fclose_r.part.0 ()
=> 0x19382 <_fclose_r.part.0>:	addi	sp,sp,-32
0x0000000000019384 in _fclose_r.part.0 ()
=> 0x19384 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x0000000000019386 in _fclose_r.part.0 ()
=> 0x19386 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x0000000000019388 in _fclose_r.part.0 ()
=> 0x19388 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001938a in _fclose_r.part.0 ()
=> 0x1938a <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001938c in _fclose_r.part.0 ()
=> 0x1938c <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001938e in _fclose_r.part.0 ()
=> 0x1938e <_fclose_r.part.0+12>:	mv	s1,a0
0x0000000000019390 in _fclose_r.part.0 ()
=> 0x19390 <_fclose_r.part.0+14>:	jal	ra,0x12a88 <__sflush_r>
0x0000000000012a88 in __sflush_r ()
=> 0x12a88 <__sflush_r>:	lh	a5,16(a1)
0x0000000000012a8c in __sflush_r ()
=> 0x12a8c <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000012a8e in __sflush_r ()
=> 0x12a8e <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000012a90 in __sflush_r ()
=> 0x12a90 <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000012a92 in __sflush_r ()
=> 0x12a92 <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000012a94 in __sflush_r ()
=> 0x12a94 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000012a96 in __sflush_r ()
=> 0x12a96 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000012a98 in __sflush_r ()
=> 0x12a98 <__sflush_r+16>:	andi	a3,a5,8
0x0000000000012a9c in __sflush_r ()
=> 0x12a9c <__sflush_r+20>:	mv	s0,a1
0x0000000000012a9e in __sflush_r ()
=> 0x12a9e <__sflush_r+22>:	mv	s3,a0
0x0000000000012aa0 in __sflush_r ()
=> 0x12aa0 <__sflush_r+24>:	bnez	a3,0x12b54 <__sflush_r+204>
0x0000000000012b54 in __sflush_r ()
=> 0x12b54 <__sflush_r+204>:	ld	s2,24(a1)
0x0000000000012b58 in __sflush_r ()
=> 0x12b58 <__sflush_r+208>:	beqz	s2,0x12b44 <__sflush_r+188>
0x0000000000012b5c in __sflush_r ()
=> 0x12b5c <__sflush_r+212>:	ld	s1,0(a1)
0x0000000000012b5e in __sflush_r ()
=> 0x12b5e <__sflush_r+214>:	slli	a4,a5,0x30
0x0000000000012b62 in __sflush_r ()
=> 0x12b62 <__sflush_r+218>:	srli	a4,a4,0x30
0x0000000000012b64 in __sflush_r ()
=> 0x12b64 <__sflush_r+220>:	andi	a4,a4,3
0x0000000000012b66 in __sflush_r ()
=> 0x12b66 <__sflush_r+222>:	sd	s2,0(a1)
0x0000000000012b6a in __sflush_r ()
=> 0x12b6a <__sflush_r+226>:	subw	s1,s1,s2
0x0000000000012b6e in __sflush_r ()
=> 0x12b6e <__sflush_r+230>:	li	a5,0
0x0000000000012b70 in __sflush_r ()
=> 0x12b70 <__sflush_r+232>:	bnez	a4,0x12b74 <__sflush_r+236>
0x0000000000012b74 in __sflush_r ()
=> 0x12b74 <__sflush_r+236>:	sw	a5,12(s0)
0x0000000000012b76 in __sflush_r ()
=> 0x12b76 <__sflush_r+238>:	bgtz	s1,0x12b82 <__sflush_r+250>
0x0000000000012b7a in __sflush_r ()
=> 0x12b7a <__sflush_r+242>:	j	0x12b44 <__sflush_r+188>
0x0000000000012b44 in __sflush_r ()
=> 0x12b44 <__sflush_r+188>:	li	a0,0
0x0000000000012b46 in __sflush_r ()
=> 0x12b46 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000012b48 in __sflush_r ()
=> 0x12b48 <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000012b4a in __sflush_r ()
=> 0x12b4a <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000012b4c in __sflush_r ()
=> 0x12b4c <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000012b4e in __sflush_r ()
=> 0x12b4e <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000012b50 in __sflush_r ()
=> 0x12b50 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000012b52 in __sflush_r ()
=> 0x12b52 <__sflush_r+202>:	ret
0x0000000000019394 in _fclose_r.part.0 ()
=> 0x19394 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x0000000000019396 in _fclose_r.part.0 ()
=> 0x19396 <_fclose_r.part.0+20>:	mv	s2,a0
0x0000000000019398 in _fclose_r.part.0 ()
=> 0x19398 <_fclose_r.part.0+22>:	beqz	a5,0x193a4 <_fclose_r.part.0+34>
0x000000000001939a in _fclose_r.part.0 ()
=> 0x1939a <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001939c in _fclose_r.part.0 ()
=> 0x1939c <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001939e in _fclose_r.part.0 ()
=> 0x1939e <_fclose_r.part.0+28>:	jalr	a5
0x0000000000016698 in __sclose ()
=> 0x16698 <__sclose>:	lh	a1,18(a1)
0x000000000001669c in __sclose ()
=> 0x1669c <__sclose+4>:	j	0x19346 <_close_r>
0x0000000000019346 in _close_r ()
=> 0x19346 <_close_r>:	addi	sp,sp,-32
0x0000000000019348 in _close_r ()
=> 0x19348 <_close_r+2>:	sd	s0,16(sp)
0x000000000001934a in _close_r ()
=> 0x1934a <_close_r+4>:	sd	s1,8(sp)
0x000000000001934c in _close_r ()
=> 0x1934c <_close_r+6>:	mv	s0,a0
0x000000000001934e in _close_r ()
=> 0x1934e <_close_r+8>:	mv	a0,a1
0x0000000000019350 in _close_r ()
=> 0x19350 <_close_r+10>:	sd	ra,24(sp)
0x0000000000019352 in _close_r ()
=> 0x19352 <_close_r+12>:	sw	zero,1936(gp)
0x0000000000019356 in _close_r ()
=> 0x19356 <_close_r+16>:	jal	ra,0x1b1a6 <_close>
0x000000000001b1a6 in _close ()
=> 0x1b1a6 <_close>:	addi	sp,sp,-16
0x000000000001b1a8 in _close ()
=> 0x1b1a8 <_close+2>:	sd	ra,8(sp)
0x000000000001b1aa in _close ()
=> 0x1b1aa <_close+4>:	sd	s0,0(sp)
0x000000000001b1ac in _close ()
=> 0x1b1ac <_close+6>:	li	a7,57
0x000000000001b1b0 in _close ()
=> 0x1b1b0 <_close+10>:	ecall
0x000000000001b1b4 in _close ()
=> 0x1b1b4 <_close+14>:	mv	s0,a0
0x000000000001b1b6 in _close ()
=> 0x1b1b6 <_close+16>:	bltz	a0,0x1b1c4 <_close+30>
0x000000000001b1ba in _close ()
=> 0x1b1ba <_close+20>:	sext.w	a0,a0
0x000000000001b1bc in _close ()
=> 0x1b1bc <_close+22>:	ld	ra,8(sp)
0x000000000001b1be in _close ()
=> 0x1b1be <_close+24>:	ld	s0,0(sp)
0x000000000001b1c0 in _close ()
=> 0x1b1c0 <_close+26>:	addi	sp,sp,16
0x000000000001b1c2 in _close ()
=> 0x1b1c2 <_close+28>:	ret
0x000000000001935a in _close_r ()
=> 0x1935a <_close_r+20>:	li	a5,-1
0x000000000001935c in _close_r ()
=> 0x1935c <_close_r+22>:	beq	a0,a5,0x1936a <_close_r+36>
0x0000000000019360 in _close_r ()
=> 0x19360 <_close_r+26>:	ld	ra,24(sp)
0x0000000000019362 in _close_r ()
=> 0x19362 <_close_r+28>:	ld	s0,16(sp)
0x0000000000019364 in _close_r ()
=> 0x19364 <_close_r+30>:	ld	s1,8(sp)
0x0000000000019366 in _close_r ()
=> 0x19366 <_close_r+32>:	addi	sp,sp,32
0x0000000000019368 in _close_r ()
=> 0x19368 <_close_r+34>:	ret
0x00000000000193a0 in _fclose_r.part.0 ()
=> 0x193a0 <_fclose_r.part.0+30>:	bltz	a0,0x193ec <_fclose_r.part.0+106>
0x00000000000193a4 in _fclose_r.part.0 ()
=> 0x193a4 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x00000000000193a8 in _fclose_r.part.0 ()
=> 0x193a8 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x00000000000193ac in _fclose_r.part.0 ()
=> 0x193ac <_fclose_r.part.0+42>:	bnez	a5,0x193f8 <_fclose_r.part.0+118>
0x00000000000193f8 in _fclose_r.part.0 ()
=> 0x193f8 <_fclose_r.part.0+118>:	ld	a1,24(s0)
0x00000000000193fa in _fclose_r.part.0 ()
=> 0x193fa <_fclose_r.part.0+120>:	mv	a0,s1
0x00000000000193fc in _fclose_r.part.0 ()
=> 0x193fc <_fclose_r.part.0+122>:	jal	ra,0x13028 <_free_r>
0x0000000000013028 in _free_r ()
=> 0x13028 <_free_r>:	beqz	a1,0x13118 <_free_r+240>
0x000000000001302a in _free_r ()
=> 0x1302a <_free_r+2>:	addi	sp,sp,-32
0x000000000001302c in _free_r ()
=> 0x1302c <_free_r+4>:	sd	s0,16(sp)
0x000000000001302e in _free_r ()
=> 0x1302e <_free_r+6>:	sd	s1,8(sp)
0x0000000000013030 in _free_r ()
=> 0x13030 <_free_r+8>:	mv	s0,a1
0x0000000000013032 in _free_r ()
=> 0x13032 <_free_r+10>:	mv	s1,a0
0x0000000000013034 in _free_r ()
=> 0x13034 <_free_r+12>:	sd	ra,24(sp)
0x0000000000013036 in _free_r ()
=> 0x13036 <_free_r+14>:	jal	ra,0x10c26 <__malloc_lock>
0x0000000000010c26 in __malloc_lock ()
=> 0x10c26 <__malloc_lock>:	ret
0x000000000001303a in _free_r ()
=> 0x1303a <_free_r+18>:	ld	a0,-8(s0)
0x000000000001303e in _free_r ()
=> 0x1303e <_free_r+22>:	addi	a4,s0,-16
0x0000000000013042 in _free_r ()
=> 0x13042 <_free_r+26>:	lui	a1,0x1f
0x0000000000013046 in _free_r ()
=> 0x13046 <_free_r+30>:	andi	a5,a0,-2
0x000000000001304a in _free_r ()
=> 0x1304a <_free_r+34>:	add	a2,a4,a5
0x000000000001304e in _free_r ()
=> 0x1304e <_free_r+38>:	addi	a1,a1,-512
0x0000000000013052 in _free_r ()
=> 0x13052 <_free_r+42>:	ld	a3,8(a2)
0x0000000000013054 in _free_r ()
=> 0x13054 <_free_r+44>:	ld	a6,16(a1)
0x0000000000013058 in _free_r ()
=> 0x13058 <_free_r+48>:	andi	a3,a3,-4
0x000000000001305a in _free_r ()
=> 0x1305a <_free_r+50>:	beq	a6,a2,0x1319e <_free_r+374>
0x000000000001319e in _free_r ()
=> 0x1319e <_free_r+374>:	andi	a0,a0,1
0x00000000000131a0 in _free_r ()
=> 0x131a0 <_free_r+376>:	add	a5,a5,a3
0x00000000000131a2 in _free_r ()
=> 0x131a2 <_free_r+378>:	bnez	a0,0x131b4 <_free_r+396>
0x00000000000131a4 in _free_r ()
=> 0x131a4 <_free_r+380>:	ld	a0,-16(s0)
0x00000000000131a8 in _free_r ()
=> 0x131a8 <_free_r+384>:	sub	a4,a4,a0
0x00000000000131aa in _free_r ()
=> 0x131aa <_free_r+386>:	ld	a3,24(a4)
0x00000000000131ac in _free_r ()
=> 0x131ac <_free_r+388>:	ld	a2,16(a4)
0x00000000000131ae in _free_r ()
=> 0x131ae <_free_r+390>:	add	a5,a5,a0
0x00000000000131b0 in _free_r ()
=> 0x131b0 <_free_r+392>:	sd	a3,24(a2)
0x00000000000131b2 in _free_r ()
=> 0x131b2 <_free_r+394>:	sd	a2,16(a3)
0x00000000000131b4 in _free_r ()
=> 0x131b4 <_free_r+396>:	ori	a2,a5,1
0x00000000000131b8 in _free_r ()
=> 0x131b8 <_free_r+400>:	ld	a3,1888(gp)
0x00000000000131bc in _free_r ()
=> 0x131bc <_free_r+404>:	sd	a2,8(a4)
0x00000000000131be in _free_r ()
=> 0x131be <_free_r+406>:	sd	a4,16(a1)
0x00000000000131c0 in _free_r ()
=> 0x131c0 <_free_r+408>:	bltu	a5,a3,0x130da <_free_r+178>
0x00000000000131c4 in _free_r ()
=> 0x131c4 <_free_r+412>:	ld	a1,1920(gp)
0x00000000000131c8 in _free_r ()
=> 0x131c8 <_free_r+416>:	mv	a0,s1
0x00000000000131ca in _free_r ()
=> 0x131ca <_free_r+418>:	jal	ra,0x12f52 <_malloc_trim_r>
0x0000000000012f52 in _malloc_trim_r ()
=> 0x12f52 <_malloc_trim_r>:	addi	sp,sp,-48
0x0000000000012f54 in _malloc_trim_r ()
=> 0x12f54 <_malloc_trim_r+2>:	sd	s3,8(sp)
0x0000000000012f56 in _malloc_trim_r ()
=> 0x12f56 <_malloc_trim_r+4>:	lui	s3,0x1f
0x0000000000012f5a in _malloc_trim_r ()
=> 0x12f5a <_malloc_trim_r+8>:	sd	s0,32(sp)
0x0000000000012f5c in _malloc_trim_r ()
=> 0x12f5c <_malloc_trim_r+10>:	sd	s1,24(sp)
0x0000000000012f5e in _malloc_trim_r ()
=> 0x12f5e <_malloc_trim_r+12>:	sd	s2,16(sp)
0x0000000000012f60 in _malloc_trim_r ()
=> 0x12f60 <_malloc_trim_r+14>:	sd	s4,0(sp)
0x0000000000012f62 in _malloc_trim_r ()
=> 0x12f62 <_malloc_trim_r+16>:	sd	ra,40(sp)
0x0000000000012f64 in _malloc_trim_r ()
=> 0x12f64 <_malloc_trim_r+18>:	mv	s4,a1
0x0000000000012f66 in _malloc_trim_r ()
=> 0x12f66 <_malloc_trim_r+20>:	mv	s2,a0
0x0000000000012f68 in _malloc_trim_r ()
=> 0x12f68 <_malloc_trim_r+22>:	addi	s3,s3,-512
0x0000000000012f6c in _malloc_trim_r ()
=> 0x12f6c <_malloc_trim_r+26>:	jal	ra,0x10c26 <__malloc_lock>
0x0000000000010c26 in __malloc_lock ()
=> 0x10c26 <__malloc_lock>:	ret
0x0000000000012f70 in _malloc_trim_r ()
=> 0x12f70 <_malloc_trim_r+30>:	ld	a4,16(s3)
0x0000000000012f74 in _malloc_trim_r ()
=> 0x12f74 <_malloc_trim_r+34>:	lui	a5,0x1
0x0000000000012f76 in _malloc_trim_r ()
=> 0x12f76 <_malloc_trim_r+36>:	addi	s0,a5,-33
0x0000000000012f7a in _malloc_trim_r ()
=> 0x12f7a <_malloc_trim_r+40>:	ld	s1,8(a4)
0x0000000000012f7c in _malloc_trim_r ()
=> 0x12f7c <_malloc_trim_r+42>:	sub	s0,s0,s4
0x0000000000012f80 in _malloc_trim_r ()
=> 0x12f80 <_malloc_trim_r+46>:	andi	s1,s1,-4
0x0000000000012f82 in _malloc_trim_r ()
=> 0x12f82 <_malloc_trim_r+48>:	add	s0,s0,s1
0x0000000000012f84 in _malloc_trim_r ()
=> 0x12f84 <_malloc_trim_r+50>:	srli	s0,s0,0xc
0x0000000000012f86 in _malloc_trim_r ()
=> 0x12f86 <_malloc_trim_r+52>:	addi	s0,s0,-1
0x0000000000012f88 in _malloc_trim_r ()
=> 0x12f88 <_malloc_trim_r+54>:	slli	s0,s0,0xc
0x0000000000012f8a in _malloc_trim_r ()
=> 0x12f8a <_malloc_trim_r+56>:	blt	s0,a5,0x12fa0 <_malloc_trim_r+78>
0x0000000000012f8e in _malloc_trim_r ()
=> 0x12f8e <_malloc_trim_r+60>:	li	a1,0
0x0000000000012f90 in _malloc_trim_r ()
=> 0x12f90 <_malloc_trim_r+62>:	mv	a0,s2
0x0000000000012f92 in _malloc_trim_r ()
=> 0x12f92 <_malloc_trim_r+64>:	jal	ra,0x10c78 <_sbrk_r>
0x0000000000010c78 in _sbrk_r ()
=> 0x10c78 <_sbrk_r>:	addi	sp,sp,-32
0x0000000000010c7a in _sbrk_r ()
=> 0x10c7a <_sbrk_r+2>:	sd	s0,16(sp)
0x0000000000010c7c in _sbrk_r ()
=> 0x10c7c <_sbrk_r+4>:	sd	s1,8(sp)
0x0000000000010c7e in _sbrk_r ()
=> 0x10c7e <_sbrk_r+6>:	mv	s0,a0
0x0000000000010c80 in _sbrk_r ()
=> 0x10c80 <_sbrk_r+8>:	mv	a0,a1
0x0000000000010c82 in _sbrk_r ()
=> 0x10c82 <_sbrk_r+10>:	sd	ra,24(sp)
0x0000000000010c84 in _sbrk_r ()
=> 0x10c84 <_sbrk_r+12>:	sw	zero,1936(gp)
0x0000000000010c88 in _sbrk_r ()
=> 0x10c88 <_sbrk_r+16>:	jal	ra,0x1b2ca <_sbrk>
0x000000000001b2ca in _sbrk ()
=> 0x1b2ca <_sbrk>:	ld	a4,1944(gp)
0x000000000001b2ce in _sbrk ()
=> 0x1b2ce <_sbrk+4>:	addi	sp,sp,-16
0x000000000001b2d0 in _sbrk ()
=> 0x1b2d0 <_sbrk+6>:	sd	ra,8(sp)
0x000000000001b2d2 in _sbrk ()
=> 0x1b2d2 <_sbrk+8>:	mv	a5,a0
0x000000000001b2d4 in _sbrk ()
=> 0x1b2d4 <_sbrk+10>:	bnez	a4,0x1b2ec <_sbrk+34>
0x000000000001b2ec in _sbrk ()
=> 0x1b2ec <_sbrk+34>:	li	a7,214
0x000000000001b2f0 in _sbrk ()
=> 0x1b2f0 <_sbrk+38>:	add	a0,a5,a4
0x000000000001b2f4 in _sbrk ()
=> 0x1b2f4 <_sbrk+42>:	ecall
0x000000000001b2f8 in _sbrk ()
=> 0x1b2f8 <_sbrk+46>:	ld	a4,1944(gp)
0x000000000001b2fc in _sbrk ()
=> 0x1b2fc <_sbrk+50>:	add	a5,a5,a4
0x000000000001b2fe in _sbrk ()
=> 0x1b2fe <_sbrk+52>:	bne	a0,a5,0x1b30e <_sbrk+68>
0x000000000001b302 in _sbrk ()
=> 0x1b302 <_sbrk+56>:	ld	ra,8(sp)
0x000000000001b304 in _sbrk ()
=> 0x1b304 <_sbrk+58>:	sd	a0,1944(gp)
0x000000000001b308 in _sbrk ()
=> 0x1b308 <_sbrk+62>:	mv	a0,a4
0x000000000001b30a in _sbrk ()
=> 0x1b30a <_sbrk+64>:	addi	sp,sp,16
0x000000000001b30c in _sbrk ()
=> 0x1b30c <_sbrk+66>:	ret
0x0000000000010c8c in _sbrk_r ()
=> 0x10c8c <_sbrk_r+20>:	li	a5,-1
0x0000000000010c8e in _sbrk_r ()
=> 0x10c8e <_sbrk_r+22>:	beq	a0,a5,0x10c9c <_sbrk_r+36>
0x0000000000010c92 in _sbrk_r ()
=> 0x10c92 <_sbrk_r+26>:	ld	ra,24(sp)
0x0000000000010c94 in _sbrk_r ()
=> 0x10c94 <_sbrk_r+28>:	ld	s0,16(sp)
0x0000000000010c96 in _sbrk_r ()
=> 0x10c96 <_sbrk_r+30>:	ld	s1,8(sp)
0x0000000000010c98 in _sbrk_r ()
=> 0x10c98 <_sbrk_r+32>:	addi	sp,sp,32
0x0000000000010c9a in _sbrk_r ()
=> 0x10c9a <_sbrk_r+34>:	ret
0x0000000000012f96 in _malloc_trim_r ()
=> 0x12f96 <_malloc_trim_r+68>:	ld	a5,16(s3)
0x0000000000012f9a in _malloc_trim_r ()
=> 0x12f9a <_malloc_trim_r+72>:	add	a5,a5,s1
0x0000000000012f9c in _malloc_trim_r ()
=> 0x12f9c <_malloc_trim_r+74>:	beq	a0,a5,0x12fb8 <_malloc_trim_r+102>
0x0000000000012fb8 in _malloc_trim_r ()
=> 0x12fb8 <_malloc_trim_r+102>:	neg	a1,s0
0x0000000000012fbc in _malloc_trim_r ()
=> 0x12fbc <_malloc_trim_r+106>:	mv	a0,s2
0x0000000000012fbe in _malloc_trim_r ()
=> 0x12fbe <_malloc_trim_r+108>:	jal	ra,0x10c78 <_sbrk_r>
0x0000000000010c78 in _sbrk_r ()
=> 0x10c78 <_sbrk_r>:	addi	sp,sp,-32
0x0000000000010c7a in _sbrk_r ()
=> 0x10c7a <_sbrk_r+2>:	sd	s0,16(sp)
0x0000000000010c7c in _sbrk_r ()
=> 0x10c7c <_sbrk_r+4>:	sd	s1,8(sp)
0x0000000000010c7e in _sbrk_r ()
=> 0x10c7e <_sbrk_r+6>:	mv	s0,a0
0x0000000000010c80 in _sbrk_r ()
=> 0x10c80 <_sbrk_r+8>:	mv	a0,a1
0x0000000000010c82 in _sbrk_r ()
=> 0x10c82 <_sbrk_r+10>:	sd	ra,24(sp)
0x0000000000010c84 in _sbrk_r ()
=> 0x10c84 <_sbrk_r+12>:	sw	zero,1936(gp)
0x0000000000010c88 in _sbrk_r ()
=> 0x10c88 <_sbrk_r+16>:	jal	ra,0x1b2ca <_sbrk>
0x000000000001b2ca in _sbrk ()
=> 0x1b2ca <_sbrk>:	ld	a4,1944(gp)
0x000000000001b2ce in _sbrk ()
=> 0x1b2ce <_sbrk+4>:	addi	sp,sp,-16
0x000000000001b2d0 in _sbrk ()
=> 0x1b2d0 <_sbrk+6>:	sd	ra,8(sp)
0x000000000001b2d2 in _sbrk ()
=> 0x1b2d2 <_sbrk+8>:	mv	a5,a0
0x000000000001b2d4 in _sbrk ()
=> 0x1b2d4 <_sbrk+10>:	bnez	a4,0x1b2ec <_sbrk+34>
0x000000000001b2ec in _sbrk ()
=> 0x1b2ec <_sbrk+34>:	li	a7,214
0x000000000001b2f0 in _sbrk ()
=> 0x1b2f0 <_sbrk+38>:	add	a0,a5,a4
0x000000000001b2f4 in _sbrk ()
=> 0x1b2f4 <_sbrk+42>:	ecall
0x000000000001b2f8 in _sbrk ()
=> 0x1b2f8 <_sbrk+46>:	ld	a4,1944(gp)
0x000000000001b2fc in _sbrk ()
=> 0x1b2fc <_sbrk+50>:	add	a5,a5,a4
0x000000000001b2fe in _sbrk ()
=> 0x1b2fe <_sbrk+52>:	bne	a0,a5,0x1b30e <_sbrk+68>
0x000000000001b302 in _sbrk ()
=> 0x1b302 <_sbrk+56>:	ld	ra,8(sp)
0x000000000001b304 in _sbrk ()
=> 0x1b304 <_sbrk+58>:	sd	a0,1944(gp)
0x000000000001b308 in _sbrk ()
=> 0x1b308 <_sbrk+62>:	mv	a0,a4
0x000000000001b30a in _sbrk ()
=> 0x1b30a <_sbrk+64>:	addi	sp,sp,16
0x000000000001b30c in _sbrk ()
=> 0x1b30c <_sbrk+66>:	ret
0x0000000000010c8c in _sbrk_r ()
=> 0x10c8c <_sbrk_r+20>:	li	a5,-1
0x0000000000010c8e in _sbrk_r ()
=> 0x10c8e <_sbrk_r+22>:	beq	a0,a5,0x10c9c <_sbrk_r+36>
0x0000000000010c92 in _sbrk_r ()
=> 0x10c92 <_sbrk_r+26>:	ld	ra,24(sp)
0x0000000000010c94 in _sbrk_r ()
=> 0x10c94 <_sbrk_r+28>:	ld	s0,16(sp)
0x0000000000010c96 in _sbrk_r ()
=> 0x10c96 <_sbrk_r+30>:	ld	s1,8(sp)
0x0000000000010c98 in _sbrk_r ()
=> 0x10c98 <_sbrk_r+32>:	addi	sp,sp,32
0x0000000000010c9a in _sbrk_r ()
=> 0x10c9a <_sbrk_r+34>:	ret
0x0000000000012fc2 in _malloc_trim_r ()
=> 0x12fc2 <_malloc_trim_r+112>:	li	a5,-1
0x0000000000012fc4 in _malloc_trim_r ()
=> 0x12fc4 <_malloc_trim_r+114>:	beq	a0,a5,0x12ffc <_malloc_trim_r+170>
0x0000000000012fc8 in _malloc_trim_r ()
=> 0x12fc8 <_malloc_trim_r+118>:	lui	a5,0x20
0x0000000000012fcc in _malloc_trim_r ()
=> 0x12fcc <_malloc_trim_r+122>:	addi	a5,a5,-1920
0x0000000000012fd0 in _malloc_trim_r ()
=> 0x12fd0 <_malloc_trim_r+126>:	lw	a4,0(a5)
0x0000000000012fd2 in _malloc_trim_r ()
=> 0x12fd2 <_malloc_trim_r+128>:	ld	a3,16(s3)
0x0000000000012fd6 in _malloc_trim_r ()
=> 0x12fd6 <_malloc_trim_r+132>:	sub	s1,s1,s0
0x0000000000012fd8 in _malloc_trim_r ()
=> 0x12fd8 <_malloc_trim_r+134>:	ori	s1,s1,1
0x0000000000012fdc in _malloc_trim_r ()
=> 0x12fdc <_malloc_trim_r+138>:	subw	s0,a4,s0
0x0000000000012fe0 in _malloc_trim_r ()
=> 0x12fe0 <_malloc_trim_r+142>:	mv	a0,s2
0x0000000000012fe2 in _malloc_trim_r ()
=> 0x12fe2 <_malloc_trim_r+144>:	sd	s1,8(a3)
0x0000000000012fe4 in _malloc_trim_r ()
=> 0x12fe4 <_malloc_trim_r+146>:	sw	s0,0(a5)
0x0000000000012fe6 in _malloc_trim_r ()
=> 0x12fe6 <_malloc_trim_r+148>:	jal	ra,0x10c28 <__malloc_unlock>
0x0000000000010c28 in __malloc_unlock ()
=> 0x10c28 <__malloc_unlock>:	ret
0x0000000000012fea in _malloc_trim_r ()
=> 0x12fea <_malloc_trim_r+152>:	ld	ra,40(sp)
0x0000000000012fec in _malloc_trim_r ()
=> 0x12fec <_malloc_trim_r+154>:	ld	s0,32(sp)
0x0000000000012fee in _malloc_trim_r ()
=> 0x12fee <_malloc_trim_r+156>:	ld	s1,24(sp)
0x0000000000012ff0 in _malloc_trim_r ()
=> 0x12ff0 <_malloc_trim_r+158>:	ld	s2,16(sp)
0x0000000000012ff2 in _malloc_trim_r ()
=> 0x12ff2 <_malloc_trim_r+160>:	ld	s3,8(sp)
0x0000000000012ff4 in _malloc_trim_r ()
=> 0x12ff4 <_malloc_trim_r+162>:	ld	s4,0(sp)
0x0000000000012ff6 in _malloc_trim_r ()
=> 0x12ff6 <_malloc_trim_r+164>:	li	a0,1
0x0000000000012ff8 in _malloc_trim_r ()
=> 0x12ff8 <_malloc_trim_r+166>:	addi	sp,sp,48
0x0000000000012ffa in _malloc_trim_r ()
=> 0x12ffa <_malloc_trim_r+168>:	ret
0x00000000000131ce in _free_r ()
=> 0x131ce <_free_r+422>:	j	0x130da <_free_r+178>
0x00000000000130da in _free_r ()
=> 0x130da <_free_r+178>:	ld	s0,16(sp)
0x00000000000130dc in _free_r ()
=> 0x130dc <_free_r+180>:	ld	ra,24(sp)
0x00000000000130de in _free_r ()
=> 0x130de <_free_r+182>:	mv	a0,s1
0x00000000000130e0 in _free_r ()
=> 0x130e0 <_free_r+184>:	ld	s1,8(sp)
0x00000000000130e2 in _free_r ()
=> 0x130e2 <_free_r+186>:	addi	sp,sp,32
0x00000000000130e4 in _free_r ()
=> 0x130e4 <_free_r+188>:	j	0x10c28 <__malloc_unlock>
0x0000000000010c28 in __malloc_unlock ()
=> 0x10c28 <__malloc_unlock>:	ret
0x0000000000019400 in _fclose_r.part.0 ()
=> 0x19400 <_fclose_r.part.0+126>:	j	0x193ae <_fclose_r.part.0+44>
0x00000000000193ae in _fclose_r.part.0 ()
=> 0x193ae <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x00000000000193b0 in _fclose_r.part.0 ()
=> 0x193b0 <_fclose_r.part.0+46>:	beqz	a1,0x193c4 <_fclose_r.part.0+66>
0x00000000000193c4 in _fclose_r.part.0 ()
=> 0x193c4 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x00000000000193c6 in _fclose_r.part.0 ()
=> 0x193c6 <_fclose_r.part.0+68>:	beqz	a1,0x193d2 <_fclose_r.part.0+80>
0x00000000000193d2 in _fclose_r.part.0 ()
=> 0x193d2 <_fclose_r.part.0+80>:	jal	ra,0x12efe <__sfp_lock_acquire>
0x0000000000012efe in __sfp_lock_acquire ()
=> 0x12efe <__sfp_lock_acquire>:	ret
0x00000000000193d6 in _fclose_r.part.0 ()
=> 0x193d6 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x00000000000193da in _fclose_r.part.0 ()
=> 0x193da <_fclose_r.part.0+88>:	jal	ra,0x12f00 <__sfp_lock_release>
0x0000000000012f00 in __sfp_lock_release ()
=> 0x12f00 <__sfp_lock_release>:	ret
0x00000000000193de in _fclose_r.part.0 ()
=> 0x193de <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x00000000000193e0 in _fclose_r.part.0 ()
=> 0x193e0 <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x00000000000193e2 in _fclose_r.part.0 ()
=> 0x193e2 <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x00000000000193e4 in _fclose_r.part.0 ()
=> 0x193e4 <_fclose_r.part.0+98>:	mv	a0,s2
0x00000000000193e6 in _fclose_r.part.0 ()
=> 0x193e6 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x00000000000193e8 in _fclose_r.part.0 ()
=> 0x193e8 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x00000000000193ea in _fclose_r.part.0 ()
=> 0x193ea <_fclose_r.part.0+104>:	ret
0x0000000000013356 in _fwalk_reent ()
=> 0x13356 <_fwalk_reent+90>:	or	s6,a0,s6
0x000000000001335a in _fwalk_reent ()
=> 0x1335a <_fwalk_reent+94>:	sext.w	s6,s6
0x000000000001335c in _fwalk_reent ()
=> 0x1335c <_fwalk_reent+96>:	addi	s0,s0,176
0x0000000000013360 in _fwalk_reent ()
=> 0x13360 <_fwalk_reent+100>:	bne	s1,s0,0x13340 <_fwalk_reent+68>
0x0000000000013340 in _fwalk_reent ()
=> 0x13340 <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000013344 in _fwalk_reent ()
=> 0x13344 <_fwalk_reent+72>:	bgeu	s7,a5,0x1335c <_fwalk_reent+96>
0x0000000000013348 in _fwalk_reent ()
=> 0x13348 <_fwalk_reent+76>:	lh	a5,18(s0)
0x000000000001334c in _fwalk_reent ()
=> 0x1334c <_fwalk_reent+80>:	mv	a1,s0
0x000000000001334e in _fwalk_reent ()
=> 0x1334e <_fwalk_reent+82>:	mv	a0,s8
0x0000000000013350 in _fwalk_reent ()
=> 0x13350 <_fwalk_reent+84>:	beq	a5,s3,0x1335c <_fwalk_reent+96>
0x0000000000013354 in _fwalk_reent ()
=> 0x13354 <_fwalk_reent+88>:	jalr	s4
0x0000000000019402 in _fclose_r ()
=> 0x19402 <_fclose_r>:	beqz	a1,0x1943c <_fclose_r+58>
0x0000000000019404 in _fclose_r ()
=> 0x19404 <_fclose_r+2>:	addi	sp,sp,-32
0x0000000000019406 in _fclose_r ()
=> 0x19406 <_fclose_r+4>:	sd	s0,16(sp)
0x0000000000019408 in _fclose_r ()
=> 0x19408 <_fclose_r+6>:	sd	ra,24(sp)
0x000000000001940a in _fclose_r ()
=> 0x1940a <_fclose_r+8>:	mv	s0,a0
0x000000000001940c in _fclose_r ()
=> 0x1940c <_fclose_r+10>:	beqz	a0,0x19412 <_fclose_r+16>
0x000000000001940e in _fclose_r ()
=> 0x1940e <_fclose_r+12>:	lw	a5,80(a0)
0x0000000000019410 in _fclose_r ()
=> 0x19410 <_fclose_r+14>:	beqz	a5,0x1942c <_fclose_r+42>
0x0000000000019412 in _fclose_r ()
=> 0x19412 <_fclose_r+16>:	lh	a5,16(a1)
0x0000000000019416 in _fclose_r ()
=> 0x19416 <_fclose_r+20>:	bnez	a5,0x19422 <_fclose_r+32>
0x0000000000019422 in _fclose_r ()
=> 0x19422 <_fclose_r+32>:	mv	a0,s0
0x0000000000019424 in _fclose_r ()
=> 0x19424 <_fclose_r+34>:	ld	s0,16(sp)
0x0000000000019426 in _fclose_r ()
=> 0x19426 <_fclose_r+36>:	ld	ra,24(sp)
0x0000000000019428 in _fclose_r ()
=> 0x19428 <_fclose_r+38>:	addi	sp,sp,32
0x000000000001942a in _fclose_r ()
=> 0x1942a <_fclose_r+40>:	j	0x19382 <_fclose_r.part.0>
0x0000000000019382 in _fclose_r.part.0 ()
=> 0x19382 <_fclose_r.part.0>:	addi	sp,sp,-32
0x0000000000019384 in _fclose_r.part.0 ()
=> 0x19384 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x0000000000019386 in _fclose_r.part.0 ()
=> 0x19386 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x0000000000019388 in _fclose_r.part.0 ()
=> 0x19388 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x000000000001938a in _fclose_r.part.0 ()
=> 0x1938a <_fclose_r.part.0+8>:	mv	s0,a1
0x000000000001938c in _fclose_r.part.0 ()
=> 0x1938c <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001938e in _fclose_r.part.0 ()
=> 0x1938e <_fclose_r.part.0+12>:	mv	s1,a0
0x0000000000019390 in _fclose_r.part.0 ()
=> 0x19390 <_fclose_r.part.0+14>:	jal	ra,0x12a88 <__sflush_r>
0x0000000000012a88 in __sflush_r ()
=> 0x12a88 <__sflush_r>:	lh	a5,16(a1)
0x0000000000012a8c in __sflush_r ()
=> 0x12a8c <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000012a8e in __sflush_r ()
=> 0x12a8e <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000012a90 in __sflush_r ()
=> 0x12a90 <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000012a92 in __sflush_r ()
=> 0x12a92 <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000012a94 in __sflush_r ()
=> 0x12a94 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000012a96 in __sflush_r ()
=> 0x12a96 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000012a98 in __sflush_r ()
=> 0x12a98 <__sflush_r+16>:	andi	a3,a5,8
0x0000000000012a9c in __sflush_r ()
=> 0x12a9c <__sflush_r+20>:	mv	s0,a1
0x0000000000012a9e in __sflush_r ()
=> 0x12a9e <__sflush_r+22>:	mv	s3,a0
0x0000000000012aa0 in __sflush_r ()
=> 0x12aa0 <__sflush_r+24>:	bnez	a3,0x12b54 <__sflush_r+204>
0x0000000000012aa2 in __sflush_r ()
=> 0x12aa2 <__sflush_r+26>:	lui	a4,0x1
0x0000000000012aa4 in __sflush_r ()
=> 0x12aa4 <__sflush_r+28>:	addi	a4,a4,-2048
0x0000000000012aa8 in __sflush_r ()
=> 0x12aa8 <__sflush_r+32>:	lw	a3,8(a1)
0x0000000000012aaa in __sflush_r ()
=> 0x12aaa <__sflush_r+34>:	or	a5,a5,a4
0x0000000000012aac in __sflush_r ()
=> 0x12aac <__sflush_r+36>:	sh	a5,16(a1)
0x0000000000012ab0 in __sflush_r ()
=> 0x12ab0 <__sflush_r+40>:	blez	a3,0x12bb0 <__sflush_r+296>
0x0000000000012bb0 in __sflush_r ()
=> 0x12bb0 <__sflush_r+296>:	lw	a4,112(a1)
0x0000000000012bb2 in __sflush_r ()
=> 0x12bb2 <__sflush_r+298>:	bgtz	a4,0x12ab4 <__sflush_r+44>
0x0000000000012bb6 in __sflush_r ()
=> 0x12bb6 <__sflush_r+302>:	j	0x12b44 <__sflush_r+188>
0x0000000000012b44 in __sflush_r ()
=> 0x12b44 <__sflush_r+188>:	li	a0,0
0x0000000000012b46 in __sflush_r ()
=> 0x12b46 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000012b48 in __sflush_r ()
=> 0x12b48 <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000012b4a in __sflush_r ()
=> 0x12b4a <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000012b4c in __sflush_r ()
=> 0x12b4c <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000012b4e in __sflush_r ()
=> 0x12b4e <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000012b50 in __sflush_r ()
=> 0x12b50 <__sflush_r+200>:	addi	sp,sp,48
0x0000000000012b52 in __sflush_r ()
=> 0x12b52 <__sflush_r+202>:	ret
0x0000000000019394 in _fclose_r.part.0 ()
=> 0x19394 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x0000000000019396 in _fclose_r.part.0 ()
=> 0x19396 <_fclose_r.part.0+20>:	mv	s2,a0
0x0000000000019398 in _fclose_r.part.0 ()
=> 0x19398 <_fclose_r.part.0+22>:	beqz	a5,0x193a4 <_fclose_r.part.0+34>
0x000000000001939a in _fclose_r.part.0 ()
=> 0x1939a <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x000000000001939c in _fclose_r.part.0 ()
=> 0x1939c <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001939e in _fclose_r.part.0 ()
=> 0x1939e <_fclose_r.part.0+28>:	jalr	a5
0x0000000000016698 in __sclose ()
=> 0x16698 <__sclose>:	lh	a1,18(a1)
0x000000000001669c in __sclose ()
=> 0x1669c <__sclose+4>:	j	0x19346 <_close_r>
0x0000000000019346 in _close_r ()
=> 0x19346 <_close_r>:	addi	sp,sp,-32
0x0000000000019348 in _close_r ()
=> 0x19348 <_close_r+2>:	sd	s0,16(sp)
0x000000000001934a in _close_r ()
=> 0x1934a <_close_r+4>:	sd	s1,8(sp)
0x000000000001934c in _close_r ()
=> 0x1934c <_close_r+6>:	mv	s0,a0
0x000000000001934e in _close_r ()
=> 0x1934e <_close_r+8>:	mv	a0,a1
0x0000000000019350 in _close_r ()
=> 0x19350 <_close_r+10>:	sd	ra,24(sp)
0x0000000000019352 in _close_r ()
=> 0x19352 <_close_r+12>:	sw	zero,1936(gp)
0x0000000000019356 in _close_r ()
=> 0x19356 <_close_r+16>:	jal	ra,0x1b1a6 <_close>
0x000000000001b1a6 in _close ()
=> 0x1b1a6 <_close>:	addi	sp,sp,-16
0x000000000001b1a8 in _close ()
=> 0x1b1a8 <_close+2>:	sd	ra,8(sp)
0x000000000001b1aa in _close ()
=> 0x1b1aa <_close+4>:	sd	s0,0(sp)
0x000000000001b1ac in _close ()
=> 0x1b1ac <_close+6>:	li	a7,57
0x000000000001b1b0 in _close ()
=> 0x1b1b0 <_close+10>:	ecall
0x000000000001b1b4 in _close ()
=> 0x1b1b4 <_close+14>:	mv	s0,a0
0x000000000001b1b6 in _close ()
=> 0x1b1b6 <_close+16>:	bltz	a0,0x1b1c4 <_close+30>
0x000000000001b1ba in _close ()
=> 0x1b1ba <_close+20>:	sext.w	a0,a0
0x000000000001b1bc in _close ()
=> 0x1b1bc <_close+22>:	ld	ra,8(sp)
0x000000000001b1be in _close ()
=> 0x1b1be <_close+24>:	ld	s0,0(sp)
0x000000000001b1c0 in _close ()
=> 0x1b1c0 <_close+26>:	addi	sp,sp,16
0x000000000001b1c2 in _close ()
=> 0x1b1c2 <_close+28>:	ret
0x000000000001935a in _close_r ()
=> 0x1935a <_close_r+20>:	li	a5,-1
0x000000000001935c in _close_r ()
=> 0x1935c <_close_r+22>:	beq	a0,a5,0x1936a <_close_r+36>
0x0000000000019360 in _close_r ()
=> 0x19360 <_close_r+26>:	ld	ra,24(sp)
0x0000000000019362 in _close_r ()
=> 0x19362 <_close_r+28>:	ld	s0,16(sp)
0x0000000000019364 in _close_r ()
=> 0x19364 <_close_r+30>:	ld	s1,8(sp)
0x0000000000019366 in _close_r ()
=> 0x19366 <_close_r+32>:	addi	sp,sp,32
0x0000000000019368 in _close_r ()
=> 0x19368 <_close_r+34>:	ret
0x00000000000193a0 in _fclose_r.part.0 ()
=> 0x193a0 <_fclose_r.part.0+30>:	bltz	a0,0x193ec <_fclose_r.part.0+106>
0x00000000000193a4 in _fclose_r.part.0 ()
=> 0x193a4 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x00000000000193a8 in _fclose_r.part.0 ()
=> 0x193a8 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x00000000000193ac in _fclose_r.part.0 ()
=> 0x193ac <_fclose_r.part.0+42>:	bnez	a5,0x193f8 <_fclose_r.part.0+118>
0x00000000000193ae in _fclose_r.part.0 ()
=> 0x193ae <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x00000000000193b0 in _fclose_r.part.0 ()
=> 0x193b0 <_fclose_r.part.0+46>:	beqz	a1,0x193c4 <_fclose_r.part.0+66>
0x00000000000193c4 in _fclose_r.part.0 ()
=> 0x193c4 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x00000000000193c6 in _fclose_r.part.0 ()
=> 0x193c6 <_fclose_r.part.0+68>:	beqz	a1,0x193d2 <_fclose_r.part.0+80>
0x00000000000193d2 in _fclose_r.part.0 ()
=> 0x193d2 <_fclose_r.part.0+80>:	jal	ra,0x12efe <__sfp_lock_acquire>
0x0000000000012efe in __sfp_lock_acquire ()
=> 0x12efe <__sfp_lock_acquire>:	ret
0x00000000000193d6 in _fclose_r.part.0 ()
=> 0x193d6 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x00000000000193da in _fclose_r.part.0 ()
=> 0x193da <_fclose_r.part.0+88>:	jal	ra,0x12f00 <__sfp_lock_release>
0x0000000000012f00 in __sfp_lock_release ()
=> 0x12f00 <__sfp_lock_release>:	ret
0x00000000000193de in _fclose_r.part.0 ()
=> 0x193de <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x00000000000193e0 in _fclose_r.part.0 ()
=> 0x193e0 <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x00000000000193e2 in _fclose_r.part.0 ()
=> 0x193e2 <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x00000000000193e4 in _fclose_r.part.0 ()
=> 0x193e4 <_fclose_r.part.0+98>:	mv	a0,s2
0x00000000000193e6 in _fclose_r.part.0 ()
=> 0x193e6 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x00000000000193e8 in _fclose_r.part.0 ()
=> 0x193e8 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x00000000000193ea in _fclose_r.part.0 ()
=> 0x193ea <_fclose_r.part.0+104>:	ret
0x0000000000013356 in _fwalk_reent ()
=> 0x13356 <_fwalk_reent+90>:	or	s6,a0,s6
0x000000000001335a in _fwalk_reent ()
=> 0x1335a <_fwalk_reent+94>:	sext.w	s6,s6
0x000000000001335c in _fwalk_reent ()
=> 0x1335c <_fwalk_reent+96>:	addi	s0,s0,176
0x0000000000013360 in _fwalk_reent ()
=> 0x13360 <_fwalk_reent+100>:	bne	s1,s0,0x13340 <_fwalk_reent+68>
0x0000000000013364 in _fwalk_reent ()
=> 0x13364 <_fwalk_reent+104>:	ld	s2,0(s2)
0x0000000000013368 in _fwalk_reent ()
=> 0x13368 <_fwalk_reent+108>:	bnez	s2,0x13324 <_fwalk_reent+40>
0x000000000001336c in _fwalk_reent ()
=> 0x1336c <_fwalk_reent+112>:	ld	ra,72(sp)
0x000000000001336e in _fwalk_reent ()
=> 0x1336e <_fwalk_reent+114>:	ld	s0,64(sp)
0x0000000000013370 in _fwalk_reent ()
=> 0x13370 <_fwalk_reent+116>:	ld	s1,56(sp)
0x0000000000013372 in _fwalk_reent ()
=> 0x13372 <_fwalk_reent+118>:	ld	s2,48(sp)
0x0000000000013374 in _fwalk_reent ()
=> 0x13374 <_fwalk_reent+120>:	ld	s3,40(sp)
0x0000000000013376 in _fwalk_reent ()
=> 0x13376 <_fwalk_reent+122>:	ld	s4,32(sp)
0x0000000000013378 in _fwalk_reent ()
=> 0x13378 <_fwalk_reent+124>:	ld	s5,24(sp)
0x000000000001337a in _fwalk_reent ()
=> 0x1337a <_fwalk_reent+126>:	ld	s7,8(sp)
0x000000000001337c in _fwalk_reent ()
=> 0x1337c <_fwalk_reent+128>:	ld	s8,0(sp)
0x000000000001337e in _fwalk_reent ()
=> 0x1337e <_fwalk_reent+130>:	mv	a0,s6
0x0000000000013380 in _fwalk_reent ()
=> 0x13380 <_fwalk_reent+132>:	ld	s6,16(sp)
0x0000000000013382 in _fwalk_reent ()
=> 0x13382 <_fwalk_reent+134>:	addi	sp,sp,80
0x0000000000013384 in _fwalk_reent ()
=> 0x13384 <_fwalk_reent+136>:	ret
0x00000000000104d8 in exit ()
=> 0x104d8 <exit+24>:	mv	a0,s0
0x00000000000104da in exit ()
=> 0x104da <exit+26>:	jal	ra,0x1b1d2 <_exit>
0x000000000001b1d2 in _exit ()
=> 0x1b1d2 <_exit>:	li	a7,93
0x000000000001b1d6 in _exit ()
=> 0x1b1d6 <_exit+4>:	ecall
[Inferior 1 (process 1274) exited normally]
script.gdb:20: Error in sourced command file:
No registers.
