=> 0x102e4 <start_trigger+24>:	sd	ra,24(sp)
0x00000000000102e8	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102e8 <start_trigger+28>:	sd	s0,16(sp)
0x00000000000102ec	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102ec <start_trigger+32>:	addi	s0,sp,32
0x00000000000102f0	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102f0 <start_trigger+36>:	rdcycle	a0
0x00000000000102f4	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102f4 <start_trigger+40>:	sd	a0,-24(s0)
0x00000000000102f8	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102f8 <start_trigger+44>:	ld	a0,-24(s0)
0x00000000000102fc	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x102fc <start_trigger+48>:	sd	a0,-32(s0)
0x0000000000010300	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10300 <start_trigger+52>:	ld	a0,-32(s0)
0x0000000000010304	36	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10304 <start_trigger+56>:	sd	a0,1896(gp)
37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10308 <start_trigger+60>:	ld	s0,16(sp)
0x000000000001030c in start_trigger () at ../config/riscv64/boards/generic/boardsupport.c:37
37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1030c <start_trigger+64>:	ld	ra,24(sp)
0x0000000000010310	37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10310 <start_trigger+68>:	addi	sp,sp,32
0x0000000000010314	37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10314 <start_trigger+72>:	rdcycle	zero
0x0000000000010318	37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10318 <start_trigger+76>:	ld	ra,0(t6)
0x000000000001031c	37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1031c <start_trigger+80>:	rdcycle	zero
0x0000000000010320	37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10320 <start_trigger+84>:	addi	t6,t6,16
0x0000000000010324	37	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10324 <start_trigger+88>:	ret
main (argc=1, argv=0x3ffffffb58) at main.c:53
53	main.c: No such file or directory.
=> 0x10218 <main+144>:	ld	a0,-88(s0)
0x000000000001021c	53	in main.c
=> 0x1021c <main+148>:	sw	a0,-36(s0)
0x0000000000010220	53	in main.c
=> 0x10220 <main+152>:	j	0x10224 <main+156>
0x0000000000010224	53	in main.c
=> 0x10224 <main+156>:	lw	a0,-36(s0)
0x0000000000010228	53	in main.c
=> 0x10228 <main+160>:	li	a1,0
0x000000000001022c	53	in main.c
=> 0x1022c <main+164>:	blt	a1,a0,0x10258 <main+208>
0x0000000000010230	53	in main.c
=> 0x10230 <main+168>:	j	0x10234 <main+172>
54	in main.c
=> 0x10234 <main+172>:	jal	ra,0x10520 <initialise_benchmark>
initialise_benchmark () at libbs.c:125
125	libbs.c: No such file or directory.
=> 0x10520 <initialise_benchmark>:	addi	t6,t6,-16
0x0000000000010524	125	in libbs.c
=> 0x10524 <initialise_benchmark+4>:	rdcycle	zero
0x0000000000010528	125	in libbs.c
=> 0x10528 <initialise_benchmark+8>:	sd	ra,0(t6)
0x000000000001052c	125	in libbs.c
=> 0x1052c <initialise_benchmark+12>:	sd	ra,0(t6)
0x0000000000010530	125	in libbs.c
=> 0x10530 <initialise_benchmark+16>:	rdcycle	zero
0x0000000000010534	125	in libbs.c
=> 0x10534 <initialise_benchmark+20>:	addi	sp,sp,-16
126	in libbs.c
=> 0x10538 <initialise_benchmark+24>:	sd	ra,8(sp)
0x000000000001053c	126	in libbs.c
=> 0x1053c <initialise_benchmark+28>:	sd	s0,0(sp)
0x0000000000010540	126	in libbs.c
=> 0x10540 <initialise_benchmark+32>:	addi	s0,sp,16
0x0000000000010544	126	in libbs.c
=> 0x10544 <initialise_benchmark+36>:	ld	s0,0(sp)
0x0000000000010548 in initialise_benchmark () at libbs.c:126
126	in libbs.c
=> 0x10548 <initialise_benchmark+40>:	ld	ra,8(sp)
0x000000000001054c	126	in libbs.c
=> 0x1054c <initialise_benchmark+44>:	addi	sp,sp,16
0x0000000000010550	126	in libbs.c
=> 0x10550 <initialise_benchmark+48>:	rdcycle	zero
0x0000000000010554	126	in libbs.c
=> 0x10554 <initialise_benchmark+52>:	ld	ra,0(t6)
0x0000000000010558	126	in libbs.c
=> 0x10558 <initialise_benchmark+56>:	rdcycle	zero
0x000000000001055c	126	in libbs.c
=> 0x1055c <initialise_benchmark+60>:	addi	t6,t6,16
0x0000000000010560	126	in libbs.c
=> 0x10560 <initialise_benchmark+64>:	ret
main (argc=1, argv=0x3ffffffb58) at main.c:55
55	main.c: No such file or directory.
=> 0x10238 <main+176>:	sd	a0,-120(s0)
0x000000000001023c	55	in main.c
=> 0x1023c <main+180>:	jal	ra,0x10564 <benchmark>
benchmark () at libbs.c:131
131	libbs.c: No such file or directory.
=> 0x10564 <benchmark>:	addi	t6,t6,-16
0x0000000000010568	131	in libbs.c
=> 0x10568 <benchmark+4>:	rdcycle	zero
0x000000000001056c	131	in libbs.c
=> 0x1056c <benchmark+8>:	sd	ra,0(t6)
0x0000000000010570	131	in libbs.c
=> 0x10570 <benchmark+12>:	sd	ra,0(t6)
0x0000000000010574	131	in libbs.c
=> 0x10574 <benchmark+16>:	rdcycle	zero
0x0000000000010578	131	in libbs.c
=> 0x10578 <benchmark+20>:	addi	sp,sp,-32
0x000000000001057c	131	in libbs.c
=> 0x1057c <benchmark+24>:	sd	ra,24(sp)
0x0000000000010580	131	in libbs.c
=> 0x10580 <benchmark+28>:	sd	s0,16(sp)
0x0000000000010584	131	in libbs.c
=> 0x10584 <benchmark+32>:	addi	s0,sp,32
0x0000000000010588	131	in libbs.c
=> 0x10588 <benchmark+36>:	li	a0,8
132	in libbs.c
=> 0x1058c <benchmark+40>:	jal	ra,0x1039c <binary_search>
binary_search (x=220237) at libbs.c:90
90	in libbs.c
=> 0x1039c <binary_search>:	addi	t6,t6,-16
0x00000000000103a0	90	in libbs.c
=> 0x103a0 <binary_search+4>:	rdcycle	zero
0x00000000000103a4	90	in libbs.c
=> 0x103a4 <binary_search+8>:	sd	ra,0(t6)
0x00000000000103a8	90	in libbs.c
=> 0x103a8 <binary_search+12>:	sd	ra,0(t6)
0x00000000000103ac	90	in libbs.c
=> 0x103ac <binary_search+16>:	rdcycle	zero
0x00000000000103b0	90	in libbs.c
=> 0x103b0 <binary_search+20>:	addi	sp,sp,-48
0x00000000000103b4	90	in libbs.c
=> 0x103b4 <binary_search+24>:	sd	ra,40(sp)
0x00000000000103b8	90	in libbs.c
=> 0x103b8 <binary_search+28>:	sd	s0,32(sp)
0x00000000000103bc	90	in libbs.c
=> 0x103bc <binary_search+32>:	addi	s0,sp,48
0x00000000000103c0	90	in libbs.c
=> 0x103c0 <binary_search+36>:	mv	a1,a0
0x00000000000103c4	90	in libbs.c
=> 0x103c4 <binary_search+40>:	sw	a0,-20(s0)
0x00000000000103c8	90	in libbs.c
=> 0x103c8 <binary_search+44>:	li	a0,0
93	in libbs.c
=> 0x103cc <binary_search+48>:	sw	a0,-36(s0)
0x00000000000103d0	93	in libbs.c
=> 0x103d0 <binary_search+52>:	li	a0,14
94	in libbs.c
=> 0x103d4 <binary_search+56>:	sw	a0,-32(s0)
0x00000000000103d8	94	in libbs.c
=> 0x103d8 <binary_search+60>:	li	a0,1
0x00000000000103dc	94	in libbs.c
=> 0x103dc <binary_search+64>:	slli	a0,a0,0x20
0x00000000000103e0	94	in libbs.c
=> 0x103e0 <binary_search+68>:	addi	a0,a0,-1
95	in libbs.c
=> 0x103e4 <binary_search+72>:	sw	a0,-24(s0)
96	in libbs.c
=> 0x103e8 <binary_search+76>:	j	0x103ec <binary_search+80>
0x00000000000103ec	96	in libbs.c
=> 0x103ec <binary_search+80>:	lw	a0,-36(s0)
0x00000000000103f0	96	in libbs.c
=> 0x103f0 <binary_search+84>:	lw	a1,-32(s0)
0x00000000000103f4	96	in libbs.c
=> 0x103f4 <binary_search+88>:	blt	a1,a0,0x104ac <binary_search+272>
0x00000000000103f8	96	in libbs.c
=> 0x103f8 <binary_search+92>:	j	0x103fc <binary_search+96>
97	in libbs.c
=> 0x103fc <binary_search+96>:	lw	a0,-36(s0)
0x0000000000010400	97	in libbs.c
=> 0x10400 <binary_search+100>:	lw	a1,-32(s0)
0x0000000000010404	97	in libbs.c
=> 0x10404 <binary_search+104>:	addw	a0,a0,a1
0x0000000000010408	97	in libbs.c
=> 0x10408 <binary_search+108>:	srli	a0,a0,0x1
0x000000000001040c	97	in libbs.c
=> 0x1040c <binary_search+112>:	sw	a0,-28(s0)
98	in libbs.c
=> 0x10410 <binary_search+116>:	lw	a0,-28(s0)
0x0000000000010414	98	in libbs.c
=> 0x10414 <binary_search+120>:	lui	a1,0x1e
0x0000000000010418	98	in libbs.c
=> 0x10418 <binary_search+124>:	addi	a1,a1,1856
0x000000000001041c	98	in libbs.c
=> 0x1041c <binary_search+128>:	slli	a0,a0,0x3
0x0000000000010420	98	in libbs.c
=> 0x10420 <binary_search+132>:	add	a0,a0,a1
0x0000000000010424	98	in libbs.c
=> 0x10424 <binary_search+136>:	lw	a0,0(a0)
0x0000000000010428	98	in libbs.c
=> 0x10428 <binary_search+140>:	lw	a1,-20(s0)
0x000000000001042c	98	in libbs.c
=> 0x1042c <binary_search+144>:	bne	a0,a1,0x10460 <binary_search+196>
103	in libbs.c
=> 0x10460 <binary_search+196>:	lw	a0,-28(s0)
0x0000000000010464	103	in libbs.c
=> 0x10464 <binary_search+200>:	lui	a1,0x1e
0x0000000000010468	103	in libbs.c
=> 0x10468 <binary_search+204>:	addi	a1,a1,1856
0x000000000001046c	103	in libbs.c
=> 0x1046c <binary_search+208>:	slli	a0,a0,0x3
0x0000000000010470	103	in libbs.c
=> 0x10470 <binary_search+212>:	add	a0,a0,a1
0x0000000000010474	103	in libbs.c
=> 0x10474 <binary_search+216>:	lw	a0,0(a0)
0x0000000000010478	103	in libbs.c
=> 0x10478 <binary_search+220>:	lw	a1,-20(s0)
0x000000000001047c	103	in libbs.c
=> 0x1047c <binary_search+224>:	bge	a1,a0,0x10494 <binary_search+248>
0x0000000000010480	103	in libbs.c
=> 0x10480 <binary_search+228>:	j	0x10484 <binary_search+232>
104	in libbs.c
=> 0x10484 <binary_search+232>:	lw	a0,-28(s0)
0x0000000000010488	104	in libbs.c
=> 0x10488 <binary_search+236>:	addi	a0,a0,-1
0x000000000001048c	104	in libbs.c
=> 0x1048c <binary_search+240>:	sw	a0,-32(s0)
105	in libbs.c
=> 0x10490 <binary_search+244>:	j	0x104a4 <binary_search+264>
0x00000000000104a4	107	in libbs.c
=> 0x104a4 <binary_search+264>:	j	0x104a8 <binary_search+268>
96	in libbs.c
=> 0x104a8 <binary_search+268>:	j	0x103ec <binary_search+80>
0x00000000000103ec	96	in libbs.c
=> 0x103ec <binary_search+80>:	lw	a0,-36(s0)
0x00000000000103f0	96	in libbs.c
=> 0x103f0 <binary_search+84>:	lw	a1,-32(s0)
0x00000000000103f4	96	in libbs.c
=> 0x103f4 <binary_search+88>:	blt	a1,a0,0x104ac <binary_search+272>
0x00000000000103f8	96	in libbs.c
=> 0x103f8 <binary_search+92>:	j	0x103fc <binary_search+96>
97	in libbs.c
=> 0x103fc <binary_search+96>:	lw	a0,-36(s0)
0x0000000000010400	97	in libbs.c
=> 0x10400 <binary_search+100>:	lw	a1,-32(s0)
0x0000000000010404	97	in libbs.c
=> 0x10404 <binary_search+104>:	addw	a0,a0,a1
0x0000000000010408	97	in libbs.c
=> 0x10408 <binary_search+108>:	srli	a0,a0,0x1
0x000000000001040c	97	in libbs.c
=> 0x1040c <binary_search+112>:	sw	a0,-28(s0)
98	in libbs.c
=> 0x10410 <binary_search+116>:	lw	a0,-28(s0)
0x0000000000010414	98	in libbs.c
=> 0x10414 <binary_search+120>:	lui	a1,0x1e
0x0000000000010418	98	in libbs.c
=> 0x10418 <binary_search+124>:	addi	a1,a1,1856
0x000000000001041c	98	in libbs.c
=> 0x1041c <binary_search+128>:	slli	a0,a0,0x3
0x0000000000010420	98	in libbs.c
=> 0x10420 <binary_search+132>:	add	a0,a0,a1
0x0000000000010424	98	in libbs.c
=> 0x10424 <binary_search+136>:	lw	a0,0(a0)
0x0000000000010428	98	in libbs.c
=> 0x10428 <binary_search+140>:	lw	a1,-20(s0)
0x000000000001042c	98	in libbs.c
=> 0x1042c <binary_search+144>:	bne	a0,a1,0x10460 <binary_search+196>
103	in libbs.c
=> 0x10460 <binary_search+196>:	lw	a0,-28(s0)
0x0000000000010464	103	in libbs.c
=> 0x10464 <binary_search+200>:	lui	a1,0x1e
0x0000000000010468	103	in libbs.c
=> 0x10468 <binary_search+204>:	addi	a1,a1,1856
0x000000000001046c	103	in libbs.c
=> 0x1046c <binary_search+208>:	slli	a0,a0,0x3
0x0000000000010470	103	in libbs.c
=> 0x10470 <binary_search+212>:	add	a0,a0,a1
0x0000000000010474	103	in libbs.c
=> 0x10474 <binary_search+216>:	lw	a0,0(a0)
0x0000000000010478	103	in libbs.c
=> 0x10478 <binary_search+220>:	lw	a1,-20(s0)
0x000000000001047c	103	in libbs.c
=> 0x1047c <binary_search+224>:	bge	a1,a0,0x10494 <binary_search+248>
107	in libbs.c
=> 0x10494 <binary_search+248>:	lw	a0,-28(s0)
0x0000000000010498	107	in libbs.c
=> 0x10498 <binary_search+252>:	addi	a0,a0,1
0x000000000001049c	107	in libbs.c
=> 0x1049c <binary_search+256>:	sw	a0,-36(s0)
0x00000000000104a0	107	in libbs.c
=> 0x104a0 <binary_search+260>:	j	0x104a4 <binary_search+264>
0x00000000000104a4	107	in libbs.c
=> 0x104a4 <binary_search+264>:	j	0x104a8 <binary_search+268>
96	in libbs.c
=> 0x104a8 <binary_search+268>:	j	0x103ec <binary_search+80>
0x00000000000103ec	96	in libbs.c
=> 0x103ec <binary_search+80>:	lw	a0,-36(s0)
0x00000000000103f0	96	in libbs.c
=> 0x103f0 <binary_search+84>:	lw	a1,-32(s0)
0x00000000000103f4	96	in libbs.c
=> 0x103f4 <binary_search+88>:	blt	a1,a0,0x104ac <binary_search+272>
0x00000000000103f8	96	in libbs.c
=> 0x103f8 <binary_search+92>:	j	0x103fc <binary_search+96>
97	in libbs.c
=> 0x103fc <binary_search+96>:	lw	a0,-36(s0)
0x0000000000010400	97	in libbs.c
=> 0x10400 <binary_search+100>:	lw	a1,-32(s0)
0x0000000000010404	97	in libbs.c
=> 0x10404 <binary_search+104>:	addw	a0,a0,a1
0x0000000000010408	97	in libbs.c
=> 0x10408 <binary_search+108>:	srli	a0,a0,0x1
0x000000000001040c	97	in libbs.c
=> 0x1040c <binary_search+112>:	sw	a0,-28(s0)
98	in libbs.c
=> 0x10410 <binary_search+116>:	lw	a0,-28(s0)
0x0000000000010414	98	in libbs.c
=> 0x10414 <binary_search+120>:	lui	a1,0x1e
0x0000000000010418	98	in libbs.c
=> 0x10418 <binary_search+124>:	addi	a1,a1,1856
0x000000000001041c	98	in libbs.c
=> 0x1041c <binary_search+128>:	slli	a0,a0,0x3
0x0000000000010420	98	in libbs.c
=> 0x10420 <binary_search+132>:	add	a0,a0,a1
0x0000000000010424	98	in libbs.c
=> 0x10424 <binary_search+136>:	lw	a0,0(a0)
0x0000000000010428	98	in libbs.c
=> 0x10428 <binary_search+140>:	lw	a1,-20(s0)
0x000000000001042c	98	in libbs.c
=> 0x1042c <binary_search+144>:	bne	a0,a1,0x10460 <binary_search+196>
103	in libbs.c
=> 0x10460 <binary_search+196>:	lw	a0,-28(s0)
0x0000000000010464	103	in libbs.c
=> 0x10464 <binary_search+200>:	lui	a1,0x1e
0x0000000000010468	103	in libbs.c
=> 0x10468 <binary_search+204>:	addi	a1,a1,1856
0x000000000001046c	103	in libbs.c
=> 0x1046c <binary_search+208>:	slli	a0,a0,0x3
0x0000000000010470	103	in libbs.c
=> 0x10470 <binary_search+212>:	add	a0,a0,a1
0x0000000000010474	103	in libbs.c
=> 0x10474 <binary_search+216>:	lw	a0,0(a0)
0x0000000000010478	103	in libbs.c
=> 0x10478 <binary_search+220>:	lw	a1,-20(s0)
0x000000000001047c	103	in libbs.c
=> 0x1047c <binary_search+224>:	bge	a1,a0,0x10494 <binary_search+248>
0x0000000000010480	103	in libbs.c
=> 0x10480 <binary_search+228>:	j	0x10484 <binary_search+232>
104	in libbs.c
=> 0x10484 <binary_search+232>:	lw	a0,-28(s0)
0x0000000000010488	104	in libbs.c
=> 0x10488 <binary_search+236>:	addi	a0,a0,-1
0x000000000001048c	104	in libbs.c
=> 0x1048c <binary_search+240>:	sw	a0,-32(s0)
105	in libbs.c
=> 0x10490 <binary_search+244>:	j	0x104a4 <binary_search+264>
0x00000000000104a4	107	in libbs.c
=> 0x104a4 <binary_search+264>:	j	0x104a8 <binary_search+268>
96	in libbs.c
=> 0x104a8 <binary_search+268>:	j	0x103ec <binary_search+80>
0x00000000000103ec	96	in libbs.c
=> 0x103ec <binary_search+80>:	lw	a0,-36(s0)
0x00000000000103f0	96	in libbs.c
=> 0x103f0 <binary_search+84>:	lw	a1,-32(s0)
0x00000000000103f4	96	in libbs.c
=> 0x103f4 <binary_search+88>:	blt	a1,a0,0x104ac <binary_search+272>
0x00000000000103f8	96	in libbs.c
=> 0x103f8 <binary_search+92>:	j	0x103fc <binary_search+96>
97	in libbs.c
=> 0x103fc <binary_search+96>:	lw	a0,-36(s0)
0x0000000000010400	97	in libbs.c
=> 0x10400 <binary_search+100>:	lw	a1,-32(s0)
0x0000000000010404	97	in libbs.c
=> 0x10404 <binary_search+104>:	addw	a0,a0,a1
0x0000000000010408	97	in libbs.c
=> 0x10408 <binary_search+108>:	srli	a0,a0,0x1
0x000000000001040c	97	in libbs.c
=> 0x1040c <binary_search+112>:	sw	a0,-28(s0)
98	in libbs.c
=> 0x10410 <binary_search+116>:	lw	a0,-28(s0)
0x0000000000010414	98	in libbs.c
=> 0x10414 <binary_search+120>:	lui	a1,0x1e
0x0000000000010418	98	in libbs.c
=> 0x10418 <binary_search+124>:	addi	a1,a1,1856
0x000000000001041c	98	in libbs.c
=> 0x1041c <binary_search+128>:	slli	a0,a0,0x3
0x0000000000010420	98	in libbs.c
=> 0x10420 <binary_search+132>:	add	a0,a0,a1
0x0000000000010424	98	in libbs.c
=> 0x10424 <binary_search+136>:	lw	a0,0(a0)
0x0000000000010428	98	in libbs.c
=> 0x10428 <binary_search+140>:	lw	a1,-20(s0)
0x000000000001042c	98	in libbs.c
=> 0x1042c <binary_search+144>:	bne	a0,a1,0x10460 <binary_search+196>
0x0000000000010430	98	in libbs.c
=> 0x10430 <binary_search+148>:	j	0x10434 <binary_search+152>
99	in libbs.c
=> 0x10434 <binary_search+152>:	lw	a0,-36(s0)
0x0000000000010438	99	in libbs.c
=> 0x10438 <binary_search+156>:	addi	a0,a0,-1
0x000000000001043c	99	in libbs.c
=> 0x1043c <binary_search+160>:	sw	a0,-32(s0)
100	in libbs.c
=> 0x10440 <binary_search+164>:	lw	a0,-28(s0)
0x0000000000010444	100	in libbs.c
=> 0x10444 <binary_search+168>:	slli	a0,a0,0x3
0x0000000000010448	100	in libbs.c
=> 0x10448 <binary_search+172>:	lui	a1,0x1e
0x000000000001044c	100	in libbs.c
=> 0x1044c <binary_search+176>:	addi	a1,a1,1856
0x0000000000010450	100	in libbs.c
=> 0x10450 <binary_search+180>:	add	a0,a1,a0
0x0000000000010454	100	in libbs.c
=> 0x10454 <binary_search+184>:	lw	a0,4(a0)
0x0000000000010458	100	in libbs.c
=> 0x10458 <binary_search+188>:	sw	a0,-24(s0)
101	in libbs.c
=> 0x1045c <binary_search+192>:	j	0x104a8 <binary_search+268>
96	in libbs.c
=> 0x104a8 <binary_search+268>:	j	0x103ec <binary_search+80>
0x00000000000103ec	96	in libbs.c
=> 0x103ec <binary_search+80>:	lw	a0,-36(s0)
0x00000000000103f0	96	in libbs.c
=> 0x103f0 <binary_search+84>:	lw	a1,-32(s0)
0x00000000000103f4	96	in libbs.c
=> 0x103f4 <binary_search+88>:	blt	a1,a0,0x104ac <binary_search+272>
110	in libbs.c
=> 0x104ac <binary_search+272>:	lw	a0,-24(s0)
0x00000000000104b0	110	in libbs.c
=> 0x104b0 <binary_search+276>:	ld	s0,32(sp)
0x00000000000104b4 in binary_search (x=220237) at libbs.c:110
110	in libbs.c
=> 0x104b4 <binary_search+280>:	ld	ra,40(sp)
0x00000000000104b8	110	in libbs.c
=> 0x104b8 <binary_search+284>:	addi	sp,sp,48
0x00000000000104bc	110	in libbs.c
=> 0x104bc <binary_search+288>:	rdcycle	zero
0x00000000000104c0	110	in libbs.c
=> 0x104c0 <binary_search+292>:	ld	ra,0(t6)
0x00000000000104c4	110	in libbs.c
=> 0x104c4 <binary_search+296>:	rdcycle	zero
0x00000000000104c8	110	in libbs.c
=> 0x104c8 <binary_search+300>:	addi	t6,t6,16
0x00000000000104cc	110	in libbs.c
=> 0x104cc <binary_search+304>:	ret
0x0000000000010590 in benchmark () at libbs.c:132
132	in libbs.c
=> 0x10590 <benchmark+44>:	li	a1,0
133	in libbs.c
=> 0x10594 <benchmark+48>:	sd	a0,-24(s0)
0x0000000000010598	133	in libbs.c
=> 0x10598 <benchmark+52>:	mv	a0,a1
0x000000000001059c	133	in libbs.c
=> 0x1059c <benchmark+56>:	ld	s0,16(sp)
0x00000000000105a0 in benchmark () at libbs.c:133
133	in libbs.c
=> 0x105a0 <benchmark+60>:	ld	ra,24(sp)
0x00000000000105a4	133	in libbs.c
=> 0x105a4 <benchmark+64>:	addi	sp,sp,32
0x00000000000105a8	133	in libbs.c
=> 0x105a8 <benchmark+68>:	rdcycle	zero
0x00000000000105ac	133	in libbs.c
=> 0x105ac <benchmark+72>:	ld	ra,0(t6)
0x00000000000105b0	133	in libbs.c
=> 0x105b0 <benchmark+76>:	rdcycle	zero
0x00000000000105b4	133	in libbs.c
=> 0x105b4 <benchmark+80>:	addi	t6,t6,16
0x00000000000105b8	133	in libbs.c
=> 0x105b8 <benchmark+84>:	ret
0x0000000000010240 in main (argc=1, argv=0x3ffffffb58) at main.c:55
55	main.c: No such file or directory.
=> 0x10240 <main+184>:	sw	a0,-40(s0)
56	in main.c
=> 0x10244 <main+188>:	j	0x10248 <main+192>
53	in main.c
=> 0x10248 <main+192>:	lw	a0,-36(s0)
0x000000000001024c	53	in main.c
=> 0x1024c <main+196>:	addi	a0,a0,1
0x0000000000010250	53	in main.c
=> 0x10250 <main+200>:	sw	a0,-36(s0)
0x0000000000010254	53	in main.c
=> 0x10254 <main+204>:	j	0x10224 <main+156>
0x0000000000010224	53	in main.c
=> 0x10224 <main+156>:	lw	a0,-36(s0)
0x0000000000010228	53	in main.c
=> 0x10228 <main+160>:	li	a1,0
0x000000000001022c	53	in main.c
=> 0x1022c <main+164>:	blt	a1,a0,0x10258 <main+208>
58	in main.c
=> 0x10258 <main+208>:	jal	ra,0x10328 <stop_trigger>
stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:40
40	../config/riscv64/boards/generic/boardsupport.c: No such file or directory.
=> 0x10328 <stop_trigger>:	addi	t6,t6,-16
0x000000000001032c	40	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1032c <stop_trigger+4>:	rdcycle	zero
0x0000000000010330	40	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10330 <stop_trigger+8>:	sd	ra,0(t6)
0x0000000000010334	40	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10334 <stop_trigger+12>:	sd	ra,0(t6)
0x0000000000010338	40	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10338 <stop_trigger+16>:	rdcycle	zero
0x000000000001033c	40	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1033c <stop_trigger+20>:	addi	sp,sp,-48
48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10340 <stop_trigger+24>:	sd	ra,40(sp)
0x0000000000010344	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10344 <stop_trigger+28>:	sd	s0,32(sp)
0x0000000000010348	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10348 <stop_trigger+32>:	addi	s0,sp,48
0x000000000001034c	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1034c <stop_trigger+36>:	rdcycle	a0
0x0000000000010350	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10350 <stop_trigger+40>:	sd	a0,-32(s0)
0x0000000000010354	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10354 <stop_trigger+44>:	ld	a0,-32(s0)
0x0000000000010358	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10358 <stop_trigger+48>:	sd	a0,-40(s0)
0x000000000001035c	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1035c <stop_trigger+52>:	ld	a0,-40(s0)
0x0000000000010360	48	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10360 <stop_trigger+56>:	sd	a0,-24(s0)
49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10364 <stop_trigger+60>:	ld	a0,-24(s0)
0x0000000000010368	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10368 <stop_trigger+64>:	ld	a1,1896(gp)
0x000000000001036c	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1036c <stop_trigger+68>:	sub	a1,a0,a1
0x0000000000010370	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10370 <stop_trigger+72>:	lui	a0,0x1d
0x0000000000010374	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10374 <stop_trigger+76>:	addi	a0,a0,-1820
0x0000000000010378	49	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10378 <stop_trigger+80>:	jal	ra,0x10d48 <printf>
0x0000000000010d48 in printf ()
=> 0x10d48 <printf>:	ld	t1,1872(gp)
0x0000000000010d4c in printf ()
=> 0x10d4c <printf+4>:	addi	sp,sp,-96
0x0000000000010d4e in printf ()
=> 0x10d4e <printf+6>:	sd	a2,48(sp)
0x0000000000010d50 in printf ()
=> 0x10d50 <printf+8>:	sd	a3,56(sp)
0x0000000000010d52 in printf ()
=> 0x10d52 <printf+10>:	sd	a1,40(sp)
0x0000000000010d54 in printf ()
=> 0x10d54 <printf+12>:	sd	a4,64(sp)
0x0000000000010d56 in printf ()
=> 0x10d56 <printf+14>:	sd	a5,72(sp)
0x0000000000010d58 in printf ()
=> 0x10d58 <printf+16>:	sd	a6,80(sp)
0x0000000000010d5a in printf ()
=> 0x10d5a <printf+18>:	sd	a7,88(sp)
0x0000000000010d5c in printf ()
=> 0x10d5c <printf+20>:	ld	a1,16(t1)
0x0000000000010d60 in printf ()
=> 0x10d60 <printf+24>:	addi	a3,sp,40
0x0000000000010d62 in printf ()
=> 0x10d62 <printf+26>:	mv	a2,a0
0x0000000000010d64 in printf ()
=> 0x10d64 <printf+28>:	mv	a0,t1
0x0000000000010d66 in printf ()
=> 0x10d66 <printf+30>:	sd	ra,24(sp)
0x0000000000010d68 in printf ()
=> 0x10d68 <printf+32>:	sd	a3,8(sp)
0x0000000000010d6a in printf ()
=> 0x10d6a <printf+34>:	jal	ra,0x10daa <_vfprintf_r>
0x0000000000010daa in _vfprintf_r ()
=> 0x10daa <_vfprintf_r>:	addi	sp,sp,-640
0x0000000000010dae in _vfprintf_r ()
=> 0x10dae <_vfprintf_r+4>:	sd	ra,632(sp)
0x0000000000010db2 in _vfprintf_r ()
=> 0x10db2 <_vfprintf_r+8>:	sd	s2,608(sp)
0x0000000000010db6 in _vfprintf_r ()
=> 0x10db6 <_vfprintf_r+12>:	sd	s4,592(sp)
0x0000000000010dba in _vfprintf_r ()
=> 0x10dba <_vfprintf_r+16>:	sd	s9,552(sp)
0x0000000000010dbe in _vfprintf_r ()
=> 0x10dbe <_vfprintf_r+20>:	mv	s2,a1
0x0000000000010dc0 in _vfprintf_r ()
=> 0x10dc0 <_vfprintf_r+22>:	mv	s9,a2
0x0000000000010dc2 in _vfprintf_r ()
=> 0x10dc2 <_vfprintf_r+24>:	sd	a3,16(sp)
0x0000000000010dc4 in _vfprintf_r ()
=> 0x10dc4 <_vfprintf_r+26>:	sd	s0,624(sp)
0x0000000000010dc8 in _vfprintf_r ()
=> 0x10dc8 <_vfprintf_r+30>:	sd	s1,616(sp)
0x0000000000010dcc in _vfprintf_r ()
=> 0x10dcc <_vfprintf_r+34>:	sd	s3,600(sp)
0x0000000000010dd0 in _vfprintf_r ()
=> 0x10dd0 <_vfprintf_r+38>:	sd	s5,584(sp)
0x0000000000010dd4 in _vfprintf_r ()
=> 0x10dd4 <_vfprintf_r+42>:	sd	s6,576(sp)
0x0000000000010dd8 in _vfprintf_r ()
=> 0x10dd8 <_vfprintf_r+46>:	sd	s7,568(sp)
0x0000000000010ddc in _vfprintf_r ()
=> 0x10ddc <_vfprintf_r+50>:	sd	s8,560(sp)
0x0000000000010de0 in _vfprintf_r ()
=> 0x10de0 <_vfprintf_r+54>:	sd	s10,544(sp)
0x0000000000010de4 in _vfprintf_r ()
=> 0x10de4 <_vfprintf_r+58>:	sd	s11,536(sp)
0x0000000000010de8 in _vfprintf_r ()
=> 0x10de8 <_vfprintf_r+62>:	mv	s4,a0
0x0000000000010dea in _vfprintf_r ()
=> 0x10dea <_vfprintf_r+64>:	jal	ra,0x15502 <_localeconv_r>
0x0000000000015502 in _localeconv_r ()
=> 0x15502 <_localeconv_r>:	addi	a0,gp,1640
0x0000000000015506 in _localeconv_r ()
=> 0x15506 <_localeconv_r+4>:	ret
0x0000000000010dee in _vfprintf_r ()
=> 0x10dee <_vfprintf_r+68>:	ld	a5,0(a0)
0x0000000000010df0 in _vfprintf_r ()
=> 0x10df0 <_vfprintf_r+70>:	mv	a0,a5
0x0000000000010df2 in _vfprintf_r ()
=> 0x10df2 <_vfprintf_r+72>:	sd	a5,112(sp)
0x0000000000010df4 in _vfprintf_r ()
=> 0x10df4 <_vfprintf_r+74>:	jal	ra,0x16922 <strlen>
0x0000000000016922 in strlen ()
=> 0x16922 <strlen>:	andi	a5,a0,7
0x0000000000016926 in strlen ()
=> 0x16926 <strlen+4>:	mv	a4,a0
0x0000000000016928 in strlen ()
=> 0x16928 <strlen+6>:	bnez	a5,0x1697a <strlen+88>
0x000000000001692a in strlen ()
=> 0x1692a <strlen+8>:	ld	a3,1848(gp)
0x000000000001692e in strlen ()
=> 0x1692e <strlen+12>:	li	a1,-1
0x0000000000016930 in strlen ()
=> 0x16930 <strlen+14>:	ld	a2,0(a4)
0x0000000000016932 in strlen ()
=> 0x16932 <strlen+16>:	addi	a4,a4,8
0x0000000000016934 in strlen ()
=> 0x16934 <strlen+18>:	and	a5,a2,a3
0x0000000000016938 in strlen ()
=> 0x16938 <strlen+22>:	add	a5,a5,a3
0x000000000001693a in strlen ()
=> 0x1693a <strlen+24>:	or	a5,a5,a2
0x000000000001693c in strlen ()
=> 0x1693c <strlen+26>:	or	a5,a5,a3
0x000000000001693e in strlen ()
=> 0x1693e <strlen+28>:	beq	a5,a1,0x16930 <strlen+14>
0x0000000000016942 in strlen ()
=> 0x16942 <strlen+32>:	lbu	a3,-8(a4)
0x0000000000016946 in strlen ()
=> 0x16946 <strlen+36>:	sub	a5,a4,a0
0x000000000001694a in strlen ()
=> 0x1694a <strlen+40>:	beqz	a3,0x16994 <strlen+114>
0x000000000001694c in strlen ()
=> 0x1694c <strlen+42>:	lbu	a3,-7(a4)
0x0000000000016950 in strlen ()
=> 0x16950 <strlen+46>:	beqz	a3,0x1698e <strlen+108>
0x000000000001698e in strlen ()
=> 0x1698e <strlen+108>:	addi	a0,a5,-7
0x0000000000016992 in strlen ()
=> 0x16992 <strlen+112>:	ret
0x0000000000010df8 in _vfprintf_r ()
=> 0x10df8 <_vfprintf_r+78>:	sd	a0,104(sp)
0x0000000000010dfa in _vfprintf_r ()
=> 0x10dfa <_vfprintf_r+80>:	sd	zero,256(sp)
0x0000000000010dfc in _vfprintf_r ()
=> 0x10dfc <_vfprintf_r+82>:	sd	zero,264(sp)
0x0000000000010dfe in _vfprintf_r ()
=> 0x10dfe <_vfprintf_r+84>:	beqz	s4,0x10e0a <_vfprintf_r+96>
0x0000000000010e02 in _vfprintf_r ()
=> 0x10e02 <_vfprintf_r+88>:	lw	a5,80(s4)
0x0000000000010e06 in _vfprintf_r ()
=> 0x10e06 <_vfprintf_r+92>:	beqz	a5,0x11538 <_vfprintf_r+1934>
0x0000000000010e0a in _vfprintf_r ()
=> 0x10e0a <_vfprintf_r+96>:	lh	a4,16(s2)
0x0000000000010e0e in _vfprintf_r ()
=> 0x10e0e <_vfprintf_r+100>:	lui	a3,0x2
0x0000000000010e10 in _vfprintf_r ()
=> 0x10e10 <_vfprintf_r+102>:	slli	a5,a4,0x30
0x0000000000010e14 in _vfprintf_r ()
=> 0x10e14 <_vfprintf_r+106>:	srli	a5,a5,0x30
0x0000000000010e16 in _vfprintf_r ()
=> 0x10e16 <_vfprintf_r+108>:	and	a2,a5,a3
0x0000000000010e1a in _vfprintf_r ()
=> 0x10e1a <_vfprintf_r+112>:	bnez	a2,0x10e3e <_vfprintf_r+148>
0x0000000000010e3e in _vfprintf_r ()
=> 0x10e3e <_vfprintf_r+148>:	andi	a4,a5,8
0x0000000000010e42 in _vfprintf_r ()
=> 0x10e42 <_vfprintf_r+152>:	beqz	a4,0x110b6 <_vfprintf_r+780>
0x0000000000010e46 in _vfprintf_r ()
=> 0x10e46 <_vfprintf_r+156>:	ld	a4,24(s2)
0x0000000000010e4a in _vfprintf_r ()
=> 0x10e4a <_vfprintf_r+160>:	beqz	a4,0x110b6 <_vfprintf_r+780>
0x0000000000010e4e in _vfprintf_r ()
=> 0x10e4e <_vfprintf_r+164>:	andi	a5,a5,26
0x0000000000010e50 in _vfprintf_r ()
=> 0x10e50 <_vfprintf_r+166>:	li	a4,10
0x0000000000010e52 in _vfprintf_r ()
=> 0x10e52 <_vfprintf_r+168>:	beq	a5,a4,0x110d0 <_vfprintf_r+806>
0x0000000000010e56 in _vfprintf_r ()
=> 0x10e56 <_vfprintf_r+172>:	lui	a5,0x1d
0x0000000000010e58 in _vfprintf_r ()
=> 0x10e58 <_vfprintf_r+174>:	ld	a5,-1256(a5)
0x0000000000010e5c in _vfprintf_r ()
=> 0x10e5c <_vfprintf_r+178>:	addi	s6,sp,400
0x0000000000010e60 in _vfprintf_r ()
=> 0x10e60 <_vfprintf_r+182>:	sd	s6,272(sp)
0x0000000000010e62 in _vfprintf_r ()
=> 0x10e62 <_vfprintf_r+184>:	sd	a5,152(sp)
0x0000000000010e64 in _vfprintf_r ()
=> 0x10e64 <_vfprintf_r+186>:	lui	a5,0x1d
0x0000000000010e66 in _vfprintf_r ()
=> 0x10e66 <_vfprintf_r+188>:	ld	a5,-1288(a5)
0x0000000000010e6a in _vfprintf_r ()
=> 0x10e6a <_vfprintf_r+192>:	sd	zero,288(sp)
0x0000000000010e6c in _vfprintf_r ()
=> 0x10e6c <_vfprintf_r+194>:	sw	zero,280(sp)
0x0000000000010e70 in _vfprintf_r ()
=> 0x10e70 <_vfprintf_r+198>:	sd	a5,144(sp)
0x0000000000010e72 in _vfprintf_r ()
=> 0x10e72 <_vfprintf_r+200>:	lui	a5,0x1d
0x0000000000010e74 in _vfprintf_r ()
=> 0x10e74 <_vfprintf_r+202>:	ld	a5,-1272(a5)
0x0000000000010e78 in _vfprintf_r ()
=> 0x10e78 <_vfprintf_r+206>:	sd	zero,32(sp)
0x0000000000010e7a in _vfprintf_r ()
=> 0x10e7a <_vfprintf_r+208>:	sd	zero,40(sp)
0x0000000000010e7c in _vfprintf_r ()
=> 0x10e7c <_vfprintf_r+210>:	sd	a5,160(sp)
0x0000000000010e7e in _vfprintf_r ()
=> 0x10e7e <_vfprintf_r+212>:	lbu	a5,0(s9)
0x0000000000010e82 in _vfprintf_r ()
=> 0x10e82 <_vfprintf_r+216>:	sd	zero,120(sp)
0x0000000000010e84 in _vfprintf_r ()
=> 0x10e84 <_vfprintf_r+218>:	sd	zero,96(sp)
0x0000000000010e86 in _vfprintf_r ()
=> 0x10e86 <_vfprintf_r+220>:	sd	zero,128(sp)
0x0000000000010e88 in _vfprintf_r ()
=> 0x10e88 <_vfprintf_r+222>:	sd	zero,136(sp)
0x0000000000010e8a in _vfprintf_r ()
=> 0x10e8a <_vfprintf_r+224>:	sd	zero,8(sp)
0x0000000000010e8c in _vfprintf_r ()
=> 0x10e8c <_vfprintf_r+226>:	mv	t1,s6
0x0000000000010e8e in _vfprintf_r ()
=> 0x10e8e <_vfprintf_r+228>:	beqz	a5,0x11058 <_vfprintf_r+686>
0x0000000000010e92 in _vfprintf_r ()
=> 0x10e92 <_vfprintf_r+232>:	mv	s0,s9
0x0000000000010e94 in _vfprintf_r ()
=> 0x10e94 <_vfprintf_r+234>:	li	a4,37
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x000000000001119e in _vfprintf_r ()
=> 0x1119e <_vfprintf_r+1012>:	subw	s1,s0,s9
0x00000000000111a2 in _vfprintf_r ()
=> 0x111a2 <_vfprintf_r+1016>:	bnez	s1,0x10eac <_vfprintf_r+258>
0x0000000000010eac in _vfprintf_r ()
=> 0x10eac <_vfprintf_r+258>:	ld	a4,288(sp)
0x0000000000010eae in _vfprintf_r ()
=> 0x10eae <_vfprintf_r+260>:	lw	a5,280(sp)
0x0000000000010eb2 in _vfprintf_r ()
=> 0x10eb2 <_vfprintf_r+264>:	sd	s9,0(t1)
0x0000000000010eb6 in _vfprintf_r ()
=> 0x10eb6 <_vfprintf_r+268>:	add	a4,a4,s1
0x0000000000010eb8 in _vfprintf_r ()
=> 0x10eb8 <_vfprintf_r+270>:	addiw	a5,a5,1
0x0000000000010eba in _vfprintf_r ()
=> 0x10eba <_vfprintf_r+272>:	sd	s1,8(t1)
0x0000000000010ebe in _vfprintf_r ()
=> 0x10ebe <_vfprintf_r+276>:	sd	a4,288(sp)
0x0000000000010ec0 in _vfprintf_r ()
=> 0x10ec0 <_vfprintf_r+278>:	sw	a5,280(sp)
0x0000000000010ec4 in _vfprintf_r ()
=> 0x10ec4 <_vfprintf_r+282>:	sext.w	a4,a5
0x0000000000010ec8 in _vfprintf_r ()
=> 0x10ec8 <_vfprintf_r+286>:	li	a5,7
0x0000000000010eca in _vfprintf_r ()
=> 0x10eca <_vfprintf_r+288>:	addi	t1,t1,16
0x0000000000010ecc in _vfprintf_r ()
=> 0x10ecc <_vfprintf_r+290>:	blt	a5,a4,0x111ac <_vfprintf_r+1026>
0x0000000000010ed0 in _vfprintf_r ()
=> 0x10ed0 <_vfprintf_r+294>:	ld	a4,8(sp)
0x0000000000010ed2 in _vfprintf_r ()
=> 0x10ed2 <_vfprintf_r+296>:	lbu	a5,0(s0)
0x0000000000010ed6 in _vfprintf_r ()
=> 0x10ed6 <_vfprintf_r+300>:	addw	a4,a4,s1
0x0000000000010ed8 in _vfprintf_r ()
=> 0x10ed8 <_vfprintf_r+302>:	sd	a4,8(sp)
0x0000000000010eda in _vfprintf_r ()
=> 0x10eda <_vfprintf_r+304>:	beqz	a5,0x11058 <_vfprintf_r+686>
0x0000000000010ede in _vfprintf_r ()
=> 0x10ede <_vfprintf_r+308>:	lui	a5,0x1d
0x0000000000010ee0 in _vfprintf_r ()
=> 0x10ee0 <_vfprintf_r+310>:	lbu	t3,1(s0)
0x0000000000010ee4 in _vfprintf_r ()
=> 0x10ee4 <_vfprintf_r+314>:	sb	zero,223(sp)
0x0000000000010ee8 in _vfprintf_r ()
=> 0x10ee8 <_vfprintf_r+318>:	addi	s0,s0,1
0x0000000000010eea in _vfprintf_r ()
=> 0x10eea <_vfprintf_r+320>:	li	s8,-1
0x0000000000010eec in _vfprintf_r ()
=> 0x10eec <_vfprintf_r+322>:	li	s5,0
0x0000000000010eee in _vfprintf_r ()
=> 0x10eee <_vfprintf_r+324>:	li	s1,0
0x0000000000010ef0 in _vfprintf_r ()
=> 0x10ef0 <_vfprintf_r+326>:	li	s3,90
0x0000000000010ef4 in _vfprintf_r ()
=> 0x10ef4 <_vfprintf_r+330>:	addi	s7,a5,-1704
0x0000000000010ef8 in _vfprintf_r ()
=> 0x10ef8 <_vfprintf_r+334>:	li	s11,9
0x0000000000010efa in _vfprintf_r ()
=> 0x10efa <_vfprintf_r+336>:	addi	s0,s0,1
0x0000000000010efc in _vfprintf_r ()
=> 0x10efc <_vfprintf_r+338>:	sext.w	s10,t3
0x0000000000010f00 in _vfprintf_r ()
=> 0x10f00 <_vfprintf_r+342>:	li	a2,42
0x0000000000010f04 in _vfprintf_r ()
=> 0x10f04 <_vfprintf_r+346>:	addiw	a5,s10,-32
0x0000000000010f08 in _vfprintf_r ()
=> 0x10f08 <_vfprintf_r+350>:	sext.w	a4,a5
0x0000000000010f0c in _vfprintf_r ()
=> 0x10f0c <_vfprintf_r+354>:	bltu	s3,a4,0x10f52 <_vfprintf_r+424>
0x0000000000010f10 in _vfprintf_r ()
=> 0x10f10 <_vfprintf_r+358>:	slli	a4,a5,0x20
0x0000000000010f14 in _vfprintf_r ()
=> 0x10f14 <_vfprintf_r+362>:	srli	a5,a4,0x1e
0x0000000000010f18 in _vfprintf_r ()
=> 0x10f18 <_vfprintf_r+366>:	add	a5,a5,s7
0x0000000000010f1a in _vfprintf_r ()
=> 0x10f1a <_vfprintf_r+368>:	lw	a5,0(a5)
0x0000000000010f1c in _vfprintf_r ()
=> 0x10f1c <_vfprintf_r+370>:	jr	a5
0x0000000000011728 in _vfprintf_r ()
=> 0x11728 <_vfprintf_r+2430>:	lbu	t3,0(s0)
0x000000000001172c in _vfprintf_r ()
=> 0x1172c <_vfprintf_r+2434>:	li	a5,108
0x0000000000011730 in _vfprintf_r ()
=> 0x11730 <_vfprintf_r+2438>:	beq	t3,a5,0x11e2c <_vfprintf_r+4226>
0x0000000000011734 in _vfprintf_r ()
=> 0x11734 <_vfprintf_r+2442>:	ori	s1,s1,16
0x0000000000011738 in _vfprintf_r ()
=> 0x11738 <_vfprintf_r+2446>:	sext.w	s1,s1
0x000000000001173a in _vfprintf_r ()
=> 0x1173a <_vfprintf_r+2448>:	j	0x10efa <_vfprintf_r+336>
0x0000000000010efa in _vfprintf_r ()
=> 0x10efa <_vfprintf_r+336>:	addi	s0,s0,1
0x0000000000010efc in _vfprintf_r ()
=> 0x10efc <_vfprintf_r+338>:	sext.w	s10,t3
0x0000000000010f00 in _vfprintf_r ()
=> 0x10f00 <_vfprintf_r+342>:	li	a2,42
0x0000000000010f04 in _vfprintf_r ()
=> 0x10f04 <_vfprintf_r+346>:	addiw	a5,s10,-32
0x0000000000010f08 in _vfprintf_r ()
=> 0x10f08 <_vfprintf_r+350>:	sext.w	a4,a5
0x0000000000010f0c in _vfprintf_r ()
=> 0x10f0c <_vfprintf_r+354>:	bltu	s3,a4,0x10f52 <_vfprintf_r+424>
0x0000000000010f10 in _vfprintf_r ()
=> 0x10f10 <_vfprintf_r+358>:	slli	a4,a5,0x20
0x0000000000010f14 in _vfprintf_r ()
=> 0x10f14 <_vfprintf_r+362>:	srli	a5,a4,0x1e
0x0000000000010f18 in _vfprintf_r ()
=> 0x10f18 <_vfprintf_r+366>:	add	a5,a5,s7
0x0000000000010f1a in _vfprintf_r ()
=> 0x10f1a <_vfprintf_r+368>:	lw	a5,0(a5)
0x0000000000010f1c in _vfprintf_r ()
=> 0x10f1c <_vfprintf_r+370>:	jr	a5
0x00000000000110ee in _vfprintf_r ()
=> 0x110ee <_vfprintf_r+836>:	ld	a3,16(sp)
0x00000000000110f0 in _vfprintf_r ()
=> 0x110f0 <_vfprintf_r+838>:	andi	a5,s1,32
0x00000000000110f4 in _vfprintf_r ()
=> 0x110f4 <_vfprintf_r+842>:	addi	a4,a3,8
0x00000000000110f8 in _vfprintf_r ()
=> 0x110f8 <_vfprintf_r+846>:	beqz	a5,0x114ba <_vfprintf_r+1808>
0x00000000000114ba in _vfprintf_r ()
=> 0x114ba <_vfprintf_r+1808>:	andi	a5,s1,16
0x00000000000114be in _vfprintf_r ()
=> 0x114be <_vfprintf_r+1812>:	bnez	a5,0x11cb4 <_vfprintf_r+3850>
0x0000000000011cb4 in _vfprintf_r ()
=> 0x11cb4 <_vfprintf_r+3850>:	ld	a5,16(sp)
0x0000000000011cb6 in _vfprintf_r ()
=> 0x11cb6 <_vfprintf_r+3852>:	ld	a5,0(a5)
0x0000000000011cb8 in _vfprintf_r ()
=> 0x11cb8 <_vfprintf_r+3854>:	mv	s3,a5
0x0000000000011cba in _vfprintf_r ()
=> 0x11cba <_vfprintf_r+3856>:	j	0x11100 <_vfprintf_r+854>
0x0000000000011100 in _vfprintf_r ()
=> 0x11100 <_vfprintf_r+854>:	bltz	a5,0x114d6 <_vfprintf_r+1836>
0x0000000000011104 in _vfprintf_r ()
=> 0x11104 <_vfprintf_r+858>:	li	a5,-1
0x0000000000011106 in _vfprintf_r ()
=> 0x11106 <_vfprintf_r+860>:	beq	s8,a5,0x11cec <_vfprintf_r+3906>
0x0000000000011cec in _vfprintf_r ()
=> 0x11cec <_vfprintf_r+3906>:	sd	a4,16(sp)
0x0000000000011cee in _vfprintf_r ()
=> 0x11cee <_vfprintf_r+3908>:	li	a5,9
0x0000000000011cf0 in _vfprintf_r ()
=> 0x11cf0 <_vfprintf_r+3910>:	mv	s11,s1
0x0000000000011cf2 in _vfprintf_r ()
=> 0x11cf2 <_vfprintf_r+3912>:	bgeu	a5,s3,0x1199c <_vfprintf_r+3058>
0x0000000000011cf6 in _vfprintf_r ()
=> 0x11cf6 <_vfprintf_r+3916>:	addi	s7,sp,396
0x0000000000011cfa in _vfprintf_r ()
=> 0x11cfa <_vfprintf_r+3920>:	andi	a5,s11,1024
0x0000000000011cfe in _vfprintf_r ()
=> 0x11cfe <_vfprintf_r+3924>:	sd	zero,32(sp)
0x0000000000011d00 in _vfprintf_r ()
=> 0x11d00 <_vfprintf_r+3926>:	mv	a1,s7
0x0000000000011d02 in _vfprintf_r ()
=> 0x11d02 <_vfprintf_r+3928>:	li	s1,10
0x0000000000011d04 in _vfprintf_r ()
=> 0x11d04 <_vfprintf_r+3930>:	li	a4,9
0x0000000000011d06 in _vfprintf_r ()
=> 0x11d06 <_vfprintf_r+3932>:	li	a3,255
0x0000000000011d0a in _vfprintf_r ()
=> 0x11d0a <_vfprintf_r+3936>:	j	0x11d18 <_vfprintf_r+3950>
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011d14 in _vfprintf_r ()
=> 0x11d14 <_vfprintf_r+3946>:	mv	s3,a2
0x0000000000011d16 in _vfprintf_r ()
=> 0x11d16 <_vfprintf_r+3948>:	mv	a1,s9
0x0000000000011d18 in _vfprintf_r ()
=> 0x11d18 <_vfprintf_r+3950>:	ld	a0,32(sp)
0x0000000000011d1a in _vfprintf_r ()
=> 0x11d1a <_vfprintf_r+3952>:	addi	s9,a1,-1
0x0000000000011d1e in _vfprintf_r ()
=> 0x11d1e <_vfprintf_r+3956>:	addiw	a0,a0,1
0x0000000000011d20 in _vfprintf_r ()
=> 0x11d20 <_vfprintf_r+3958>:	sd	a0,32(sp)
0x0000000000011d22 in _vfprintf_r ()
=> 0x11d22 <_vfprintf_r+3960>:	remu	a2,s3,s1
0x0000000000011d26 in _vfprintf_r ()
=> 0x11d26 <_vfprintf_r+3964>:	addiw	a2,a2,48
0x0000000000011d2a in _vfprintf_r ()
=> 0x11d2a <_vfprintf_r+3968>:	sb	a2,-1(a1)
0x0000000000011d2e in _vfprintf_r ()
=> 0x11d2e <_vfprintf_r+3972>:	beqz	a5,0x11d0c <_vfprintf_r+3938>
0x0000000000011d0c in _vfprintf_r ()
=> 0x11d0c <_vfprintf_r+3938>:	divu	a2,s3,s1
0x0000000000011d10 in _vfprintf_r ()
=> 0x11d10 <_vfprintf_r+3942>:	bgeu	a4,s3,0x11786 <_vfprintf_r+2524>
0x0000000000011786 in _vfprintf_r ()
=> 0x11786 <_vfprintf_r+2524>:	subw	s7,s7,s9
0x000000000001178a in _vfprintf_r ()
=> 0x1178a <_vfprintf_r+2528>:	mv	s1,s11
0x000000000001178c in _vfprintf_r ()
=> 0x1178c <_vfprintf_r+2530>:	j	0x11126 <_vfprintf_r+892>
0x0000000000011126 in _vfprintf_r ()
=> 0x11126 <_vfprintf_r+892>:	lbu	a5,223(sp)
0x000000000001112a in _vfprintf_r ()
=> 0x1112a <_vfprintf_r+896>:	sext.w	s3,s7
0x000000000001112e in _vfprintf_r ()
=> 0x1112e <_vfprintf_r+900>:	bge	s7,s8,0x11136 <_vfprintf_r+908>
0x0000000000011136 in _vfprintf_r ()
=> 0x11136 <_vfprintf_r+908>:	sd	zero,24(sp)
0x0000000000011138 in _vfprintf_r ()
=> 0x11138 <_vfprintf_r+910>:	sd	zero,72(sp)
0x000000000001113a in _vfprintf_r ()
=> 0x1113a <_vfprintf_r+912>:	sd	zero,88(sp)
0x000000000001113c in _vfprintf_r ()
=> 0x1113c <_vfprintf_r+914>:	sd	zero,80(sp)
0x000000000001113e in _vfprintf_r ()
=> 0x1113e <_vfprintf_r+916>:	beqz	a5,0x10f70 <_vfprintf_r+454>
0x0000000000010f70 in _vfprintf_r ()
=> 0x10f70 <_vfprintf_r+454>:	andi	t0,s1,2
0x0000000000010f74 in _vfprintf_r ()
=> 0x10f74 <_vfprintf_r+458>:	beqz	t0,0x10f7a <_vfprintf_r+464>
0x0000000000010f7a in _vfprintf_r ()
=> 0x10f7a <_vfprintf_r+464>:	andi	s11,s1,132
0x0000000000010f7e in _vfprintf_r ()
=> 0x10f7e <_vfprintf_r+468>:	ld	a5,288(sp)
0x0000000000010f80 in _vfprintf_r ()
=> 0x10f80 <_vfprintf_r+470>:	bnez	s11,0x10f8c <_vfprintf_r+482>
0x0000000000010f84 in _vfprintf_r ()
=> 0x10f84 <_vfprintf_r+474>:	subw	a4,s5,s3
0x0000000000010f88 in _vfprintf_r ()
=> 0x10f88 <_vfprintf_r+478>:	bgtz	a4,0x119b0 <_vfprintf_r+3078>
0x0000000000010f8c in _vfprintf_r ()
=> 0x10f8c <_vfprintf_r+482>:	lbu	a4,223(sp)
0x0000000000010f90 in _vfprintf_r ()
=> 0x10f90 <_vfprintf_r+486>:	beqz	a4,0x10fba <_vfprintf_r+528>
0x0000000000010fba in _vfprintf_r ()
=> 0x10fba <_vfprintf_r+528>:	beqz	t0,0x10fe4 <_vfprintf_r+570>
0x0000000000010fe4 in _vfprintf_r ()
=> 0x10fe4 <_vfprintf_r+570>:	li	a4,128
0x0000000000010fe8 in _vfprintf_r ()
=> 0x10fe8 <_vfprintf_r+574>:	beq	s11,a4,0x1185c <_vfprintf_r+2738>
0x0000000000010fec in _vfprintf_r ()
=> 0x10fec <_vfprintf_r+578>:	subw	s8,s8,s7
0x0000000000010ff0 in _vfprintf_r ()
=> 0x10ff0 <_vfprintf_r+582>:	bgtz	s8,0x118ec <_vfprintf_r+2882>
0x0000000000010ff4 in _vfprintf_r ()
=> 0x10ff4 <_vfprintf_r+586>:	andi	a4,s1,256
0x0000000000010ff8 in _vfprintf_r ()
=> 0x10ff8 <_vfprintf_r+590>:	bnez	a4,0x1178e <_vfprintf_r+2532>
0x0000000000010ffc in _vfprintf_r ()
=> 0x10ffc <_vfprintf_r+594>:	lw	a4,280(sp)
0x0000000000011000 in _vfprintf_r ()
=> 0x11000 <_vfprintf_r+598>:	add	a5,a5,s7
0x0000000000011002 in _vfprintf_r ()
=> 0x11002 <_vfprintf_r+600>:	sd	s9,0(t1)
0x0000000000011006 in _vfprintf_r ()
=> 0x11006 <_vfprintf_r+604>:	addiw	a3,a4,1
0x000000000001100a in _vfprintf_r ()
=> 0x1100a <_vfprintf_r+608>:	mv	a4,a3
0x000000000001100c in _vfprintf_r ()
=> 0x1100c <_vfprintf_r+610>:	sd	s7,8(t1)
0x0000000000011010 in _vfprintf_r ()
=> 0x11010 <_vfprintf_r+614>:	sw	a4,280(sp)
0x0000000000011014 in _vfprintf_r ()
=> 0x11014 <_vfprintf_r+618>:	sd	a5,288(sp)
0x0000000000011016 in _vfprintf_r ()
=> 0x11016 <_vfprintf_r+620>:	li	a4,7
0x0000000000011018 in _vfprintf_r ()
=> 0x11018 <_vfprintf_r+622>:	blt	a4,a3,0x11488 <_vfprintf_r+1758>
0x000000000001101c in _vfprintf_r ()
=> 0x1101c <_vfprintf_r+626>:	addi	t1,t1,16
0x000000000001101e in _vfprintf_r ()
=> 0x1101e <_vfprintf_r+628>:	andi	s1,s1,4
0x0000000000011020 in _vfprintf_r ()
=> 0x11020 <_vfprintf_r+630>:	beqz	s1,0x1102a <_vfprintf_r+640>
0x000000000001102a in _vfprintf_r ()
=> 0x1102a <_vfprintf_r+640>:	mv	a4,s5
0x000000000001102c in _vfprintf_r ()
=> 0x1102c <_vfprintf_r+642>:	bge	s5,s3,0x11032 <_vfprintf_r+648>
0x0000000000011030 in _vfprintf_r ()
=> 0x11030 <_vfprintf_r+646>:	mv	a4,s3
0x0000000000011032 in _vfprintf_r ()
=> 0x11032 <_vfprintf_r+648>:	ld	a3,8(sp)
0x0000000000011034 in _vfprintf_r ()
=> 0x11034 <_vfprintf_r+650>:	addw	a4,a4,a3
0x0000000000011036 in _vfprintf_r ()
=> 0x11036 <_vfprintf_r+652>:	sd	a4,8(sp)
0x0000000000011038 in _vfprintf_r ()
=> 0x11038 <_vfprintf_r+654>:	bnez	a5,0x1196e <_vfprintf_r+3012>
0x000000000001196e in _vfprintf_r ()
=> 0x1196e <_vfprintf_r+3012>:	addi	a2,sp,272
0x0000000000011970 in _vfprintf_r ()
=> 0x11970 <_vfprintf_r+3014>:	mv	a1,s2
0x0000000000011972 in _vfprintf_r ()
=> 0x11972 <_vfprintf_r+3016>:	mv	a0,s4
0x0000000000011974 in _vfprintf_r ()
=> 0x11974 <_vfprintf_r+3018>:	jal	ra,0x185fe <__sprint_r>
0x00000000000185fe in __sprint_r ()
=> 0x185fe <__sprint_r>:	ld	a4,16(a2)
0x0000000000018600 in __sprint_r ()
=> 0x18600 <__sprint_r+2>:	beqz	a4,0x18604 <__sprint_r+6>
0x0000000000018602 in __sprint_r ()
=> 0x18602 <__sprint_r+4>:	j	0x1855a <__sprint_r.part.0>
0x000000000001855a in __sprint_r.part.0 ()
=> 0x1855a <__sprint_r.part.0>:	lw	a5,172(a1)
0x000000000001855e in __sprint_r.part.0 ()
=> 0x1855e <__sprint_r.part.0+4>:	addi	sp,sp,-80
0x0000000000018560 in __sprint_r.part.0 ()
=> 0x18560 <__sprint_r.part.0+6>:	lui	a4,0x2
0x0000000000018562 in __sprint_r.part.0 ()
=> 0x18562 <__sprint_r.part.0+8>:	sd	s5,24(sp)
0x0000000000018564 in __sprint_r.part.0 ()
=> 0x18564 <__sprint_r.part.0+10>:	sd	ra,72(sp)
0x0000000000018566 in __sprint_r.part.0 ()
=> 0x18566 <__sprint_r.part.0+12>:	sd	s0,64(sp)
0x0000000000018568 in __sprint_r.part.0 ()
=> 0x18568 <__sprint_r.part.0+14>:	sd	s1,56(sp)
0x000000000001856a in __sprint_r.part.0 ()
=> 0x1856a <__sprint_r.part.0+16>:	sd	s2,48(sp)
0x000000000001856c in __sprint_r.part.0 ()
=> 0x1856c <__sprint_r.part.0+18>:	sd	s3,40(sp)
0x000000000001856e in __sprint_r.part.0 ()
=> 0x1856e <__sprint_r.part.0+20>:	sd	s4,32(sp)
0x0000000000018570 in __sprint_r.part.0 ()
=> 0x18570 <__sprint_r.part.0+22>:	sd	s6,16(sp)
0x0000000000018572 in __sprint_r.part.0 ()
=> 0x18572 <__sprint_r.part.0+24>:	sd	s7,8(sp)
0x0000000000018574 in __sprint_r.part.0 ()
=> 0x18574 <__sprint_r.part.0+26>:	and	a5,a5,a4
0x0000000000018576 in __sprint_r.part.0 ()
=> 0x18576 <__sprint_r.part.0+28>:	mv	s5,a2
0x0000000000018578 in __sprint_r.part.0 ()
=> 0x18578 <__sprint_r.part.0+30>:	beqz	a5,0x185f8 <__sprint_r.part.0+158>
0x00000000000185f8 in __sprint_r.part.0 ()
=> 0x185f8 <__sprint_r.part.0+158>:	jal	ra,0x1973a <__sfvwrite_r>
0x000000000001973a in __sfvwrite_r ()
=> 0x1973a <__sfvwrite_r>:	ld	a5,16(a2)
0x000000000001973c in __sfvwrite_r ()
=> 0x1973c <__sfvwrite_r+2>:	beqz	a5,0x198f4 <__sfvwrite_r+442>
0x0000000000019740 in __sfvwrite_r ()
=> 0x19740 <__sfvwrite_r+6>:	lhu	a5,16(a1)
0x0000000000019744 in __sfvwrite_r ()
=> 0x19744 <__sfvwrite_r+10>:	addi	sp,sp,-96
0x0000000000019746 in __sfvwrite_r ()
=> 0x19746 <__sfvwrite_r+12>:	sd	s0,80(sp)
0x0000000000019748 in __sfvwrite_r ()
=> 0x19748 <__sfvwrite_r+14>:	sd	s4,48(sp)
0x000000000001974a in __sfvwrite_r ()
=> 0x1974a <__sfvwrite_r+16>:	sd	s5,40(sp)
0x000000000001974c in __sfvwrite_r ()
=> 0x1974c <__sfvwrite_r+18>:	sd	ra,88(sp)
0x000000000001974e in __sfvwrite_r ()
=> 0x1974e <__sfvwrite_r+20>:	sd	s1,72(sp)
0x0000000000019750 in __sfvwrite_r ()
=> 0x19750 <__sfvwrite_r+22>:	sd	s2,64(sp)
0x0000000000019752 in __sfvwrite_r ()
=> 0x19752 <__sfvwrite_r+24>:	sd	s3,56(sp)
0x0000000000019754 in __sfvwrite_r ()
=> 0x19754 <__sfvwrite_r+26>:	sd	s6,32(sp)
0x0000000000019756 in __sfvwrite_r ()
=> 0x19756 <__sfvwrite_r+28>:	sd	s7,24(sp)
0x0000000000019758 in __sfvwrite_r ()
=> 0x19758 <__sfvwrite_r+30>:	sd	s8,16(sp)
0x000000000001975a in __sfvwrite_r ()
=> 0x1975a <__sfvwrite_r+32>:	sd	s9,8(sp)
0x000000000001975c in __sfvwrite_r ()
=> 0x1975c <__sfvwrite_r+34>:	sd	s10,0(sp)
0x000000000001975e in __sfvwrite_r ()
=> 0x1975e <__sfvwrite_r+36>:	andi	a4,a5,8
0x0000000000019762 in __sfvwrite_r ()
=> 0x19762 <__sfvwrite_r+40>:	mv	s4,a2
0x0000000000019764 in __sfvwrite_r ()
=> 0x19764 <__sfvwrite_r+42>:	mv	s5,a0
0x0000000000019766 in __sfvwrite_r ()
=> 0x19766 <__sfvwrite_r+44>:	mv	s0,a1
0x0000000000019768 in __sfvwrite_r ()
=> 0x19768 <__sfvwrite_r+46>:	beqz	a4,0x197c8 <__sfvwrite_r+142>
0x000000000001976a in __sfvwrite_r ()
=> 0x1976a <__sfvwrite_r+48>:	ld	a4,24(a1)
0x000000000001976c in __sfvwrite_r ()
=> 0x1976c <__sfvwrite_r+50>:	beqz	a4,0x197c8 <__sfvwrite_r+142>
0x000000000001976e in __sfvwrite_r ()
=> 0x1976e <__sfvwrite_r+52>:	andi	a4,a5,2
0x0000000000019772 in __sfvwrite_r ()
=> 0x19772 <__sfvwrite_r+56>:	ld	s2,0(s4)
0x0000000000019776 in __sfvwrite_r ()
=> 0x19776 <__sfvwrite_r+60>:	beqz	a4,0x197e2 <__sfvwrite_r+168>
0x00000000000197e2 in __sfvwrite_r ()
=> 0x197e2 <__sfvwrite_r+168>:	andi	a4,a5,1
0x00000000000197e6 in __sfvwrite_r ()
=> 0x197e6 <__sfvwrite_r+172>:	bnez	a4,0x1985a <__sfvwrite_r+288>
0x000000000001985a in __sfvwrite_r ()
=> 0x1985a <__sfvwrite_r+288>:	li	s3,0
0x000000000001985c in __sfvwrite_r ()
=> 0x1985c <__sfvwrite_r+290>:	li	a0,0
0x000000000001985e in __sfvwrite_r ()
=> 0x1985e <__sfvwrite_r+292>:	li	s9,0
0x0000000000019860 in __sfvwrite_r ()
=> 0x19860 <__sfvwrite_r+294>:	li	s8,0
0x0000000000019862 in __sfvwrite_r ()
=> 0x19862 <__sfvwrite_r+296>:	beqz	s8,0x198f8 <__sfvwrite_r+446>
0x00000000000198f8 in __sfvwrite_r ()
=> 0x198f8 <__sfvwrite_r+446>:	ld	s8,8(s2)
0x00000000000198fc in __sfvwrite_r ()
=> 0x198fc <__sfvwrite_r+450>:	ld	s9,0(s2)
0x0000000000019900 in __sfvwrite_r ()
=> 0x19900 <__sfvwrite_r+454>:	addi	s2,s2,16
0x0000000000019902 in __sfvwrite_r ()
=> 0x19902 <__sfvwrite_r+456>:	beqz	s8,0x198f8 <__sfvwrite_r+446>
0x0000000000019906 in __sfvwrite_r ()
=> 0x19906 <__sfvwrite_r+460>:	mv	a2,s8
0x0000000000019908 in __sfvwrite_r ()
=> 0x19908 <__sfvwrite_r+462>:	li	a1,10
0x000000000001990a in __sfvwrite_r ()
=> 0x1990a <__sfvwrite_r+464>:	mv	a0,s9
0x000000000001990c in __sfvwrite_r ()
=> 0x1990c <__sfvwrite_r+466>:	jal	ra,0x15788 <memchr>
0x0000000000015788 in memchr ()
=> 0x15788 <memchr>:	andi	a5,a0,7
0x000000000001578c in memchr ()
=> 0x1578c <memchr+4>:	andi	a3,a1,255
0x0000000000015790 in memchr ()
=> 0x15790 <memchr+8>:	beqz	a5,0x157b4 <memchr+44>
0x0000000000015792 in memchr ()
=> 0x15792 <memchr+10>:	addi	a5,a2,-1
0x0000000000015796 in memchr ()
=> 0x15796 <memchr+14>:	beqz	a2,0x157be <memchr+54>
0x0000000000015798 in memchr ()
=> 0x15798 <memchr+16>:	li	a2,-1
0x000000000001579a in memchr ()
=> 0x1579a <memchr+18>:	j	0x157aa <memchr+34>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157b6 in memchr ()
=> 0x157b6 <memchr+46>:	li	a4,7
0x00000000000157b8 in memchr ()
=> 0x157b8 <memchr+48>:	bltu	a4,a5,0x157d6 <memchr+78>
0x00000000000157bc in memchr ()
=> 0x157bc <memchr+52>:	bnez	a5,0x157c2 <memchr+58>
0x00000000000157c2 in memchr ()
=> 0x157c2 <memchr+58>:	add	a5,a5,a0
0x00000000000157c4 in memchr ()
=> 0x157c4 <memchr+60>:	j	0x157cc <memchr+68>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157be in memchr ()
=> 0x157be <memchr+54>:	li	a0,0
0x00000000000157c0 in memchr ()
=> 0x157c0 <memchr+56>:	ret
0x0000000000019910 in __sfvwrite_r ()
=> 0x19910 <__sfvwrite_r+470>:	beqz	a0,0x19a4e <__sfvwrite_r+788>
0x0000000000019a4e in __sfvwrite_r ()
=> 0x19a4e <__sfvwrite_r+788>:	addiw	s3,s8,1
0x0000000000019a52 in __sfvwrite_r ()
=> 0x19a52 <__sfvwrite_r+792>:	j	0x19868 <__sfvwrite_r+302>
0x0000000000019868 in __sfvwrite_r ()
=> 0x19868 <__sfvwrite_r+302>:	mv	s7,s3
0x000000000001986a in __sfvwrite_r ()
=> 0x1986a <__sfvwrite_r+304>:	bgeu	s8,s3,0x19870 <__sfvwrite_r+310>
0x000000000001986e in __sfvwrite_r ()
=> 0x1986e <__sfvwrite_r+308>:	mv	s7,s8
0x0000000000019870 in __sfvwrite_r ()
=> 0x19870 <__sfvwrite_r+310>:	ld	a0,0(s0)
0x0000000000019872 in __sfvwrite_r ()
=> 0x19872 <__sfvwrite_r+312>:	ld	a5,24(s0)
0x0000000000019874 in __sfvwrite_r ()
=> 0x19874 <__sfvwrite_r+314>:	lw	a3,32(s0)
0x0000000000019876 in __sfvwrite_r ()
=> 0x19876 <__sfvwrite_r+316>:	mv	s1,s7
0x0000000000019878 in __sfvwrite_r ()
=> 0x19878 <__sfvwrite_r+318>:	bgeu	a5,a0,0x19886 <__sfvwrite_r+332>
0x0000000000019886 in __sfvwrite_r ()
=> 0x19886 <__sfvwrite_r+332>:	blt	s7,a3,0x19a0e <__sfvwrite_r+724>
0x0000000000019a0e in __sfvwrite_r ()
=> 0x19a0e <__sfvwrite_r+724>:	mv	a2,s7
0x0000000000019a10 in __sfvwrite_r ()
=> 0x19a10 <__sfvwrite_r+726>:	mv	a1,s9
0x0000000000019a12 in __sfvwrite_r ()
=> 0x19a12 <__sfvwrite_r+728>:	jal	ra,0x19bbe <memmove>
0x0000000000019bbe in memmove ()
=> 0x19bbe <memmove>:	bgeu	a1,a0,0x19be2 <memmove+36>
0x0000000000019bc2 in memmove ()
=> 0x19bc2 <memmove+4>:	add	a5,a1,a2
0x0000000000019bc6 in memmove ()
=> 0x19bc6 <memmove+8>:	bgeu	a0,a5,0x19be2 <memmove+36>
0x0000000000019be2 in memmove ()
=> 0x19be2 <memmove+36>:	li	a5,31
0x0000000000019be4 in memmove ()
=> 0x19be4 <memmove+38>:	bltu	a5,a2,0x19c06 <memmove+72>
0x0000000000019be8 in memmove ()
=> 0x19be8 <memmove+42>:	mv	a5,a0
0x0000000000019bea in memmove ()
=> 0x19bea <memmove+44>:	addi	a3,a2,-1
0x0000000000019bee in memmove ()
=> 0x19bee <memmove+48>:	beqz	a2,0x19c8e <memmove+208>
0x0000000000019bf0 in memmove ()
=> 0x19bf0 <memmove+50>:	addi	a3,a3,1
0x0000000000019bf2 in memmove ()
=> 0x19bf2 <memmove+52>:	add	a3,a3,a5
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019c04 in memmove ()
=> 0x19c04 <memmove+70>:	ret
0x0000000000019a16 in __sfvwrite_r ()
=> 0x19a16 <__sfvwrite_r+732>:	lw	a3,12(s0)
0x0000000000019a18 in __sfvwrite_r ()
=> 0x19a18 <__sfvwrite_r+734>:	ld	a4,0(s0)
0x0000000000019a1a in __sfvwrite_r ()
=> 0x19a1a <__sfvwrite_r+736>:	sext.w	a5,s7
0x0000000000019a1e in __sfvwrite_r ()
=> 0x19a1e <__sfvwrite_r+740>:	subw	a3,a3,s7
0x0000000000019a22 in __sfvwrite_r ()
=> 0x19a22 <__sfvwrite_r+744>:	add	a4,a4,s7
0x0000000000019a24 in __sfvwrite_r ()
=> 0x19a24 <__sfvwrite_r+746>:	sw	a3,12(s0)
0x0000000000019a26 in __sfvwrite_r ()
=> 0x19a26 <__sfvwrite_r+748>:	sd	a4,0(s0)
0x0000000000019a28 in __sfvwrite_r ()
=> 0x19a28 <__sfvwrite_r+750>:	j	0x1989e <__sfvwrite_r+356>
0x000000000001989e in __sfvwrite_r ()
=> 0x1989e <__sfvwrite_r+356>:	subw	s3,s3,a5
0x00000000000198a2 in __sfvwrite_r ()
=> 0x198a2 <__sfvwrite_r+360>:	li	a0,1
0x00000000000198a4 in __sfvwrite_r ()
=> 0x198a4 <__sfvwrite_r+362>:	beqz	s3,0x198da <__sfvwrite_r+416>
0x00000000000198a8 in __sfvwrite_r ()
=> 0x198a8 <__sfvwrite_r+366>:	ld	a5,16(s4)
0x00000000000198ac in __sfvwrite_r ()
=> 0x198ac <__sfvwrite_r+370>:	add	s9,s9,s1
0x00000000000198ae in __sfvwrite_r ()
=> 0x198ae <__sfvwrite_r+372>:	sub	s8,s8,s1
0x00000000000198b2 in __sfvwrite_r ()
=> 0x198b2 <__sfvwrite_r+376>:	sub	s1,a5,s1
0x00000000000198b6 in __sfvwrite_r ()
=> 0x198b6 <__sfvwrite_r+380>:	sd	s1,16(s4)
0x00000000000198ba in __sfvwrite_r ()
=> 0x198ba <__sfvwrite_r+384>:	bnez	s1,0x19862 <__sfvwrite_r+296>
0x0000000000019862 in __sfvwrite_r ()
=> 0x19862 <__sfvwrite_r+296>:	beqz	s8,0x198f8 <__sfvwrite_r+446>
0x00000000000198f8 in __sfvwrite_r ()
=> 0x198f8 <__sfvwrite_r+446>:	ld	s8,8(s2)
0x00000000000198fc in __sfvwrite_r ()
=> 0x198fc <__sfvwrite_r+450>:	ld	s9,0(s2)
0x0000000000019900 in __sfvwrite_r ()
=> 0x19900 <__sfvwrite_r+454>:	addi	s2,s2,16
0x0000000000019902 in __sfvwrite_r ()
=> 0x19902 <__sfvwrite_r+456>:	beqz	s8,0x198f8 <__sfvwrite_r+446>
0x0000000000019906 in __sfvwrite_r ()
=> 0x19906 <__sfvwrite_r+460>:	mv	a2,s8
0x0000000000019908 in __sfvwrite_r ()
=> 0x19908 <__sfvwrite_r+462>:	li	a1,10
0x000000000001990a in __sfvwrite_r ()
=> 0x1990a <__sfvwrite_r+464>:	mv	a0,s9
0x000000000001990c in __sfvwrite_r ()
=> 0x1990c <__sfvwrite_r+466>:	jal	ra,0x15788 <memchr>
0x0000000000015788 in memchr ()
=> 0x15788 <memchr>:	andi	a5,a0,7
0x000000000001578c in memchr ()
=> 0x1578c <memchr+4>:	andi	a3,a1,255
0x0000000000015790 in memchr ()
=> 0x15790 <memchr+8>:	beqz	a5,0x157b4 <memchr+44>
0x0000000000015792 in memchr ()
=> 0x15792 <memchr+10>:	addi	a5,a2,-1
0x0000000000015796 in memchr ()
=> 0x15796 <memchr+14>:	beqz	a2,0x157be <memchr+54>
0x0000000000015798 in memchr ()
=> 0x15798 <memchr+16>:	li	a2,-1
0x000000000001579a in memchr ()
=> 0x1579a <memchr+18>:	j	0x157aa <memchr+34>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157a4 in memchr ()
=> 0x157a4 <memchr+28>:	addi	a5,a5,-1
0x00000000000157a6 in memchr ()
=> 0x157a6 <memchr+30>:	beq	a5,a2,0x157be <memchr+54>
0x00000000000157aa in memchr ()
=> 0x157aa <memchr+34>:	lbu	a4,0(a0)
0x00000000000157ae in memchr ()
=> 0x157ae <memchr+38>:	bne	a4,a3,0x1579c <memchr+20>
0x000000000001579c in memchr ()
=> 0x1579c <memchr+20>:	addi	a0,a0,1
0x000000000001579e in memchr ()
=> 0x1579e <memchr+22>:	andi	a4,a0,7
0x00000000000157a2 in memchr ()
=> 0x157a2 <memchr+26>:	beqz	a4,0x157b6 <memchr+46>
0x00000000000157b6 in memchr ()
=> 0x157b6 <memchr+46>:	li	a4,7
0x00000000000157b8 in memchr ()
=> 0x157b8 <memchr+48>:	bltu	a4,a5,0x157d6 <memchr+78>
0x00000000000157bc in memchr ()
=> 0x157bc <memchr+52>:	bnez	a5,0x157c2 <memchr+58>
0x00000000000157c2 in memchr ()
=> 0x157c2 <memchr+58>:	add	a5,a5,a0
0x00000000000157c4 in memchr ()
=> 0x157c4 <memchr+60>:	j	0x157cc <memchr+68>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157c6 in memchr ()
=> 0x157c6 <memchr+62>:	addi	a0,a0,1
0x00000000000157c8 in memchr ()
=> 0x157c8 <memchr+64>:	beq	a5,a0,0x157be <memchr+54>
0x00000000000157be in memchr ()
=> 0x157be <memchr+54>:	li	a0,0
0x00000000000157c0 in memchr ()
=> 0x157c0 <memchr+56>:	ret
0x0000000000019910 in __sfvwrite_r ()
=> 0x19910 <__sfvwrite_r+470>:	beqz	a0,0x19a4e <__sfvwrite_r+788>
0x0000000000019a4e in __sfvwrite_r ()
=> 0x19a4e <__sfvwrite_r+788>:	addiw	s3,s8,1
0x0000000000019a52 in __sfvwrite_r ()
=> 0x19a52 <__sfvwrite_r+792>:	j	0x19868 <__sfvwrite_r+302>
0x0000000000019868 in __sfvwrite_r ()
=> 0x19868 <__sfvwrite_r+302>:	mv	s7,s3
0x000000000001986a in __sfvwrite_r ()
=> 0x1986a <__sfvwrite_r+304>:	bgeu	s8,s3,0x19870 <__sfvwrite_r+310>
0x000000000001986e in __sfvwrite_r ()
=> 0x1986e <__sfvwrite_r+308>:	mv	s7,s8
0x0000000000019870 in __sfvwrite_r ()
=> 0x19870 <__sfvwrite_r+310>:	ld	a0,0(s0)
0x0000000000019872 in __sfvwrite_r ()
=> 0x19872 <__sfvwrite_r+312>:	ld	a5,24(s0)
0x0000000000019874 in __sfvwrite_r ()
=> 0x19874 <__sfvwrite_r+314>:	lw	a3,32(s0)
0x0000000000019876 in __sfvwrite_r ()
=> 0x19876 <__sfvwrite_r+316>:	mv	s1,s7
0x0000000000019878 in __sfvwrite_r ()
=> 0x19878 <__sfvwrite_r+318>:	bgeu	a5,a0,0x19886 <__sfvwrite_r+332>
0x000000000001987c in __sfvwrite_r ()
=> 0x1987c <__sfvwrite_r+322>:	lw	a5,12(s0)
0x000000000001987e in __sfvwrite_r ()
=> 0x1987e <__sfvwrite_r+324>:	addw	s6,a5,a3
0x0000000000019882 in __sfvwrite_r ()
=> 0x19882 <__sfvwrite_r+328>:	blt	s6,s7,0x1991c <__sfvwrite_r+482>
0x0000000000019886 in __sfvwrite_r ()
=> 0x19886 <__sfvwrite_r+332>:	blt	s7,a3,0x19a0e <__sfvwrite_r+724>
0x0000000000019a0e in __sfvwrite_r ()
=> 0x19a0e <__sfvwrite_r+724>:	mv	a2,s7
0x0000000000019a10 in __sfvwrite_r ()
=> 0x19a10 <__sfvwrite_r+726>:	mv	a1,s9
0x0000000000019a12 in __sfvwrite_r ()
=> 0x19a12 <__sfvwrite_r+728>:	jal	ra,0x19bbe <memmove>
0x0000000000019bbe in memmove ()
=> 0x19bbe <memmove>:	bgeu	a1,a0,0x19be2 <memmove+36>
0x0000000000019be2 in memmove ()
=> 0x19be2 <memmove+36>:	li	a5,31
0x0000000000019be4 in memmove ()
=> 0x19be4 <memmove+38>:	bltu	a5,a2,0x19c06 <memmove+72>
0x0000000000019be8 in memmove ()
=> 0x19be8 <memmove+42>:	mv	a5,a0
0x0000000000019bea in memmove ()
=> 0x19bea <memmove+44>:	addi	a3,a2,-1
0x0000000000019bee in memmove ()
=> 0x19bee <memmove+48>:	beqz	a2,0x19c8e <memmove+208>
0x0000000000019bf0 in memmove ()
=> 0x19bf0 <memmove+50>:	addi	a3,a3,1
0x0000000000019bf2 in memmove ()
=> 0x19bf2 <memmove+52>:	add	a3,a3,a5
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019c04 in memmove ()
=> 0x19c04 <memmove+70>:	ret
0x0000000000019a16 in __sfvwrite_r ()
=> 0x19a16 <__sfvwrite_r+732>:	lw	a3,12(s0)
0x0000000000019a18 in __sfvwrite_r ()
=> 0x19a18 <__sfvwrite_r+734>:	ld	a4,0(s0)
0x0000000000019a1a in __sfvwrite_r ()
=> 0x19a1a <__sfvwrite_r+736>:	sext.w	a5,s7
0x0000000000019a1e in __sfvwrite_r ()
=> 0x19a1e <__sfvwrite_r+740>:	subw	a3,a3,s7
0x0000000000019a22 in __sfvwrite_r ()
=> 0x19a22 <__sfvwrite_r+744>:	add	a4,a4,s7
0x0000000000019a24 in __sfvwrite_r ()
=> 0x19a24 <__sfvwrite_r+746>:	sw	a3,12(s0)
0x0000000000019a26 in __sfvwrite_r ()
=> 0x19a26 <__sfvwrite_r+748>:	sd	a4,0(s0)
0x0000000000019a28 in __sfvwrite_r ()
=> 0x19a28 <__sfvwrite_r+750>:	j	0x1989e <__sfvwrite_r+356>
0x000000000001989e in __sfvwrite_r ()
=> 0x1989e <__sfvwrite_r+356>:	subw	s3,s3,a5
0x00000000000198a2 in __sfvwrite_r ()
=> 0x198a2 <__sfvwrite_r+360>:	li	a0,1
0x00000000000198a4 in __sfvwrite_r ()
=> 0x198a4 <__sfvwrite_r+362>:	beqz	s3,0x198da <__sfvwrite_r+416>
0x00000000000198a8 in __sfvwrite_r ()
=> 0x198a8 <__sfvwrite_r+366>:	ld	a5,16(s4)
0x00000000000198ac in __sfvwrite_r ()
=> 0x198ac <__sfvwrite_r+370>:	add	s9,s9,s1
0x00000000000198ae in __sfvwrite_r ()
=> 0x198ae <__sfvwrite_r+372>:	sub	s8,s8,s1
0x00000000000198b2 in __sfvwrite_r ()
=> 0x198b2 <__sfvwrite_r+376>:	sub	s1,a5,s1
0x00000000000198b6 in __sfvwrite_r ()
=> 0x198b6 <__sfvwrite_r+380>:	sd	s1,16(s4)
0x00000000000198ba in __sfvwrite_r ()
=> 0x198ba <__sfvwrite_r+384>:	bnez	s1,0x19862 <__sfvwrite_r+296>
0x00000000000198bc in __sfvwrite_r ()
=> 0x198bc <__sfvwrite_r+386>:	li	a0,0
0x00000000000198be in __sfvwrite_r ()
=> 0x198be <__sfvwrite_r+388>:	ld	ra,88(sp)
0x00000000000198c0 in __sfvwrite_r ()
=> 0x198c0 <__sfvwrite_r+390>:	ld	s0,80(sp)
0x00000000000198c2 in __sfvwrite_r ()
=> 0x198c2 <__sfvwrite_r+392>:	ld	s1,72(sp)
0x00000000000198c4 in __sfvwrite_r ()
=> 0x198c4 <__sfvwrite_r+394>:	ld	s2,64(sp)
0x00000000000198c6 in __sfvwrite_r ()
=> 0x198c6 <__sfvwrite_r+396>:	ld	s3,56(sp)
0x00000000000198c8 in __sfvwrite_r ()
=> 0x198c8 <__sfvwrite_r+398>:	ld	s4,48(sp)
0x00000000000198ca in __sfvwrite_r ()
=> 0x198ca <__sfvwrite_r+400>:	ld	s5,40(sp)
0x00000000000198cc in __sfvwrite_r ()
=> 0x198cc <__sfvwrite_r+402>:	ld	s6,32(sp)
0x00000000000198ce in __sfvwrite_r ()
=> 0x198ce <__sfvwrite_r+404>:	ld	s7,24(sp)
0x00000000000198d0 in __sfvwrite_r ()
=> 0x198d0 <__sfvwrite_r+406>:	ld	s8,16(sp)
0x00000000000198d2 in __sfvwrite_r ()
=> 0x198d2 <__sfvwrite_r+408>:	ld	s9,8(sp)
0x00000000000198d4 in __sfvwrite_r ()
=> 0x198d4 <__sfvwrite_r+410>:	ld	s10,0(sp)
0x00000000000198d6 in __sfvwrite_r ()
=> 0x198d6 <__sfvwrite_r+412>:	addi	sp,sp,96
0x00000000000198d8 in __sfvwrite_r ()
=> 0x198d8 <__sfvwrite_r+414>:	ret
0x00000000000185fc in __sprint_r.part.0 ()
=> 0x185fc <__sprint_r.part.0+162>:	j	0x185c4 <__sprint_r.part.0+106>
0x00000000000185c4 in __sprint_r.part.0 ()
=> 0x185c4 <__sprint_r.part.0+106>:	ld	ra,72(sp)
0x00000000000185c6 in __sprint_r.part.0 ()
=> 0x185c6 <__sprint_r.part.0+108>:	ld	s0,64(sp)
0x00000000000185c8 in __sprint_r.part.0 ()
=> 0x185c8 <__sprint_r.part.0+110>:	sd	zero,16(s5)
0x00000000000185cc in __sprint_r.part.0 ()
=> 0x185cc <__sprint_r.part.0+114>:	sw	zero,8(s5)
0x00000000000185d0 in __sprint_r.part.0 ()
=> 0x185d0 <__sprint_r.part.0+118>:	ld	s1,56(sp)
0x00000000000185d2 in __sprint_r.part.0 ()
=> 0x185d2 <__sprint_r.part.0+120>:	ld	s2,48(sp)
0x00000000000185d4 in __sprint_r.part.0 ()
=> 0x185d4 <__sprint_r.part.0+122>:	ld	s3,40(sp)
0x00000000000185d6 in __sprint_r.part.0 ()
=> 0x185d6 <__sprint_r.part.0+124>:	ld	s4,32(sp)
0x00000000000185d8 in __sprint_r.part.0 ()
=> 0x185d8 <__sprint_r.part.0+126>:	ld	s5,24(sp)
0x00000000000185da in __sprint_r.part.0 ()
=> 0x185da <__sprint_r.part.0+128>:	ld	s6,16(sp)
0x00000000000185dc in __sprint_r.part.0 ()
=> 0x185dc <__sprint_r.part.0+130>:	ld	s7,8(sp)
0x00000000000185de in __sprint_r.part.0 ()
=> 0x185de <__sprint_r.part.0+132>:	addi	sp,sp,80
0x00000000000185e0 in __sprint_r.part.0 ()
=> 0x185e0 <__sprint_r.part.0+134>:	ret
0x0000000000011978 in _vfprintf_r ()
=> 0x11978 <_vfprintf_r+3022>:	beqz	a0,0x1103c <_vfprintf_r+658>
0x000000000001103c in _vfprintf_r ()
=> 0x1103c <_vfprintf_r+658>:	ld	a5,24(sp)
0x000000000001103e in _vfprintf_r ()
=> 0x1103e <_vfprintf_r+660>:	sw	zero,280(sp)
0x0000000000011042 in _vfprintf_r ()
=> 0x11042 <_vfprintf_r+664>:	beqz	a5,0x1104c <_vfprintf_r+674>
0x000000000001104c in _vfprintf_r ()
=> 0x1104c <_vfprintf_r+674>:	mv	t1,s6
0x000000000001104e in _vfprintf_r ()
=> 0x1104e <_vfprintf_r+676>:	mv	s9,s0
0x0000000000011050 in _vfprintf_r ()
=> 0x11050 <_vfprintf_r+678>:	lbu	a5,0(s9)
0x0000000000011054 in _vfprintf_r ()
=> 0x11054 <_vfprintf_r+682>:	bnez	a5,0x10e92 <_vfprintf_r+232>
0x0000000000010e92 in _vfprintf_r ()
=> 0x10e92 <_vfprintf_r+232>:	mv	s0,s9
0x0000000000010e94 in _vfprintf_r ()
=> 0x10e94 <_vfprintf_r+234>:	li	a4,37
0x0000000000010e98 in _vfprintf_r ()
=> 0x10e98 <_vfprintf_r+238>:	beq	a5,a4,0x1119e <_vfprintf_r+1012>
0x0000000000010e9c in _vfprintf_r ()
=> 0x10e9c <_vfprintf_r+242>:	lbu	a5,1(s0)
0x0000000000010ea0 in _vfprintf_r ()
=> 0x10ea0 <_vfprintf_r+246>:	addi	s0,s0,1
0x0000000000010ea2 in _vfprintf_r ()
=> 0x10ea2 <_vfprintf_r+248>:	bnez	a5,0x10e98 <_vfprintf_r+238>
0x0000000000010ea4 in _vfprintf_r ()
=> 0x10ea4 <_vfprintf_r+250>:	subw	s1,s0,s9
0x0000000000010ea8 in _vfprintf_r ()
=> 0x10ea8 <_vfprintf_r+254>:	beqz	s1,0x11058 <_vfprintf_r+686>
0x0000000000010eac in _vfprintf_r ()
=> 0x10eac <_vfprintf_r+258>:	ld	a4,288(sp)
0x0000000000010eae in _vfprintf_r ()
=> 0x10eae <_vfprintf_r+260>:	lw	a5,280(sp)
0x0000000000010eb2 in _vfprintf_r ()
=> 0x10eb2 <_vfprintf_r+264>:	sd	s9,0(t1)
0x0000000000010eb6 in _vfprintf_r ()
=> 0x10eb6 <_vfprintf_r+268>:	add	a4,a4,s1
0x0000000000010eb8 in _vfprintf_r ()
=> 0x10eb8 <_vfprintf_r+270>:	addiw	a5,a5,1
0x0000000000010eba in _vfprintf_r ()
=> 0x10eba <_vfprintf_r+272>:	sd	s1,8(t1)
0x0000000000010ebe in _vfprintf_r ()
=> 0x10ebe <_vfprintf_r+276>:	sd	a4,288(sp)
0x0000000000010ec0 in _vfprintf_r ()
=> 0x10ec0 <_vfprintf_r+278>:	sw	a5,280(sp)
0x0000000000010ec4 in _vfprintf_r ()
=> 0x10ec4 <_vfprintf_r+282>:	sext.w	a4,a5
0x0000000000010ec8 in _vfprintf_r ()
=> 0x10ec8 <_vfprintf_r+286>:	li	a5,7
0x0000000000010eca in _vfprintf_r ()
=> 0x10eca <_vfprintf_r+288>:	addi	t1,t1,16
0x0000000000010ecc in _vfprintf_r ()
=> 0x10ecc <_vfprintf_r+290>:	blt	a5,a4,0x111ac <_vfprintf_r+1026>
0x0000000000010ed0 in _vfprintf_r ()
=> 0x10ed0 <_vfprintf_r+294>:	ld	a4,8(sp)
0x0000000000010ed2 in _vfprintf_r ()
=> 0x10ed2 <_vfprintf_r+296>:	lbu	a5,0(s0)
0x0000000000010ed6 in _vfprintf_r ()
=> 0x10ed6 <_vfprintf_r+300>:	addw	a4,a4,s1
0x0000000000010ed8 in _vfprintf_r ()
=> 0x10ed8 <_vfprintf_r+302>:	sd	a4,8(sp)
0x0000000000010eda in _vfprintf_r ()
=> 0x10eda <_vfprintf_r+304>:	beqz	a5,0x11058 <_vfprintf_r+686>
0x0000000000011058 in _vfprintf_r ()
=> 0x11058 <_vfprintf_r+686>:	ld	a5,288(sp)
0x000000000001105a in _vfprintf_r ()
=> 0x1105a <_vfprintf_r+688>:	beqz	a5,0x11060 <_vfprintf_r+694>
0x000000000001105c in _vfprintf_r ()
=> 0x1105c <_vfprintf_r+690>:	j	0x122d0 <_vfprintf_r+5414>
0x00000000000122d0 in _vfprintf_r ()
=> 0x122d0 <_vfprintf_r+5414>:	addi	a2,sp,272
0x00000000000122d2 in _vfprintf_r ()
=> 0x122d2 <_vfprintf_r+5416>:	mv	a1,s2
0x00000000000122d4 in _vfprintf_r ()
=> 0x122d4 <_vfprintf_r+5418>:	mv	a0,s4
0x00000000000122d6 in _vfprintf_r ()
=> 0x122d6 <_vfprintf_r+5420>:	jal	ra,0x185fe <__sprint_r>
0x00000000000185fe in __sprint_r ()
=> 0x185fe <__sprint_r>:	ld	a4,16(a2)
0x0000000000018600 in __sprint_r ()
=> 0x18600 <__sprint_r+2>:	beqz	a4,0x18604 <__sprint_r+6>
0x0000000000018602 in __sprint_r ()
=> 0x18602 <__sprint_r+4>:	j	0x1855a <__sprint_r.part.0>
0x000000000001855a in __sprint_r.part.0 ()
=> 0x1855a <__sprint_r.part.0>:	lw	a5,172(a1)
0x000000000001855e in __sprint_r.part.0 ()
=> 0x1855e <__sprint_r.part.0+4>:	addi	sp,sp,-80
0x0000000000018560 in __sprint_r.part.0 ()
=> 0x18560 <__sprint_r.part.0+6>:	lui	a4,0x2
0x0000000000018562 in __sprint_r.part.0 ()
=> 0x18562 <__sprint_r.part.0+8>:	sd	s5,24(sp)
0x0000000000018564 in __sprint_r.part.0 ()
=> 0x18564 <__sprint_r.part.0+10>:	sd	ra,72(sp)
0x0000000000018566 in __sprint_r.part.0 ()
=> 0x18566 <__sprint_r.part.0+12>:	sd	s0,64(sp)
0x0000000000018568 in __sprint_r.part.0 ()
=> 0x18568 <__sprint_r.part.0+14>:	sd	s1,56(sp)
0x000000000001856a in __sprint_r.part.0 ()
=> 0x1856a <__sprint_r.part.0+16>:	sd	s2,48(sp)
0x000000000001856c in __sprint_r.part.0 ()
=> 0x1856c <__sprint_r.part.0+18>:	sd	s3,40(sp)
0x000000000001856e in __sprint_r.part.0 ()
=> 0x1856e <__sprint_r.part.0+20>:	sd	s4,32(sp)
0x0000000000018570 in __sprint_r.part.0 ()
=> 0x18570 <__sprint_r.part.0+22>:	sd	s6,16(sp)
0x0000000000018572 in __sprint_r.part.0 ()
=> 0x18572 <__sprint_r.part.0+24>:	sd	s7,8(sp)
0x0000000000018574 in __sprint_r.part.0 ()
=> 0x18574 <__sprint_r.part.0+26>:	and	a5,a5,a4
0x0000000000018576 in __sprint_r.part.0 ()
=> 0x18576 <__sprint_r.part.0+28>:	mv	s5,a2
0x0000000000018578 in __sprint_r.part.0 ()
=> 0x18578 <__sprint_r.part.0+30>:	beqz	a5,0x185f8 <__sprint_r.part.0+158>
0x00000000000185f8 in __sprint_r.part.0 ()
=> 0x185f8 <__sprint_r.part.0+158>:	jal	ra,0x1973a <__sfvwrite_r>
0x000000000001973a in __sfvwrite_r ()
=> 0x1973a <__sfvwrite_r>:	ld	a5,16(a2)
0x000000000001973c in __sfvwrite_r ()
=> 0x1973c <__sfvwrite_r+2>:	beqz	a5,0x198f4 <__sfvwrite_r+442>
0x0000000000019740 in __sfvwrite_r ()
=> 0x19740 <__sfvwrite_r+6>:	lhu	a5,16(a1)
0x0000000000019744 in __sfvwrite_r ()
=> 0x19744 <__sfvwrite_r+10>:	addi	sp,sp,-96
0x0000000000019746 in __sfvwrite_r ()
=> 0x19746 <__sfvwrite_r+12>:	sd	s0,80(sp)
0x0000000000019748 in __sfvwrite_r ()
=> 0x19748 <__sfvwrite_r+14>:	sd	s4,48(sp)
0x000000000001974a in __sfvwrite_r ()
=> 0x1974a <__sfvwrite_r+16>:	sd	s5,40(sp)
0x000000000001974c in __sfvwrite_r ()
=> 0x1974c <__sfvwrite_r+18>:	sd	ra,88(sp)
0x000000000001974e in __sfvwrite_r ()
=> 0x1974e <__sfvwrite_r+20>:	sd	s1,72(sp)
0x0000000000019750 in __sfvwrite_r ()
=> 0x19750 <__sfvwrite_r+22>:	sd	s2,64(sp)
0x0000000000019752 in __sfvwrite_r ()
=> 0x19752 <__sfvwrite_r+24>:	sd	s3,56(sp)
0x0000000000019754 in __sfvwrite_r ()
=> 0x19754 <__sfvwrite_r+26>:	sd	s6,32(sp)
0x0000000000019756 in __sfvwrite_r ()
=> 0x19756 <__sfvwrite_r+28>:	sd	s7,24(sp)
0x0000000000019758 in __sfvwrite_r ()
=> 0x19758 <__sfvwrite_r+30>:	sd	s8,16(sp)
0x000000000001975a in __sfvwrite_r ()
=> 0x1975a <__sfvwrite_r+32>:	sd	s9,8(sp)
0x000000000001975c in __sfvwrite_r ()
=> 0x1975c <__sfvwrite_r+34>:	sd	s10,0(sp)
0x000000000001975e in __sfvwrite_r ()
=> 0x1975e <__sfvwrite_r+36>:	andi	a4,a5,8
0x0000000000019762 in __sfvwrite_r ()
=> 0x19762 <__sfvwrite_r+40>:	mv	s4,a2
0x0000000000019764 in __sfvwrite_r ()
=> 0x19764 <__sfvwrite_r+42>:	mv	s5,a0
0x0000000000019766 in __sfvwrite_r ()
=> 0x19766 <__sfvwrite_r+44>:	mv	s0,a1
0x0000000000019768 in __sfvwrite_r ()
=> 0x19768 <__sfvwrite_r+46>:	beqz	a4,0x197c8 <__sfvwrite_r+142>
0x000000000001976a in __sfvwrite_r ()
=> 0x1976a <__sfvwrite_r+48>:	ld	a4,24(a1)
0x000000000001976c in __sfvwrite_r ()
=> 0x1976c <__sfvwrite_r+50>:	beqz	a4,0x197c8 <__sfvwrite_r+142>
0x000000000001976e in __sfvwrite_r ()
=> 0x1976e <__sfvwrite_r+52>:	andi	a4,a5,2
0x0000000000019772 in __sfvwrite_r ()
=> 0x19772 <__sfvwrite_r+56>:	ld	s2,0(s4)
0x0000000000019776 in __sfvwrite_r ()
=> 0x19776 <__sfvwrite_r+60>:	beqz	a4,0x197e2 <__sfvwrite_r+168>
0x00000000000197e2 in __sfvwrite_r ()
=> 0x197e2 <__sfvwrite_r+168>:	andi	a4,a5,1
0x00000000000197e6 in __sfvwrite_r ()
=> 0x197e6 <__sfvwrite_r+172>:	bnez	a4,0x1985a <__sfvwrite_r+288>
0x000000000001985a in __sfvwrite_r ()
=> 0x1985a <__sfvwrite_r+288>:	li	s3,0
0x000000000001985c in __sfvwrite_r ()
=> 0x1985c <__sfvwrite_r+290>:	li	a0,0
0x000000000001985e in __sfvwrite_r ()
=> 0x1985e <__sfvwrite_r+292>:	li	s9,0
0x0000000000019860 in __sfvwrite_r ()
=> 0x19860 <__sfvwrite_r+294>:	li	s8,0
0x0000000000019862 in __sfvwrite_r ()
=> 0x19862 <__sfvwrite_r+296>:	beqz	s8,0x198f8 <__sfvwrite_r+446>
0x00000000000198f8 in __sfvwrite_r ()
=> 0x198f8 <__sfvwrite_r+446>:	ld	s8,8(s2)
0x00000000000198fc in __sfvwrite_r ()
=> 0x198fc <__sfvwrite_r+450>:	ld	s9,0(s2)
0x0000000000019900 in __sfvwrite_r ()
=> 0x19900 <__sfvwrite_r+454>:	addi	s2,s2,16
0x0000000000019902 in __sfvwrite_r ()
=> 0x19902 <__sfvwrite_r+456>:	beqz	s8,0x198f8 <__sfvwrite_r+446>
0x0000000000019906 in __sfvwrite_r ()
=> 0x19906 <__sfvwrite_r+460>:	mv	a2,s8
0x0000000000019908 in __sfvwrite_r ()
=> 0x19908 <__sfvwrite_r+462>:	li	a1,10
0x000000000001990a in __sfvwrite_r ()
=> 0x1990a <__sfvwrite_r+464>:	mv	a0,s9
0x000000000001990c in __sfvwrite_r ()
=> 0x1990c <__sfvwrite_r+466>:	jal	ra,0x15788 <memchr>
0x0000000000015788 in memchr ()
=> 0x15788 <memchr>:	andi	a5,a0,7
0x000000000001578c in memchr ()
=> 0x1578c <memchr+4>:	andi	a3,a1,255
0x0000000000015790 in memchr ()
=> 0x15790 <memchr+8>:	beqz	a5,0x157b4 <memchr+44>
0x00000000000157b4 in memchr ()
=> 0x157b4 <memchr+44>:	mv	a5,a2
0x00000000000157b6 in memchr ()
=> 0x157b6 <memchr+46>:	li	a4,7
0x00000000000157b8 in memchr ()
=> 0x157b8 <memchr+48>:	bltu	a4,a5,0x157d6 <memchr+78>
0x00000000000157bc in memchr ()
=> 0x157bc <memchr+52>:	bnez	a5,0x157c2 <memchr+58>
0x00000000000157c2 in memchr ()
=> 0x157c2 <memchr+58>:	add	a5,a5,a0
0x00000000000157c4 in memchr ()
=> 0x157c4 <memchr+60>:	j	0x157cc <memchr+68>
0x00000000000157cc in memchr ()
=> 0x157cc <memchr+68>:	lbu	a4,0(a0)
0x00000000000157d0 in memchr ()
=> 0x157d0 <memchr+72>:	bne	a4,a3,0x157c6 <memchr+62>
0x00000000000157d4 in memchr ()
=> 0x157d4 <memchr+76>:	ret
0x0000000000019910 in __sfvwrite_r ()
=> 0x19910 <__sfvwrite_r+470>:	beqz	a0,0x19a4e <__sfvwrite_r+788>
0x0000000000019914 in __sfvwrite_r ()
=> 0x19914 <__sfvwrite_r+474>:	addi	a0,a0,1
0x0000000000019916 in __sfvwrite_r ()
=> 0x19916 <__sfvwrite_r+476>:	subw	s3,a0,s9
0x000000000001991a in __sfvwrite_r ()
=> 0x1991a <__sfvwrite_r+480>:	j	0x19868 <__sfvwrite_r+302>
0x0000000000019868 in __sfvwrite_r ()
=> 0x19868 <__sfvwrite_r+302>:	mv	s7,s3
0x000000000001986a in __sfvwrite_r ()
=> 0x1986a <__sfvwrite_r+304>:	bgeu	s8,s3,0x19870 <__sfvwrite_r+310>
0x0000000000019870 in __sfvwrite_r ()
=> 0x19870 <__sfvwrite_r+310>:	ld	a0,0(s0)
0x0000000000019872 in __sfvwrite_r ()
=> 0x19872 <__sfvwrite_r+312>:	ld	a5,24(s0)
0x0000000000019874 in __sfvwrite_r ()
=> 0x19874 <__sfvwrite_r+314>:	lw	a3,32(s0)
0x0000000000019876 in __sfvwrite_r ()
=> 0x19876 <__sfvwrite_r+316>:	mv	s1,s7
0x0000000000019878 in __sfvwrite_r ()
=> 0x19878 <__sfvwrite_r+318>:	bgeu	a5,a0,0x19886 <__sfvwrite_r+332>
0x000000000001987c in __sfvwrite_r ()
=> 0x1987c <__sfvwrite_r+322>:	lw	a5,12(s0)
0x000000000001987e in __sfvwrite_r ()
=> 0x1987e <__sfvwrite_r+324>:	addw	s6,a5,a3
0x0000000000019882 in __sfvwrite_r ()
=> 0x19882 <__sfvwrite_r+328>:	blt	s6,s7,0x1991c <__sfvwrite_r+482>
0x0000000000019886 in __sfvwrite_r ()
=> 0x19886 <__sfvwrite_r+332>:	blt	s7,a3,0x19a0e <__sfvwrite_r+724>
0x0000000000019a0e in __sfvwrite_r ()
=> 0x19a0e <__sfvwrite_r+724>:	mv	a2,s7
0x0000000000019a10 in __sfvwrite_r ()
=> 0x19a10 <__sfvwrite_r+726>:	mv	a1,s9
0x0000000000019a12 in __sfvwrite_r ()
=> 0x19a12 <__sfvwrite_r+728>:	jal	ra,0x19bbe <memmove>
0x0000000000019bbe in memmove ()
=> 0x19bbe <memmove>:	bgeu	a1,a0,0x19be2 <memmove+36>
0x0000000000019bc2 in memmove ()
=> 0x19bc2 <memmove+4>:	add	a5,a1,a2
0x0000000000019bc6 in memmove ()
=> 0x19bc6 <memmove+8>:	bgeu	a0,a5,0x19be2 <memmove+36>
0x0000000000019be2 in memmove ()
=> 0x19be2 <memmove+36>:	li	a5,31
0x0000000000019be4 in memmove ()
=> 0x19be4 <memmove+38>:	bltu	a5,a2,0x19c06 <memmove+72>
0x0000000000019be8 in memmove ()
=> 0x19be8 <memmove+42>:	mv	a5,a0
0x0000000000019bea in memmove ()
=> 0x19bea <memmove+44>:	addi	a3,a2,-1
0x0000000000019bee in memmove ()
=> 0x19bee <memmove+48>:	beqz	a2,0x19c8e <memmove+208>
0x0000000000019bf0 in memmove ()
=> 0x19bf0 <memmove+50>:	addi	a3,a3,1
0x0000000000019bf2 in memmove ()
=> 0x19bf2 <memmove+52>:	add	a3,a3,a5
0x0000000000019bf4 in memmove ()
=> 0x19bf4 <memmove+54>:	lbu	a4,0(a1)
0x0000000000019bf8 in memmove ()
=> 0x19bf8 <memmove+58>:	addi	a5,a5,1
0x0000000000019bfa in memmove ()
=> 0x19bfa <memmove+60>:	addi	a1,a1,1
0x0000000000019bfc in memmove ()
=> 0x19bfc <memmove+62>:	sb	a4,-1(a5)
0x0000000000019c00 in memmove ()
=> 0x19c00 <memmove+66>:	bne	a5,a3,0x19bf4 <memmove+54>
0x0000000000019c04 in memmove ()
=> 0x19c04 <memmove+70>:	ret
0x0000000000019a16 in __sfvwrite_r ()
=> 0x19a16 <__sfvwrite_r+732>:	lw	a3,12(s0)
0x0000000000019a18 in __sfvwrite_r ()
=> 0x19a18 <__sfvwrite_r+734>:	ld	a4,0(s0)
0x0000000000019a1a in __sfvwrite_r ()
=> 0x19a1a <__sfvwrite_r+736>:	sext.w	a5,s7
0x0000000000019a1e in __sfvwrite_r ()
=> 0x19a1e <__sfvwrite_r+740>:	subw	a3,a3,s7
0x0000000000019a22 in __sfvwrite_r ()
=> 0x19a22 <__sfvwrite_r+744>:	add	a4,a4,s7
0x0000000000019a24 in __sfvwrite_r ()
=> 0x19a24 <__sfvwrite_r+746>:	sw	a3,12(s0)
0x0000000000019a26 in __sfvwrite_r ()
=> 0x19a26 <__sfvwrite_r+748>:	sd	a4,0(s0)
0x0000000000019a28 in __sfvwrite_r ()
=> 0x19a28 <__sfvwrite_r+750>:	j	0x1989e <__sfvwrite_r+356>
0x000000000001989e in __sfvwrite_r ()
=> 0x1989e <__sfvwrite_r+356>:	subw	s3,s3,a5
0x00000000000198a2 in __sfvwrite_r ()
=> 0x198a2 <__sfvwrite_r+360>:	li	a0,1
0x00000000000198a4 in __sfvwrite_r ()
=> 0x198a4 <__sfvwrite_r+362>:	beqz	s3,0x198da <__sfvwrite_r+416>
0x00000000000198da in __sfvwrite_r ()
=> 0x198da <__sfvwrite_r+416>:	mv	a1,s0
0x00000000000198dc in __sfvwrite_r ()
=> 0x198dc <__sfvwrite_r+418>:	mv	a0,s5
0x00000000000198de in __sfvwrite_r ()
=> 0x198de <__sfvwrite_r+420>:	jal	ra,0x12d16 <_fflush_r>
0x0000000000012d16 in _fflush_r ()
=> 0x12d16 <_fflush_r>:	addi	sp,sp,-32
0x0000000000012d18 in _fflush_r ()
=> 0x12d18 <_fflush_r+2>:	sd	s0,16(sp)
0x0000000000012d1a in _fflush_r ()
=> 0x12d1a <_fflush_r+4>:	sd	ra,24(sp)
0x0000000000012d1c in _fflush_r ()
=> 0x12d1c <_fflush_r+6>:	mv	s0,a0
0x0000000000012d1e in _fflush_r ()
=> 0x12d1e <_fflush_r+8>:	beqz	a0,0x12d24 <_fflush_r+14>
0x0000000000012d20 in _fflush_r ()
=> 0x12d20 <_fflush_r+10>:	lw	a5,80(a0)
0x0000000000012d22 in _fflush_r ()
=> 0x12d22 <_fflush_r+12>:	beqz	a5,0x12d34 <_fflush_r+30>
0x0000000000012d24 in _fflush_r ()
=> 0x12d24 <_fflush_r+14>:	lh	a5,16(a1)
0x0000000000012d28 in _fflush_r ()
=> 0x12d28 <_fflush_r+18>:	bnez	a5,0x12d42 <_fflush_r+44>
0x0000000000012d42 in _fflush_r ()
=> 0x12d42 <_fflush_r+44>:	mv	a0,s0
0x0000000000012d44 in _fflush_r ()
=> 0x12d44 <_fflush_r+46>:	ld	s0,16(sp)
0x0000000000012d46 in _fflush_r ()
=> 0x12d46 <_fflush_r+48>:	ld	ra,24(sp)
0x0000000000012d48 in _fflush_r ()
=> 0x12d48 <_fflush_r+50>:	addi	sp,sp,32
0x0000000000012d4a in _fflush_r ()
=> 0x12d4a <_fflush_r+52>:	j	0x12b84 <__sflush_r>
0x0000000000012b84 in __sflush_r ()
=> 0x12b84 <__sflush_r>:	lh	a5,16(a1)
0x0000000000012b88 in __sflush_r ()
=> 0x12b88 <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000012b8a in __sflush_r ()
=> 0x12b8a <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000012b8c in __sflush_r ()
=> 0x12b8c <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000012b8e in __sflush_r ()
=> 0x12b8e <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000012b90 in __sflush_r ()
=> 0x12b90 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000012b92 in __sflush_r ()
=> 0x12b92 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000012b94 in __sflush_r ()
=> 0x12b94 <__sflush_r+16>:	andi	a3,a5,8
0x0000000000012b98 in __sflush_r ()
=> 0x12b98 <__sflush_r+20>:	mv	s0,a1
0x0000000000012b9a in __sflush_r ()
=> 0x12b9a <__sflush_r+22>:	mv	s3,a0
0x0000000000012b9c in __sflush_r ()
=> 0x12b9c <__sflush_r+24>:	bnez	a3,0x12c50 <__sflush_r+204>
0x0000000000012c50 in __sflush_r ()
=> 0x12c50 <__sflush_r+204>:	ld	s2,24(a1)
0x0000000000012c54 in __sflush_r ()
=> 0x12c54 <__sflush_r+208>:	beqz	s2,0x12c40 <__sflush_r+188>
0x0000000000012c58 in __sflush_r ()
=> 0x12c58 <__sflush_r+212>:	ld	s1,0(a1)
0x0000000000012c5a in __sflush_r ()
=> 0x12c5a <__sflush_r+214>:	slli	a4,a5,0x30
0x0000000000012c5e in __sflush_r ()
=> 0x12c5e <__sflush_r+218>:	srli	a4,a4,0x30
0x0000000000012c60 in __sflush_r ()
=> 0x12c60 <__sflush_r+220>:	andi	a4,a4,3
0x0000000000012c62 in __sflush_r ()
=> 0x12c62 <__sflush_r+222>:	sd	s2,0(a1)
0x0000000000012c66 in __sflush_r ()
=> 0x12c66 <__sflush_r+226>:	subw	s1,s1,s2
0x0000000000012c6a in __sflush_r ()
=> 0x12c6a <__sflush_r+230>:	li	a5,0
0x0000000000012c6c in __sflush_r ()
=> 0x12c6c <__sflush_r+232>:	bnez	a4,0x12c70 <__sflush_r+236>
0x0000000000012c70 in __sflush_r ()
=> 0x12c70 <__sflush_r+236>:	sw	a5,12(s0)
0x0000000000012c72 in __sflush_r ()
=> 0x12c72 <__sflush_r+238>:	bgtz	s1,0x12c7e <__sflush_r+250>
0x0000000000012c7e in __sflush_r ()
=> 0x12c7e <__sflush_r+250>:	ld	a5,64(s0)
0x0000000000012c80 in __sflush_r ()
=> 0x12c80 <__sflush_r+252>:	ld	a1,48(s0)
0x0000000000012c82 in __sflush_r ()
=> 0x12c82 <__sflush_r+254>:	mv	a3,s1
0x0000000000012c84 in __sflush_r ()
=> 0x12c84 <__sflush_r+256>:	mv	a2,s2
0x0000000000012c86 in __sflush_r ()
=> 0x12c86 <__sflush_r+258>:	mv	a0,s3
0x0000000000012c88 in __sflush_r ()
=> 0x12c88 <__sflush_r+260>:	jalr	a5
0x00000000000166fe in __swrite ()
=> 0x166fe <__swrite>:	lh	a5,16(a1)
0x0000000000016702 in __swrite ()
=> 0x16702 <__swrite+4>:	addi	sp,sp,-48
0x0000000000016704 in __swrite ()
=> 0x16704 <__swrite+6>:	sd	s0,32(sp)
0x0000000000016706 in __swrite ()
=> 0x16706 <__swrite+8>:	sd	s1,24(sp)
0x0000000000016708 in __swrite ()
=> 0x16708 <__swrite+10>:	sd	s2,16(sp)
0x000000000001670a in __swrite ()
=> 0x1670a <__swrite+12>:	sd	s3,8(sp)
0x000000000001670c in __swrite ()
=> 0x1670c <__swrite+14>:	sd	ra,40(sp)
0x000000000001670e in __swrite ()
=> 0x1670e <__swrite+16>:	andi	a4,a5,256
0x0000000000016712 in __swrite ()
=> 0x16712 <__swrite+20>:	mv	s0,a1
0x0000000000016714 in __swrite ()
=> 0x16714 <__swrite+22>:	mv	s1,a0
0x0000000000016716 in __swrite ()
=> 0x16716 <__swrite+24>:	lh	a1,18(a1)
0x000000000001671a in __swrite ()
=> 0x1671a <__swrite+28>:	mv	s2,a2
0x000000000001671c in __swrite ()
=> 0x1671c <__swrite+30>:	mv	s3,a3
0x000000000001671e in __swrite ()
=> 0x1671e <__swrite+32>:	bnez	a4,0x16740 <__swrite+66>
0x0000000000016720 in __swrite ()
=> 0x16720 <__swrite+34>:	lui	a4,0xfffff
0x0000000000016722 in __swrite ()
=> 0x16722 <__swrite+36>:	addi	a4,a4,-1
0x0000000000016724 in __swrite ()
=> 0x16724 <__swrite+38>:	and	a5,a5,a4
0x0000000000016726 in __swrite ()
=> 0x16726 <__swrite+40>:	sh	a5,16(s0)
0x000000000001672a in __swrite ()
=> 0x1672a <__swrite+44>:	ld	s0,32(sp)
0x000000000001672c in __swrite ()
=> 0x1672c <__swrite+46>:	ld	ra,40(sp)
0x000000000001672e in __swrite ()
=> 0x1672e <__swrite+48>:	mv	a3,s3
0x0000000000016730 in __swrite ()
=> 0x16730 <__swrite+50>:	mv	a2,s2
0x0000000000016732 in __swrite ()
=> 0x16732 <__swrite+52>:	ld	s3,8(sp)
0x0000000000016734 in __swrite ()
=> 0x16734 <__swrite+54>:	ld	s2,16(sp)
0x0000000000016736 in __swrite ()
=> 0x16736 <__swrite+56>:	mv	a0,s1
0x0000000000016738 in __swrite ()
=> 0x16738 <__swrite+58>:	ld	s1,24(sp)
0x000000000001673a in __swrite ()
=> 0x1673a <__swrite+60>:	addi	sp,sp,48
0x000000000001673c in __swrite ()
=> 0x1673c <__swrite+62>:	j	0x19306 <_write_r>
0x0000000000019306 in _write_r ()
=> 0x19306 <_write_r>:	addi	sp,sp,-32
0x0000000000019308 in _write_r ()
=> 0x19308 <_write_r+2>:	mv	a4,a1
0x000000000001930a in _write_r ()
=> 0x1930a <_write_r+4>:	sd	s0,16(sp)
0x000000000001930c in _write_r ()
=> 0x1930c <_write_r+6>:	sd	s1,8(sp)
0x000000000001930e in _write_r ()
=> 0x1930e <_write_r+8>:	mv	a1,a2
0x0000000000019310 in _write_r ()
=> 0x19310 <_write_r+10>:	mv	s0,a0
0x0000000000019312 in _write_r ()
=> 0x19312 <_write_r+12>:	mv	a2,a3
0x0000000000019314 in _write_r ()
=> 0x19314 <_write_r+14>:	mv	a0,a4
0x0000000000019316 in _write_r ()
=> 0x19316 <_write_r+16>:	sd	ra,24(sp)
0x0000000000019318 in _write_r ()
=> 0x19318 <_write_r+18>:	sw	zero,1936(gp)
0x000000000001931c in _write_r ()
=> 0x1931c <_write_r+22>:	jal	ra,0x1b41a <_write>
0x000000000001b41a in _write ()
=> 0x1b41a <_write>:	addi	sp,sp,-16
0x000000000001b41c in _write ()
=> 0x1b41c <_write+2>:	sd	ra,8(sp)
0x000000000001b41e in _write ()
=> 0x1b41e <_write+4>:	sd	s0,0(sp)
0x000000000001b420 in _write ()
=> 0x1b420 <_write+6>:	li	a7,64
0x000000000001b424 in _write ()
=> 0x1b424 <_write+10>:	ecall
0x000000000001b428 in _write ()
=> 0x1b428 <_write+14>:	mv	s0,a0
0x000000000001b42a in _write ()
=> 0x1b42a <_write+16>:	bltz	a0,0x1b438 <_write+30>
0x000000000001b42e in _write ()
=> 0x1b42e <_write+20>:	ld	ra,8(sp)
0x000000000001b430 in _write ()
=> 0x1b430 <_write+22>:	mv	a0,s0
0x000000000001b432 in _write ()
=> 0x1b432 <_write+24>:	ld	s0,0(sp)
0x000000000001b434 in _write ()
=> 0x1b434 <_write+26>:	addi	sp,sp,16
0x000000000001b436 in _write ()
=> 0x1b436 <_write+28>:	ret
0x0000000000019320 in _write_r ()
=> 0x19320 <_write_r+26>:	li	a5,-1
0x0000000000019322 in _write_r ()
=> 0x19322 <_write_r+28>:	beq	a0,a5,0x19330 <_write_r+42>
0x0000000000019326 in _write_r ()
=> 0x19326 <_write_r+32>:	ld	ra,24(sp)
0x0000000000019328 in _write_r ()
=> 0x19328 <_write_r+34>:	ld	s0,16(sp)
0x000000000001932a in _write_r ()
=> 0x1932a <_write_r+36>:	ld	s1,8(sp)
0x000000000001932c in _write_r ()
=> 0x1932c <_write_r+38>:	addi	sp,sp,32
0x000000000001932e in _write_r ()
=> 0x1932e <_write_r+40>:	ret
0x0000000000012c8a in __sflush_r ()
=> 0x12c8a <__sflush_r+262>:	subw	s1,s1,a0
0x0000000000012c8c in __sflush_r ()
=> 0x12c8c <__sflush_r+264>:	bgtz	a0,0x12c78 <__sflush_r+244>
0x0000000000012c78 in __sflush_r ()
=> 0x12c78 <__sflush_r+244>:	add	s2,s2,a0
0x0000000000012c7a in __sflush_r ()
=> 0x12c7a <__sflush_r+246>:	blez	s1,0x12c40 <__sflush_r+188>
0x0000000000012c40 in __sflush_r ()
=> 0x12c40 <__sflush_r+188>:	li	a0,0
0x0000000000012c42 in __sflush_r ()
=> 0x12c42 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000012c44 in __sflush_r ()
=> 0x12c44 <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000012c46 in __sflush_r ()
=> 0x12c46 <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000012c48 in __sflush_r ()
=> 0x12c48 <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000012c4a in __sflush_r ()
=> 0x12c4a <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000012c4c in __sflush_r ()
=> 0x12c4c <__sflush_r+200>:	addi	sp,sp,48
0x0000000000012c4e in __sflush_r ()
=> 0x12c4e <__sflush_r+202>:	ret
0x00000000000198e2 in __sfvwrite_r ()
=> 0x198e2 <__sfvwrite_r+424>:	beqz	a0,0x198a8 <__sfvwrite_r+366>
0x00000000000198a8 in __sfvwrite_r ()
=> 0x198a8 <__sfvwrite_r+366>:	ld	a5,16(s4)
0x00000000000198ac in __sfvwrite_r ()
=> 0x198ac <__sfvwrite_r+370>:	add	s9,s9,s1
0x00000000000198ae in __sfvwrite_r ()
=> 0x198ae <__sfvwrite_r+372>:	sub	s8,s8,s1
0x00000000000198b2 in __sfvwrite_r ()
=> 0x198b2 <__sfvwrite_r+376>:	sub	s1,a5,s1
0x00000000000198b6 in __sfvwrite_r ()
=> 0x198b6 <__sfvwrite_r+380>:	sd	s1,16(s4)
0x00000000000198ba in __sfvwrite_r ()
=> 0x198ba <__sfvwrite_r+384>:	bnez	s1,0x19862 <__sfvwrite_r+296>
0x00000000000198bc in __sfvwrite_r ()
=> 0x198bc <__sfvwrite_r+386>:	li	a0,0
0x00000000000198be in __sfvwrite_r ()
=> 0x198be <__sfvwrite_r+388>:	ld	ra,88(sp)
0x00000000000198c0 in __sfvwrite_r ()
=> 0x198c0 <__sfvwrite_r+390>:	ld	s0,80(sp)
0x00000000000198c2 in __sfvwrite_r ()
=> 0x198c2 <__sfvwrite_r+392>:	ld	s1,72(sp)
0x00000000000198c4 in __sfvwrite_r ()
=> 0x198c4 <__sfvwrite_r+394>:	ld	s2,64(sp)
0x00000000000198c6 in __sfvwrite_r ()
=> 0x198c6 <__sfvwrite_r+396>:	ld	s3,56(sp)
0x00000000000198c8 in __sfvwrite_r ()
=> 0x198c8 <__sfvwrite_r+398>:	ld	s4,48(sp)
0x00000000000198ca in __sfvwrite_r ()
=> 0x198ca <__sfvwrite_r+400>:	ld	s5,40(sp)
0x00000000000198cc in __sfvwrite_r ()
=> 0x198cc <__sfvwrite_r+402>:	ld	s6,32(sp)
0x00000000000198ce in __sfvwrite_r ()
=> 0x198ce <__sfvwrite_r+404>:	ld	s7,24(sp)
0x00000000000198d0 in __sfvwrite_r ()
=> 0x198d0 <__sfvwrite_r+406>:	ld	s8,16(sp)
0x00000000000198d2 in __sfvwrite_r ()
=> 0x198d2 <__sfvwrite_r+408>:	ld	s9,8(sp)
0x00000000000198d4 in __sfvwrite_r ()
=> 0x198d4 <__sfvwrite_r+410>:	ld	s10,0(sp)
0x00000000000198d6 in __sfvwrite_r ()
=> 0x198d6 <__sfvwrite_r+412>:	addi	sp,sp,96
0x00000000000198d8 in __sfvwrite_r ()
=> 0x198d8 <__sfvwrite_r+414>:	ret
0x00000000000185fc in __sprint_r.part.0 ()
=> 0x185fc <__sprint_r.part.0+162>:	j	0x185c4 <__sprint_r.part.0+106>
0x00000000000185c4 in __sprint_r.part.0 ()
=> 0x185c4 <__sprint_r.part.0+106>:	ld	ra,72(sp)
0x00000000000185c6 in __sprint_r.part.0 ()
=> 0x185c6 <__sprint_r.part.0+108>:	ld	s0,64(sp)
0x00000000000185c8 in __sprint_r.part.0 ()
=> 0x185c8 <__sprint_r.part.0+110>:	sd	zero,16(s5)
0x00000000000185cc in __sprint_r.part.0 ()
=> 0x185cc <__sprint_r.part.0+114>:	sw	zero,8(s5)
0x00000000000185d0 in __sprint_r.part.0 ()
=> 0x185d0 <__sprint_r.part.0+118>:	ld	s1,56(sp)
0x00000000000185d2 in __sprint_r.part.0 ()
=> 0x185d2 <__sprint_r.part.0+120>:	ld	s2,48(sp)
0x00000000000185d4 in __sprint_r.part.0 ()
=> 0x185d4 <__sprint_r.part.0+122>:	ld	s3,40(sp)
0x00000000000185d6 in __sprint_r.part.0 ()
=> 0x185d6 <__sprint_r.part.0+124>:	ld	s4,32(sp)
0x00000000000185d8 in __sprint_r.part.0 ()
=> 0x185d8 <__sprint_r.part.0+126>:	ld	s5,24(sp)
0x00000000000185da in __sprint_r.part.0 ()
=> 0x185da <__sprint_r.part.0+128>:	ld	s6,16(sp)
0x00000000000185dc in __sprint_r.part.0 ()
=> 0x185dc <__sprint_r.part.0+130>:	ld	s7,8(sp)
0x00000000000185de in __sprint_r.part.0 ()
=> 0x185de <__sprint_r.part.0+132>:	addi	sp,sp,80
0x00000000000185e0 in __sprint_r.part.0 ()
=> 0x185e0 <__sprint_r.part.0+134>:	ret
0x00000000000122da in _vfprintf_r ()
=> 0x122da <_vfprintf_r+5424>:	j	0x11060 <_vfprintf_r+694>
0x0000000000011060 in _vfprintf_r ()
=> 0x11060 <_vfprintf_r+694>:	lhu	a5,16(s2)
0x0000000000011064 in _vfprintf_r ()
=> 0x11064 <_vfprintf_r+698>:	andi	a5,a5,64
0x0000000000011068 in _vfprintf_r ()
=> 0x11068 <_vfprintf_r+702>:	beqz	a5,0x1106e <_vfprintf_r+708>
0x000000000001106e in _vfprintf_r ()
=> 0x1106e <_vfprintf_r+708>:	ld	ra,632(sp)
0x0000000000011072 in _vfprintf_r ()
=> 0x11072 <_vfprintf_r+712>:	ld	s0,624(sp)
0x0000000000011076 in _vfprintf_r ()
=> 0x11076 <_vfprintf_r+716>:	ld	a0,8(sp)
0x0000000000011078 in _vfprintf_r ()
=> 0x11078 <_vfprintf_r+718>:	ld	s1,616(sp)
0x000000000001107c in _vfprintf_r ()
=> 0x1107c <_vfprintf_r+722>:	ld	s2,608(sp)
0x0000000000011080 in _vfprintf_r ()
=> 0x11080 <_vfprintf_r+726>:	ld	s3,600(sp)
0x0000000000011084 in _vfprintf_r ()
=> 0x11084 <_vfprintf_r+730>:	ld	s4,592(sp)
0x0000000000011088 in _vfprintf_r ()
=> 0x11088 <_vfprintf_r+734>:	ld	s5,584(sp)
0x000000000001108c in _vfprintf_r ()
=> 0x1108c <_vfprintf_r+738>:	ld	s6,576(sp)
0x0000000000011090 in _vfprintf_r ()
=> 0x11090 <_vfprintf_r+742>:	ld	s7,568(sp)
0x0000000000011094 in _vfprintf_r ()
=> 0x11094 <_vfprintf_r+746>:	ld	s8,560(sp)
0x0000000000011098 in _vfprintf_r ()
=> 0x11098 <_vfprintf_r+750>:	ld	s9,552(sp)
0x000000000001109c in _vfprintf_r ()
=> 0x1109c <_vfprintf_r+754>:	ld	s10,544(sp)
0x00000000000110a0 in _vfprintf_r ()
=> 0x110a0 <_vfprintf_r+758>:	ld	s11,536(sp)
0x00000000000110a4 in _vfprintf_r ()
=> 0x110a4 <_vfprintf_r+762>:	addi	sp,sp,640
0x00000000000110a8 in _vfprintf_r ()
=> 0x110a8 <_vfprintf_r+766>:	ret
0x0000000000010d6e in printf ()
=> 0x10d6e <printf+38>:	ld	ra,24(sp)
0x0000000000010d70 in printf ()
=> 0x10d70 <printf+40>:	addi	sp,sp,96
0x0000000000010d72 in printf ()
=> 0x10d72 <printf+42>:	ret
stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:50
50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1037c <stop_trigger+84>:	ld	s0,32(sp)
0x0000000000010380 in stop_trigger () at ../config/riscv64/boards/generic/boardsupport.c:50
50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10380 <stop_trigger+88>:	ld	ra,40(sp)
0x0000000000010384	50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10384 <stop_trigger+92>:	addi	sp,sp,48
0x0000000000010388	50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10388 <stop_trigger+96>:	rdcycle	zero
0x000000000001038c	50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x1038c <stop_trigger+100>:	ld	ra,0(t6)
0x0000000000010390	50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10390 <stop_trigger+104>:	rdcycle	zero
0x0000000000010394	50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10394 <stop_trigger+108>:	addi	t6,t6,16
0x0000000000010398	50	in ../config/riscv64/boards/generic/boardsupport.c
=> 0x10398 <stop_trigger+112>:	ret
main (argc=1, argv=0x3ffffffb58) at main.c:63
63	main.c: No such file or directory.
=> 0x1025c <main+212>:	lw	a0,-40(s0)
0x0000000000010260	63	in main.c
=> 0x10260 <main+216>:	jal	ra,0x104d0 <verify_benchmark>
verify_benchmark (res=0) at libbs.c:118
118	libbs.c: No such file or directory.
=> 0x104d0 <verify_benchmark>:	addi	t6,t6,-16
0x00000000000104d4	118	in libbs.c
=> 0x104d4 <verify_benchmark+4>:	rdcycle	zero
0x00000000000104d8	118	in libbs.c
=> 0x104d8 <verify_benchmark+8>:	sd	ra,0(t6)
0x00000000000104dc	118	in libbs.c
=> 0x104dc <verify_benchmark+12>:	sd	ra,0(t6)
0x00000000000104e0	118	in libbs.c
=> 0x104e0 <verify_benchmark+16>:	rdcycle	zero
0x00000000000104e4	118	in libbs.c
=> 0x104e4 <verify_benchmark+20>:	addi	sp,sp,-32
0x00000000000104e8	118	in libbs.c
=> 0x104e8 <verify_benchmark+24>:	sd	ra,24(sp)
0x00000000000104ec	118	in libbs.c
=> 0x104ec <verify_benchmark+28>:	sd	s0,16(sp)
0x00000000000104f0	118	in libbs.c
=> 0x104f0 <verify_benchmark+32>:	addi	s0,sp,32
0x00000000000104f4	118	in libbs.c
=> 0x104f4 <verify_benchmark+36>:	mv	a1,a0
0x00000000000104f8	118	in libbs.c
=> 0x104f8 <verify_benchmark+40>:	sw	a0,-20(s0)
0x00000000000104fc	118	in libbs.c
=> 0x104fc <verify_benchmark+44>:	li	a0,-1
119	in libbs.c
=> 0x10500 <verify_benchmark+48>:	ld	s0,16(sp)
0x0000000000010504 in verify_benchmark (res=0) at libbs.c:119
119	in libbs.c
=> 0x10504 <verify_benchmark+52>:	ld	ra,24(sp)
0x0000000000010508	119	in libbs.c
=> 0x10508 <verify_benchmark+56>:	addi	sp,sp,32
0x000000000001050c	119	in libbs.c
=> 0x1050c <verify_benchmark+60>:	rdcycle	zero
0x0000000000010510	119	in libbs.c
=> 0x10510 <verify_benchmark+64>:	ld	ra,0(t6)
0x0000000000010514	119	in libbs.c
=> 0x10514 <verify_benchmark+68>:	rdcycle	zero
0x0000000000010518	119	in libbs.c
=> 0x10518 <verify_benchmark+72>:	addi	t6,t6,16
0x000000000001051c	119	in libbs.c
=> 0x1051c <verify_benchmark+76>:	ret
0x0000000000010264 in main (argc=1, argv=0x3ffffffb58) at main.c:63
63	main.c: No such file or directory.
=> 0x10264 <main+220>:	sw	a0,-44(s0)
65	in main.c
=> 0x10268 <main+224>:	ld	a0,-56(s0)
0x000000000001026c	65	in main.c
=> 0x1026c <main+228>:	jal	ra,0x1064c <free>
0x000000000001064c in free ()
=> 0x1064c <free>:	mv	a1,a0
0x000000000001064e in free ()
=> 0x1064e <free+2>:	ld	a0,1872(gp)
0x0000000000010652 in free ()
=> 0x10652 <free+6>:	j	0x13124 <_free_r>
0x0000000000013124 in _free_r ()
=> 0x13124 <_free_r>:	beqz	a1,0x13214 <_free_r+240>
0x0000000000013126 in _free_r ()
=> 0x13126 <_free_r+2>:	addi	sp,sp,-32
0x0000000000013128 in _free_r ()
=> 0x13128 <_free_r+4>:	sd	s0,16(sp)
0x000000000001312a in _free_r ()
=> 0x1312a <_free_r+6>:	sd	s1,8(sp)
0x000000000001312c in _free_r ()
=> 0x1312c <_free_r+8>:	mv	s0,a1
0x000000000001312e in _free_r ()
=> 0x1312e <_free_r+10>:	mv	s1,a0
0x0000000000013130 in _free_r ()
=> 0x13130 <_free_r+12>:	sd	ra,24(sp)
0x0000000000013132 in _free_r ()
=> 0x13132 <_free_r+14>:	jal	ra,0x10d22 <__malloc_lock>
0x0000000000010d22 in __malloc_lock ()
=> 0x10d22 <__malloc_lock>:	ret
0x0000000000013136 in _free_r ()
=> 0x13136 <_free_r+18>:	ld	a0,-8(s0)
0x000000000001313a in _free_r ()
=> 0x1313a <_free_r+22>:	addi	a4,s0,-16
0x000000000001313e in _free_r ()
=> 0x1313e <_free_r+26>:	lui	a1,0x1f
0x0000000000013142 in _free_r ()
=> 0x13142 <_free_r+30>:	andi	a5,a0,-2
0x0000000000013146 in _free_r ()
=> 0x13146 <_free_r+34>:	add	a2,a4,a5
0x000000000001314a in _free_r ()
=> 0x1314a <_free_r+38>:	addi	a1,a1,-256
0x000000000001314e in _free_r ()
=> 0x1314e <_free_r+42>:	ld	a3,8(a2)
0x0000000000013150 in _free_r ()
=> 0x13150 <_free_r+44>:	ld	a6,16(a1)
0x0000000000013154 in _free_r ()
=> 0x13154 <_free_r+48>:	andi	a3,a3,-4
0x0000000000013156 in _free_r ()
=> 0x13156 <_free_r+50>:	beq	a6,a2,0x1329a <_free_r+374>
0x000000000001315a in _free_r ()
=> 0x1315a <_free_r+54>:	sd	a3,8(a2)
0x000000000001315c in _free_r ()
=> 0x1315c <_free_r+56>:	andi	a0,a0,1
0x000000000001315e in _free_r ()
=> 0x1315e <_free_r+58>:	add	a6,a2,a3
0x0000000000013162 in _free_r ()
=> 0x13162 <_free_r+62>:	bnez	a0,0x131e4 <_free_r+192>
0x00000000000131e4 in _free_r ()
=> 0x131e4 <_free_r+192>:	ld	a0,8(a6)
0x00000000000131e8 in _free_r ()
=> 0x131e8 <_free_r+196>:	andi	a0,a0,1
0x00000000000131ea in _free_r ()
=> 0x131ea <_free_r+198>:	bnez	a0,0x13216 <_free_r+242>
0x0000000000013216 in _free_r ()
=> 0x13216 <_free_r+242>:	ori	a3,a5,1
0x000000000001321a in _free_r ()
=> 0x1321a <_free_r+246>:	sd	a3,-8(s0)
0x000000000001321e in _free_r ()
=> 0x1321e <_free_r+250>:	sd	a5,0(a2)
0x0000000000013220 in _free_r ()
=> 0x13220 <_free_r+252>:	li	a3,511
0x0000000000013224 in _free_r ()
=> 0x13224 <_free_r+256>:	bgeu	a3,a5,0x131a6 <_free_r+130>
0x0000000000013228 in _free_r ()
=> 0x13228 <_free_r+260>:	srli	a3,a5,0x9
0x000000000001322c in _free_r ()
=> 0x1322c <_free_r+264>:	li	a2,4
0x000000000001322e in _free_r ()
=> 0x1322e <_free_r+266>:	bltu	a2,a3,0x132cc <_free_r+424>
0x00000000000132cc in _free_r ()
=> 0x132cc <_free_r+424>:	li	a2,20
0x00000000000132ce in _free_r ()
=> 0x132ce <_free_r+426>:	bgeu	a2,a3,0x132f2 <_free_r+462>
0x00000000000132d2 in _free_r ()
=> 0x132d2 <_free_r+430>:	li	a2,84
0x00000000000132d6 in _free_r ()
=> 0x132d6 <_free_r+434>:	bltu	a2,a3,0x1332a <_free_r+518>
0x000000000001332a in _free_r ()
=> 0x1332a <_free_r+518>:	li	a2,340
0x000000000001332e in _free_r ()
=> 0x1332e <_free_r+522>:	bltu	a2,a3,0x13346 <_free_r+546>
0x0000000000013346 in _free_r ()
=> 0x13346 <_free_r+546>:	li	a2,1364
0x000000000001334a in _free_r ()
=> 0x1334a <_free_r+550>:	bltu	a2,a3,0x13362 <_free_r+574>
0x0000000000013362 in _free_r ()
=> 0x13362 <_free_r+574>:	li	a0,2032
0x0000000000013366 in _free_r ()
=> 0x13366 <_free_r+578>:	li	a2,126
0x000000000001336a in _free_r ()
=> 0x1336a <_free_r+582>:	j	0x13244 <_free_r+288>
0x0000000000013244 in _free_r ()
=> 0x13244 <_free_r+288>:	add	a0,a0,a1
0x0000000000013246 in _free_r ()
=> 0x13246 <_free_r+290>:	ld	a3,0(a0)
0x0000000000013248 in _free_r ()
=> 0x13248 <_free_r+292>:	addi	a0,a0,-16
0x000000000001324a in _free_r ()
=> 0x1324a <_free_r+294>:	beq	a0,a3,0x13314 <_free_r+496>
0x0000000000013314 in _free_r ()
=> 0x13314 <_free_r+496>:	ld	a6,8(a1)
0x0000000000013318 in _free_r ()
=> 0x13318 <_free_r+500>:	sraiw	a2,a2,0x2
0x000000000001331c in _free_r ()
=> 0x1331c <_free_r+504>:	li	a5,1
0x000000000001331e in _free_r ()
=> 0x1331e <_free_r+506>:	sll	a2,a5,a2
0x0000000000013322 in _free_r ()
=> 0x13322 <_free_r+510>:	or	a2,a2,a6
0x0000000000013326 in _free_r ()
=> 0x13326 <_free_r+514>:	sd	a2,8(a1)
0x0000000000013328 in _free_r ()
=> 0x13328 <_free_r+516>:	j	0x1325e <_free_r+314>
0x000000000001325e in _free_r ()
=> 0x1325e <_free_r+314>:	sd	a0,24(a4)
0x0000000000013260 in _free_r ()
=> 0x13260 <_free_r+316>:	sd	a3,16(a4)
0x0000000000013262 in _free_r ()
=> 0x13262 <_free_r+318>:	ld	s0,16(sp)
0x0000000000013264 in _free_r ()
=> 0x13264 <_free_r+320>:	sd	a4,16(a0)
0x0000000000013266 in _free_r ()
=> 0x13266 <_free_r+322>:	ld	ra,24(sp)
0x0000000000013268 in _free_r ()
=> 0x13268 <_free_r+324>:	mv	a0,s1
0x000000000001326a in _free_r ()
=> 0x1326a <_free_r+326>:	ld	s1,8(sp)
0x000000000001326c in _free_r ()
=> 0x1326c <_free_r+328>:	sd	a4,24(a3)
0x000000000001326e in _free_r ()
=> 0x1326e <_free_r+330>:	addi	sp,sp,32
0x0000000000013270 in _free_r ()
=> 0x13270 <_free_r+332>:	j	0x10d24 <__malloc_unlock>
0x0000000000010d24 in __malloc_unlock ()
=> 0x10d24 <__malloc_unlock>:	ret
main (argc=1, argv=0x3ffffffb58) at main.c:67
67	in main.c
=> 0x10270 <main+232>:	lw	a0,-44(s0)
0x0000000000010274	67	in main.c
=> 0x10274 <main+236>:	seqz	a0,a0
0x0000000000010278	67	in main.c
=> 0x10278 <main+240>:	ld	s0,112(sp)
0x000000000001027c in main (argc=<error reading variable: Cannot access memory at address 0x2aaabbdd38>, argv=<error reading variable: Cannot access memory at address 0x2aaabbdd30>) at main.c:67
67	in main.c
=> 0x1027c <main+244>:	ld	ra,120(sp)
0x0000000000010280	67	in main.c
=> 0x10280 <main+248>:	addi	sp,sp,128
0x0000000000010284	67	in main.c
=> 0x10284 <main+252>:	ret
0x000000000001013a in _start ()
=> 0x1013a <_start+64>:	j	0x105bc <exit>
0x00000000000105bc in exit ()
=> 0x105bc <exit>:	addi	sp,sp,-16
0x00000000000105be in exit ()
=> 0x105be <exit+2>:	li	a1,0
0x00000000000105c0 in exit ()
=> 0x105c0 <exit+4>:	sd	s0,0(sp)
0x00000000000105c2 in exit ()
=> 0x105c2 <exit+6>:	sd	ra,8(sp)
0x00000000000105c4 in exit ()
=> 0x105c4 <exit+8>:	mv	s0,a0
0x00000000000105c6 in exit ()
=> 0x105c6 <exit+10>:	jal	ra,0x12ac2 <__call_exitprocs>
0x0000000000012ac2 in __call_exitprocs ()
=> 0x12ac2 <__call_exitprocs>:	addi	sp,sp,-80
0x0000000000012ac4 in __call_exitprocs ()
=> 0x12ac4 <__call_exitprocs+2>:	sd	s4,32(sp)
0x0000000000012ac6 in __call_exitprocs ()
=> 0x12ac6 <__call_exitprocs+4>:	ld	s4,1856(gp)
0x0000000000012aca in __call_exitprocs ()
=> 0x12aca <__call_exitprocs+8>:	sd	s2,48(sp)
0x0000000000012acc in __call_exitprocs ()
=> 0x12acc <__call_exitprocs+10>:	sd	ra,72(sp)
0x0000000000012ace in __call_exitprocs ()
=> 0x12ace <__call_exitprocs+12>:	ld	s2,504(s4)
0x0000000000012ad2 in __call_exitprocs ()
=> 0x12ad2 <__call_exitprocs+16>:	sd	s0,64(sp)
0x0000000000012ad4 in __call_exitprocs ()
=> 0x12ad4 <__call_exitprocs+18>:	sd	s1,56(sp)
0x0000000000012ad6 in __call_exitprocs ()
=> 0x12ad6 <__call_exitprocs+20>:	sd	s3,40(sp)
0x0000000000012ad8 in __call_exitprocs ()
=> 0x12ad8 <__call_exitprocs+22>:	sd	s5,24(sp)
0x0000000000012ada in __call_exitprocs ()
=> 0x12ada <__call_exitprocs+24>:	sd	s6,16(sp)
0x0000000000012adc in __call_exitprocs ()
=> 0x12adc <__call_exitprocs+26>:	sd	s7,8(sp)
0x0000000000012ade in __call_exitprocs ()
=> 0x12ade <__call_exitprocs+28>:	sd	s8,0(sp)
0x0000000000012ae0 in __call_exitprocs ()
=> 0x12ae0 <__call_exitprocs+30>:	beqz	s2,0x12b10 <__call_exitprocs+78>
0x0000000000012ae4 in __call_exitprocs ()
=> 0x12ae4 <__call_exitprocs+34>:	mv	s6,a0
0x0000000000012ae6 in __call_exitprocs ()
=> 0x12ae6 <__call_exitprocs+36>:	mv	s7,a1
0x0000000000012ae8 in __call_exitprocs ()
=> 0x12ae8 <__call_exitprocs+38>:	li	s5,1
0x0000000000012aea in __call_exitprocs ()
=> 0x12aea <__call_exitprocs+40>:	li	s3,-1
0x0000000000012aec in __call_exitprocs ()
=> 0x12aec <__call_exitprocs+42>:	lw	s1,8(s2)
0x0000000000012af0 in __call_exitprocs ()
=> 0x12af0 <__call_exitprocs+46>:	addiw	s0,s1,-1
0x0000000000012af4 in __call_exitprocs ()
=> 0x12af4 <__call_exitprocs+50>:	bltz	s0,0x12b10 <__call_exitprocs+78>
0x0000000000012af8 in __call_exitprocs ()
=> 0x12af8 <__call_exitprocs+54>:	slli	s1,s1,0x3
0x0000000000012afa in __call_exitprocs ()
=> 0x12afa <__call_exitprocs+56>:	add	s1,s1,s2
0x0000000000012afc in __call_exitprocs ()
=> 0x12afc <__call_exitprocs+58>:	beqz	s7,0x12b28 <__call_exitprocs+102>
0x0000000000012b28 in __call_exitprocs ()
=> 0x12b28 <__call_exitprocs+102>:	lw	a5,8(s2)
0x0000000000012b2c in __call_exitprocs ()
=> 0x12b2c <__call_exitprocs+106>:	ld	a4,8(s1)
0x0000000000012b2e in __call_exitprocs ()
=> 0x12b2e <__call_exitprocs+108>:	addiw	a5,a5,-1
0x0000000000012b30 in __call_exitprocs ()
=> 0x12b30 <__call_exitprocs+110>:	beq	a5,s0,0x12b78 <__call_exitprocs+182>
0x0000000000012b78 in __call_exitprocs ()
=> 0x12b78 <__call_exitprocs+182>:	sw	s0,8(s2)
0x0000000000012b7c in __call_exitprocs ()
=> 0x12b7c <__call_exitprocs+186>:	j	0x12b38 <__call_exitprocs+118>
0x0000000000012b38 in __call_exitprocs ()
=> 0x12b38 <__call_exitprocs+118>:	beqz	a4,0x12b08 <__call_exitprocs+70>
0x0000000000012b3a in __call_exitprocs ()
=> 0x12b3a <__call_exitprocs+120>:	lw	a5,784(s2)
0x0000000000012b3e in __call_exitprocs ()
=> 0x12b3e <__call_exitprocs+124>:	sllw	a3,s5,s0
0x0000000000012b42 in __call_exitprocs ()
=> 0x12b42 <__call_exitprocs+128>:	lw	s8,8(s2)
0x0000000000012b46 in __call_exitprocs ()
=> 0x12b46 <__call_exitprocs+132>:	and	a5,a5,a3
0x0000000000012b48 in __call_exitprocs ()
=> 0x12b48 <__call_exitprocs+134>:	sext.w	a5,a5
0x0000000000012b4a in __call_exitprocs ()
=> 0x12b4a <__call_exitprocs+136>:	bnez	a5,0x12b64 <__call_exitprocs+162>
0x0000000000012b4c in __call_exitprocs ()
=> 0x12b4c <__call_exitprocs+138>:	jalr	a4
0x000000000001301a in __libc_fini_array ()
=> 0x1301a <__libc_fini_array>:	addi	sp,sp,-32
0x000000000001301c in __libc_fini_array ()
=> 0x1301c <__libc_fini_array+2>:	sd	s0,16(sp)
0x000000000001301e in __libc_fini_array ()
=> 0x1301e <__libc_fini_array+4>:	lui	a5,0x1e
0x0000000000013020 in __libc_fini_array ()
=> 0x13020 <__libc_fini_array+6>:	lui	s0,0x1e
0x0000000000013022 in __libc_fini_array ()
=> 0x13022 <__libc_fini_array+8>:	addi	s0,s0,1848
0x0000000000013026 in __libc_fini_array ()
=> 0x13026 <__libc_fini_array+12>:	addi	a5,a5,1856
0x000000000001302a in __libc_fini_array ()
=> 0x1302a <__libc_fini_array+16>:	sub	a5,a5,s0
0x000000000001302c in __libc_fini_array ()
=> 0x1302c <__libc_fini_array+18>:	sd	s1,8(sp)
0x000000000001302e in __libc_fini_array ()
=> 0x1302e <__libc_fini_array+20>:	sd	ra,24(sp)
0x0000000000013030 in __libc_fini_array ()
=> 0x13030 <__libc_fini_array+22>:	srai	s1,a5,0x3
0x0000000000013034 in __libc_fini_array ()
=> 0x13034 <__libc_fini_array+26>:	beqz	s1,0x13044 <__libc_fini_array+42>
0x0000000000013036 in __libc_fini_array ()
=> 0x13036 <__libc_fini_array+28>:	addi	a5,a5,-8
0x0000000000013038 in __libc_fini_array ()
=> 0x13038 <__libc_fini_array+30>:	add	s0,s0,a5
0x000000000001303a in __libc_fini_array ()
=> 0x1303a <__libc_fini_array+32>:	ld	a5,0(s0)
0x000000000001303c in __libc_fini_array ()
=> 0x1303c <__libc_fini_array+34>:	addi	s1,s1,-1
0x000000000001303e in __libc_fini_array ()
=> 0x1303e <__libc_fini_array+36>:	addi	s0,s0,-8
0x0000000000013040 in __libc_fini_array ()
=> 0x13040 <__libc_fini_array+38>:	jalr	a5
0x000000000001013c in __do_global_dtors_aux ()
=> 0x1013c <__do_global_dtors_aux>:	lbu	a4,1952(gp)
0x0000000000010140 in __do_global_dtors_aux ()
=> 0x10140 <__do_global_dtors_aux+4>:	bnez	a4,0x1016c <__do_global_dtors_aux+48>
0x0000000000010142 in __do_global_dtors_aux ()
=> 0x10142 <__do_global_dtors_aux+6>:	addi	sp,sp,-16
0x0000000000010144 in __do_global_dtors_aux ()
=> 0x10144 <__do_global_dtors_aux+8>:	sd	s0,0(sp)
0x0000000000010146 in __do_global_dtors_aux ()
=> 0x10146 <__do_global_dtors_aux+10>:	mv	s0,a5
0x0000000000010148 in __do_global_dtors_aux ()
=> 0x10148 <__do_global_dtors_aux+12>:	sd	ra,8(sp)
0x000000000001014a in __do_global_dtors_aux ()
=> 0x1014a <__do_global_dtors_aux+14>:	li	a5,0
0x000000000001014e in __do_global_dtors_aux ()
=> 0x1014e <__do_global_dtors_aux+18>:	beqz	a5,0x1015e <__do_global_dtors_aux+34>
0x000000000001015e in __do_global_dtors_aux ()
=> 0x1015e <__do_global_dtors_aux+34>:	li	a5,1
0x0000000000010160 in __do_global_dtors_aux ()
=> 0x10160 <__do_global_dtors_aux+36>:	ld	ra,8(sp)
0x0000000000010162 in __do_global_dtors_aux ()
=> 0x10162 <__do_global_dtors_aux+38>:	sb	a5,1952(gp)
0x0000000000010166 in __do_global_dtors_aux ()
=> 0x10166 <__do_global_dtors_aux+42>:	ld	s0,0(sp)
0x0000000000010168 in __do_global_dtors_aux ()
=> 0x10168 <__do_global_dtors_aux+44>:	addi	sp,sp,16
0x000000000001016a in __do_global_dtors_aux ()
=> 0x1016a <__do_global_dtors_aux+46>:	ret
0x0000000000013042 in __libc_fini_array ()
=> 0x13042 <__libc_fini_array+40>:	bnez	s1,0x1303a <__libc_fini_array+32>
0x0000000000013044 in __libc_fini_array ()
=> 0x13044 <__libc_fini_array+42>:	ld	ra,24(sp)
0x0000000000013046 in __libc_fini_array ()
=> 0x13046 <__libc_fini_array+44>:	ld	s0,16(sp)
0x0000000000013048 in __libc_fini_array ()
=> 0x13048 <__libc_fini_array+46>:	ld	s1,8(sp)
0x000000000001304a in __libc_fini_array ()
=> 0x1304a <__libc_fini_array+48>:	addi	sp,sp,32
0x000000000001304c in __libc_fini_array ()
=> 0x1304c <__libc_fini_array+50>:	ret
0x0000000000012b4e in __call_exitprocs ()
=> 0x12b4e <__call_exitprocs+140>:	lw	a4,8(s2)
0x0000000000012b52 in __call_exitprocs ()
=> 0x12b52 <__call_exitprocs+144>:	ld	a5,504(s4)
0x0000000000012b56 in __call_exitprocs ()
=> 0x12b56 <__call_exitprocs+148>:	bne	a4,s8,0x12b5e <__call_exitprocs+156>
0x0000000000012b5a in __call_exitprocs ()
=> 0x12b5a <__call_exitprocs+152>:	beq	a5,s2,0x12b08 <__call_exitprocs+70>
0x0000000000012b08 in __call_exitprocs ()
=> 0x12b08 <__call_exitprocs+70>:	addiw	s0,s0,-1
0x0000000000012b0a in __call_exitprocs ()
=> 0x12b0a <__call_exitprocs+72>:	addi	s1,s1,-8
0x0000000000012b0c in __call_exitprocs ()
=> 0x12b0c <__call_exitprocs+74>:	bne	s0,s3,0x12afc <__call_exitprocs+58>
0x0000000000012b10 in __call_exitprocs ()
=> 0x12b10 <__call_exitprocs+78>:	ld	ra,72(sp)
0x0000000000012b12 in __call_exitprocs ()
=> 0x12b12 <__call_exitprocs+80>:	ld	s0,64(sp)
0x0000000000012b14 in __call_exitprocs ()
=> 0x12b14 <__call_exitprocs+82>:	ld	s1,56(sp)
0x0000000000012b16 in __call_exitprocs ()
=> 0x12b16 <__call_exitprocs+84>:	ld	s2,48(sp)
0x0000000000012b18 in __call_exitprocs ()
=> 0x12b18 <__call_exitprocs+86>:	ld	s3,40(sp)
0x0000000000012b1a in __call_exitprocs ()
=> 0x12b1a <__call_exitprocs+88>:	ld	s4,32(sp)
0x0000000000012b1c in __call_exitprocs ()
=> 0x12b1c <__call_exitprocs+90>:	ld	s5,24(sp)
0x0000000000012b1e in __call_exitprocs ()
=> 0x12b1e <__call_exitprocs+92>:	ld	s6,16(sp)
0x0000000000012b20 in __call_exitprocs ()
=> 0x12b20 <__call_exitprocs+94>:	ld	s7,8(sp)
0x0000000000012b22 in __call_exitprocs ()
=> 0x12b22 <__call_exitprocs+96>:	ld	s8,0(sp)
0x0000000000012b24 in __call_exitprocs ()
=> 0x12b24 <__call_exitprocs+98>:	addi	sp,sp,80
0x0000000000012b26 in __call_exitprocs ()
=> 0x12b26 <__call_exitprocs+100>:	ret
0x00000000000105ca in exit ()
=> 0x105ca <exit+14>:	ld	a0,1856(gp)
0x00000000000105ce in exit ()
=> 0x105ce <exit+18>:	ld	a5,88(a0)
0x00000000000105d0 in exit ()
=> 0x105d0 <exit+20>:	beqz	a5,0x105d4 <exit+24>
0x00000000000105d2 in exit ()
=> 0x105d2 <exit+22>:	jalr	a5
0x0000000000012d9a in _cleanup_r ()
=> 0x12d9a <_cleanup_r>:	lui	a1,0x19
0x0000000000012d9c in _cleanup_r ()
=> 0x12d9c <_cleanup_r+2>:	addi	a1,a1,1278
0x0000000000012da0 in _cleanup_r ()
=> 0x12da0 <_cleanup_r+6>:	j	0x133f8 <_fwalk_reent>
0x00000000000133f8 in _fwalk_reent ()
=> 0x133f8 <_fwalk_reent>:	addi	sp,sp,-80
0x00000000000133fa in _fwalk_reent ()
=> 0x133fa <_fwalk_reent+2>:	sd	s2,48(sp)
0x00000000000133fc in _fwalk_reent ()
=> 0x133fc <_fwalk_reent+4>:	sd	s3,40(sp)
0x00000000000133fe in _fwalk_reent ()
=> 0x133fe <_fwalk_reent+6>:	sd	s4,32(sp)
0x0000000000013400 in _fwalk_reent ()
=> 0x13400 <_fwalk_reent+8>:	sd	s5,24(sp)
0x0000000000013402 in _fwalk_reent ()
=> 0x13402 <_fwalk_reent+10>:	sd	s6,16(sp)
0x0000000000013404 in _fwalk_reent ()
=> 0x13404 <_fwalk_reent+12>:	sd	s7,8(sp)
0x0000000000013406 in _fwalk_reent ()
=> 0x13406 <_fwalk_reent+14>:	sd	s8,0(sp)
0x0000000000013408 in _fwalk_reent ()
=> 0x13408 <_fwalk_reent+16>:	sd	ra,72(sp)
0x000000000001340a in _fwalk_reent ()
=> 0x1340a <_fwalk_reent+18>:	sd	s0,64(sp)
0x000000000001340c in _fwalk_reent ()
=> 0x1340c <_fwalk_reent+20>:	sd	s1,56(sp)
0x000000000001340e in _fwalk_reent ()
=> 0x1340e <_fwalk_reent+22>:	mv	s8,a0
0x0000000000013410 in _fwalk_reent ()
=> 0x13410 <_fwalk_reent+24>:	mv	s4,a1
0x0000000000013412 in _fwalk_reent ()
=> 0x13412 <_fwalk_reent+26>:	addi	s2,a0,1312
0x0000000000013416 in _fwalk_reent ()
=> 0x13416 <_fwalk_reent+30>:	li	s6,0
0x0000000000013418 in _fwalk_reent ()
=> 0x13418 <_fwalk_reent+32>:	li	s5,176
0x000000000001341c in _fwalk_reent ()
=> 0x1341c <_fwalk_reent+36>:	li	s7,1
0x000000000001341e in _fwalk_reent ()
=> 0x1341e <_fwalk_reent+38>:	li	s3,-1
0x0000000000013420 in _fwalk_reent ()
=> 0x13420 <_fwalk_reent+40>:	lw	a5,8(s2)
0x0000000000013424 in _fwalk_reent ()
=> 0x13424 <_fwalk_reent+44>:	ld	s0,16(s2)
0x0000000000013428 in _fwalk_reent ()
=> 0x13428 <_fwalk_reent+48>:	blez	a5,0x13460 <_fwalk_reent+104>
0x000000000001342c in _fwalk_reent ()
=> 0x1342c <_fwalk_reent+52>:	addiw	s1,a5,-1
0x0000000000013430 in _fwalk_reent ()
=> 0x13430 <_fwalk_reent+56>:	slli	s1,s1,0x20
0x0000000000013432 in _fwalk_reent ()
=> 0x13432 <_fwalk_reent+58>:	srli	s1,s1,0x20
0x0000000000013434 in _fwalk_reent ()
=> 0x13434 <_fwalk_reent+60>:	addi	s1,s1,1
0x0000000000013436 in _fwalk_reent ()
=> 0x13436 <_fwalk_reent+62>:	mul	s1,s1,s5
0x000000000001343a in _fwalk_reent ()
=> 0x1343a <_fwalk_reent+66>:	add	s1,s1,s0
0x000000000001343c in _fwalk_reent ()
=> 0x1343c <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000013440 in _fwalk_reent ()
=> 0x13440 <_fwalk_reent+72>:	bgeu	s7,a5,0x13458 <_fwalk_reent+96>
0x0000000000013444 in _fwalk_reent ()
=> 0x13444 <_fwalk_reent+76>:	lh	a5,18(s0)
0x0000000000013448 in _fwalk_reent ()
=> 0x13448 <_fwalk_reent+80>:	mv	a1,s0
0x000000000001344a in _fwalk_reent ()
=> 0x1344a <_fwalk_reent+82>:	mv	a0,s8
0x000000000001344c in _fwalk_reent ()
=> 0x1344c <_fwalk_reent+84>:	beq	a5,s3,0x13458 <_fwalk_reent+96>
0x0000000000013450 in _fwalk_reent ()
=> 0x13450 <_fwalk_reent+88>:	jalr	s4
0x00000000000194fe in _fclose_r ()
=> 0x194fe <_fclose_r>:	beqz	a1,0x19538 <_fclose_r+58>
0x0000000000019500 in _fclose_r ()
=> 0x19500 <_fclose_r+2>:	addi	sp,sp,-32
0x0000000000019502 in _fclose_r ()
=> 0x19502 <_fclose_r+4>:	sd	s0,16(sp)
0x0000000000019504 in _fclose_r ()
=> 0x19504 <_fclose_r+6>:	sd	ra,24(sp)
0x0000000000019506 in _fclose_r ()
=> 0x19506 <_fclose_r+8>:	mv	s0,a0
0x0000000000019508 in _fclose_r ()
=> 0x19508 <_fclose_r+10>:	beqz	a0,0x1950e <_fclose_r+16>
0x000000000001950a in _fclose_r ()
=> 0x1950a <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001950c in _fclose_r ()
=> 0x1950c <_fclose_r+14>:	beqz	a5,0x19528 <_fclose_r+42>
0x000000000001950e in _fclose_r ()
=> 0x1950e <_fclose_r+16>:	lh	a5,16(a1)
0x0000000000019512 in _fclose_r ()
=> 0x19512 <_fclose_r+20>:	bnez	a5,0x1951e <_fclose_r+32>
0x000000000001951e in _fclose_r ()
=> 0x1951e <_fclose_r+32>:	mv	a0,s0
0x0000000000019520 in _fclose_r ()
=> 0x19520 <_fclose_r+34>:	ld	s0,16(sp)
0x0000000000019522 in _fclose_r ()
=> 0x19522 <_fclose_r+36>:	ld	ra,24(sp)
0x0000000000019524 in _fclose_r ()
=> 0x19524 <_fclose_r+38>:	addi	sp,sp,32
0x0000000000019526 in _fclose_r ()
=> 0x19526 <_fclose_r+40>:	j	0x1947e <_fclose_r.part.0>
0x000000000001947e in _fclose_r.part.0 ()
=> 0x1947e <_fclose_r.part.0>:	addi	sp,sp,-32
0x0000000000019480 in _fclose_r.part.0 ()
=> 0x19480 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x0000000000019482 in _fclose_r.part.0 ()
=> 0x19482 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x0000000000019484 in _fclose_r.part.0 ()
=> 0x19484 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x0000000000019486 in _fclose_r.part.0 ()
=> 0x19486 <_fclose_r.part.0+8>:	mv	s0,a1
0x0000000000019488 in _fclose_r.part.0 ()
=> 0x19488 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001948a in _fclose_r.part.0 ()
=> 0x1948a <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001948c in _fclose_r.part.0 ()
=> 0x1948c <_fclose_r.part.0+14>:	jal	ra,0x12b84 <__sflush_r>
0x0000000000012b84 in __sflush_r ()
=> 0x12b84 <__sflush_r>:	lh	a5,16(a1)
0x0000000000012b88 in __sflush_r ()
=> 0x12b88 <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000012b8a in __sflush_r ()
=> 0x12b8a <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000012b8c in __sflush_r ()
=> 0x12b8c <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000012b8e in __sflush_r ()
=> 0x12b8e <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000012b90 in __sflush_r ()
=> 0x12b90 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000012b92 in __sflush_r ()
=> 0x12b92 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000012b94 in __sflush_r ()
=> 0x12b94 <__sflush_r+16>:	andi	a3,a5,8
0x0000000000012b98 in __sflush_r ()
=> 0x12b98 <__sflush_r+20>:	mv	s0,a1
0x0000000000012b9a in __sflush_r ()
=> 0x12b9a <__sflush_r+22>:	mv	s3,a0
0x0000000000012b9c in __sflush_r ()
=> 0x12b9c <__sflush_r+24>:	bnez	a3,0x12c50 <__sflush_r+204>
0x0000000000012b9e in __sflush_r ()
=> 0x12b9e <__sflush_r+26>:	lui	a4,0x1
0x0000000000012ba0 in __sflush_r ()
=> 0x12ba0 <__sflush_r+28>:	addi	a4,a4,-2048
0x0000000000012ba4 in __sflush_r ()
=> 0x12ba4 <__sflush_r+32>:	lw	a3,8(a1)
0x0000000000012ba6 in __sflush_r ()
=> 0x12ba6 <__sflush_r+34>:	or	a5,a5,a4
0x0000000000012ba8 in __sflush_r ()
=> 0x12ba8 <__sflush_r+36>:	sh	a5,16(a1)
0x0000000000012bac in __sflush_r ()
=> 0x12bac <__sflush_r+40>:	blez	a3,0x12cac <__sflush_r+296>
0x0000000000012cac in __sflush_r ()
=> 0x12cac <__sflush_r+296>:	lw	a4,112(a1)
0x0000000000012cae in __sflush_r ()
=> 0x12cae <__sflush_r+298>:	bgtz	a4,0x12bb0 <__sflush_r+44>
0x0000000000012cb2 in __sflush_r ()
=> 0x12cb2 <__sflush_r+302>:	j	0x12c40 <__sflush_r+188>
0x0000000000012c40 in __sflush_r ()
=> 0x12c40 <__sflush_r+188>:	li	a0,0
0x0000000000012c42 in __sflush_r ()
=> 0x12c42 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000012c44 in __sflush_r ()
=> 0x12c44 <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000012c46 in __sflush_r ()
=> 0x12c46 <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000012c48 in __sflush_r ()
=> 0x12c48 <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000012c4a in __sflush_r ()
=> 0x12c4a <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000012c4c in __sflush_r ()
=> 0x12c4c <__sflush_r+200>:	addi	sp,sp,48
0x0000000000012c4e in __sflush_r ()
=> 0x12c4e <__sflush_r+202>:	ret
0x0000000000019490 in _fclose_r.part.0 ()
=> 0x19490 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x0000000000019492 in _fclose_r.part.0 ()
=> 0x19492 <_fclose_r.part.0+20>:	mv	s2,a0
0x0000000000019494 in _fclose_r.part.0 ()
=> 0x19494 <_fclose_r.part.0+22>:	beqz	a5,0x194a0 <_fclose_r.part.0+34>
0x0000000000019496 in _fclose_r.part.0 ()
=> 0x19496 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x0000000000019498 in _fclose_r.part.0 ()
=> 0x19498 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001949a in _fclose_r.part.0 ()
=> 0x1949a <_fclose_r.part.0+28>:	jalr	a5
0x0000000000016794 in __sclose ()
=> 0x16794 <__sclose>:	lh	a1,18(a1)
0x0000000000016798 in __sclose ()
=> 0x16798 <__sclose+4>:	j	0x19442 <_close_r>
0x0000000000019442 in _close_r ()
=> 0x19442 <_close_r>:	addi	sp,sp,-32
0x0000000000019444 in _close_r ()
=> 0x19444 <_close_r+2>:	sd	s0,16(sp)
0x0000000000019446 in _close_r ()
=> 0x19446 <_close_r+4>:	sd	s1,8(sp)
0x0000000000019448 in _close_r ()
=> 0x19448 <_close_r+6>:	mv	s0,a0
0x000000000001944a in _close_r ()
=> 0x1944a <_close_r+8>:	mv	a0,a1
0x000000000001944c in _close_r ()
=> 0x1944c <_close_r+10>:	sd	ra,24(sp)
0x000000000001944e in _close_r ()
=> 0x1944e <_close_r+12>:	sw	zero,1936(gp)
0x0000000000019452 in _close_r ()
=> 0x19452 <_close_r+16>:	jal	ra,0x1b2a2 <_close>
0x000000000001b2a2 in _close ()
=> 0x1b2a2 <_close>:	addi	sp,sp,-16
0x000000000001b2a4 in _close ()
=> 0x1b2a4 <_close+2>:	sd	ra,8(sp)
0x000000000001b2a6 in _close ()
=> 0x1b2a6 <_close+4>:	sd	s0,0(sp)
0x000000000001b2a8 in _close ()
=> 0x1b2a8 <_close+6>:	li	a7,57
0x000000000001b2ac in _close ()
=> 0x1b2ac <_close+10>:	ecall
0x000000000001b2b0 in _close ()
=> 0x1b2b0 <_close+14>:	mv	s0,a0
0x000000000001b2b2 in _close ()
=> 0x1b2b2 <_close+16>:	bltz	a0,0x1b2c0 <_close+30>
0x000000000001b2b6 in _close ()
=> 0x1b2b6 <_close+20>:	sext.w	a0,a0
0x000000000001b2b8 in _close ()
=> 0x1b2b8 <_close+22>:	ld	ra,8(sp)
0x000000000001b2ba in _close ()
=> 0x1b2ba <_close+24>:	ld	s0,0(sp)
0x000000000001b2bc in _close ()
=> 0x1b2bc <_close+26>:	addi	sp,sp,16
0x000000000001b2be in _close ()
=> 0x1b2be <_close+28>:	ret
0x0000000000019456 in _close_r ()
=> 0x19456 <_close_r+20>:	li	a5,-1
0x0000000000019458 in _close_r ()
=> 0x19458 <_close_r+22>:	beq	a0,a5,0x19466 <_close_r+36>
0x000000000001945c in _close_r ()
=> 0x1945c <_close_r+26>:	ld	ra,24(sp)
0x000000000001945e in _close_r ()
=> 0x1945e <_close_r+28>:	ld	s0,16(sp)
0x0000000000019460 in _close_r ()
=> 0x19460 <_close_r+30>:	ld	s1,8(sp)
0x0000000000019462 in _close_r ()
=> 0x19462 <_close_r+32>:	addi	sp,sp,32
0x0000000000019464 in _close_r ()
=> 0x19464 <_close_r+34>:	ret
0x000000000001949c in _fclose_r.part.0 ()
=> 0x1949c <_fclose_r.part.0+30>:	bltz	a0,0x194e8 <_fclose_r.part.0+106>
0x00000000000194a0 in _fclose_r.part.0 ()
=> 0x194a0 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x00000000000194a4 in _fclose_r.part.0 ()
=> 0x194a4 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x00000000000194a8 in _fclose_r.part.0 ()
=> 0x194a8 <_fclose_r.part.0+42>:	bnez	a5,0x194f4 <_fclose_r.part.0+118>
0x00000000000194aa in _fclose_r.part.0 ()
=> 0x194aa <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x00000000000194ac in _fclose_r.part.0 ()
=> 0x194ac <_fclose_r.part.0+46>:	beqz	a1,0x194c0 <_fclose_r.part.0+66>
0x00000000000194c0 in _fclose_r.part.0 ()
=> 0x194c0 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x00000000000194c2 in _fclose_r.part.0 ()
=> 0x194c2 <_fclose_r.part.0+68>:	beqz	a1,0x194ce <_fclose_r.part.0+80>
0x00000000000194ce in _fclose_r.part.0 ()
=> 0x194ce <_fclose_r.part.0+80>:	jal	ra,0x12ffa <__sfp_lock_acquire>
0x0000000000012ffa in __sfp_lock_acquire ()
=> 0x12ffa <__sfp_lock_acquire>:	ret
0x00000000000194d2 in _fclose_r.part.0 ()
=> 0x194d2 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x00000000000194d6 in _fclose_r.part.0 ()
=> 0x194d6 <_fclose_r.part.0+88>:	jal	ra,0x12ffc <__sfp_lock_release>
0x0000000000012ffc in __sfp_lock_release ()
=> 0x12ffc <__sfp_lock_release>:	ret
0x00000000000194da in _fclose_r.part.0 ()
=> 0x194da <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x00000000000194dc in _fclose_r.part.0 ()
=> 0x194dc <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x00000000000194de in _fclose_r.part.0 ()
=> 0x194de <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x00000000000194e0 in _fclose_r.part.0 ()
=> 0x194e0 <_fclose_r.part.0+98>:	mv	a0,s2
0x00000000000194e2 in _fclose_r.part.0 ()
=> 0x194e2 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x00000000000194e4 in _fclose_r.part.0 ()
=> 0x194e4 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x00000000000194e6 in _fclose_r.part.0 ()
=> 0x194e6 <_fclose_r.part.0+104>:	ret
0x0000000000013452 in _fwalk_reent ()
=> 0x13452 <_fwalk_reent+90>:	or	s6,a0,s6
0x0000000000013456 in _fwalk_reent ()
=> 0x13456 <_fwalk_reent+94>:	sext.w	s6,s6
0x0000000000013458 in _fwalk_reent ()
=> 0x13458 <_fwalk_reent+96>:	addi	s0,s0,176
0x000000000001345c in _fwalk_reent ()
=> 0x1345c <_fwalk_reent+100>:	bne	s1,s0,0x1343c <_fwalk_reent+68>
0x000000000001343c in _fwalk_reent ()
=> 0x1343c <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000013440 in _fwalk_reent ()
=> 0x13440 <_fwalk_reent+72>:	bgeu	s7,a5,0x13458 <_fwalk_reent+96>
0x0000000000013444 in _fwalk_reent ()
=> 0x13444 <_fwalk_reent+76>:	lh	a5,18(s0)
0x0000000000013448 in _fwalk_reent ()
=> 0x13448 <_fwalk_reent+80>:	mv	a1,s0
0x000000000001344a in _fwalk_reent ()
=> 0x1344a <_fwalk_reent+82>:	mv	a0,s8
0x000000000001344c in _fwalk_reent ()
=> 0x1344c <_fwalk_reent+84>:	beq	a5,s3,0x13458 <_fwalk_reent+96>
0x0000000000013450 in _fwalk_reent ()
=> 0x13450 <_fwalk_reent+88>:	jalr	s4
0x00000000000194fe in _fclose_r ()
=> 0x194fe <_fclose_r>:	beqz	a1,0x19538 <_fclose_r+58>
0x0000000000019500 in _fclose_r ()
=> 0x19500 <_fclose_r+2>:	addi	sp,sp,-32
0x0000000000019502 in _fclose_r ()
=> 0x19502 <_fclose_r+4>:	sd	s0,16(sp)
0x0000000000019504 in _fclose_r ()
=> 0x19504 <_fclose_r+6>:	sd	ra,24(sp)
0x0000000000019506 in _fclose_r ()
=> 0x19506 <_fclose_r+8>:	mv	s0,a0
0x0000000000019508 in _fclose_r ()
=> 0x19508 <_fclose_r+10>:	beqz	a0,0x1950e <_fclose_r+16>
0x000000000001950a in _fclose_r ()
=> 0x1950a <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001950c in _fclose_r ()
=> 0x1950c <_fclose_r+14>:	beqz	a5,0x19528 <_fclose_r+42>
0x000000000001950e in _fclose_r ()
=> 0x1950e <_fclose_r+16>:	lh	a5,16(a1)
0x0000000000019512 in _fclose_r ()
=> 0x19512 <_fclose_r+20>:	bnez	a5,0x1951e <_fclose_r+32>
0x000000000001951e in _fclose_r ()
=> 0x1951e <_fclose_r+32>:	mv	a0,s0
0x0000000000019520 in _fclose_r ()
=> 0x19520 <_fclose_r+34>:	ld	s0,16(sp)
0x0000000000019522 in _fclose_r ()
=> 0x19522 <_fclose_r+36>:	ld	ra,24(sp)
0x0000000000019524 in _fclose_r ()
=> 0x19524 <_fclose_r+38>:	addi	sp,sp,32
0x0000000000019526 in _fclose_r ()
=> 0x19526 <_fclose_r+40>:	j	0x1947e <_fclose_r.part.0>
0x000000000001947e in _fclose_r.part.0 ()
=> 0x1947e <_fclose_r.part.0>:	addi	sp,sp,-32
0x0000000000019480 in _fclose_r.part.0 ()
=> 0x19480 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x0000000000019482 in _fclose_r.part.0 ()
=> 0x19482 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x0000000000019484 in _fclose_r.part.0 ()
=> 0x19484 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x0000000000019486 in _fclose_r.part.0 ()
=> 0x19486 <_fclose_r.part.0+8>:	mv	s0,a1
0x0000000000019488 in _fclose_r.part.0 ()
=> 0x19488 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001948a in _fclose_r.part.0 ()
=> 0x1948a <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001948c in _fclose_r.part.0 ()
=> 0x1948c <_fclose_r.part.0+14>:	jal	ra,0x12b84 <__sflush_r>
0x0000000000012b84 in __sflush_r ()
=> 0x12b84 <__sflush_r>:	lh	a5,16(a1)
0x0000000000012b88 in __sflush_r ()
=> 0x12b88 <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000012b8a in __sflush_r ()
=> 0x12b8a <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000012b8c in __sflush_r ()
=> 0x12b8c <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000012b8e in __sflush_r ()
=> 0x12b8e <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000012b90 in __sflush_r ()
=> 0x12b90 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000012b92 in __sflush_r ()
=> 0x12b92 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000012b94 in __sflush_r ()
=> 0x12b94 <__sflush_r+16>:	andi	a3,a5,8
0x0000000000012b98 in __sflush_r ()
=> 0x12b98 <__sflush_r+20>:	mv	s0,a1
0x0000000000012b9a in __sflush_r ()
=> 0x12b9a <__sflush_r+22>:	mv	s3,a0
0x0000000000012b9c in __sflush_r ()
=> 0x12b9c <__sflush_r+24>:	bnez	a3,0x12c50 <__sflush_r+204>
0x0000000000012c50 in __sflush_r ()
=> 0x12c50 <__sflush_r+204>:	ld	s2,24(a1)
0x0000000000012c54 in __sflush_r ()
=> 0x12c54 <__sflush_r+208>:	beqz	s2,0x12c40 <__sflush_r+188>
0x0000000000012c58 in __sflush_r ()
=> 0x12c58 <__sflush_r+212>:	ld	s1,0(a1)
0x0000000000012c5a in __sflush_r ()
=> 0x12c5a <__sflush_r+214>:	slli	a4,a5,0x30
0x0000000000012c5e in __sflush_r ()
=> 0x12c5e <__sflush_r+218>:	srli	a4,a4,0x30
0x0000000000012c60 in __sflush_r ()
=> 0x12c60 <__sflush_r+220>:	andi	a4,a4,3
0x0000000000012c62 in __sflush_r ()
=> 0x12c62 <__sflush_r+222>:	sd	s2,0(a1)
0x0000000000012c66 in __sflush_r ()
=> 0x12c66 <__sflush_r+226>:	subw	s1,s1,s2
0x0000000000012c6a in __sflush_r ()
=> 0x12c6a <__sflush_r+230>:	li	a5,0
0x0000000000012c6c in __sflush_r ()
=> 0x12c6c <__sflush_r+232>:	bnez	a4,0x12c70 <__sflush_r+236>
0x0000000000012c70 in __sflush_r ()
=> 0x12c70 <__sflush_r+236>:	sw	a5,12(s0)
0x0000000000012c72 in __sflush_r ()
=> 0x12c72 <__sflush_r+238>:	bgtz	s1,0x12c7e <__sflush_r+250>
0x0000000000012c76 in __sflush_r ()
=> 0x12c76 <__sflush_r+242>:	j	0x12c40 <__sflush_r+188>
0x0000000000012c40 in __sflush_r ()
=> 0x12c40 <__sflush_r+188>:	li	a0,0
0x0000000000012c42 in __sflush_r ()
=> 0x12c42 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000012c44 in __sflush_r ()
=> 0x12c44 <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000012c46 in __sflush_r ()
=> 0x12c46 <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000012c48 in __sflush_r ()
=> 0x12c48 <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000012c4a in __sflush_r ()
=> 0x12c4a <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000012c4c in __sflush_r ()
=> 0x12c4c <__sflush_r+200>:	addi	sp,sp,48
0x0000000000012c4e in __sflush_r ()
=> 0x12c4e <__sflush_r+202>:	ret
0x0000000000019490 in _fclose_r.part.0 ()
=> 0x19490 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x0000000000019492 in _fclose_r.part.0 ()
=> 0x19492 <_fclose_r.part.0+20>:	mv	s2,a0
0x0000000000019494 in _fclose_r.part.0 ()
=> 0x19494 <_fclose_r.part.0+22>:	beqz	a5,0x194a0 <_fclose_r.part.0+34>
0x0000000000019496 in _fclose_r.part.0 ()
=> 0x19496 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x0000000000019498 in _fclose_r.part.0 ()
=> 0x19498 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001949a in _fclose_r.part.0 ()
=> 0x1949a <_fclose_r.part.0+28>:	jalr	a5
0x0000000000016794 in __sclose ()
=> 0x16794 <__sclose>:	lh	a1,18(a1)
0x0000000000016798 in __sclose ()
=> 0x16798 <__sclose+4>:	j	0x19442 <_close_r>
0x0000000000019442 in _close_r ()
=> 0x19442 <_close_r>:	addi	sp,sp,-32
0x0000000000019444 in _close_r ()
=> 0x19444 <_close_r+2>:	sd	s0,16(sp)
0x0000000000019446 in _close_r ()
=> 0x19446 <_close_r+4>:	sd	s1,8(sp)
0x0000000000019448 in _close_r ()
=> 0x19448 <_close_r+6>:	mv	s0,a0
0x000000000001944a in _close_r ()
=> 0x1944a <_close_r+8>:	mv	a0,a1
0x000000000001944c in _close_r ()
=> 0x1944c <_close_r+10>:	sd	ra,24(sp)
0x000000000001944e in _close_r ()
=> 0x1944e <_close_r+12>:	sw	zero,1936(gp)
0x0000000000019452 in _close_r ()
=> 0x19452 <_close_r+16>:	jal	ra,0x1b2a2 <_close>
0x000000000001b2a2 in _close ()
=> 0x1b2a2 <_close>:	addi	sp,sp,-16
0x000000000001b2a4 in _close ()
=> 0x1b2a4 <_close+2>:	sd	ra,8(sp)
0x000000000001b2a6 in _close ()
=> 0x1b2a6 <_close+4>:	sd	s0,0(sp)
0x000000000001b2a8 in _close ()
=> 0x1b2a8 <_close+6>:	li	a7,57
0x000000000001b2ac in _close ()
=> 0x1b2ac <_close+10>:	ecall
0x000000000001b2b0 in _close ()
=> 0x1b2b0 <_close+14>:	mv	s0,a0
0x000000000001b2b2 in _close ()
=> 0x1b2b2 <_close+16>:	bltz	a0,0x1b2c0 <_close+30>
0x000000000001b2b6 in _close ()
=> 0x1b2b6 <_close+20>:	sext.w	a0,a0
0x000000000001b2b8 in _close ()
=> 0x1b2b8 <_close+22>:	ld	ra,8(sp)
0x000000000001b2ba in _close ()
=> 0x1b2ba <_close+24>:	ld	s0,0(sp)
0x000000000001b2bc in _close ()
=> 0x1b2bc <_close+26>:	addi	sp,sp,16
0x000000000001b2be in _close ()
=> 0x1b2be <_close+28>:	ret
0x0000000000019456 in _close_r ()
=> 0x19456 <_close_r+20>:	li	a5,-1
0x0000000000019458 in _close_r ()
=> 0x19458 <_close_r+22>:	beq	a0,a5,0x19466 <_close_r+36>
0x000000000001945c in _close_r ()
=> 0x1945c <_close_r+26>:	ld	ra,24(sp)
0x000000000001945e in _close_r ()
=> 0x1945e <_close_r+28>:	ld	s0,16(sp)
0x0000000000019460 in _close_r ()
=> 0x19460 <_close_r+30>:	ld	s1,8(sp)
0x0000000000019462 in _close_r ()
=> 0x19462 <_close_r+32>:	addi	sp,sp,32
0x0000000000019464 in _close_r ()
=> 0x19464 <_close_r+34>:	ret
0x000000000001949c in _fclose_r.part.0 ()
=> 0x1949c <_fclose_r.part.0+30>:	bltz	a0,0x194e8 <_fclose_r.part.0+106>
0x00000000000194a0 in _fclose_r.part.0 ()
=> 0x194a0 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x00000000000194a4 in _fclose_r.part.0 ()
=> 0x194a4 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x00000000000194a8 in _fclose_r.part.0 ()
=> 0x194a8 <_fclose_r.part.0+42>:	bnez	a5,0x194f4 <_fclose_r.part.0+118>
0x00000000000194f4 in _fclose_r.part.0 ()
=> 0x194f4 <_fclose_r.part.0+118>:	ld	a1,24(s0)
0x00000000000194f6 in _fclose_r.part.0 ()
=> 0x194f6 <_fclose_r.part.0+120>:	mv	a0,s1
0x00000000000194f8 in _fclose_r.part.0 ()
=> 0x194f8 <_fclose_r.part.0+122>:	jal	ra,0x13124 <_free_r>
0x0000000000013124 in _free_r ()
=> 0x13124 <_free_r>:	beqz	a1,0x13214 <_free_r+240>
0x0000000000013126 in _free_r ()
=> 0x13126 <_free_r+2>:	addi	sp,sp,-32
0x0000000000013128 in _free_r ()
=> 0x13128 <_free_r+4>:	sd	s0,16(sp)
0x000000000001312a in _free_r ()
=> 0x1312a <_free_r+6>:	sd	s1,8(sp)
0x000000000001312c in _free_r ()
=> 0x1312c <_free_r+8>:	mv	s0,a1
0x000000000001312e in _free_r ()
=> 0x1312e <_free_r+10>:	mv	s1,a0
0x0000000000013130 in _free_r ()
=> 0x13130 <_free_r+12>:	sd	ra,24(sp)
0x0000000000013132 in _free_r ()
=> 0x13132 <_free_r+14>:	jal	ra,0x10d22 <__malloc_lock>
0x0000000000010d22 in __malloc_lock ()
=> 0x10d22 <__malloc_lock>:	ret
0x0000000000013136 in _free_r ()
=> 0x13136 <_free_r+18>:	ld	a0,-8(s0)
0x000000000001313a in _free_r ()
=> 0x1313a <_free_r+22>:	addi	a4,s0,-16
0x000000000001313e in _free_r ()
=> 0x1313e <_free_r+26>:	lui	a1,0x1f
0x0000000000013142 in _free_r ()
=> 0x13142 <_free_r+30>:	andi	a5,a0,-2
0x0000000000013146 in _free_r ()
=> 0x13146 <_free_r+34>:	add	a2,a4,a5
0x000000000001314a in _free_r ()
=> 0x1314a <_free_r+38>:	addi	a1,a1,-256
0x000000000001314e in _free_r ()
=> 0x1314e <_free_r+42>:	ld	a3,8(a2)
0x0000000000013150 in _free_r ()
=> 0x13150 <_free_r+44>:	ld	a6,16(a1)
0x0000000000013154 in _free_r ()
=> 0x13154 <_free_r+48>:	andi	a3,a3,-4
0x0000000000013156 in _free_r ()
=> 0x13156 <_free_r+50>:	beq	a6,a2,0x1329a <_free_r+374>
0x000000000001329a in _free_r ()
=> 0x1329a <_free_r+374>:	andi	a0,a0,1
0x000000000001329c in _free_r ()
=> 0x1329c <_free_r+376>:	add	a5,a5,a3
0x000000000001329e in _free_r ()
=> 0x1329e <_free_r+378>:	bnez	a0,0x132b0 <_free_r+396>
0x00000000000132a0 in _free_r ()
=> 0x132a0 <_free_r+380>:	ld	a0,-16(s0)
0x00000000000132a4 in _free_r ()
=> 0x132a4 <_free_r+384>:	sub	a4,a4,a0
0x00000000000132a6 in _free_r ()
=> 0x132a6 <_free_r+386>:	ld	a3,24(a4)
0x00000000000132a8 in _free_r ()
=> 0x132a8 <_free_r+388>:	ld	a2,16(a4)
0x00000000000132aa in _free_r ()
=> 0x132aa <_free_r+390>:	add	a5,a5,a0
0x00000000000132ac in _free_r ()
=> 0x132ac <_free_r+392>:	sd	a3,24(a2)
0x00000000000132ae in _free_r ()
=> 0x132ae <_free_r+394>:	sd	a2,16(a3)
0x00000000000132b0 in _free_r ()
=> 0x132b0 <_free_r+396>:	ori	a2,a5,1
0x00000000000132b4 in _free_r ()
=> 0x132b4 <_free_r+400>:	ld	a3,1888(gp)
0x00000000000132b8 in _free_r ()
=> 0x132b8 <_free_r+404>:	sd	a2,8(a4)
0x00000000000132ba in _free_r ()
=> 0x132ba <_free_r+406>:	sd	a4,16(a1)
0x00000000000132bc in _free_r ()
=> 0x132bc <_free_r+408>:	bltu	a5,a3,0x131d6 <_free_r+178>
0x00000000000132c0 in _free_r ()
=> 0x132c0 <_free_r+412>:	ld	a1,1920(gp)
0x00000000000132c4 in _free_r ()
=> 0x132c4 <_free_r+416>:	mv	a0,s1
0x00000000000132c6 in _free_r ()
=> 0x132c6 <_free_r+418>:	jal	ra,0x1304e <_malloc_trim_r>
0x000000000001304e in _malloc_trim_r ()
=> 0x1304e <_malloc_trim_r>:	addi	sp,sp,-48
0x0000000000013050 in _malloc_trim_r ()
=> 0x13050 <_malloc_trim_r+2>:	sd	s3,8(sp)
0x0000000000013052 in _malloc_trim_r ()
=> 0x13052 <_malloc_trim_r+4>:	lui	s3,0x1f
0x0000000000013056 in _malloc_trim_r ()
=> 0x13056 <_malloc_trim_r+8>:	sd	s0,32(sp)
0x0000000000013058 in _malloc_trim_r ()
=> 0x13058 <_malloc_trim_r+10>:	sd	s1,24(sp)
0x000000000001305a in _malloc_trim_r ()
=> 0x1305a <_malloc_trim_r+12>:	sd	s2,16(sp)
0x000000000001305c in _malloc_trim_r ()
=> 0x1305c <_malloc_trim_r+14>:	sd	s4,0(sp)
0x000000000001305e in _malloc_trim_r ()
=> 0x1305e <_malloc_trim_r+16>:	sd	ra,40(sp)
0x0000000000013060 in _malloc_trim_r ()
=> 0x13060 <_malloc_trim_r+18>:	mv	s4,a1
0x0000000000013062 in _malloc_trim_r ()
=> 0x13062 <_malloc_trim_r+20>:	mv	s2,a0
0x0000000000013064 in _malloc_trim_r ()
=> 0x13064 <_malloc_trim_r+22>:	addi	s3,s3,-256
0x0000000000013068 in _malloc_trim_r ()
=> 0x13068 <_malloc_trim_r+26>:	jal	ra,0x10d22 <__malloc_lock>
0x0000000000010d22 in __malloc_lock ()
=> 0x10d22 <__malloc_lock>:	ret
0x000000000001306c in _malloc_trim_r ()
=> 0x1306c <_malloc_trim_r+30>:	ld	a4,16(s3)
0x0000000000013070 in _malloc_trim_r ()
=> 0x13070 <_malloc_trim_r+34>:	lui	a5,0x1
0x0000000000013072 in _malloc_trim_r ()
=> 0x13072 <_malloc_trim_r+36>:	addi	s0,a5,-33
0x0000000000013076 in _malloc_trim_r ()
=> 0x13076 <_malloc_trim_r+40>:	ld	s1,8(a4)
0x0000000000013078 in _malloc_trim_r ()
=> 0x13078 <_malloc_trim_r+42>:	sub	s0,s0,s4
0x000000000001307c in _malloc_trim_r ()
=> 0x1307c <_malloc_trim_r+46>:	andi	s1,s1,-4
0x000000000001307e in _malloc_trim_r ()
=> 0x1307e <_malloc_trim_r+48>:	add	s0,s0,s1
0x0000000000013080 in _malloc_trim_r ()
=> 0x13080 <_malloc_trim_r+50>:	srli	s0,s0,0xc
0x0000000000013082 in _malloc_trim_r ()
=> 0x13082 <_malloc_trim_r+52>:	addi	s0,s0,-1
0x0000000000013084 in _malloc_trim_r ()
=> 0x13084 <_malloc_trim_r+54>:	slli	s0,s0,0xc
0x0000000000013086 in _malloc_trim_r ()
=> 0x13086 <_malloc_trim_r+56>:	blt	s0,a5,0x1309c <_malloc_trim_r+78>
0x000000000001308a in _malloc_trim_r ()
=> 0x1308a <_malloc_trim_r+60>:	li	a1,0
0x000000000001308c in _malloc_trim_r ()
=> 0x1308c <_malloc_trim_r+62>:	mv	a0,s2
0x000000000001308e in _malloc_trim_r ()
=> 0x1308e <_malloc_trim_r+64>:	jal	ra,0x10d74 <_sbrk_r>
0x0000000000010d74 in _sbrk_r ()
=> 0x10d74 <_sbrk_r>:	addi	sp,sp,-32
0x0000000000010d76 in _sbrk_r ()
=> 0x10d76 <_sbrk_r+2>:	sd	s0,16(sp)
0x0000000000010d78 in _sbrk_r ()
=> 0x10d78 <_sbrk_r+4>:	sd	s1,8(sp)
0x0000000000010d7a in _sbrk_r ()
=> 0x10d7a <_sbrk_r+6>:	mv	s0,a0
0x0000000000010d7c in _sbrk_r ()
=> 0x10d7c <_sbrk_r+8>:	mv	a0,a1
0x0000000000010d7e in _sbrk_r ()
=> 0x10d7e <_sbrk_r+10>:	sd	ra,24(sp)
0x0000000000010d80 in _sbrk_r ()
=> 0x10d80 <_sbrk_r+12>:	sw	zero,1936(gp)
0x0000000000010d84 in _sbrk_r ()
=> 0x10d84 <_sbrk_r+16>:	jal	ra,0x1b3c6 <_sbrk>
0x000000000001b3c6 in _sbrk ()
=> 0x1b3c6 <_sbrk>:	ld	a4,1944(gp)
0x000000000001b3ca in _sbrk ()
=> 0x1b3ca <_sbrk+4>:	addi	sp,sp,-16
0x000000000001b3cc in _sbrk ()
=> 0x1b3cc <_sbrk+6>:	sd	ra,8(sp)
0x000000000001b3ce in _sbrk ()
=> 0x1b3ce <_sbrk+8>:	mv	a5,a0
0x000000000001b3d0 in _sbrk ()
=> 0x1b3d0 <_sbrk+10>:	bnez	a4,0x1b3e8 <_sbrk+34>
0x000000000001b3e8 in _sbrk ()
=> 0x1b3e8 <_sbrk+34>:	li	a7,214
0x000000000001b3ec in _sbrk ()
=> 0x1b3ec <_sbrk+38>:	add	a0,a5,a4
0x000000000001b3f0 in _sbrk ()
=> 0x1b3f0 <_sbrk+42>:	ecall
0x000000000001b3f4 in _sbrk ()
=> 0x1b3f4 <_sbrk+46>:	ld	a4,1944(gp)
0x000000000001b3f8 in _sbrk ()
=> 0x1b3f8 <_sbrk+50>:	add	a5,a5,a4
0x000000000001b3fa in _sbrk ()
=> 0x1b3fa <_sbrk+52>:	bne	a0,a5,0x1b40a <_sbrk+68>
0x000000000001b3fe in _sbrk ()
=> 0x1b3fe <_sbrk+56>:	ld	ra,8(sp)
0x000000000001b400 in _sbrk ()
=> 0x1b400 <_sbrk+58>:	sd	a0,1944(gp)
0x000000000001b404 in _sbrk ()
=> 0x1b404 <_sbrk+62>:	mv	a0,a4
0x000000000001b406 in _sbrk ()
=> 0x1b406 <_sbrk+64>:	addi	sp,sp,16
0x000000000001b408 in _sbrk ()
=> 0x1b408 <_sbrk+66>:	ret
0x0000000000010d88 in _sbrk_r ()
=> 0x10d88 <_sbrk_r+20>:	li	a5,-1
0x0000000000010d8a in _sbrk_r ()
=> 0x10d8a <_sbrk_r+22>:	beq	a0,a5,0x10d98 <_sbrk_r+36>
0x0000000000010d8e in _sbrk_r ()
=> 0x10d8e <_sbrk_r+26>:	ld	ra,24(sp)
0x0000000000010d90 in _sbrk_r ()
=> 0x10d90 <_sbrk_r+28>:	ld	s0,16(sp)
0x0000000000010d92 in _sbrk_r ()
=> 0x10d92 <_sbrk_r+30>:	ld	s1,8(sp)
0x0000000000010d94 in _sbrk_r ()
=> 0x10d94 <_sbrk_r+32>:	addi	sp,sp,32
0x0000000000010d96 in _sbrk_r ()
=> 0x10d96 <_sbrk_r+34>:	ret
0x0000000000013092 in _malloc_trim_r ()
=> 0x13092 <_malloc_trim_r+68>:	ld	a5,16(s3)
0x0000000000013096 in _malloc_trim_r ()
=> 0x13096 <_malloc_trim_r+72>:	add	a5,a5,s1
0x0000000000013098 in _malloc_trim_r ()
=> 0x13098 <_malloc_trim_r+74>:	beq	a0,a5,0x130b4 <_malloc_trim_r+102>
0x00000000000130b4 in _malloc_trim_r ()
=> 0x130b4 <_malloc_trim_r+102>:	neg	a1,s0
0x00000000000130b8 in _malloc_trim_r ()
=> 0x130b8 <_malloc_trim_r+106>:	mv	a0,s2
0x00000000000130ba in _malloc_trim_r ()
=> 0x130ba <_malloc_trim_r+108>:	jal	ra,0x10d74 <_sbrk_r>
0x0000000000010d74 in _sbrk_r ()
=> 0x10d74 <_sbrk_r>:	addi	sp,sp,-32
0x0000000000010d76 in _sbrk_r ()
=> 0x10d76 <_sbrk_r+2>:	sd	s0,16(sp)
0x0000000000010d78 in _sbrk_r ()
=> 0x10d78 <_sbrk_r+4>:	sd	s1,8(sp)
0x0000000000010d7a in _sbrk_r ()
=> 0x10d7a <_sbrk_r+6>:	mv	s0,a0
0x0000000000010d7c in _sbrk_r ()
=> 0x10d7c <_sbrk_r+8>:	mv	a0,a1
0x0000000000010d7e in _sbrk_r ()
=> 0x10d7e <_sbrk_r+10>:	sd	ra,24(sp)
0x0000000000010d80 in _sbrk_r ()
=> 0x10d80 <_sbrk_r+12>:	sw	zero,1936(gp)
0x0000000000010d84 in _sbrk_r ()
=> 0x10d84 <_sbrk_r+16>:	jal	ra,0x1b3c6 <_sbrk>
0x000000000001b3c6 in _sbrk ()
=> 0x1b3c6 <_sbrk>:	ld	a4,1944(gp)
0x000000000001b3ca in _sbrk ()
=> 0x1b3ca <_sbrk+4>:	addi	sp,sp,-16
0x000000000001b3cc in _sbrk ()
=> 0x1b3cc <_sbrk+6>:	sd	ra,8(sp)
0x000000000001b3ce in _sbrk ()
=> 0x1b3ce <_sbrk+8>:	mv	a5,a0
0x000000000001b3d0 in _sbrk ()
=> 0x1b3d0 <_sbrk+10>:	bnez	a4,0x1b3e8 <_sbrk+34>
0x000000000001b3e8 in _sbrk ()
=> 0x1b3e8 <_sbrk+34>:	li	a7,214
0x000000000001b3ec in _sbrk ()
=> 0x1b3ec <_sbrk+38>:	add	a0,a5,a4
0x000000000001b3f0 in _sbrk ()
=> 0x1b3f0 <_sbrk+42>:	ecall
0x000000000001b3f4 in _sbrk ()
=> 0x1b3f4 <_sbrk+46>:	ld	a4,1944(gp)
0x000000000001b3f8 in _sbrk ()
=> 0x1b3f8 <_sbrk+50>:	add	a5,a5,a4
0x000000000001b3fa in _sbrk ()
=> 0x1b3fa <_sbrk+52>:	bne	a0,a5,0x1b40a <_sbrk+68>
0x000000000001b3fe in _sbrk ()
=> 0x1b3fe <_sbrk+56>:	ld	ra,8(sp)
0x000000000001b400 in _sbrk ()
=> 0x1b400 <_sbrk+58>:	sd	a0,1944(gp)
0x000000000001b404 in _sbrk ()
=> 0x1b404 <_sbrk+62>:	mv	a0,a4
0x000000000001b406 in _sbrk ()
=> 0x1b406 <_sbrk+64>:	addi	sp,sp,16
0x000000000001b408 in _sbrk ()
=> 0x1b408 <_sbrk+66>:	ret
0x0000000000010d88 in _sbrk_r ()
=> 0x10d88 <_sbrk_r+20>:	li	a5,-1
0x0000000000010d8a in _sbrk_r ()
=> 0x10d8a <_sbrk_r+22>:	beq	a0,a5,0x10d98 <_sbrk_r+36>
0x0000000000010d8e in _sbrk_r ()
=> 0x10d8e <_sbrk_r+26>:	ld	ra,24(sp)
0x0000000000010d90 in _sbrk_r ()
=> 0x10d90 <_sbrk_r+28>:	ld	s0,16(sp)
0x0000000000010d92 in _sbrk_r ()
=> 0x10d92 <_sbrk_r+30>:	ld	s1,8(sp)
0x0000000000010d94 in _sbrk_r ()
=> 0x10d94 <_sbrk_r+32>:	addi	sp,sp,32
0x0000000000010d96 in _sbrk_r ()
=> 0x10d96 <_sbrk_r+34>:	ret
0x00000000000130be in _malloc_trim_r ()
=> 0x130be <_malloc_trim_r+112>:	li	a5,-1
0x00000000000130c0 in _malloc_trim_r ()
=> 0x130c0 <_malloc_trim_r+114>:	beq	a0,a5,0x130f8 <_malloc_trim_r+170>
0x00000000000130c4 in _malloc_trim_r ()
=> 0x130c4 <_malloc_trim_r+118>:	lui	a5,0x20
0x00000000000130c8 in _malloc_trim_r ()
=> 0x130c8 <_malloc_trim_r+122>:	addi	a5,a5,-1664
0x00000000000130cc in _malloc_trim_r ()
=> 0x130cc <_malloc_trim_r+126>:	lw	a4,0(a5)
0x00000000000130ce in _malloc_trim_r ()
=> 0x130ce <_malloc_trim_r+128>:	ld	a3,16(s3)
0x00000000000130d2 in _malloc_trim_r ()
=> 0x130d2 <_malloc_trim_r+132>:	sub	s1,s1,s0
0x00000000000130d4 in _malloc_trim_r ()
=> 0x130d4 <_malloc_trim_r+134>:	ori	s1,s1,1
0x00000000000130d8 in _malloc_trim_r ()
=> 0x130d8 <_malloc_trim_r+138>:	subw	s0,a4,s0
0x00000000000130dc in _malloc_trim_r ()
=> 0x130dc <_malloc_trim_r+142>:	mv	a0,s2
0x00000000000130de in _malloc_trim_r ()
=> 0x130de <_malloc_trim_r+144>:	sd	s1,8(a3)
0x00000000000130e0 in _malloc_trim_r ()
=> 0x130e0 <_malloc_trim_r+146>:	sw	s0,0(a5)
0x00000000000130e2 in _malloc_trim_r ()
=> 0x130e2 <_malloc_trim_r+148>:	jal	ra,0x10d24 <__malloc_unlock>
0x0000000000010d24 in __malloc_unlock ()
=> 0x10d24 <__malloc_unlock>:	ret
0x00000000000130e6 in _malloc_trim_r ()
=> 0x130e6 <_malloc_trim_r+152>:	ld	ra,40(sp)
0x00000000000130e8 in _malloc_trim_r ()
=> 0x130e8 <_malloc_trim_r+154>:	ld	s0,32(sp)
0x00000000000130ea in _malloc_trim_r ()
=> 0x130ea <_malloc_trim_r+156>:	ld	s1,24(sp)
0x00000000000130ec in _malloc_trim_r ()
=> 0x130ec <_malloc_trim_r+158>:	ld	s2,16(sp)
0x00000000000130ee in _malloc_trim_r ()
=> 0x130ee <_malloc_trim_r+160>:	ld	s3,8(sp)
0x00000000000130f0 in _malloc_trim_r ()
=> 0x130f0 <_malloc_trim_r+162>:	ld	s4,0(sp)
0x00000000000130f2 in _malloc_trim_r ()
=> 0x130f2 <_malloc_trim_r+164>:	li	a0,1
0x00000000000130f4 in _malloc_trim_r ()
=> 0x130f4 <_malloc_trim_r+166>:	addi	sp,sp,48
0x00000000000130f6 in _malloc_trim_r ()
=> 0x130f6 <_malloc_trim_r+168>:	ret
0x00000000000132ca in _free_r ()
=> 0x132ca <_free_r+422>:	j	0x131d6 <_free_r+178>
0x00000000000131d6 in _free_r ()
=> 0x131d6 <_free_r+178>:	ld	s0,16(sp)
0x00000000000131d8 in _free_r ()
=> 0x131d8 <_free_r+180>:	ld	ra,24(sp)
0x00000000000131da in _free_r ()
=> 0x131da <_free_r+182>:	mv	a0,s1
0x00000000000131dc in _free_r ()
=> 0x131dc <_free_r+184>:	ld	s1,8(sp)
0x00000000000131de in _free_r ()
=> 0x131de <_free_r+186>:	addi	sp,sp,32
0x00000000000131e0 in _free_r ()
=> 0x131e0 <_free_r+188>:	j	0x10d24 <__malloc_unlock>
0x0000000000010d24 in __malloc_unlock ()
=> 0x10d24 <__malloc_unlock>:	ret
0x00000000000194fc in _fclose_r.part.0 ()
=> 0x194fc <_fclose_r.part.0+126>:	j	0x194aa <_fclose_r.part.0+44>
0x00000000000194aa in _fclose_r.part.0 ()
=> 0x194aa <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x00000000000194ac in _fclose_r.part.0 ()
=> 0x194ac <_fclose_r.part.0+46>:	beqz	a1,0x194c0 <_fclose_r.part.0+66>
0x00000000000194c0 in _fclose_r.part.0 ()
=> 0x194c0 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x00000000000194c2 in _fclose_r.part.0 ()
=> 0x194c2 <_fclose_r.part.0+68>:	beqz	a1,0x194ce <_fclose_r.part.0+80>
0x00000000000194ce in _fclose_r.part.0 ()
=> 0x194ce <_fclose_r.part.0+80>:	jal	ra,0x12ffa <__sfp_lock_acquire>
0x0000000000012ffa in __sfp_lock_acquire ()
=> 0x12ffa <__sfp_lock_acquire>:	ret
0x00000000000194d2 in _fclose_r.part.0 ()
=> 0x194d2 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x00000000000194d6 in _fclose_r.part.0 ()
=> 0x194d6 <_fclose_r.part.0+88>:	jal	ra,0x12ffc <__sfp_lock_release>
0x0000000000012ffc in __sfp_lock_release ()
=> 0x12ffc <__sfp_lock_release>:	ret
0x00000000000194da in _fclose_r.part.0 ()
=> 0x194da <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x00000000000194dc in _fclose_r.part.0 ()
=> 0x194dc <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x00000000000194de in _fclose_r.part.0 ()
=> 0x194de <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x00000000000194e0 in _fclose_r.part.0 ()
=> 0x194e0 <_fclose_r.part.0+98>:	mv	a0,s2
0x00000000000194e2 in _fclose_r.part.0 ()
=> 0x194e2 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x00000000000194e4 in _fclose_r.part.0 ()
=> 0x194e4 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x00000000000194e6 in _fclose_r.part.0 ()
=> 0x194e6 <_fclose_r.part.0+104>:	ret
0x0000000000013452 in _fwalk_reent ()
=> 0x13452 <_fwalk_reent+90>:	or	s6,a0,s6
0x0000000000013456 in _fwalk_reent ()
=> 0x13456 <_fwalk_reent+94>:	sext.w	s6,s6
0x0000000000013458 in _fwalk_reent ()
=> 0x13458 <_fwalk_reent+96>:	addi	s0,s0,176
0x000000000001345c in _fwalk_reent ()
=> 0x1345c <_fwalk_reent+100>:	bne	s1,s0,0x1343c <_fwalk_reent+68>
0x000000000001343c in _fwalk_reent ()
=> 0x1343c <_fwalk_reent+68>:	lhu	a5,16(s0)
0x0000000000013440 in _fwalk_reent ()
=> 0x13440 <_fwalk_reent+72>:	bgeu	s7,a5,0x13458 <_fwalk_reent+96>
0x0000000000013444 in _fwalk_reent ()
=> 0x13444 <_fwalk_reent+76>:	lh	a5,18(s0)
0x0000000000013448 in _fwalk_reent ()
=> 0x13448 <_fwalk_reent+80>:	mv	a1,s0
0x000000000001344a in _fwalk_reent ()
=> 0x1344a <_fwalk_reent+82>:	mv	a0,s8
0x000000000001344c in _fwalk_reent ()
=> 0x1344c <_fwalk_reent+84>:	beq	a5,s3,0x13458 <_fwalk_reent+96>
0x0000000000013450 in _fwalk_reent ()
=> 0x13450 <_fwalk_reent+88>:	jalr	s4
0x00000000000194fe in _fclose_r ()
=> 0x194fe <_fclose_r>:	beqz	a1,0x19538 <_fclose_r+58>
0x0000000000019500 in _fclose_r ()
=> 0x19500 <_fclose_r+2>:	addi	sp,sp,-32
0x0000000000019502 in _fclose_r ()
=> 0x19502 <_fclose_r+4>:	sd	s0,16(sp)
0x0000000000019504 in _fclose_r ()
=> 0x19504 <_fclose_r+6>:	sd	ra,24(sp)
0x0000000000019506 in _fclose_r ()
=> 0x19506 <_fclose_r+8>:	mv	s0,a0
0x0000000000019508 in _fclose_r ()
=> 0x19508 <_fclose_r+10>:	beqz	a0,0x1950e <_fclose_r+16>
0x000000000001950a in _fclose_r ()
=> 0x1950a <_fclose_r+12>:	lw	a5,80(a0)
0x000000000001950c in _fclose_r ()
=> 0x1950c <_fclose_r+14>:	beqz	a5,0x19528 <_fclose_r+42>
0x000000000001950e in _fclose_r ()
=> 0x1950e <_fclose_r+16>:	lh	a5,16(a1)
0x0000000000019512 in _fclose_r ()
=> 0x19512 <_fclose_r+20>:	bnez	a5,0x1951e <_fclose_r+32>
0x000000000001951e in _fclose_r ()
=> 0x1951e <_fclose_r+32>:	mv	a0,s0
0x0000000000019520 in _fclose_r ()
=> 0x19520 <_fclose_r+34>:	ld	s0,16(sp)
0x0000000000019522 in _fclose_r ()
=> 0x19522 <_fclose_r+36>:	ld	ra,24(sp)
0x0000000000019524 in _fclose_r ()
=> 0x19524 <_fclose_r+38>:	addi	sp,sp,32
0x0000000000019526 in _fclose_r ()
=> 0x19526 <_fclose_r+40>:	j	0x1947e <_fclose_r.part.0>
0x000000000001947e in _fclose_r.part.0 ()
=> 0x1947e <_fclose_r.part.0>:	addi	sp,sp,-32
0x0000000000019480 in _fclose_r.part.0 ()
=> 0x19480 <_fclose_r.part.0+2>:	sd	s0,16(sp)
0x0000000000019482 in _fclose_r.part.0 ()
=> 0x19482 <_fclose_r.part.0+4>:	sd	s1,8(sp)
0x0000000000019484 in _fclose_r.part.0 ()
=> 0x19484 <_fclose_r.part.0+6>:	sd	s2,0(sp)
0x0000000000019486 in _fclose_r.part.0 ()
=> 0x19486 <_fclose_r.part.0+8>:	mv	s0,a1
0x0000000000019488 in _fclose_r.part.0 ()
=> 0x19488 <_fclose_r.part.0+10>:	sd	ra,24(sp)
0x000000000001948a in _fclose_r.part.0 ()
=> 0x1948a <_fclose_r.part.0+12>:	mv	s1,a0
0x000000000001948c in _fclose_r.part.0 ()
=> 0x1948c <_fclose_r.part.0+14>:	jal	ra,0x12b84 <__sflush_r>
0x0000000000012b84 in __sflush_r ()
=> 0x12b84 <__sflush_r>:	lh	a5,16(a1)
0x0000000000012b88 in __sflush_r ()
=> 0x12b88 <__sflush_r+4>:	addi	sp,sp,-48
0x0000000000012b8a in __sflush_r ()
=> 0x12b8a <__sflush_r+6>:	sd	s0,32(sp)
0x0000000000012b8c in __sflush_r ()
=> 0x12b8c <__sflush_r+8>:	sd	s3,8(sp)
0x0000000000012b8e in __sflush_r ()
=> 0x12b8e <__sflush_r+10>:	sd	ra,40(sp)
0x0000000000012b90 in __sflush_r ()
=> 0x12b90 <__sflush_r+12>:	sd	s1,24(sp)
0x0000000000012b92 in __sflush_r ()
=> 0x12b92 <__sflush_r+14>:	sd	s2,16(sp)
0x0000000000012b94 in __sflush_r ()
=> 0x12b94 <__sflush_r+16>:	andi	a3,a5,8
0x0000000000012b98 in __sflush_r ()
=> 0x12b98 <__sflush_r+20>:	mv	s0,a1
0x0000000000012b9a in __sflush_r ()
=> 0x12b9a <__sflush_r+22>:	mv	s3,a0
0x0000000000012b9c in __sflush_r ()
=> 0x12b9c <__sflush_r+24>:	bnez	a3,0x12c50 <__sflush_r+204>
0x0000000000012b9e in __sflush_r ()
=> 0x12b9e <__sflush_r+26>:	lui	a4,0x1
0x0000000000012ba0 in __sflush_r ()
=> 0x12ba0 <__sflush_r+28>:	addi	a4,a4,-2048
0x0000000000012ba4 in __sflush_r ()
=> 0x12ba4 <__sflush_r+32>:	lw	a3,8(a1)
0x0000000000012ba6 in __sflush_r ()
=> 0x12ba6 <__sflush_r+34>:	or	a5,a5,a4
0x0000000000012ba8 in __sflush_r ()
=> 0x12ba8 <__sflush_r+36>:	sh	a5,16(a1)
0x0000000000012bac in __sflush_r ()
=> 0x12bac <__sflush_r+40>:	blez	a3,0x12cac <__sflush_r+296>
0x0000000000012cac in __sflush_r ()
=> 0x12cac <__sflush_r+296>:	lw	a4,112(a1)
0x0000000000012cae in __sflush_r ()
=> 0x12cae <__sflush_r+298>:	bgtz	a4,0x12bb0 <__sflush_r+44>
0x0000000000012cb2 in __sflush_r ()
=> 0x12cb2 <__sflush_r+302>:	j	0x12c40 <__sflush_r+188>
0x0000000000012c40 in __sflush_r ()
=> 0x12c40 <__sflush_r+188>:	li	a0,0
0x0000000000012c42 in __sflush_r ()
=> 0x12c42 <__sflush_r+190>:	ld	ra,40(sp)
0x0000000000012c44 in __sflush_r ()
=> 0x12c44 <__sflush_r+192>:	ld	s0,32(sp)
0x0000000000012c46 in __sflush_r ()
=> 0x12c46 <__sflush_r+194>:	ld	s1,24(sp)
0x0000000000012c48 in __sflush_r ()
=> 0x12c48 <__sflush_r+196>:	ld	s2,16(sp)
0x0000000000012c4a in __sflush_r ()
=> 0x12c4a <__sflush_r+198>:	ld	s3,8(sp)
0x0000000000012c4c in __sflush_r ()
=> 0x12c4c <__sflush_r+200>:	addi	sp,sp,48
0x0000000000012c4e in __sflush_r ()
=> 0x12c4e <__sflush_r+202>:	ret
0x0000000000019490 in _fclose_r.part.0 ()
=> 0x19490 <_fclose_r.part.0+18>:	ld	a5,80(s0)
0x0000000000019492 in _fclose_r.part.0 ()
=> 0x19492 <_fclose_r.part.0+20>:	mv	s2,a0
0x0000000000019494 in _fclose_r.part.0 ()
=> 0x19494 <_fclose_r.part.0+22>:	beqz	a5,0x194a0 <_fclose_r.part.0+34>
0x0000000000019496 in _fclose_r.part.0 ()
=> 0x19496 <_fclose_r.part.0+24>:	ld	a1,48(s0)
0x0000000000019498 in _fclose_r.part.0 ()
=> 0x19498 <_fclose_r.part.0+26>:	mv	a0,s1
0x000000000001949a in _fclose_r.part.0 ()
=> 0x1949a <_fclose_r.part.0+28>:	jalr	a5
0x0000000000016794 in __sclose ()
=> 0x16794 <__sclose>:	lh	a1,18(a1)
0x0000000000016798 in __sclose ()
=> 0x16798 <__sclose+4>:	j	0x19442 <_close_r>
0x0000000000019442 in _close_r ()
=> 0x19442 <_close_r>:	addi	sp,sp,-32
0x0000000000019444 in _close_r ()
=> 0x19444 <_close_r+2>:	sd	s0,16(sp)
0x0000000000019446 in _close_r ()
=> 0x19446 <_close_r+4>:	sd	s1,8(sp)
0x0000000000019448 in _close_r ()
=> 0x19448 <_close_r+6>:	mv	s0,a0
0x000000000001944a in _close_r ()
=> 0x1944a <_close_r+8>:	mv	a0,a1
0x000000000001944c in _close_r ()
=> 0x1944c <_close_r+10>:	sd	ra,24(sp)
0x000000000001944e in _close_r ()
=> 0x1944e <_close_r+12>:	sw	zero,1936(gp)
0x0000000000019452 in _close_r ()
=> 0x19452 <_close_r+16>:	jal	ra,0x1b2a2 <_close>
0x000000000001b2a2 in _close ()
=> 0x1b2a2 <_close>:	addi	sp,sp,-16
0x000000000001b2a4 in _close ()
=> 0x1b2a4 <_close+2>:	sd	ra,8(sp)
0x000000000001b2a6 in _close ()
=> 0x1b2a6 <_close+4>:	sd	s0,0(sp)
0x000000000001b2a8 in _close ()
=> 0x1b2a8 <_close+6>:	li	a7,57
0x000000000001b2ac in _close ()
=> 0x1b2ac <_close+10>:	ecall
0x000000000001b2b0 in _close ()
=> 0x1b2b0 <_close+14>:	mv	s0,a0
0x000000000001b2b2 in _close ()
=> 0x1b2b2 <_close+16>:	bltz	a0,0x1b2c0 <_close+30>
0x000000000001b2b6 in _close ()
=> 0x1b2b6 <_close+20>:	sext.w	a0,a0
0x000000000001b2b8 in _close ()
=> 0x1b2b8 <_close+22>:	ld	ra,8(sp)
0x000000000001b2ba in _close ()
=> 0x1b2ba <_close+24>:	ld	s0,0(sp)
0x000000000001b2bc in _close ()
=> 0x1b2bc <_close+26>:	addi	sp,sp,16
0x000000000001b2be in _close ()
=> 0x1b2be <_close+28>:	ret
0x0000000000019456 in _close_r ()
=> 0x19456 <_close_r+20>:	li	a5,-1
0x0000000000019458 in _close_r ()
=> 0x19458 <_close_r+22>:	beq	a0,a5,0x19466 <_close_r+36>
0x000000000001945c in _close_r ()
=> 0x1945c <_close_r+26>:	ld	ra,24(sp)
0x000000000001945e in _close_r ()
=> 0x1945e <_close_r+28>:	ld	s0,16(sp)
0x0000000000019460 in _close_r ()
=> 0x19460 <_close_r+30>:	ld	s1,8(sp)
0x0000000000019462 in _close_r ()
=> 0x19462 <_close_r+32>:	addi	sp,sp,32
0x0000000000019464 in _close_r ()
=> 0x19464 <_close_r+34>:	ret
0x000000000001949c in _fclose_r.part.0 ()
=> 0x1949c <_fclose_r.part.0+30>:	bltz	a0,0x194e8 <_fclose_r.part.0+106>
0x00000000000194a0 in _fclose_r.part.0 ()
=> 0x194a0 <_fclose_r.part.0+34>:	lhu	a5,16(s0)
0x00000000000194a4 in _fclose_r.part.0 ()
=> 0x194a4 <_fclose_r.part.0+38>:	andi	a5,a5,128
0x00000000000194a8 in _fclose_r.part.0 ()
=> 0x194a8 <_fclose_r.part.0+42>:	bnez	a5,0x194f4 <_fclose_r.part.0+118>
0x00000000000194aa in _fclose_r.part.0 ()
=> 0x194aa <_fclose_r.part.0+44>:	ld	a1,88(s0)
0x00000000000194ac in _fclose_r.part.0 ()
=> 0x194ac <_fclose_r.part.0+46>:	beqz	a1,0x194c0 <_fclose_r.part.0+66>
0x00000000000194c0 in _fclose_r.part.0 ()
=> 0x194c0 <_fclose_r.part.0+66>:	ld	a1,120(s0)
0x00000000000194c2 in _fclose_r.part.0 ()
=> 0x194c2 <_fclose_r.part.0+68>:	beqz	a1,0x194ce <_fclose_r.part.0+80>
0x00000000000194ce in _fclose_r.part.0 ()
=> 0x194ce <_fclose_r.part.0+80>:	jal	ra,0x12ffa <__sfp_lock_acquire>
0x0000000000012ffa in __sfp_lock_acquire ()
=> 0x12ffa <__sfp_lock_acquire>:	ret
0x00000000000194d2 in _fclose_r.part.0 ()
=> 0x194d2 <_fclose_r.part.0+84>:	sh	zero,16(s0)
0x00000000000194d6 in _fclose_r.part.0 ()
=> 0x194d6 <_fclose_r.part.0+88>:	jal	ra,0x12ffc <__sfp_lock_release>
0x0000000000012ffc in __sfp_lock_release ()
=> 0x12ffc <__sfp_lock_release>:	ret
0x00000000000194da in _fclose_r.part.0 ()
=> 0x194da <_fclose_r.part.0+92>:	ld	ra,24(sp)
0x00000000000194dc in _fclose_r.part.0 ()
=> 0x194dc <_fclose_r.part.0+94>:	ld	s0,16(sp)
0x00000000000194de in _fclose_r.part.0 ()
=> 0x194de <_fclose_r.part.0+96>:	ld	s1,8(sp)
0x00000000000194e0 in _fclose_r.part.0 ()
=> 0x194e0 <_fclose_r.part.0+98>:	mv	a0,s2
0x00000000000194e2 in _fclose_r.part.0 ()
=> 0x194e2 <_fclose_r.part.0+100>:	ld	s2,0(sp)
0x00000000000194e4 in _fclose_r.part.0 ()
=> 0x194e4 <_fclose_r.part.0+102>:	addi	sp,sp,32
0x00000000000194e6 in _fclose_r.part.0 ()
=> 0x194e6 <_fclose_r.part.0+104>:	ret
0x0000000000013452 in _fwalk_reent ()
=> 0x13452 <_fwalk_reent+90>:	or	s6,a0,s6
0x0000000000013456 in _fwalk_reent ()
=> 0x13456 <_fwalk_reent+94>:	sext.w	s6,s6
0x0000000000013458 in _fwalk_reent ()
=> 0x13458 <_fwalk_reent+96>:	addi	s0,s0,176
0x000000000001345c in _fwalk_reent ()
=> 0x1345c <_fwalk_reent+100>:	bne	s1,s0,0x1343c <_fwalk_reent+68>
0x0000000000013460 in _fwalk_reent ()
=> 0x13460 <_fwalk_reent+104>:	ld	s2,0(s2)
0x0000000000013464 in _fwalk_reent ()
=> 0x13464 <_fwalk_reent+108>:	bnez	s2,0x13420 <_fwalk_reent+40>
0x0000000000013468 in _fwalk_reent ()
=> 0x13468 <_fwalk_reent+112>:	ld	ra,72(sp)
0x000000000001346a in _fwalk_reent ()
=> 0x1346a <_fwalk_reent+114>:	ld	s0,64(sp)
0x000000000001346c in _fwalk_reent ()
=> 0x1346c <_fwalk_reent+116>:	ld	s1,56(sp)
0x000000000001346e in _fwalk_reent ()
=> 0x1346e <_fwalk_reent+118>:	ld	s2,48(sp)
0x0000000000013470 in _fwalk_reent ()
=> 0x13470 <_fwalk_reent+120>:	ld	s3,40(sp)
0x0000000000013472 in _fwalk_reent ()
=> 0x13472 <_fwalk_reent+122>:	ld	s4,32(sp)
0x0000000000013474 in _fwalk_reent ()
=> 0x13474 <_fwalk_reent+124>:	ld	s5,24(sp)
0x0000000000013476 in _fwalk_reent ()
=> 0x13476 <_fwalk_reent+126>:	ld	s7,8(sp)
0x0000000000013478 in _fwalk_reent ()
=> 0x13478 <_fwalk_reent+128>:	ld	s8,0(sp)
0x000000000001347a in _fwalk_reent ()
=> 0x1347a <_fwalk_reent+130>:	mv	a0,s6
0x000000000001347c in _fwalk_reent ()
=> 0x1347c <_fwalk_reent+132>:	ld	s6,16(sp)
0x000000000001347e in _fwalk_reent ()
=> 0x1347e <_fwalk_reent+134>:	addi	sp,sp,80
0x0000000000013480 in _fwalk_reent ()
=> 0x13480 <_fwalk_reent+136>:	ret
0x00000000000105d4 in exit ()
=> 0x105d4 <exit+24>:	mv	a0,s0
0x00000000000105d6 in exit ()
=> 0x105d6 <exit+26>:	jal	ra,0x1b2ce <_exit>
0x000000000001b2ce in _exit ()
=> 0x1b2ce <_exit>:	li	a7,93
0x000000000001b2d2 in _exit ()
=> 0x1b2d2 <_exit+4>:	ecall
[Inferior 1 (process 1246) exited normally]
script.gdb:20: Error in sourced command file:
No registers.
